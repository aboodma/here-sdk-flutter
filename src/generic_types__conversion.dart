import 'package:here_sdk/src/sdk/core/geo_coordinates.dart';
import 'dart:ffi';
import 'package:here_sdk/src/_library_context.dart' as __lib;
import 'package:here_sdk/src/sdk/animation/anchor2_d_keyframe.dart';
import 'package:here_sdk/src/sdk/animation/geo_coordinates_keyframe.dart';
import 'package:here_sdk/src/sdk/animation/geo_orientation_keyframe.dart';
import 'package:here_sdk/src/sdk/animation/point2_d_keyframe.dart';
import 'package:here_sdk/src/sdk/animation/scalar_keyframe.dart';
import 'package:here_sdk/src/sdk/mapview/map_camera_keyframe_track.dart';
import 'package:here_sdk/src/sdk/mapview/map_marker.dart';
import 'package:here_sdk/src/builtin_types__conversion.dart';
import 'package:here_sdk/src/sdk/core/engine/engine_base_u_r_l.dart';
import 'package:here_sdk/src/sdk/core/engine/layer_configuration.dart';
import 'package:here_sdk/src/sdk/core/localized_text.dart';
import 'package:intl/locale.dart';
import 'package:here_sdk/src/sdk/maploader/installed_region.dart';
import 'package:here_sdk/src/sdk/maploader/region.dart';
import 'package:here_sdk/src/sdk/maploader/region_id.dart';
import 'package:here_sdk/src/sdk/mapview/map_marker_cluster.dart';
import 'package:here_sdk/src/sdk/mapview/map_polygon.dart';
import 'package:here_sdk/src/sdk/mapview/map_polyline.dart';
import 'package:here_sdk/src/sdk/mapview/pick_map_content_result.dart';
import 'package:here_sdk/src/sdk/mapview/pick_map_features_result.dart';
import 'package:here_sdk/src/sdk/core/country_code.dart';
import 'package:here_sdk/src/sdk/core/geo_box.dart';
import 'package:here_sdk/src/sdk/core/language_code.dart';
import 'package:here_sdk/src/sdk/navigation/g_p_x_track.dart';
import 'package:here_sdk/src/sdk/navigation/lane.dart';
import 'package:here_sdk/src/sdk/navigation/maneuver_notification_type.dart';
import 'package:here_sdk/src/sdk/navigation/maneuver_progress.dart';
import 'package:here_sdk/src/sdk/navigation/section_progress.dart';
import 'package:here_sdk/src/sdk/navigation/truck_restriction_warning.dart';
import 'package:here_sdk/src/sdk/routing/attribution.dart';
import 'package:here_sdk/src/sdk/routing/charging_connector_type.dart';
import 'package:here_sdk/src/sdk/routing/fare.dart';
import 'package:here_sdk/src/sdk/routing/hazardous_good.dart';
import 'package:here_sdk/src/sdk/routing/maneuver.dart';
import 'package:here_sdk/src/sdk/routing/payment_method.dart';
import 'package:here_sdk/src/sdk/routing/post_action.dart';
import 'package:here_sdk/src/sdk/routing/pre_action.dart';
import 'package:here_sdk/src/sdk/routing/road_features.dart';
import 'package:here_sdk/src/sdk/routing/route.dart';
import 'package:here_sdk/src/sdk/routing/section.dart';
import 'package:here_sdk/src/sdk/routing/section_notice.dart';
import 'package:here_sdk/src/sdk/routing/segment_reference.dart';
import 'package:here_sdk/src/sdk/routing/span.dart';
import 'package:here_sdk/src/sdk/routing/toll.dart';
import 'package:here_sdk/src/sdk/routing/toll_fare.dart';
import 'package:here_sdk/src/sdk/routing/traffic_incident_on_route.dart';
import 'package:here_sdk/src/sdk/routing/traffic_speed.dart';
import 'package:here_sdk/src/sdk/routing/transit_incident.dart';
import 'package:here_sdk/src/sdk/routing/transit_mode.dart';
import 'package:here_sdk/src/sdk/routing/transit_stop.dart';
import 'package:here_sdk/src/sdk/routing/waypoint.dart';
import 'package:here_sdk/src/sdk/routing/zone_category.dart';
import 'package:here_sdk/src/sdk/transport/hazardous_material.dart';
import 'package:here_sdk/src/sdk/core/external_i_d.dart';
import 'package:here_sdk/src/sdk/search/contact.dart';
import 'package:here_sdk/src/sdk/search/e_v_charging_station.dart';
import 'package:here_sdk/src/sdk/search/email_address.dart';
import 'package:here_sdk/src/sdk/search/ev_connector_experimental.dart';
import 'package:here_sdk/src/sdk/search/geo_place.dart';
import 'package:here_sdk/src/sdk/search/highlight_type.dart';
import 'package:here_sdk/src/sdk/search/index_range.dart';
import 'package:here_sdk/src/sdk/search/landline_phone.dart';
import 'package:here_sdk/src/sdk/search/mobile_phone.dart';
import 'package:here_sdk/src/sdk/search/opening_hours.dart';
import 'package:here_sdk/src/sdk/search/place.dart';
import 'package:here_sdk/src/sdk/search/place_category.dart';
import 'package:here_sdk/src/sdk/search/schedule_details.dart';
import 'package:here_sdk/src/sdk/search/suggestion.dart';
import 'package:here_sdk/src/sdk/search/supplier_reference.dart';
import 'package:here_sdk/src/sdk/search/web_editorial.dart';
import 'package:here_sdk/src/sdk/search/web_image.dart';
import 'package:here_sdk/src/sdk/search/web_rating.dart';
import 'package:here_sdk/src/sdk/search/website_address.dart';
import 'package:here_sdk/src/sdk/location/location_feature.dart';
import 'package:here_sdk/src/sdk/core/geo_polygon.dart';
import 'package:here_sdk/src/sdk/core/location.dart';
import 'package:here_sdk/src/sdk/core/location_impl.dart' as location_impl;
import 'package:here_sdk/src/sdk/routing/isoline.dart';
import 'package:here_sdk/src/sdk/traffic/traffic_incident.dart';
import 'package:here_sdk/src/sdk/traffic/traffic_incident_impact.dart';
import 'package:here_sdk/src/sdk/traffic/traffic_incident_type.dart';
import 'package:here_sdk/src/sdk/venue/control/venue.dart';
import 'package:here_sdk/src/sdk/venue/data/entity_info.dart';
import 'package:here_sdk/src/sdk/venue/data/geo_shape.dart';
import 'package:here_sdk/src/sdk/venue/data/property.dart';
import 'package:here_sdk/src/sdk/venue/data/venue_drawing.dart';
import 'package:here_sdk/src/sdk/venue/data/venue_geometry.dart';
import 'package:here_sdk/src/sdk/venue/data/venue_level.dart';
import 'package:here_sdk/src/sdk/venue/style/icon_geometry.dart';
import 'package:here_sdk/src/sdk/venue/style/icon_info.dart';
import 'package:here_sdk/src/sdk/venue/style/venue_geometry_style.dart';
import 'package:here_sdk/src/sdk/venue/style/venue_label_style.dart';
// Copyright (c) 2018-2022 HERE Global B.V. and its affiliate(s).
// All rights reserved.
//
// This software and other materials contain proprietary information
// controlled by HERE and are protected by applicable copyright legislation.
// Any use and utilization of this software and other materials and
// disclosure to any third parties is conditional upon having a separate
// agreement with HERE for the access, use, utilization or disclosure of this
// software. In the absence of such agreement, the use of the software is not
// allowed.
//







final _coreTypeslistofSdkCoreGeocoordinatesCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_core_typesListOf_sdk_core_GeoCoordinates_create_handle'));
final _coreTypeslistofSdkCoreGeocoordinatesReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_core_typesListOf_sdk_core_GeoCoordinates_release_handle'));
final _coreTypeslistofSdkCoreGeocoordinatesInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_core_typesListOf_sdk_core_GeoCoordinates_insert'));
final _coreTypeslistofSdkCoreGeocoordinatesIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_core_typesListOf_sdk_core_GeoCoordinates_iterator'));
final _coreTypeslistofSdkCoreGeocoordinatesIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_core_typesListOf_sdk_core_GeoCoordinates_iterator_release_handle'));
final _coreTypeslistofSdkCoreGeocoordinatesIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_core_typesListOf_sdk_core_GeoCoordinates_iterator_is_valid'));
final _coreTypeslistofSdkCoreGeocoordinatesIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_core_typesListOf_sdk_core_GeoCoordinates_iterator_increment'));
final _coreTypeslistofSdkCoreGeocoordinatesIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_core_typesListOf_sdk_core_GeoCoordinates_iterator_get'));

Pointer<Void> coreTypeslistofSdkCoreGeocoordinatesToFfi(List<GeoCoordinates> value) {
  final _result = _coreTypeslistofSdkCoreGeocoordinatesCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreGeocoordinatesToFfi(element);
    _coreTypeslistofSdkCoreGeocoordinatesInsert(_result, _elementHandle);
    sdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoCoordinates> coreTypeslistofSdkCoreGeocoordinatesFromFfi(Pointer<Void> handle) {
  final result = List<GeoCoordinates>.empty(growable: true);
  final _iteratorHandle = _coreTypeslistofSdkCoreGeocoordinatesIterator(handle);
  while (_coreTypeslistofSdkCoreGeocoordinatesIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _coreTypeslistofSdkCoreGeocoordinatesIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreGeocoordinatesFromFfi(_elementHandle));
    } finally {
      sdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
    }
    _coreTypeslistofSdkCoreGeocoordinatesIteratorIncrement(_iteratorHandle);
  }
  _coreTypeslistofSdkCoreGeocoordinatesIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void coreTypeslistofSdkCoreGeocoordinatesReleaseFfiHandle(Pointer<Void> handle) => _coreTypeslistofSdkCoreGeocoordinatesReleaseHandle(handle);

final _coreTypeslistofSdkCoreGeocoordinatesCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_core_typesListOf_sdk_core_GeoCoordinates_create_handle_nullable'));
final _coreTypeslistofSdkCoreGeocoordinatesReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_core_typesListOf_sdk_core_GeoCoordinates_release_handle_nullable'));
final _coreTypeslistofSdkCoreGeocoordinatesGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_core_typesListOf_sdk_core_GeoCoordinates_get_value_nullable'));

Pointer<Void> coreTypeslistofSdkCoreGeocoordinatesToFfiNullable(List<GeoCoordinates>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = coreTypeslistofSdkCoreGeocoordinatesToFfi(value);
  final result = _coreTypeslistofSdkCoreGeocoordinatesCreateHandleNullable(_handle);
  coreTypeslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

List<GeoCoordinates>? coreTypeslistofSdkCoreGeocoordinatesFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _coreTypeslistofSdkCoreGeocoordinatesGetValueNullable(handle);
  final result = coreTypeslistofSdkCoreGeocoordinatesFromFfi(_handle);
  coreTypeslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

void coreTypeslistofSdkCoreGeocoordinatesReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _coreTypeslistofSdkCoreGeocoordinatesReleaseHandleNullable(handle);


// Copyright (c) 2020 HERE Global B.V. and its affiliate(s).
// All rights reserved.
// This software and other materials contain proprietary information
// controlled by HERE and are protected by applicable copyright legislation.
// Any use and utilization of this software and other materials and
// disclosure to any third parties is conditional upon having a separate
// agreement with HERE for the access, use, utilization or disclosure of this
// software. In the absence of such agreement, the use of the software is not
// allowed.














final _harpPluginsOcmBindingslistofSdkAnimationAnchor2dkeyframeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_harp_plugins_ocm_bindingsListOf_sdk_animation_Anchor2DKeyframe_create_handle'));
final _harpPluginsOcmBindingslistofSdkAnimationAnchor2dkeyframeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_ocm_bindingsListOf_sdk_animation_Anchor2DKeyframe_release_handle'));
final _harpPluginsOcmBindingslistofSdkAnimationAnchor2dkeyframeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_harp_plugins_ocm_bindingsListOf_sdk_animation_Anchor2DKeyframe_insert'));
final _harpPluginsOcmBindingslistofSdkAnimationAnchor2dkeyframeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_ocm_bindingsListOf_sdk_animation_Anchor2DKeyframe_iterator'));
final _harpPluginsOcmBindingslistofSdkAnimationAnchor2dkeyframeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_ocm_bindingsListOf_sdk_animation_Anchor2DKeyframe_iterator_release_handle'));
final _harpPluginsOcmBindingslistofSdkAnimationAnchor2dkeyframeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_harp_plugins_ocm_bindingsListOf_sdk_animation_Anchor2DKeyframe_iterator_is_valid'));
final _harpPluginsOcmBindingslistofSdkAnimationAnchor2dkeyframeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_ocm_bindingsListOf_sdk_animation_Anchor2DKeyframe_iterator_increment'));
final _harpPluginsOcmBindingslistofSdkAnimationAnchor2dkeyframeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_ocm_bindingsListOf_sdk_animation_Anchor2DKeyframe_iterator_get'));

Pointer<Void> harpPluginsOcmBindingslistofSdkAnimationAnchor2dkeyframeToFfi(List<Anchor2DKeyframe> value) {
  final _result = _harpPluginsOcmBindingslistofSdkAnimationAnchor2dkeyframeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkAnimationAnchor2dkeyframeToFfi(element);
    _harpPluginsOcmBindingslistofSdkAnimationAnchor2dkeyframeInsert(_result, _elementHandle);
    sdkAnimationAnchor2dkeyframeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Anchor2DKeyframe> harpPluginsOcmBindingslistofSdkAnimationAnchor2dkeyframeFromFfi(Pointer<Void> handle) {
  final result = List<Anchor2DKeyframe>.empty(growable: true);
  final _iteratorHandle = _harpPluginsOcmBindingslistofSdkAnimationAnchor2dkeyframeIterator(handle);
  while (_harpPluginsOcmBindingslistofSdkAnimationAnchor2dkeyframeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _harpPluginsOcmBindingslistofSdkAnimationAnchor2dkeyframeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkAnimationAnchor2dkeyframeFromFfi(_elementHandle));
    } finally {
      sdkAnimationAnchor2dkeyframeReleaseFfiHandle(_elementHandle);
    }
    _harpPluginsOcmBindingslistofSdkAnimationAnchor2dkeyframeIteratorIncrement(_iteratorHandle);
  }
  _harpPluginsOcmBindingslistofSdkAnimationAnchor2dkeyframeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void harpPluginsOcmBindingslistofSdkAnimationAnchor2dkeyframeReleaseFfiHandle(Pointer<Void> handle) => _harpPluginsOcmBindingslistofSdkAnimationAnchor2dkeyframeReleaseHandle(handle);

final _harpPluginsOcmBindingslistofSdkAnimationAnchor2dkeyframeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_ocm_bindingsListOf_sdk_animation_Anchor2DKeyframe_create_handle_nullable'));
final _harpPluginsOcmBindingslistofSdkAnimationAnchor2dkeyframeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_ocm_bindingsListOf_sdk_animation_Anchor2DKeyframe_release_handle_nullable'));
final _harpPluginsOcmBindingslistofSdkAnimationAnchor2dkeyframeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_ocm_bindingsListOf_sdk_animation_Anchor2DKeyframe_get_value_nullable'));

Pointer<Void> harpPluginsOcmBindingslistofSdkAnimationAnchor2dkeyframeToFfiNullable(List<Anchor2DKeyframe>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = harpPluginsOcmBindingslistofSdkAnimationAnchor2dkeyframeToFfi(value);
  final result = _harpPluginsOcmBindingslistofSdkAnimationAnchor2dkeyframeCreateHandleNullable(_handle);
  harpPluginsOcmBindingslistofSdkAnimationAnchor2dkeyframeReleaseFfiHandle(_handle);
  return result;
}

List<Anchor2DKeyframe>? harpPluginsOcmBindingslistofSdkAnimationAnchor2dkeyframeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _harpPluginsOcmBindingslistofSdkAnimationAnchor2dkeyframeGetValueNullable(handle);
  final result = harpPluginsOcmBindingslistofSdkAnimationAnchor2dkeyframeFromFfi(_handle);
  harpPluginsOcmBindingslistofSdkAnimationAnchor2dkeyframeReleaseFfiHandle(_handle);
  return result;
}

void harpPluginsOcmBindingslistofSdkAnimationAnchor2dkeyframeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _harpPluginsOcmBindingslistofSdkAnimationAnchor2dkeyframeReleaseHandleNullable(handle);

final _harpPluginsOcmBindingslistofSdkAnimationGeocoordinateskeyframeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_harp_plugins_ocm_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_create_handle'));
final _harpPluginsOcmBindingslistofSdkAnimationGeocoordinateskeyframeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_ocm_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_release_handle'));
final _harpPluginsOcmBindingslistofSdkAnimationGeocoordinateskeyframeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_harp_plugins_ocm_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_insert'));
final _harpPluginsOcmBindingslistofSdkAnimationGeocoordinateskeyframeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_ocm_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_iterator'));
final _harpPluginsOcmBindingslistofSdkAnimationGeocoordinateskeyframeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_ocm_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_iterator_release_handle'));
final _harpPluginsOcmBindingslistofSdkAnimationGeocoordinateskeyframeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_harp_plugins_ocm_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_iterator_is_valid'));
final _harpPluginsOcmBindingslistofSdkAnimationGeocoordinateskeyframeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_ocm_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_iterator_increment'));
final _harpPluginsOcmBindingslistofSdkAnimationGeocoordinateskeyframeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_ocm_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_iterator_get'));

Pointer<Void> harpPluginsOcmBindingslistofSdkAnimationGeocoordinateskeyframeToFfi(List<GeoCoordinatesKeyframe> value) {
  final _result = _harpPluginsOcmBindingslistofSdkAnimationGeocoordinateskeyframeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkAnimationGeocoordinateskeyframeToFfi(element);
    _harpPluginsOcmBindingslistofSdkAnimationGeocoordinateskeyframeInsert(_result, _elementHandle);
    sdkAnimationGeocoordinateskeyframeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoCoordinatesKeyframe> harpPluginsOcmBindingslistofSdkAnimationGeocoordinateskeyframeFromFfi(Pointer<Void> handle) {
  final result = List<GeoCoordinatesKeyframe>.empty(growable: true);
  final _iteratorHandle = _harpPluginsOcmBindingslistofSdkAnimationGeocoordinateskeyframeIterator(handle);
  while (_harpPluginsOcmBindingslistofSdkAnimationGeocoordinateskeyframeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _harpPluginsOcmBindingslistofSdkAnimationGeocoordinateskeyframeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkAnimationGeocoordinateskeyframeFromFfi(_elementHandle));
    } finally {
      sdkAnimationGeocoordinateskeyframeReleaseFfiHandle(_elementHandle);
    }
    _harpPluginsOcmBindingslistofSdkAnimationGeocoordinateskeyframeIteratorIncrement(_iteratorHandle);
  }
  _harpPluginsOcmBindingslistofSdkAnimationGeocoordinateskeyframeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void harpPluginsOcmBindingslistofSdkAnimationGeocoordinateskeyframeReleaseFfiHandle(Pointer<Void> handle) => _harpPluginsOcmBindingslistofSdkAnimationGeocoordinateskeyframeReleaseHandle(handle);

final _harpPluginsOcmBindingslistofSdkAnimationGeocoordinateskeyframeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_ocm_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_create_handle_nullable'));
final _harpPluginsOcmBindingslistofSdkAnimationGeocoordinateskeyframeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_ocm_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_release_handle_nullable'));
final _harpPluginsOcmBindingslistofSdkAnimationGeocoordinateskeyframeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_ocm_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_get_value_nullable'));

Pointer<Void> harpPluginsOcmBindingslistofSdkAnimationGeocoordinateskeyframeToFfiNullable(List<GeoCoordinatesKeyframe>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = harpPluginsOcmBindingslistofSdkAnimationGeocoordinateskeyframeToFfi(value);
  final result = _harpPluginsOcmBindingslistofSdkAnimationGeocoordinateskeyframeCreateHandleNullable(_handle);
  harpPluginsOcmBindingslistofSdkAnimationGeocoordinateskeyframeReleaseFfiHandle(_handle);
  return result;
}

List<GeoCoordinatesKeyframe>? harpPluginsOcmBindingslistofSdkAnimationGeocoordinateskeyframeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _harpPluginsOcmBindingslistofSdkAnimationGeocoordinateskeyframeGetValueNullable(handle);
  final result = harpPluginsOcmBindingslistofSdkAnimationGeocoordinateskeyframeFromFfi(_handle);
  harpPluginsOcmBindingslistofSdkAnimationGeocoordinateskeyframeReleaseFfiHandle(_handle);
  return result;
}

void harpPluginsOcmBindingslistofSdkAnimationGeocoordinateskeyframeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _harpPluginsOcmBindingslistofSdkAnimationGeocoordinateskeyframeReleaseHandleNullable(handle);

final _harpPluginsOcmBindingslistofSdkAnimationGeoorientationkeyframeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_harp_plugins_ocm_bindingsListOf_sdk_animation_GeoOrientationKeyframe_create_handle'));
final _harpPluginsOcmBindingslistofSdkAnimationGeoorientationkeyframeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_ocm_bindingsListOf_sdk_animation_GeoOrientationKeyframe_release_handle'));
final _harpPluginsOcmBindingslistofSdkAnimationGeoorientationkeyframeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_harp_plugins_ocm_bindingsListOf_sdk_animation_GeoOrientationKeyframe_insert'));
final _harpPluginsOcmBindingslistofSdkAnimationGeoorientationkeyframeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_ocm_bindingsListOf_sdk_animation_GeoOrientationKeyframe_iterator'));
final _harpPluginsOcmBindingslistofSdkAnimationGeoorientationkeyframeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_ocm_bindingsListOf_sdk_animation_GeoOrientationKeyframe_iterator_release_handle'));
final _harpPluginsOcmBindingslistofSdkAnimationGeoorientationkeyframeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_harp_plugins_ocm_bindingsListOf_sdk_animation_GeoOrientationKeyframe_iterator_is_valid'));
final _harpPluginsOcmBindingslistofSdkAnimationGeoorientationkeyframeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_ocm_bindingsListOf_sdk_animation_GeoOrientationKeyframe_iterator_increment'));
final _harpPluginsOcmBindingslistofSdkAnimationGeoorientationkeyframeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_ocm_bindingsListOf_sdk_animation_GeoOrientationKeyframe_iterator_get'));

Pointer<Void> harpPluginsOcmBindingslistofSdkAnimationGeoorientationkeyframeToFfi(List<GeoOrientationKeyframe> value) {
  final _result = _harpPluginsOcmBindingslistofSdkAnimationGeoorientationkeyframeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkAnimationGeoorientationkeyframeToFfi(element);
    _harpPluginsOcmBindingslistofSdkAnimationGeoorientationkeyframeInsert(_result, _elementHandle);
    sdkAnimationGeoorientationkeyframeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoOrientationKeyframe> harpPluginsOcmBindingslistofSdkAnimationGeoorientationkeyframeFromFfi(Pointer<Void> handle) {
  final result = List<GeoOrientationKeyframe>.empty(growable: true);
  final _iteratorHandle = _harpPluginsOcmBindingslistofSdkAnimationGeoorientationkeyframeIterator(handle);
  while (_harpPluginsOcmBindingslistofSdkAnimationGeoorientationkeyframeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _harpPluginsOcmBindingslistofSdkAnimationGeoorientationkeyframeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkAnimationGeoorientationkeyframeFromFfi(_elementHandle));
    } finally {
      sdkAnimationGeoorientationkeyframeReleaseFfiHandle(_elementHandle);
    }
    _harpPluginsOcmBindingslistofSdkAnimationGeoorientationkeyframeIteratorIncrement(_iteratorHandle);
  }
  _harpPluginsOcmBindingslistofSdkAnimationGeoorientationkeyframeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void harpPluginsOcmBindingslistofSdkAnimationGeoorientationkeyframeReleaseFfiHandle(Pointer<Void> handle) => _harpPluginsOcmBindingslistofSdkAnimationGeoorientationkeyframeReleaseHandle(handle);

final _harpPluginsOcmBindingslistofSdkAnimationGeoorientationkeyframeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_ocm_bindingsListOf_sdk_animation_GeoOrientationKeyframe_create_handle_nullable'));
final _harpPluginsOcmBindingslistofSdkAnimationGeoorientationkeyframeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_ocm_bindingsListOf_sdk_animation_GeoOrientationKeyframe_release_handle_nullable'));
final _harpPluginsOcmBindingslistofSdkAnimationGeoorientationkeyframeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_ocm_bindingsListOf_sdk_animation_GeoOrientationKeyframe_get_value_nullable'));

Pointer<Void> harpPluginsOcmBindingslistofSdkAnimationGeoorientationkeyframeToFfiNullable(List<GeoOrientationKeyframe>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = harpPluginsOcmBindingslistofSdkAnimationGeoorientationkeyframeToFfi(value);
  final result = _harpPluginsOcmBindingslistofSdkAnimationGeoorientationkeyframeCreateHandleNullable(_handle);
  harpPluginsOcmBindingslistofSdkAnimationGeoorientationkeyframeReleaseFfiHandle(_handle);
  return result;
}

List<GeoOrientationKeyframe>? harpPluginsOcmBindingslistofSdkAnimationGeoorientationkeyframeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _harpPluginsOcmBindingslistofSdkAnimationGeoorientationkeyframeGetValueNullable(handle);
  final result = harpPluginsOcmBindingslistofSdkAnimationGeoorientationkeyframeFromFfi(_handle);
  harpPluginsOcmBindingslistofSdkAnimationGeoorientationkeyframeReleaseFfiHandle(_handle);
  return result;
}

void harpPluginsOcmBindingslistofSdkAnimationGeoorientationkeyframeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _harpPluginsOcmBindingslistofSdkAnimationGeoorientationkeyframeReleaseHandleNullable(handle);

final _harpPluginsOcmBindingslistofSdkAnimationPoint2dkeyframeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_harp_plugins_ocm_bindingsListOf_sdk_animation_Point2DKeyframe_create_handle'));
final _harpPluginsOcmBindingslistofSdkAnimationPoint2dkeyframeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_ocm_bindingsListOf_sdk_animation_Point2DKeyframe_release_handle'));
final _harpPluginsOcmBindingslistofSdkAnimationPoint2dkeyframeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_harp_plugins_ocm_bindingsListOf_sdk_animation_Point2DKeyframe_insert'));
final _harpPluginsOcmBindingslistofSdkAnimationPoint2dkeyframeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_ocm_bindingsListOf_sdk_animation_Point2DKeyframe_iterator'));
final _harpPluginsOcmBindingslistofSdkAnimationPoint2dkeyframeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_ocm_bindingsListOf_sdk_animation_Point2DKeyframe_iterator_release_handle'));
final _harpPluginsOcmBindingslistofSdkAnimationPoint2dkeyframeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_harp_plugins_ocm_bindingsListOf_sdk_animation_Point2DKeyframe_iterator_is_valid'));
final _harpPluginsOcmBindingslistofSdkAnimationPoint2dkeyframeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_ocm_bindingsListOf_sdk_animation_Point2DKeyframe_iterator_increment'));
final _harpPluginsOcmBindingslistofSdkAnimationPoint2dkeyframeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_ocm_bindingsListOf_sdk_animation_Point2DKeyframe_iterator_get'));

Pointer<Void> harpPluginsOcmBindingslistofSdkAnimationPoint2dkeyframeToFfi(List<Point2DKeyframe> value) {
  final _result = _harpPluginsOcmBindingslistofSdkAnimationPoint2dkeyframeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkAnimationPoint2dkeyframeToFfi(element);
    _harpPluginsOcmBindingslistofSdkAnimationPoint2dkeyframeInsert(_result, _elementHandle);
    sdkAnimationPoint2dkeyframeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Point2DKeyframe> harpPluginsOcmBindingslistofSdkAnimationPoint2dkeyframeFromFfi(Pointer<Void> handle) {
  final result = List<Point2DKeyframe>.empty(growable: true);
  final _iteratorHandle = _harpPluginsOcmBindingslistofSdkAnimationPoint2dkeyframeIterator(handle);
  while (_harpPluginsOcmBindingslistofSdkAnimationPoint2dkeyframeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _harpPluginsOcmBindingslistofSdkAnimationPoint2dkeyframeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkAnimationPoint2dkeyframeFromFfi(_elementHandle));
    } finally {
      sdkAnimationPoint2dkeyframeReleaseFfiHandle(_elementHandle);
    }
    _harpPluginsOcmBindingslistofSdkAnimationPoint2dkeyframeIteratorIncrement(_iteratorHandle);
  }
  _harpPluginsOcmBindingslistofSdkAnimationPoint2dkeyframeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void harpPluginsOcmBindingslistofSdkAnimationPoint2dkeyframeReleaseFfiHandle(Pointer<Void> handle) => _harpPluginsOcmBindingslistofSdkAnimationPoint2dkeyframeReleaseHandle(handle);

final _harpPluginsOcmBindingslistofSdkAnimationPoint2dkeyframeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_ocm_bindingsListOf_sdk_animation_Point2DKeyframe_create_handle_nullable'));
final _harpPluginsOcmBindingslistofSdkAnimationPoint2dkeyframeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_ocm_bindingsListOf_sdk_animation_Point2DKeyframe_release_handle_nullable'));
final _harpPluginsOcmBindingslistofSdkAnimationPoint2dkeyframeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_ocm_bindingsListOf_sdk_animation_Point2DKeyframe_get_value_nullable'));

Pointer<Void> harpPluginsOcmBindingslistofSdkAnimationPoint2dkeyframeToFfiNullable(List<Point2DKeyframe>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = harpPluginsOcmBindingslistofSdkAnimationPoint2dkeyframeToFfi(value);
  final result = _harpPluginsOcmBindingslistofSdkAnimationPoint2dkeyframeCreateHandleNullable(_handle);
  harpPluginsOcmBindingslistofSdkAnimationPoint2dkeyframeReleaseFfiHandle(_handle);
  return result;
}

List<Point2DKeyframe>? harpPluginsOcmBindingslistofSdkAnimationPoint2dkeyframeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _harpPluginsOcmBindingslistofSdkAnimationPoint2dkeyframeGetValueNullable(handle);
  final result = harpPluginsOcmBindingslistofSdkAnimationPoint2dkeyframeFromFfi(_handle);
  harpPluginsOcmBindingslistofSdkAnimationPoint2dkeyframeReleaseFfiHandle(_handle);
  return result;
}

void harpPluginsOcmBindingslistofSdkAnimationPoint2dkeyframeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _harpPluginsOcmBindingslistofSdkAnimationPoint2dkeyframeReleaseHandleNullable(handle);

final _harpPluginsOcmBindingslistofSdkAnimationScalarkeyframeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_harp_plugins_ocm_bindingsListOf_sdk_animation_ScalarKeyframe_create_handle'));
final _harpPluginsOcmBindingslistofSdkAnimationScalarkeyframeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_ocm_bindingsListOf_sdk_animation_ScalarKeyframe_release_handle'));
final _harpPluginsOcmBindingslistofSdkAnimationScalarkeyframeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_harp_plugins_ocm_bindingsListOf_sdk_animation_ScalarKeyframe_insert'));
final _harpPluginsOcmBindingslistofSdkAnimationScalarkeyframeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_ocm_bindingsListOf_sdk_animation_ScalarKeyframe_iterator'));
final _harpPluginsOcmBindingslistofSdkAnimationScalarkeyframeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_ocm_bindingsListOf_sdk_animation_ScalarKeyframe_iterator_release_handle'));
final _harpPluginsOcmBindingslistofSdkAnimationScalarkeyframeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_harp_plugins_ocm_bindingsListOf_sdk_animation_ScalarKeyframe_iterator_is_valid'));
final _harpPluginsOcmBindingslistofSdkAnimationScalarkeyframeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_ocm_bindingsListOf_sdk_animation_ScalarKeyframe_iterator_increment'));
final _harpPluginsOcmBindingslistofSdkAnimationScalarkeyframeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_ocm_bindingsListOf_sdk_animation_ScalarKeyframe_iterator_get'));

Pointer<Void> harpPluginsOcmBindingslistofSdkAnimationScalarkeyframeToFfi(List<ScalarKeyframe> value) {
  final _result = _harpPluginsOcmBindingslistofSdkAnimationScalarkeyframeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkAnimationScalarkeyframeToFfi(element);
    _harpPluginsOcmBindingslistofSdkAnimationScalarkeyframeInsert(_result, _elementHandle);
    sdkAnimationScalarkeyframeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<ScalarKeyframe> harpPluginsOcmBindingslistofSdkAnimationScalarkeyframeFromFfi(Pointer<Void> handle) {
  final result = List<ScalarKeyframe>.empty(growable: true);
  final _iteratorHandle = _harpPluginsOcmBindingslistofSdkAnimationScalarkeyframeIterator(handle);
  while (_harpPluginsOcmBindingslistofSdkAnimationScalarkeyframeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _harpPluginsOcmBindingslistofSdkAnimationScalarkeyframeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkAnimationScalarkeyframeFromFfi(_elementHandle));
    } finally {
      sdkAnimationScalarkeyframeReleaseFfiHandle(_elementHandle);
    }
    _harpPluginsOcmBindingslistofSdkAnimationScalarkeyframeIteratorIncrement(_iteratorHandle);
  }
  _harpPluginsOcmBindingslistofSdkAnimationScalarkeyframeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void harpPluginsOcmBindingslistofSdkAnimationScalarkeyframeReleaseFfiHandle(Pointer<Void> handle) => _harpPluginsOcmBindingslistofSdkAnimationScalarkeyframeReleaseHandle(handle);

final _harpPluginsOcmBindingslistofSdkAnimationScalarkeyframeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_ocm_bindingsListOf_sdk_animation_ScalarKeyframe_create_handle_nullable'));
final _harpPluginsOcmBindingslistofSdkAnimationScalarkeyframeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_ocm_bindingsListOf_sdk_animation_ScalarKeyframe_release_handle_nullable'));
final _harpPluginsOcmBindingslistofSdkAnimationScalarkeyframeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_ocm_bindingsListOf_sdk_animation_ScalarKeyframe_get_value_nullable'));

Pointer<Void> harpPluginsOcmBindingslistofSdkAnimationScalarkeyframeToFfiNullable(List<ScalarKeyframe>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = harpPluginsOcmBindingslistofSdkAnimationScalarkeyframeToFfi(value);
  final result = _harpPluginsOcmBindingslistofSdkAnimationScalarkeyframeCreateHandleNullable(_handle);
  harpPluginsOcmBindingslistofSdkAnimationScalarkeyframeReleaseFfiHandle(_handle);
  return result;
}

List<ScalarKeyframe>? harpPluginsOcmBindingslistofSdkAnimationScalarkeyframeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _harpPluginsOcmBindingslistofSdkAnimationScalarkeyframeGetValueNullable(handle);
  final result = harpPluginsOcmBindingslistofSdkAnimationScalarkeyframeFromFfi(_handle);
  harpPluginsOcmBindingslistofSdkAnimationScalarkeyframeReleaseFfiHandle(_handle);
  return result;
}

void harpPluginsOcmBindingslistofSdkAnimationScalarkeyframeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _harpPluginsOcmBindingslistofSdkAnimationScalarkeyframeReleaseHandleNullable(handle);

final _harpPluginsOcmBindingslistofSdkCoreGeocoordinatesCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_harp_plugins_ocm_bindingsListOf_sdk_core_GeoCoordinates_create_handle'));
final _harpPluginsOcmBindingslistofSdkCoreGeocoordinatesReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_ocm_bindingsListOf_sdk_core_GeoCoordinates_release_handle'));
final _harpPluginsOcmBindingslistofSdkCoreGeocoordinatesInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_harp_plugins_ocm_bindingsListOf_sdk_core_GeoCoordinates_insert'));
final _harpPluginsOcmBindingslistofSdkCoreGeocoordinatesIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_ocm_bindingsListOf_sdk_core_GeoCoordinates_iterator'));
final _harpPluginsOcmBindingslistofSdkCoreGeocoordinatesIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_ocm_bindingsListOf_sdk_core_GeoCoordinates_iterator_release_handle'));
final _harpPluginsOcmBindingslistofSdkCoreGeocoordinatesIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_harp_plugins_ocm_bindingsListOf_sdk_core_GeoCoordinates_iterator_is_valid'));
final _harpPluginsOcmBindingslistofSdkCoreGeocoordinatesIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_ocm_bindingsListOf_sdk_core_GeoCoordinates_iterator_increment'));
final _harpPluginsOcmBindingslistofSdkCoreGeocoordinatesIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_ocm_bindingsListOf_sdk_core_GeoCoordinates_iterator_get'));

Pointer<Void> harpPluginsOcmBindingslistofSdkCoreGeocoordinatesToFfi(List<GeoCoordinates> value) {
  final _result = _harpPluginsOcmBindingslistofSdkCoreGeocoordinatesCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreGeocoordinatesToFfi(element);
    _harpPluginsOcmBindingslistofSdkCoreGeocoordinatesInsert(_result, _elementHandle);
    sdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoCoordinates> harpPluginsOcmBindingslistofSdkCoreGeocoordinatesFromFfi(Pointer<Void> handle) {
  final result = List<GeoCoordinates>.empty(growable: true);
  final _iteratorHandle = _harpPluginsOcmBindingslistofSdkCoreGeocoordinatesIterator(handle);
  while (_harpPluginsOcmBindingslistofSdkCoreGeocoordinatesIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _harpPluginsOcmBindingslistofSdkCoreGeocoordinatesIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreGeocoordinatesFromFfi(_elementHandle));
    } finally {
      sdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
    }
    _harpPluginsOcmBindingslistofSdkCoreGeocoordinatesIteratorIncrement(_iteratorHandle);
  }
  _harpPluginsOcmBindingslistofSdkCoreGeocoordinatesIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void harpPluginsOcmBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(Pointer<Void> handle) => _harpPluginsOcmBindingslistofSdkCoreGeocoordinatesReleaseHandle(handle);

final _harpPluginsOcmBindingslistofSdkCoreGeocoordinatesCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_ocm_bindingsListOf_sdk_core_GeoCoordinates_create_handle_nullable'));
final _harpPluginsOcmBindingslistofSdkCoreGeocoordinatesReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_ocm_bindingsListOf_sdk_core_GeoCoordinates_release_handle_nullable'));
final _harpPluginsOcmBindingslistofSdkCoreGeocoordinatesGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_ocm_bindingsListOf_sdk_core_GeoCoordinates_get_value_nullable'));

Pointer<Void> harpPluginsOcmBindingslistofSdkCoreGeocoordinatesToFfiNullable(List<GeoCoordinates>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = harpPluginsOcmBindingslistofSdkCoreGeocoordinatesToFfi(value);
  final result = _harpPluginsOcmBindingslistofSdkCoreGeocoordinatesCreateHandleNullable(_handle);
  harpPluginsOcmBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

List<GeoCoordinates>? harpPluginsOcmBindingslistofSdkCoreGeocoordinatesFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _harpPluginsOcmBindingslistofSdkCoreGeocoordinatesGetValueNullable(handle);
  final result = harpPluginsOcmBindingslistofSdkCoreGeocoordinatesFromFfi(_handle);
  harpPluginsOcmBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

void harpPluginsOcmBindingslistofSdkCoreGeocoordinatesReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _harpPluginsOcmBindingslistofSdkCoreGeocoordinatesReleaseHandleNullable(handle);

final _harpPluginsOcmBindingslistofSdkMapviewMapcamerakeyframetrackCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_harp_plugins_ocm_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_create_handle'));
final _harpPluginsOcmBindingslistofSdkMapviewMapcamerakeyframetrackReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_ocm_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_release_handle'));
final _harpPluginsOcmBindingslistofSdkMapviewMapcamerakeyframetrackInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_harp_plugins_ocm_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_insert'));
final _harpPluginsOcmBindingslistofSdkMapviewMapcamerakeyframetrackIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_ocm_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_iterator'));
final _harpPluginsOcmBindingslistofSdkMapviewMapcamerakeyframetrackIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_ocm_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_iterator_release_handle'));
final _harpPluginsOcmBindingslistofSdkMapviewMapcamerakeyframetrackIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_harp_plugins_ocm_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_iterator_is_valid'));
final _harpPluginsOcmBindingslistofSdkMapviewMapcamerakeyframetrackIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_ocm_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_iterator_increment'));
final _harpPluginsOcmBindingslistofSdkMapviewMapcamerakeyframetrackIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_ocm_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_iterator_get'));

Pointer<Void> harpPluginsOcmBindingslistofSdkMapviewMapcamerakeyframetrackToFfi(List<MapCameraKeyframeTrack> value) {
  final _result = _harpPluginsOcmBindingslistofSdkMapviewMapcamerakeyframetrackCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkMapviewMapcamerakeyframetrackToFfi(element);
    _harpPluginsOcmBindingslistofSdkMapviewMapcamerakeyframetrackInsert(_result, _elementHandle);
    sdkMapviewMapcamerakeyframetrackReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<MapCameraKeyframeTrack> harpPluginsOcmBindingslistofSdkMapviewMapcamerakeyframetrackFromFfi(Pointer<Void> handle) {
  final result = List<MapCameraKeyframeTrack>.empty(growable: true);
  final _iteratorHandle = _harpPluginsOcmBindingslistofSdkMapviewMapcamerakeyframetrackIterator(handle);
  while (_harpPluginsOcmBindingslistofSdkMapviewMapcamerakeyframetrackIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _harpPluginsOcmBindingslistofSdkMapviewMapcamerakeyframetrackIteratorGet(_iteratorHandle);
    try {
      result.add(sdkMapviewMapcamerakeyframetrackFromFfi(_elementHandle));
    } finally {
      sdkMapviewMapcamerakeyframetrackReleaseFfiHandle(_elementHandle);
    }
    _harpPluginsOcmBindingslistofSdkMapviewMapcamerakeyframetrackIteratorIncrement(_iteratorHandle);
  }
  _harpPluginsOcmBindingslistofSdkMapviewMapcamerakeyframetrackIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void harpPluginsOcmBindingslistofSdkMapviewMapcamerakeyframetrackReleaseFfiHandle(Pointer<Void> handle) => _harpPluginsOcmBindingslistofSdkMapviewMapcamerakeyframetrackReleaseHandle(handle);

final _harpPluginsOcmBindingslistofSdkMapviewMapcamerakeyframetrackCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_ocm_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_create_handle_nullable'));
final _harpPluginsOcmBindingslistofSdkMapviewMapcamerakeyframetrackReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_ocm_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_release_handle_nullable'));
final _harpPluginsOcmBindingslistofSdkMapviewMapcamerakeyframetrackGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_ocm_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_get_value_nullable'));

Pointer<Void> harpPluginsOcmBindingslistofSdkMapviewMapcamerakeyframetrackToFfiNullable(List<MapCameraKeyframeTrack>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = harpPluginsOcmBindingslistofSdkMapviewMapcamerakeyframetrackToFfi(value);
  final result = _harpPluginsOcmBindingslistofSdkMapviewMapcamerakeyframetrackCreateHandleNullable(_handle);
  harpPluginsOcmBindingslistofSdkMapviewMapcamerakeyframetrackReleaseFfiHandle(_handle);
  return result;
}

List<MapCameraKeyframeTrack>? harpPluginsOcmBindingslistofSdkMapviewMapcamerakeyframetrackFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _harpPluginsOcmBindingslistofSdkMapviewMapcamerakeyframetrackGetValueNullable(handle);
  final result = harpPluginsOcmBindingslistofSdkMapviewMapcamerakeyframetrackFromFfi(_handle);
  harpPluginsOcmBindingslistofSdkMapviewMapcamerakeyframetrackReleaseFfiHandle(_handle);
  return result;
}

void harpPluginsOcmBindingslistofSdkMapviewMapcamerakeyframetrackReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _harpPluginsOcmBindingslistofSdkMapviewMapcamerakeyframetrackReleaseHandleNullable(handle);

final _harpPluginsOcmBindingslistofSdkMapviewMapmarkerCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_harp_plugins_ocm_bindingsListOf_sdk_mapview_MapMarker_create_handle'));
final _harpPluginsOcmBindingslistofSdkMapviewMapmarkerReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_ocm_bindingsListOf_sdk_mapview_MapMarker_release_handle'));
final _harpPluginsOcmBindingslistofSdkMapviewMapmarkerInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_harp_plugins_ocm_bindingsListOf_sdk_mapview_MapMarker_insert'));
final _harpPluginsOcmBindingslistofSdkMapviewMapmarkerIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_ocm_bindingsListOf_sdk_mapview_MapMarker_iterator'));
final _harpPluginsOcmBindingslistofSdkMapviewMapmarkerIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_ocm_bindingsListOf_sdk_mapview_MapMarker_iterator_release_handle'));
final _harpPluginsOcmBindingslistofSdkMapviewMapmarkerIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_harp_plugins_ocm_bindingsListOf_sdk_mapview_MapMarker_iterator_is_valid'));
final _harpPluginsOcmBindingslistofSdkMapviewMapmarkerIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_ocm_bindingsListOf_sdk_mapview_MapMarker_iterator_increment'));
final _harpPluginsOcmBindingslistofSdkMapviewMapmarkerIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_ocm_bindingsListOf_sdk_mapview_MapMarker_iterator_get'));

Pointer<Void> harpPluginsOcmBindingslistofSdkMapviewMapmarkerToFfi(List<MapMarker> value) {
  final _result = _harpPluginsOcmBindingslistofSdkMapviewMapmarkerCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkMapviewMapmarkerToFfi(element);
    _harpPluginsOcmBindingslistofSdkMapviewMapmarkerInsert(_result, _elementHandle);
    sdkMapviewMapmarkerReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<MapMarker> harpPluginsOcmBindingslistofSdkMapviewMapmarkerFromFfi(Pointer<Void> handle) {
  final result = List<MapMarker>.empty(growable: true);
  final _iteratorHandle = _harpPluginsOcmBindingslistofSdkMapviewMapmarkerIterator(handle);
  while (_harpPluginsOcmBindingslistofSdkMapviewMapmarkerIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _harpPluginsOcmBindingslistofSdkMapviewMapmarkerIteratorGet(_iteratorHandle);
    try {
      result.add(sdkMapviewMapmarkerFromFfi(_elementHandle));
    } finally {
      sdkMapviewMapmarkerReleaseFfiHandle(_elementHandle);
    }
    _harpPluginsOcmBindingslistofSdkMapviewMapmarkerIteratorIncrement(_iteratorHandle);
  }
  _harpPluginsOcmBindingslistofSdkMapviewMapmarkerIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void harpPluginsOcmBindingslistofSdkMapviewMapmarkerReleaseFfiHandle(Pointer<Void> handle) => _harpPluginsOcmBindingslistofSdkMapviewMapmarkerReleaseHandle(handle);

final _harpPluginsOcmBindingslistofSdkMapviewMapmarkerCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_ocm_bindingsListOf_sdk_mapview_MapMarker_create_handle_nullable'));
final _harpPluginsOcmBindingslistofSdkMapviewMapmarkerReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_ocm_bindingsListOf_sdk_mapview_MapMarker_release_handle_nullable'));
final _harpPluginsOcmBindingslistofSdkMapviewMapmarkerGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_ocm_bindingsListOf_sdk_mapview_MapMarker_get_value_nullable'));

Pointer<Void> harpPluginsOcmBindingslistofSdkMapviewMapmarkerToFfiNullable(List<MapMarker>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = harpPluginsOcmBindingslistofSdkMapviewMapmarkerToFfi(value);
  final result = _harpPluginsOcmBindingslistofSdkMapviewMapmarkerCreateHandleNullable(_handle);
  harpPluginsOcmBindingslistofSdkMapviewMapmarkerReleaseFfiHandle(_handle);
  return result;
}

List<MapMarker>? harpPluginsOcmBindingslistofSdkMapviewMapmarkerFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _harpPluginsOcmBindingslistofSdkMapviewMapmarkerGetValueNullable(handle);
  final result = harpPluginsOcmBindingslistofSdkMapviewMapmarkerFromFfi(_handle);
  harpPluginsOcmBindingslistofSdkMapviewMapmarkerReleaseFfiHandle(_handle);
  return result;
}

void harpPluginsOcmBindingslistofSdkMapviewMapmarkerReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _harpPluginsOcmBindingslistofSdkMapviewMapmarkerReleaseHandleNullable(handle);


// Copyright (c) 2019 HERE Global B.V. and its affiliate(s).
// All rights reserved.
// This software and other materials contain proprietary information
// controlled by HERE and are protected by applicable copyright legislation.
// Any use and utilization of this software and other materials and
// disclosure to any third parties is conditional upon having a separate
// agreement with HERE for the access, use, utilization or disclosure of this
// software. In the absence of such agreement, the use of the software is not
// allowed.














final _harpPluginsOmvBindingslistofSdkAnimationAnchor2dkeyframeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_Anchor2DKeyframe_create_handle'));
final _harpPluginsOmvBindingslistofSdkAnimationAnchor2dkeyframeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_Anchor2DKeyframe_release_handle'));
final _harpPluginsOmvBindingslistofSdkAnimationAnchor2dkeyframeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_Anchor2DKeyframe_insert'));
final _harpPluginsOmvBindingslistofSdkAnimationAnchor2dkeyframeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_Anchor2DKeyframe_iterator'));
final _harpPluginsOmvBindingslistofSdkAnimationAnchor2dkeyframeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_Anchor2DKeyframe_iterator_release_handle'));
final _harpPluginsOmvBindingslistofSdkAnimationAnchor2dkeyframeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_Anchor2DKeyframe_iterator_is_valid'));
final _harpPluginsOmvBindingslistofSdkAnimationAnchor2dkeyframeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_Anchor2DKeyframe_iterator_increment'));
final _harpPluginsOmvBindingslistofSdkAnimationAnchor2dkeyframeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_Anchor2DKeyframe_iterator_get'));

Pointer<Void> harpPluginsOmvBindingslistofSdkAnimationAnchor2dkeyframeToFfi(List<Anchor2DKeyframe> value) {
  final _result = _harpPluginsOmvBindingslistofSdkAnimationAnchor2dkeyframeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkAnimationAnchor2dkeyframeToFfi(element);
    _harpPluginsOmvBindingslistofSdkAnimationAnchor2dkeyframeInsert(_result, _elementHandle);
    sdkAnimationAnchor2dkeyframeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Anchor2DKeyframe> harpPluginsOmvBindingslistofSdkAnimationAnchor2dkeyframeFromFfi(Pointer<Void> handle) {
  final result = List<Anchor2DKeyframe>.empty(growable: true);
  final _iteratorHandle = _harpPluginsOmvBindingslistofSdkAnimationAnchor2dkeyframeIterator(handle);
  while (_harpPluginsOmvBindingslistofSdkAnimationAnchor2dkeyframeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _harpPluginsOmvBindingslistofSdkAnimationAnchor2dkeyframeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkAnimationAnchor2dkeyframeFromFfi(_elementHandle));
    } finally {
      sdkAnimationAnchor2dkeyframeReleaseFfiHandle(_elementHandle);
    }
    _harpPluginsOmvBindingslistofSdkAnimationAnchor2dkeyframeIteratorIncrement(_iteratorHandle);
  }
  _harpPluginsOmvBindingslistofSdkAnimationAnchor2dkeyframeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void harpPluginsOmvBindingslistofSdkAnimationAnchor2dkeyframeReleaseFfiHandle(Pointer<Void> handle) => _harpPluginsOmvBindingslistofSdkAnimationAnchor2dkeyframeReleaseHandle(handle);

final _harpPluginsOmvBindingslistofSdkAnimationAnchor2dkeyframeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_Anchor2DKeyframe_create_handle_nullable'));
final _harpPluginsOmvBindingslistofSdkAnimationAnchor2dkeyframeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_Anchor2DKeyframe_release_handle_nullable'));
final _harpPluginsOmvBindingslistofSdkAnimationAnchor2dkeyframeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_Anchor2DKeyframe_get_value_nullable'));

Pointer<Void> harpPluginsOmvBindingslistofSdkAnimationAnchor2dkeyframeToFfiNullable(List<Anchor2DKeyframe>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = harpPluginsOmvBindingslistofSdkAnimationAnchor2dkeyframeToFfi(value);
  final result = _harpPluginsOmvBindingslistofSdkAnimationAnchor2dkeyframeCreateHandleNullable(_handle);
  harpPluginsOmvBindingslistofSdkAnimationAnchor2dkeyframeReleaseFfiHandle(_handle);
  return result;
}

List<Anchor2DKeyframe>? harpPluginsOmvBindingslistofSdkAnimationAnchor2dkeyframeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _harpPluginsOmvBindingslistofSdkAnimationAnchor2dkeyframeGetValueNullable(handle);
  final result = harpPluginsOmvBindingslistofSdkAnimationAnchor2dkeyframeFromFfi(_handle);
  harpPluginsOmvBindingslistofSdkAnimationAnchor2dkeyframeReleaseFfiHandle(_handle);
  return result;
}

void harpPluginsOmvBindingslistofSdkAnimationAnchor2dkeyframeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _harpPluginsOmvBindingslistofSdkAnimationAnchor2dkeyframeReleaseHandleNullable(handle);

final _harpPluginsOmvBindingslistofSdkAnimationGeocoordinateskeyframeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_create_handle'));
final _harpPluginsOmvBindingslistofSdkAnimationGeocoordinateskeyframeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_release_handle'));
final _harpPluginsOmvBindingslistofSdkAnimationGeocoordinateskeyframeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_insert'));
final _harpPluginsOmvBindingslistofSdkAnimationGeocoordinateskeyframeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_iterator'));
final _harpPluginsOmvBindingslistofSdkAnimationGeocoordinateskeyframeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_iterator_release_handle'));
final _harpPluginsOmvBindingslistofSdkAnimationGeocoordinateskeyframeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_iterator_is_valid'));
final _harpPluginsOmvBindingslistofSdkAnimationGeocoordinateskeyframeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_iterator_increment'));
final _harpPluginsOmvBindingslistofSdkAnimationGeocoordinateskeyframeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_iterator_get'));

Pointer<Void> harpPluginsOmvBindingslistofSdkAnimationGeocoordinateskeyframeToFfi(List<GeoCoordinatesKeyframe> value) {
  final _result = _harpPluginsOmvBindingslistofSdkAnimationGeocoordinateskeyframeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkAnimationGeocoordinateskeyframeToFfi(element);
    _harpPluginsOmvBindingslistofSdkAnimationGeocoordinateskeyframeInsert(_result, _elementHandle);
    sdkAnimationGeocoordinateskeyframeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoCoordinatesKeyframe> harpPluginsOmvBindingslistofSdkAnimationGeocoordinateskeyframeFromFfi(Pointer<Void> handle) {
  final result = List<GeoCoordinatesKeyframe>.empty(growable: true);
  final _iteratorHandle = _harpPluginsOmvBindingslistofSdkAnimationGeocoordinateskeyframeIterator(handle);
  while (_harpPluginsOmvBindingslistofSdkAnimationGeocoordinateskeyframeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _harpPluginsOmvBindingslistofSdkAnimationGeocoordinateskeyframeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkAnimationGeocoordinateskeyframeFromFfi(_elementHandle));
    } finally {
      sdkAnimationGeocoordinateskeyframeReleaseFfiHandle(_elementHandle);
    }
    _harpPluginsOmvBindingslistofSdkAnimationGeocoordinateskeyframeIteratorIncrement(_iteratorHandle);
  }
  _harpPluginsOmvBindingslistofSdkAnimationGeocoordinateskeyframeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void harpPluginsOmvBindingslistofSdkAnimationGeocoordinateskeyframeReleaseFfiHandle(Pointer<Void> handle) => _harpPluginsOmvBindingslistofSdkAnimationGeocoordinateskeyframeReleaseHandle(handle);

final _harpPluginsOmvBindingslistofSdkAnimationGeocoordinateskeyframeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_create_handle_nullable'));
final _harpPluginsOmvBindingslistofSdkAnimationGeocoordinateskeyframeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_release_handle_nullable'));
final _harpPluginsOmvBindingslistofSdkAnimationGeocoordinateskeyframeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_get_value_nullable'));

Pointer<Void> harpPluginsOmvBindingslistofSdkAnimationGeocoordinateskeyframeToFfiNullable(List<GeoCoordinatesKeyframe>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = harpPluginsOmvBindingslistofSdkAnimationGeocoordinateskeyframeToFfi(value);
  final result = _harpPluginsOmvBindingslistofSdkAnimationGeocoordinateskeyframeCreateHandleNullable(_handle);
  harpPluginsOmvBindingslistofSdkAnimationGeocoordinateskeyframeReleaseFfiHandle(_handle);
  return result;
}

List<GeoCoordinatesKeyframe>? harpPluginsOmvBindingslistofSdkAnimationGeocoordinateskeyframeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _harpPluginsOmvBindingslistofSdkAnimationGeocoordinateskeyframeGetValueNullable(handle);
  final result = harpPluginsOmvBindingslistofSdkAnimationGeocoordinateskeyframeFromFfi(_handle);
  harpPluginsOmvBindingslistofSdkAnimationGeocoordinateskeyframeReleaseFfiHandle(_handle);
  return result;
}

void harpPluginsOmvBindingslistofSdkAnimationGeocoordinateskeyframeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _harpPluginsOmvBindingslistofSdkAnimationGeocoordinateskeyframeReleaseHandleNullable(handle);

final _harpPluginsOmvBindingslistofSdkAnimationGeoorientationkeyframeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_GeoOrientationKeyframe_create_handle'));
final _harpPluginsOmvBindingslistofSdkAnimationGeoorientationkeyframeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_GeoOrientationKeyframe_release_handle'));
final _harpPluginsOmvBindingslistofSdkAnimationGeoorientationkeyframeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_GeoOrientationKeyframe_insert'));
final _harpPluginsOmvBindingslistofSdkAnimationGeoorientationkeyframeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_GeoOrientationKeyframe_iterator'));
final _harpPluginsOmvBindingslistofSdkAnimationGeoorientationkeyframeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_GeoOrientationKeyframe_iterator_release_handle'));
final _harpPluginsOmvBindingslistofSdkAnimationGeoorientationkeyframeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_GeoOrientationKeyframe_iterator_is_valid'));
final _harpPluginsOmvBindingslistofSdkAnimationGeoorientationkeyframeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_GeoOrientationKeyframe_iterator_increment'));
final _harpPluginsOmvBindingslistofSdkAnimationGeoorientationkeyframeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_GeoOrientationKeyframe_iterator_get'));

Pointer<Void> harpPluginsOmvBindingslistofSdkAnimationGeoorientationkeyframeToFfi(List<GeoOrientationKeyframe> value) {
  final _result = _harpPluginsOmvBindingslistofSdkAnimationGeoorientationkeyframeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkAnimationGeoorientationkeyframeToFfi(element);
    _harpPluginsOmvBindingslistofSdkAnimationGeoorientationkeyframeInsert(_result, _elementHandle);
    sdkAnimationGeoorientationkeyframeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoOrientationKeyframe> harpPluginsOmvBindingslistofSdkAnimationGeoorientationkeyframeFromFfi(Pointer<Void> handle) {
  final result = List<GeoOrientationKeyframe>.empty(growable: true);
  final _iteratorHandle = _harpPluginsOmvBindingslistofSdkAnimationGeoorientationkeyframeIterator(handle);
  while (_harpPluginsOmvBindingslistofSdkAnimationGeoorientationkeyframeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _harpPluginsOmvBindingslistofSdkAnimationGeoorientationkeyframeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkAnimationGeoorientationkeyframeFromFfi(_elementHandle));
    } finally {
      sdkAnimationGeoorientationkeyframeReleaseFfiHandle(_elementHandle);
    }
    _harpPluginsOmvBindingslistofSdkAnimationGeoorientationkeyframeIteratorIncrement(_iteratorHandle);
  }
  _harpPluginsOmvBindingslistofSdkAnimationGeoorientationkeyframeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void harpPluginsOmvBindingslistofSdkAnimationGeoorientationkeyframeReleaseFfiHandle(Pointer<Void> handle) => _harpPluginsOmvBindingslistofSdkAnimationGeoorientationkeyframeReleaseHandle(handle);

final _harpPluginsOmvBindingslistofSdkAnimationGeoorientationkeyframeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_GeoOrientationKeyframe_create_handle_nullable'));
final _harpPluginsOmvBindingslistofSdkAnimationGeoorientationkeyframeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_GeoOrientationKeyframe_release_handle_nullable'));
final _harpPluginsOmvBindingslistofSdkAnimationGeoorientationkeyframeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_GeoOrientationKeyframe_get_value_nullable'));

Pointer<Void> harpPluginsOmvBindingslistofSdkAnimationGeoorientationkeyframeToFfiNullable(List<GeoOrientationKeyframe>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = harpPluginsOmvBindingslistofSdkAnimationGeoorientationkeyframeToFfi(value);
  final result = _harpPluginsOmvBindingslistofSdkAnimationGeoorientationkeyframeCreateHandleNullable(_handle);
  harpPluginsOmvBindingslistofSdkAnimationGeoorientationkeyframeReleaseFfiHandle(_handle);
  return result;
}

List<GeoOrientationKeyframe>? harpPluginsOmvBindingslistofSdkAnimationGeoorientationkeyframeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _harpPluginsOmvBindingslistofSdkAnimationGeoorientationkeyframeGetValueNullable(handle);
  final result = harpPluginsOmvBindingslistofSdkAnimationGeoorientationkeyframeFromFfi(_handle);
  harpPluginsOmvBindingslistofSdkAnimationGeoorientationkeyframeReleaseFfiHandle(_handle);
  return result;
}

void harpPluginsOmvBindingslistofSdkAnimationGeoorientationkeyframeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _harpPluginsOmvBindingslistofSdkAnimationGeoorientationkeyframeReleaseHandleNullable(handle);

final _harpPluginsOmvBindingslistofSdkAnimationPoint2dkeyframeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_Point2DKeyframe_create_handle'));
final _harpPluginsOmvBindingslistofSdkAnimationPoint2dkeyframeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_Point2DKeyframe_release_handle'));
final _harpPluginsOmvBindingslistofSdkAnimationPoint2dkeyframeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_Point2DKeyframe_insert'));
final _harpPluginsOmvBindingslistofSdkAnimationPoint2dkeyframeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_Point2DKeyframe_iterator'));
final _harpPluginsOmvBindingslistofSdkAnimationPoint2dkeyframeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_Point2DKeyframe_iterator_release_handle'));
final _harpPluginsOmvBindingslistofSdkAnimationPoint2dkeyframeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_Point2DKeyframe_iterator_is_valid'));
final _harpPluginsOmvBindingslistofSdkAnimationPoint2dkeyframeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_Point2DKeyframe_iterator_increment'));
final _harpPluginsOmvBindingslistofSdkAnimationPoint2dkeyframeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_Point2DKeyframe_iterator_get'));

Pointer<Void> harpPluginsOmvBindingslistofSdkAnimationPoint2dkeyframeToFfi(List<Point2DKeyframe> value) {
  final _result = _harpPluginsOmvBindingslistofSdkAnimationPoint2dkeyframeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkAnimationPoint2dkeyframeToFfi(element);
    _harpPluginsOmvBindingslistofSdkAnimationPoint2dkeyframeInsert(_result, _elementHandle);
    sdkAnimationPoint2dkeyframeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Point2DKeyframe> harpPluginsOmvBindingslistofSdkAnimationPoint2dkeyframeFromFfi(Pointer<Void> handle) {
  final result = List<Point2DKeyframe>.empty(growable: true);
  final _iteratorHandle = _harpPluginsOmvBindingslistofSdkAnimationPoint2dkeyframeIterator(handle);
  while (_harpPluginsOmvBindingslistofSdkAnimationPoint2dkeyframeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _harpPluginsOmvBindingslistofSdkAnimationPoint2dkeyframeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkAnimationPoint2dkeyframeFromFfi(_elementHandle));
    } finally {
      sdkAnimationPoint2dkeyframeReleaseFfiHandle(_elementHandle);
    }
    _harpPluginsOmvBindingslistofSdkAnimationPoint2dkeyframeIteratorIncrement(_iteratorHandle);
  }
  _harpPluginsOmvBindingslistofSdkAnimationPoint2dkeyframeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void harpPluginsOmvBindingslistofSdkAnimationPoint2dkeyframeReleaseFfiHandle(Pointer<Void> handle) => _harpPluginsOmvBindingslistofSdkAnimationPoint2dkeyframeReleaseHandle(handle);

final _harpPluginsOmvBindingslistofSdkAnimationPoint2dkeyframeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_Point2DKeyframe_create_handle_nullable'));
final _harpPluginsOmvBindingslistofSdkAnimationPoint2dkeyframeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_Point2DKeyframe_release_handle_nullable'));
final _harpPluginsOmvBindingslistofSdkAnimationPoint2dkeyframeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_Point2DKeyframe_get_value_nullable'));

Pointer<Void> harpPluginsOmvBindingslistofSdkAnimationPoint2dkeyframeToFfiNullable(List<Point2DKeyframe>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = harpPluginsOmvBindingslistofSdkAnimationPoint2dkeyframeToFfi(value);
  final result = _harpPluginsOmvBindingslistofSdkAnimationPoint2dkeyframeCreateHandleNullable(_handle);
  harpPluginsOmvBindingslistofSdkAnimationPoint2dkeyframeReleaseFfiHandle(_handle);
  return result;
}

List<Point2DKeyframe>? harpPluginsOmvBindingslistofSdkAnimationPoint2dkeyframeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _harpPluginsOmvBindingslistofSdkAnimationPoint2dkeyframeGetValueNullable(handle);
  final result = harpPluginsOmvBindingslistofSdkAnimationPoint2dkeyframeFromFfi(_handle);
  harpPluginsOmvBindingslistofSdkAnimationPoint2dkeyframeReleaseFfiHandle(_handle);
  return result;
}

void harpPluginsOmvBindingslistofSdkAnimationPoint2dkeyframeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _harpPluginsOmvBindingslistofSdkAnimationPoint2dkeyframeReleaseHandleNullable(handle);

final _harpPluginsOmvBindingslistofSdkAnimationScalarkeyframeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_ScalarKeyframe_create_handle'));
final _harpPluginsOmvBindingslistofSdkAnimationScalarkeyframeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_ScalarKeyframe_release_handle'));
final _harpPluginsOmvBindingslistofSdkAnimationScalarkeyframeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_ScalarKeyframe_insert'));
final _harpPluginsOmvBindingslistofSdkAnimationScalarkeyframeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_ScalarKeyframe_iterator'));
final _harpPluginsOmvBindingslistofSdkAnimationScalarkeyframeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_ScalarKeyframe_iterator_release_handle'));
final _harpPluginsOmvBindingslistofSdkAnimationScalarkeyframeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_ScalarKeyframe_iterator_is_valid'));
final _harpPluginsOmvBindingslistofSdkAnimationScalarkeyframeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_ScalarKeyframe_iterator_increment'));
final _harpPluginsOmvBindingslistofSdkAnimationScalarkeyframeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_ScalarKeyframe_iterator_get'));

Pointer<Void> harpPluginsOmvBindingslistofSdkAnimationScalarkeyframeToFfi(List<ScalarKeyframe> value) {
  final _result = _harpPluginsOmvBindingslistofSdkAnimationScalarkeyframeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkAnimationScalarkeyframeToFfi(element);
    _harpPluginsOmvBindingslistofSdkAnimationScalarkeyframeInsert(_result, _elementHandle);
    sdkAnimationScalarkeyframeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<ScalarKeyframe> harpPluginsOmvBindingslistofSdkAnimationScalarkeyframeFromFfi(Pointer<Void> handle) {
  final result = List<ScalarKeyframe>.empty(growable: true);
  final _iteratorHandle = _harpPluginsOmvBindingslistofSdkAnimationScalarkeyframeIterator(handle);
  while (_harpPluginsOmvBindingslistofSdkAnimationScalarkeyframeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _harpPluginsOmvBindingslistofSdkAnimationScalarkeyframeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkAnimationScalarkeyframeFromFfi(_elementHandle));
    } finally {
      sdkAnimationScalarkeyframeReleaseFfiHandle(_elementHandle);
    }
    _harpPluginsOmvBindingslistofSdkAnimationScalarkeyframeIteratorIncrement(_iteratorHandle);
  }
  _harpPluginsOmvBindingslistofSdkAnimationScalarkeyframeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void harpPluginsOmvBindingslistofSdkAnimationScalarkeyframeReleaseFfiHandle(Pointer<Void> handle) => _harpPluginsOmvBindingslistofSdkAnimationScalarkeyframeReleaseHandle(handle);

final _harpPluginsOmvBindingslistofSdkAnimationScalarkeyframeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_ScalarKeyframe_create_handle_nullable'));
final _harpPluginsOmvBindingslistofSdkAnimationScalarkeyframeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_ScalarKeyframe_release_handle_nullable'));
final _harpPluginsOmvBindingslistofSdkAnimationScalarkeyframeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_animation_ScalarKeyframe_get_value_nullable'));

Pointer<Void> harpPluginsOmvBindingslistofSdkAnimationScalarkeyframeToFfiNullable(List<ScalarKeyframe>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = harpPluginsOmvBindingslistofSdkAnimationScalarkeyframeToFfi(value);
  final result = _harpPluginsOmvBindingslistofSdkAnimationScalarkeyframeCreateHandleNullable(_handle);
  harpPluginsOmvBindingslistofSdkAnimationScalarkeyframeReleaseFfiHandle(_handle);
  return result;
}

List<ScalarKeyframe>? harpPluginsOmvBindingslistofSdkAnimationScalarkeyframeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _harpPluginsOmvBindingslistofSdkAnimationScalarkeyframeGetValueNullable(handle);
  final result = harpPluginsOmvBindingslistofSdkAnimationScalarkeyframeFromFfi(_handle);
  harpPluginsOmvBindingslistofSdkAnimationScalarkeyframeReleaseFfiHandle(_handle);
  return result;
}

void harpPluginsOmvBindingslistofSdkAnimationScalarkeyframeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _harpPluginsOmvBindingslistofSdkAnimationScalarkeyframeReleaseHandleNullable(handle);

final _harpPluginsOmvBindingslistofSdkCoreGeocoordinatesCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_core_GeoCoordinates_create_handle'));
final _harpPluginsOmvBindingslistofSdkCoreGeocoordinatesReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_core_GeoCoordinates_release_handle'));
final _harpPluginsOmvBindingslistofSdkCoreGeocoordinatesInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_core_GeoCoordinates_insert'));
final _harpPluginsOmvBindingslistofSdkCoreGeocoordinatesIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_core_GeoCoordinates_iterator'));
final _harpPluginsOmvBindingslistofSdkCoreGeocoordinatesIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_core_GeoCoordinates_iterator_release_handle'));
final _harpPluginsOmvBindingslistofSdkCoreGeocoordinatesIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_core_GeoCoordinates_iterator_is_valid'));
final _harpPluginsOmvBindingslistofSdkCoreGeocoordinatesIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_core_GeoCoordinates_iterator_increment'));
final _harpPluginsOmvBindingslistofSdkCoreGeocoordinatesIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_core_GeoCoordinates_iterator_get'));

Pointer<Void> harpPluginsOmvBindingslistofSdkCoreGeocoordinatesToFfi(List<GeoCoordinates> value) {
  final _result = _harpPluginsOmvBindingslistofSdkCoreGeocoordinatesCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreGeocoordinatesToFfi(element);
    _harpPluginsOmvBindingslistofSdkCoreGeocoordinatesInsert(_result, _elementHandle);
    sdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoCoordinates> harpPluginsOmvBindingslistofSdkCoreGeocoordinatesFromFfi(Pointer<Void> handle) {
  final result = List<GeoCoordinates>.empty(growable: true);
  final _iteratorHandle = _harpPluginsOmvBindingslistofSdkCoreGeocoordinatesIterator(handle);
  while (_harpPluginsOmvBindingslistofSdkCoreGeocoordinatesIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _harpPluginsOmvBindingslistofSdkCoreGeocoordinatesIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreGeocoordinatesFromFfi(_elementHandle));
    } finally {
      sdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
    }
    _harpPluginsOmvBindingslistofSdkCoreGeocoordinatesIteratorIncrement(_iteratorHandle);
  }
  _harpPluginsOmvBindingslistofSdkCoreGeocoordinatesIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void harpPluginsOmvBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(Pointer<Void> handle) => _harpPluginsOmvBindingslistofSdkCoreGeocoordinatesReleaseHandle(handle);

final _harpPluginsOmvBindingslistofSdkCoreGeocoordinatesCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_core_GeoCoordinates_create_handle_nullable'));
final _harpPluginsOmvBindingslistofSdkCoreGeocoordinatesReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_core_GeoCoordinates_release_handle_nullable'));
final _harpPluginsOmvBindingslistofSdkCoreGeocoordinatesGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_core_GeoCoordinates_get_value_nullable'));

Pointer<Void> harpPluginsOmvBindingslistofSdkCoreGeocoordinatesToFfiNullable(List<GeoCoordinates>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = harpPluginsOmvBindingslistofSdkCoreGeocoordinatesToFfi(value);
  final result = _harpPluginsOmvBindingslistofSdkCoreGeocoordinatesCreateHandleNullable(_handle);
  harpPluginsOmvBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

List<GeoCoordinates>? harpPluginsOmvBindingslistofSdkCoreGeocoordinatesFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _harpPluginsOmvBindingslistofSdkCoreGeocoordinatesGetValueNullable(handle);
  final result = harpPluginsOmvBindingslistofSdkCoreGeocoordinatesFromFfi(_handle);
  harpPluginsOmvBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

void harpPluginsOmvBindingslistofSdkCoreGeocoordinatesReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _harpPluginsOmvBindingslistofSdkCoreGeocoordinatesReleaseHandleNullable(handle);

final _harpPluginsOmvBindingslistofSdkMapviewMapcamerakeyframetrackCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_create_handle'));
final _harpPluginsOmvBindingslistofSdkMapviewMapcamerakeyframetrackReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_release_handle'));
final _harpPluginsOmvBindingslistofSdkMapviewMapcamerakeyframetrackInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_insert'));
final _harpPluginsOmvBindingslistofSdkMapviewMapcamerakeyframetrackIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_iterator'));
final _harpPluginsOmvBindingslistofSdkMapviewMapcamerakeyframetrackIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_iterator_release_handle'));
final _harpPluginsOmvBindingslistofSdkMapviewMapcamerakeyframetrackIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_iterator_is_valid'));
final _harpPluginsOmvBindingslistofSdkMapviewMapcamerakeyframetrackIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_iterator_increment'));
final _harpPluginsOmvBindingslistofSdkMapviewMapcamerakeyframetrackIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_iterator_get'));

Pointer<Void> harpPluginsOmvBindingslistofSdkMapviewMapcamerakeyframetrackToFfi(List<MapCameraKeyframeTrack> value) {
  final _result = _harpPluginsOmvBindingslistofSdkMapviewMapcamerakeyframetrackCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkMapviewMapcamerakeyframetrackToFfi(element);
    _harpPluginsOmvBindingslistofSdkMapviewMapcamerakeyframetrackInsert(_result, _elementHandle);
    sdkMapviewMapcamerakeyframetrackReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<MapCameraKeyframeTrack> harpPluginsOmvBindingslistofSdkMapviewMapcamerakeyframetrackFromFfi(Pointer<Void> handle) {
  final result = List<MapCameraKeyframeTrack>.empty(growable: true);
  final _iteratorHandle = _harpPluginsOmvBindingslistofSdkMapviewMapcamerakeyframetrackIterator(handle);
  while (_harpPluginsOmvBindingslistofSdkMapviewMapcamerakeyframetrackIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _harpPluginsOmvBindingslistofSdkMapviewMapcamerakeyframetrackIteratorGet(_iteratorHandle);
    try {
      result.add(sdkMapviewMapcamerakeyframetrackFromFfi(_elementHandle));
    } finally {
      sdkMapviewMapcamerakeyframetrackReleaseFfiHandle(_elementHandle);
    }
    _harpPluginsOmvBindingslistofSdkMapviewMapcamerakeyframetrackIteratorIncrement(_iteratorHandle);
  }
  _harpPluginsOmvBindingslistofSdkMapviewMapcamerakeyframetrackIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void harpPluginsOmvBindingslistofSdkMapviewMapcamerakeyframetrackReleaseFfiHandle(Pointer<Void> handle) => _harpPluginsOmvBindingslistofSdkMapviewMapcamerakeyframetrackReleaseHandle(handle);

final _harpPluginsOmvBindingslistofSdkMapviewMapcamerakeyframetrackCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_create_handle_nullable'));
final _harpPluginsOmvBindingslistofSdkMapviewMapcamerakeyframetrackReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_release_handle_nullable'));
final _harpPluginsOmvBindingslistofSdkMapviewMapcamerakeyframetrackGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_get_value_nullable'));

Pointer<Void> harpPluginsOmvBindingslistofSdkMapviewMapcamerakeyframetrackToFfiNullable(List<MapCameraKeyframeTrack>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = harpPluginsOmvBindingslistofSdkMapviewMapcamerakeyframetrackToFfi(value);
  final result = _harpPluginsOmvBindingslistofSdkMapviewMapcamerakeyframetrackCreateHandleNullable(_handle);
  harpPluginsOmvBindingslistofSdkMapviewMapcamerakeyframetrackReleaseFfiHandle(_handle);
  return result;
}

List<MapCameraKeyframeTrack>? harpPluginsOmvBindingslistofSdkMapviewMapcamerakeyframetrackFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _harpPluginsOmvBindingslistofSdkMapviewMapcamerakeyframetrackGetValueNullable(handle);
  final result = harpPluginsOmvBindingslistofSdkMapviewMapcamerakeyframetrackFromFfi(_handle);
  harpPluginsOmvBindingslistofSdkMapviewMapcamerakeyframetrackReleaseFfiHandle(_handle);
  return result;
}

void harpPluginsOmvBindingslistofSdkMapviewMapcamerakeyframetrackReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _harpPluginsOmvBindingslistofSdkMapviewMapcamerakeyframetrackReleaseHandleNullable(handle);

final _harpPluginsOmvBindingslistofSdkMapviewMapmarkerCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapMarker_create_handle'));
final _harpPluginsOmvBindingslistofSdkMapviewMapmarkerReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapMarker_release_handle'));
final _harpPluginsOmvBindingslistofSdkMapviewMapmarkerInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapMarker_insert'));
final _harpPluginsOmvBindingslistofSdkMapviewMapmarkerIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapMarker_iterator'));
final _harpPluginsOmvBindingslistofSdkMapviewMapmarkerIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapMarker_iterator_release_handle'));
final _harpPluginsOmvBindingslistofSdkMapviewMapmarkerIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapMarker_iterator_is_valid'));
final _harpPluginsOmvBindingslistofSdkMapviewMapmarkerIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapMarker_iterator_increment'));
final _harpPluginsOmvBindingslistofSdkMapviewMapmarkerIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapMarker_iterator_get'));

Pointer<Void> harpPluginsOmvBindingslistofSdkMapviewMapmarkerToFfi(List<MapMarker> value) {
  final _result = _harpPluginsOmvBindingslistofSdkMapviewMapmarkerCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkMapviewMapmarkerToFfi(element);
    _harpPluginsOmvBindingslistofSdkMapviewMapmarkerInsert(_result, _elementHandle);
    sdkMapviewMapmarkerReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<MapMarker> harpPluginsOmvBindingslistofSdkMapviewMapmarkerFromFfi(Pointer<Void> handle) {
  final result = List<MapMarker>.empty(growable: true);
  final _iteratorHandle = _harpPluginsOmvBindingslistofSdkMapviewMapmarkerIterator(handle);
  while (_harpPluginsOmvBindingslistofSdkMapviewMapmarkerIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _harpPluginsOmvBindingslistofSdkMapviewMapmarkerIteratorGet(_iteratorHandle);
    try {
      result.add(sdkMapviewMapmarkerFromFfi(_elementHandle));
    } finally {
      sdkMapviewMapmarkerReleaseFfiHandle(_elementHandle);
    }
    _harpPluginsOmvBindingslistofSdkMapviewMapmarkerIteratorIncrement(_iteratorHandle);
  }
  _harpPluginsOmvBindingslistofSdkMapviewMapmarkerIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void harpPluginsOmvBindingslistofSdkMapviewMapmarkerReleaseFfiHandle(Pointer<Void> handle) => _harpPluginsOmvBindingslistofSdkMapviewMapmarkerReleaseHandle(handle);

final _harpPluginsOmvBindingslistofSdkMapviewMapmarkerCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapMarker_create_handle_nullable'));
final _harpPluginsOmvBindingslistofSdkMapviewMapmarkerReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapMarker_release_handle_nullable'));
final _harpPluginsOmvBindingslistofSdkMapviewMapmarkerGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_omv_bindingsListOf_sdk_mapview_MapMarker_get_value_nullable'));

Pointer<Void> harpPluginsOmvBindingslistofSdkMapviewMapmarkerToFfiNullable(List<MapMarker>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = harpPluginsOmvBindingslistofSdkMapviewMapmarkerToFfi(value);
  final result = _harpPluginsOmvBindingslistofSdkMapviewMapmarkerCreateHandleNullable(_handle);
  harpPluginsOmvBindingslistofSdkMapviewMapmarkerReleaseFfiHandle(_handle);
  return result;
}

List<MapMarker>? harpPluginsOmvBindingslistofSdkMapviewMapmarkerFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _harpPluginsOmvBindingslistofSdkMapviewMapmarkerGetValueNullable(handle);
  final result = harpPluginsOmvBindingslistofSdkMapviewMapmarkerFromFfi(_handle);
  harpPluginsOmvBindingslistofSdkMapviewMapmarkerReleaseFfiHandle(_handle);
  return result;
}

void harpPluginsOmvBindingslistofSdkMapviewMapmarkerReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _harpPluginsOmvBindingslistofSdkMapviewMapmarkerReleaseHandleNullable(handle);


// Copyright (c) 2019 HERE Global B.V. and its affiliate(s).
// All rights reserved.
// This software and other materials contain proprietary information
// controlled by HERE and are protected by applicable copyright legislation.
// Any use and utilization of this software and other materials and
// disclosure to any third parties is conditional upon having a separate
// agreement with HERE for the access, use, utilization or disclosure of this
// software. In the absence of such agreement, the use of the software is not
// allowed.















final _harpPluginsRasterBindingslistofIntCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_harp_plugins_raster_bindingsListOf_Int_create_handle'));
final _harpPluginsRasterBindingslistofIntReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_Int_release_handle'));
final _harpPluginsRasterBindingslistofIntInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Int32),
    void Function(Pointer<Void>, int)
  >('here_sdk_harp_plugins_raster_bindingsListOf_Int_insert'));
final _harpPluginsRasterBindingslistofIntIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_Int_iterator'));
final _harpPluginsRasterBindingslistofIntIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_Int_iterator_release_handle'));
final _harpPluginsRasterBindingslistofIntIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_Int_iterator_is_valid'));
final _harpPluginsRasterBindingslistofIntIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_Int_iterator_increment'));
final _harpPluginsRasterBindingslistofIntIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_Int_iterator_get'));

Pointer<Void> harpPluginsRasterBindingslistofIntToFfi(List<int> value) {
  final _result = _harpPluginsRasterBindingslistofIntCreateHandle();
  for (final element in value) {
    final _elementHandle = (element);
    _harpPluginsRasterBindingslistofIntInsert(_result, _elementHandle);
    
  }
  return _result;
}

List<int> harpPluginsRasterBindingslistofIntFromFfi(Pointer<Void> handle) {
  final result = List<int>.empty(growable: true);
  final _iteratorHandle = _harpPluginsRasterBindingslistofIntIterator(handle);
  while (_harpPluginsRasterBindingslistofIntIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _harpPluginsRasterBindingslistofIntIteratorGet(_iteratorHandle);
    try {
      result.add((_elementHandle));
    } finally {
      
    }
    _harpPluginsRasterBindingslistofIntIteratorIncrement(_iteratorHandle);
  }
  _harpPluginsRasterBindingslistofIntIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void harpPluginsRasterBindingslistofIntReleaseFfiHandle(Pointer<Void> handle) => _harpPluginsRasterBindingslistofIntReleaseHandle(handle);

final _harpPluginsRasterBindingslistofIntCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_Int_create_handle_nullable'));
final _harpPluginsRasterBindingslistofIntReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_Int_release_handle_nullable'));
final _harpPluginsRasterBindingslistofIntGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_Int_get_value_nullable'));

Pointer<Void> harpPluginsRasterBindingslistofIntToFfiNullable(List<int>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = harpPluginsRasterBindingslistofIntToFfi(value);
  final result = _harpPluginsRasterBindingslistofIntCreateHandleNullable(_handle);
  harpPluginsRasterBindingslistofIntReleaseFfiHandle(_handle);
  return result;
}

List<int>? harpPluginsRasterBindingslistofIntFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _harpPluginsRasterBindingslistofIntGetValueNullable(handle);
  final result = harpPluginsRasterBindingslistofIntFromFfi(_handle);
  harpPluginsRasterBindingslistofIntReleaseFfiHandle(_handle);
  return result;
}

void harpPluginsRasterBindingslistofIntReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _harpPluginsRasterBindingslistofIntReleaseHandleNullable(handle);

final _harpPluginsRasterBindingslistofSdkAnimationAnchor2dkeyframeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_Anchor2DKeyframe_create_handle'));
final _harpPluginsRasterBindingslistofSdkAnimationAnchor2dkeyframeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_Anchor2DKeyframe_release_handle'));
final _harpPluginsRasterBindingslistofSdkAnimationAnchor2dkeyframeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_Anchor2DKeyframe_insert'));
final _harpPluginsRasterBindingslistofSdkAnimationAnchor2dkeyframeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_Anchor2DKeyframe_iterator'));
final _harpPluginsRasterBindingslistofSdkAnimationAnchor2dkeyframeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_Anchor2DKeyframe_iterator_release_handle'));
final _harpPluginsRasterBindingslistofSdkAnimationAnchor2dkeyframeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_Anchor2DKeyframe_iterator_is_valid'));
final _harpPluginsRasterBindingslistofSdkAnimationAnchor2dkeyframeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_Anchor2DKeyframe_iterator_increment'));
final _harpPluginsRasterBindingslistofSdkAnimationAnchor2dkeyframeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_Anchor2DKeyframe_iterator_get'));

Pointer<Void> harpPluginsRasterBindingslistofSdkAnimationAnchor2dkeyframeToFfi(List<Anchor2DKeyframe> value) {
  final _result = _harpPluginsRasterBindingslistofSdkAnimationAnchor2dkeyframeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkAnimationAnchor2dkeyframeToFfi(element);
    _harpPluginsRasterBindingslistofSdkAnimationAnchor2dkeyframeInsert(_result, _elementHandle);
    sdkAnimationAnchor2dkeyframeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Anchor2DKeyframe> harpPluginsRasterBindingslistofSdkAnimationAnchor2dkeyframeFromFfi(Pointer<Void> handle) {
  final result = List<Anchor2DKeyframe>.empty(growable: true);
  final _iteratorHandle = _harpPluginsRasterBindingslistofSdkAnimationAnchor2dkeyframeIterator(handle);
  while (_harpPluginsRasterBindingslistofSdkAnimationAnchor2dkeyframeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _harpPluginsRasterBindingslistofSdkAnimationAnchor2dkeyframeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkAnimationAnchor2dkeyframeFromFfi(_elementHandle));
    } finally {
      sdkAnimationAnchor2dkeyframeReleaseFfiHandle(_elementHandle);
    }
    _harpPluginsRasterBindingslistofSdkAnimationAnchor2dkeyframeIteratorIncrement(_iteratorHandle);
  }
  _harpPluginsRasterBindingslistofSdkAnimationAnchor2dkeyframeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void harpPluginsRasterBindingslistofSdkAnimationAnchor2dkeyframeReleaseFfiHandle(Pointer<Void> handle) => _harpPluginsRasterBindingslistofSdkAnimationAnchor2dkeyframeReleaseHandle(handle);

final _harpPluginsRasterBindingslistofSdkAnimationAnchor2dkeyframeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_Anchor2DKeyframe_create_handle_nullable'));
final _harpPluginsRasterBindingslistofSdkAnimationAnchor2dkeyframeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_Anchor2DKeyframe_release_handle_nullable'));
final _harpPluginsRasterBindingslistofSdkAnimationAnchor2dkeyframeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_Anchor2DKeyframe_get_value_nullable'));

Pointer<Void> harpPluginsRasterBindingslistofSdkAnimationAnchor2dkeyframeToFfiNullable(List<Anchor2DKeyframe>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = harpPluginsRasterBindingslistofSdkAnimationAnchor2dkeyframeToFfi(value);
  final result = _harpPluginsRasterBindingslistofSdkAnimationAnchor2dkeyframeCreateHandleNullable(_handle);
  harpPluginsRasterBindingslistofSdkAnimationAnchor2dkeyframeReleaseFfiHandle(_handle);
  return result;
}

List<Anchor2DKeyframe>? harpPluginsRasterBindingslistofSdkAnimationAnchor2dkeyframeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _harpPluginsRasterBindingslistofSdkAnimationAnchor2dkeyframeGetValueNullable(handle);
  final result = harpPluginsRasterBindingslistofSdkAnimationAnchor2dkeyframeFromFfi(_handle);
  harpPluginsRasterBindingslistofSdkAnimationAnchor2dkeyframeReleaseFfiHandle(_handle);
  return result;
}

void harpPluginsRasterBindingslistofSdkAnimationAnchor2dkeyframeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _harpPluginsRasterBindingslistofSdkAnimationAnchor2dkeyframeReleaseHandleNullable(handle);

final _harpPluginsRasterBindingslistofSdkAnimationGeocoordinateskeyframeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_create_handle'));
final _harpPluginsRasterBindingslistofSdkAnimationGeocoordinateskeyframeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_release_handle'));
final _harpPluginsRasterBindingslistofSdkAnimationGeocoordinateskeyframeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_insert'));
final _harpPluginsRasterBindingslistofSdkAnimationGeocoordinateskeyframeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_iterator'));
final _harpPluginsRasterBindingslistofSdkAnimationGeocoordinateskeyframeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_iterator_release_handle'));
final _harpPluginsRasterBindingslistofSdkAnimationGeocoordinateskeyframeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_iterator_is_valid'));
final _harpPluginsRasterBindingslistofSdkAnimationGeocoordinateskeyframeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_iterator_increment'));
final _harpPluginsRasterBindingslistofSdkAnimationGeocoordinateskeyframeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_iterator_get'));

Pointer<Void> harpPluginsRasterBindingslistofSdkAnimationGeocoordinateskeyframeToFfi(List<GeoCoordinatesKeyframe> value) {
  final _result = _harpPluginsRasterBindingslistofSdkAnimationGeocoordinateskeyframeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkAnimationGeocoordinateskeyframeToFfi(element);
    _harpPluginsRasterBindingslistofSdkAnimationGeocoordinateskeyframeInsert(_result, _elementHandle);
    sdkAnimationGeocoordinateskeyframeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoCoordinatesKeyframe> harpPluginsRasterBindingslistofSdkAnimationGeocoordinateskeyframeFromFfi(Pointer<Void> handle) {
  final result = List<GeoCoordinatesKeyframe>.empty(growable: true);
  final _iteratorHandle = _harpPluginsRasterBindingslistofSdkAnimationGeocoordinateskeyframeIterator(handle);
  while (_harpPluginsRasterBindingslistofSdkAnimationGeocoordinateskeyframeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _harpPluginsRasterBindingslistofSdkAnimationGeocoordinateskeyframeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkAnimationGeocoordinateskeyframeFromFfi(_elementHandle));
    } finally {
      sdkAnimationGeocoordinateskeyframeReleaseFfiHandle(_elementHandle);
    }
    _harpPluginsRasterBindingslistofSdkAnimationGeocoordinateskeyframeIteratorIncrement(_iteratorHandle);
  }
  _harpPluginsRasterBindingslistofSdkAnimationGeocoordinateskeyframeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void harpPluginsRasterBindingslistofSdkAnimationGeocoordinateskeyframeReleaseFfiHandle(Pointer<Void> handle) => _harpPluginsRasterBindingslistofSdkAnimationGeocoordinateskeyframeReleaseHandle(handle);

final _harpPluginsRasterBindingslistofSdkAnimationGeocoordinateskeyframeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_create_handle_nullable'));
final _harpPluginsRasterBindingslistofSdkAnimationGeocoordinateskeyframeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_release_handle_nullable'));
final _harpPluginsRasterBindingslistofSdkAnimationGeocoordinateskeyframeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_get_value_nullable'));

Pointer<Void> harpPluginsRasterBindingslistofSdkAnimationGeocoordinateskeyframeToFfiNullable(List<GeoCoordinatesKeyframe>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = harpPluginsRasterBindingslistofSdkAnimationGeocoordinateskeyframeToFfi(value);
  final result = _harpPluginsRasterBindingslistofSdkAnimationGeocoordinateskeyframeCreateHandleNullable(_handle);
  harpPluginsRasterBindingslistofSdkAnimationGeocoordinateskeyframeReleaseFfiHandle(_handle);
  return result;
}

List<GeoCoordinatesKeyframe>? harpPluginsRasterBindingslistofSdkAnimationGeocoordinateskeyframeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _harpPluginsRasterBindingslistofSdkAnimationGeocoordinateskeyframeGetValueNullable(handle);
  final result = harpPluginsRasterBindingslistofSdkAnimationGeocoordinateskeyframeFromFfi(_handle);
  harpPluginsRasterBindingslistofSdkAnimationGeocoordinateskeyframeReleaseFfiHandle(_handle);
  return result;
}

void harpPluginsRasterBindingslistofSdkAnimationGeocoordinateskeyframeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _harpPluginsRasterBindingslistofSdkAnimationGeocoordinateskeyframeReleaseHandleNullable(handle);

final _harpPluginsRasterBindingslistofSdkAnimationGeoorientationkeyframeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_GeoOrientationKeyframe_create_handle'));
final _harpPluginsRasterBindingslistofSdkAnimationGeoorientationkeyframeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_GeoOrientationKeyframe_release_handle'));
final _harpPluginsRasterBindingslistofSdkAnimationGeoorientationkeyframeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_GeoOrientationKeyframe_insert'));
final _harpPluginsRasterBindingslistofSdkAnimationGeoorientationkeyframeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_GeoOrientationKeyframe_iterator'));
final _harpPluginsRasterBindingslistofSdkAnimationGeoorientationkeyframeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_GeoOrientationKeyframe_iterator_release_handle'));
final _harpPluginsRasterBindingslistofSdkAnimationGeoorientationkeyframeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_GeoOrientationKeyframe_iterator_is_valid'));
final _harpPluginsRasterBindingslistofSdkAnimationGeoorientationkeyframeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_GeoOrientationKeyframe_iterator_increment'));
final _harpPluginsRasterBindingslistofSdkAnimationGeoorientationkeyframeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_GeoOrientationKeyframe_iterator_get'));

Pointer<Void> harpPluginsRasterBindingslistofSdkAnimationGeoorientationkeyframeToFfi(List<GeoOrientationKeyframe> value) {
  final _result = _harpPluginsRasterBindingslistofSdkAnimationGeoorientationkeyframeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkAnimationGeoorientationkeyframeToFfi(element);
    _harpPluginsRasterBindingslistofSdkAnimationGeoorientationkeyframeInsert(_result, _elementHandle);
    sdkAnimationGeoorientationkeyframeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoOrientationKeyframe> harpPluginsRasterBindingslistofSdkAnimationGeoorientationkeyframeFromFfi(Pointer<Void> handle) {
  final result = List<GeoOrientationKeyframe>.empty(growable: true);
  final _iteratorHandle = _harpPluginsRasterBindingslistofSdkAnimationGeoorientationkeyframeIterator(handle);
  while (_harpPluginsRasterBindingslistofSdkAnimationGeoorientationkeyframeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _harpPluginsRasterBindingslistofSdkAnimationGeoorientationkeyframeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkAnimationGeoorientationkeyframeFromFfi(_elementHandle));
    } finally {
      sdkAnimationGeoorientationkeyframeReleaseFfiHandle(_elementHandle);
    }
    _harpPluginsRasterBindingslistofSdkAnimationGeoorientationkeyframeIteratorIncrement(_iteratorHandle);
  }
  _harpPluginsRasterBindingslistofSdkAnimationGeoorientationkeyframeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void harpPluginsRasterBindingslistofSdkAnimationGeoorientationkeyframeReleaseFfiHandle(Pointer<Void> handle) => _harpPluginsRasterBindingslistofSdkAnimationGeoorientationkeyframeReleaseHandle(handle);

final _harpPluginsRasterBindingslistofSdkAnimationGeoorientationkeyframeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_GeoOrientationKeyframe_create_handle_nullable'));
final _harpPluginsRasterBindingslistofSdkAnimationGeoorientationkeyframeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_GeoOrientationKeyframe_release_handle_nullable'));
final _harpPluginsRasterBindingslistofSdkAnimationGeoorientationkeyframeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_GeoOrientationKeyframe_get_value_nullable'));

Pointer<Void> harpPluginsRasterBindingslistofSdkAnimationGeoorientationkeyframeToFfiNullable(List<GeoOrientationKeyframe>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = harpPluginsRasterBindingslistofSdkAnimationGeoorientationkeyframeToFfi(value);
  final result = _harpPluginsRasterBindingslistofSdkAnimationGeoorientationkeyframeCreateHandleNullable(_handle);
  harpPluginsRasterBindingslistofSdkAnimationGeoorientationkeyframeReleaseFfiHandle(_handle);
  return result;
}

List<GeoOrientationKeyframe>? harpPluginsRasterBindingslistofSdkAnimationGeoorientationkeyframeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _harpPluginsRasterBindingslistofSdkAnimationGeoorientationkeyframeGetValueNullable(handle);
  final result = harpPluginsRasterBindingslistofSdkAnimationGeoorientationkeyframeFromFfi(_handle);
  harpPluginsRasterBindingslistofSdkAnimationGeoorientationkeyframeReleaseFfiHandle(_handle);
  return result;
}

void harpPluginsRasterBindingslistofSdkAnimationGeoorientationkeyframeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _harpPluginsRasterBindingslistofSdkAnimationGeoorientationkeyframeReleaseHandleNullable(handle);

final _harpPluginsRasterBindingslistofSdkAnimationPoint2dkeyframeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_Point2DKeyframe_create_handle'));
final _harpPluginsRasterBindingslistofSdkAnimationPoint2dkeyframeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_Point2DKeyframe_release_handle'));
final _harpPluginsRasterBindingslistofSdkAnimationPoint2dkeyframeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_Point2DKeyframe_insert'));
final _harpPluginsRasterBindingslistofSdkAnimationPoint2dkeyframeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_Point2DKeyframe_iterator'));
final _harpPluginsRasterBindingslistofSdkAnimationPoint2dkeyframeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_Point2DKeyframe_iterator_release_handle'));
final _harpPluginsRasterBindingslistofSdkAnimationPoint2dkeyframeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_Point2DKeyframe_iterator_is_valid'));
final _harpPluginsRasterBindingslistofSdkAnimationPoint2dkeyframeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_Point2DKeyframe_iterator_increment'));
final _harpPluginsRasterBindingslistofSdkAnimationPoint2dkeyframeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_Point2DKeyframe_iterator_get'));

Pointer<Void> harpPluginsRasterBindingslistofSdkAnimationPoint2dkeyframeToFfi(List<Point2DKeyframe> value) {
  final _result = _harpPluginsRasterBindingslistofSdkAnimationPoint2dkeyframeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkAnimationPoint2dkeyframeToFfi(element);
    _harpPluginsRasterBindingslistofSdkAnimationPoint2dkeyframeInsert(_result, _elementHandle);
    sdkAnimationPoint2dkeyframeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Point2DKeyframe> harpPluginsRasterBindingslistofSdkAnimationPoint2dkeyframeFromFfi(Pointer<Void> handle) {
  final result = List<Point2DKeyframe>.empty(growable: true);
  final _iteratorHandle = _harpPluginsRasterBindingslistofSdkAnimationPoint2dkeyframeIterator(handle);
  while (_harpPluginsRasterBindingslistofSdkAnimationPoint2dkeyframeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _harpPluginsRasterBindingslistofSdkAnimationPoint2dkeyframeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkAnimationPoint2dkeyframeFromFfi(_elementHandle));
    } finally {
      sdkAnimationPoint2dkeyframeReleaseFfiHandle(_elementHandle);
    }
    _harpPluginsRasterBindingslistofSdkAnimationPoint2dkeyframeIteratorIncrement(_iteratorHandle);
  }
  _harpPluginsRasterBindingslistofSdkAnimationPoint2dkeyframeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void harpPluginsRasterBindingslistofSdkAnimationPoint2dkeyframeReleaseFfiHandle(Pointer<Void> handle) => _harpPluginsRasterBindingslistofSdkAnimationPoint2dkeyframeReleaseHandle(handle);

final _harpPluginsRasterBindingslistofSdkAnimationPoint2dkeyframeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_Point2DKeyframe_create_handle_nullable'));
final _harpPluginsRasterBindingslistofSdkAnimationPoint2dkeyframeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_Point2DKeyframe_release_handle_nullable'));
final _harpPluginsRasterBindingslistofSdkAnimationPoint2dkeyframeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_Point2DKeyframe_get_value_nullable'));

Pointer<Void> harpPluginsRasterBindingslistofSdkAnimationPoint2dkeyframeToFfiNullable(List<Point2DKeyframe>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = harpPluginsRasterBindingslistofSdkAnimationPoint2dkeyframeToFfi(value);
  final result = _harpPluginsRasterBindingslistofSdkAnimationPoint2dkeyframeCreateHandleNullable(_handle);
  harpPluginsRasterBindingslistofSdkAnimationPoint2dkeyframeReleaseFfiHandle(_handle);
  return result;
}

List<Point2DKeyframe>? harpPluginsRasterBindingslistofSdkAnimationPoint2dkeyframeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _harpPluginsRasterBindingslistofSdkAnimationPoint2dkeyframeGetValueNullable(handle);
  final result = harpPluginsRasterBindingslistofSdkAnimationPoint2dkeyframeFromFfi(_handle);
  harpPluginsRasterBindingslistofSdkAnimationPoint2dkeyframeReleaseFfiHandle(_handle);
  return result;
}

void harpPluginsRasterBindingslistofSdkAnimationPoint2dkeyframeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _harpPluginsRasterBindingslistofSdkAnimationPoint2dkeyframeReleaseHandleNullable(handle);

final _harpPluginsRasterBindingslistofSdkAnimationScalarkeyframeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_ScalarKeyframe_create_handle'));
final _harpPluginsRasterBindingslistofSdkAnimationScalarkeyframeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_ScalarKeyframe_release_handle'));
final _harpPluginsRasterBindingslistofSdkAnimationScalarkeyframeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_ScalarKeyframe_insert'));
final _harpPluginsRasterBindingslistofSdkAnimationScalarkeyframeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_ScalarKeyframe_iterator'));
final _harpPluginsRasterBindingslistofSdkAnimationScalarkeyframeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_ScalarKeyframe_iterator_release_handle'));
final _harpPluginsRasterBindingslistofSdkAnimationScalarkeyframeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_ScalarKeyframe_iterator_is_valid'));
final _harpPluginsRasterBindingslistofSdkAnimationScalarkeyframeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_ScalarKeyframe_iterator_increment'));
final _harpPluginsRasterBindingslistofSdkAnimationScalarkeyframeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_ScalarKeyframe_iterator_get'));

Pointer<Void> harpPluginsRasterBindingslistofSdkAnimationScalarkeyframeToFfi(List<ScalarKeyframe> value) {
  final _result = _harpPluginsRasterBindingslistofSdkAnimationScalarkeyframeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkAnimationScalarkeyframeToFfi(element);
    _harpPluginsRasterBindingslistofSdkAnimationScalarkeyframeInsert(_result, _elementHandle);
    sdkAnimationScalarkeyframeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<ScalarKeyframe> harpPluginsRasterBindingslistofSdkAnimationScalarkeyframeFromFfi(Pointer<Void> handle) {
  final result = List<ScalarKeyframe>.empty(growable: true);
  final _iteratorHandle = _harpPluginsRasterBindingslistofSdkAnimationScalarkeyframeIterator(handle);
  while (_harpPluginsRasterBindingslistofSdkAnimationScalarkeyframeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _harpPluginsRasterBindingslistofSdkAnimationScalarkeyframeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkAnimationScalarkeyframeFromFfi(_elementHandle));
    } finally {
      sdkAnimationScalarkeyframeReleaseFfiHandle(_elementHandle);
    }
    _harpPluginsRasterBindingslistofSdkAnimationScalarkeyframeIteratorIncrement(_iteratorHandle);
  }
  _harpPluginsRasterBindingslistofSdkAnimationScalarkeyframeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void harpPluginsRasterBindingslistofSdkAnimationScalarkeyframeReleaseFfiHandle(Pointer<Void> handle) => _harpPluginsRasterBindingslistofSdkAnimationScalarkeyframeReleaseHandle(handle);

final _harpPluginsRasterBindingslistofSdkAnimationScalarkeyframeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_ScalarKeyframe_create_handle_nullable'));
final _harpPluginsRasterBindingslistofSdkAnimationScalarkeyframeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_ScalarKeyframe_release_handle_nullable'));
final _harpPluginsRasterBindingslistofSdkAnimationScalarkeyframeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_animation_ScalarKeyframe_get_value_nullable'));

Pointer<Void> harpPluginsRasterBindingslistofSdkAnimationScalarkeyframeToFfiNullable(List<ScalarKeyframe>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = harpPluginsRasterBindingslistofSdkAnimationScalarkeyframeToFfi(value);
  final result = _harpPluginsRasterBindingslistofSdkAnimationScalarkeyframeCreateHandleNullable(_handle);
  harpPluginsRasterBindingslistofSdkAnimationScalarkeyframeReleaseFfiHandle(_handle);
  return result;
}

List<ScalarKeyframe>? harpPluginsRasterBindingslistofSdkAnimationScalarkeyframeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _harpPluginsRasterBindingslistofSdkAnimationScalarkeyframeGetValueNullable(handle);
  final result = harpPluginsRasterBindingslistofSdkAnimationScalarkeyframeFromFfi(_handle);
  harpPluginsRasterBindingslistofSdkAnimationScalarkeyframeReleaseFfiHandle(_handle);
  return result;
}

void harpPluginsRasterBindingslistofSdkAnimationScalarkeyframeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _harpPluginsRasterBindingslistofSdkAnimationScalarkeyframeReleaseHandleNullable(handle);

final _harpPluginsRasterBindingslistofSdkCoreGeocoordinatesCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_core_GeoCoordinates_create_handle'));
final _harpPluginsRasterBindingslistofSdkCoreGeocoordinatesReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_core_GeoCoordinates_release_handle'));
final _harpPluginsRasterBindingslistofSdkCoreGeocoordinatesInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_core_GeoCoordinates_insert'));
final _harpPluginsRasterBindingslistofSdkCoreGeocoordinatesIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_core_GeoCoordinates_iterator'));
final _harpPluginsRasterBindingslistofSdkCoreGeocoordinatesIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_core_GeoCoordinates_iterator_release_handle'));
final _harpPluginsRasterBindingslistofSdkCoreGeocoordinatesIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_core_GeoCoordinates_iterator_is_valid'));
final _harpPluginsRasterBindingslistofSdkCoreGeocoordinatesIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_core_GeoCoordinates_iterator_increment'));
final _harpPluginsRasterBindingslistofSdkCoreGeocoordinatesIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_core_GeoCoordinates_iterator_get'));

Pointer<Void> harpPluginsRasterBindingslistofSdkCoreGeocoordinatesToFfi(List<GeoCoordinates> value) {
  final _result = _harpPluginsRasterBindingslistofSdkCoreGeocoordinatesCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreGeocoordinatesToFfi(element);
    _harpPluginsRasterBindingslistofSdkCoreGeocoordinatesInsert(_result, _elementHandle);
    sdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoCoordinates> harpPluginsRasterBindingslistofSdkCoreGeocoordinatesFromFfi(Pointer<Void> handle) {
  final result = List<GeoCoordinates>.empty(growable: true);
  final _iteratorHandle = _harpPluginsRasterBindingslistofSdkCoreGeocoordinatesIterator(handle);
  while (_harpPluginsRasterBindingslistofSdkCoreGeocoordinatesIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _harpPluginsRasterBindingslistofSdkCoreGeocoordinatesIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreGeocoordinatesFromFfi(_elementHandle));
    } finally {
      sdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
    }
    _harpPluginsRasterBindingslistofSdkCoreGeocoordinatesIteratorIncrement(_iteratorHandle);
  }
  _harpPluginsRasterBindingslistofSdkCoreGeocoordinatesIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void harpPluginsRasterBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(Pointer<Void> handle) => _harpPluginsRasterBindingslistofSdkCoreGeocoordinatesReleaseHandle(handle);

final _harpPluginsRasterBindingslistofSdkCoreGeocoordinatesCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_core_GeoCoordinates_create_handle_nullable'));
final _harpPluginsRasterBindingslistofSdkCoreGeocoordinatesReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_core_GeoCoordinates_release_handle_nullable'));
final _harpPluginsRasterBindingslistofSdkCoreGeocoordinatesGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_core_GeoCoordinates_get_value_nullable'));

Pointer<Void> harpPluginsRasterBindingslistofSdkCoreGeocoordinatesToFfiNullable(List<GeoCoordinates>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = harpPluginsRasterBindingslistofSdkCoreGeocoordinatesToFfi(value);
  final result = _harpPluginsRasterBindingslistofSdkCoreGeocoordinatesCreateHandleNullable(_handle);
  harpPluginsRasterBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

List<GeoCoordinates>? harpPluginsRasterBindingslistofSdkCoreGeocoordinatesFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _harpPluginsRasterBindingslistofSdkCoreGeocoordinatesGetValueNullable(handle);
  final result = harpPluginsRasterBindingslistofSdkCoreGeocoordinatesFromFfi(_handle);
  harpPluginsRasterBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

void harpPluginsRasterBindingslistofSdkCoreGeocoordinatesReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _harpPluginsRasterBindingslistofSdkCoreGeocoordinatesReleaseHandleNullable(handle);

final _harpPluginsRasterBindingslistofSdkMapviewMapcamerakeyframetrackCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_create_handle'));
final _harpPluginsRasterBindingslistofSdkMapviewMapcamerakeyframetrackReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_release_handle'));
final _harpPluginsRasterBindingslistofSdkMapviewMapcamerakeyframetrackInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_insert'));
final _harpPluginsRasterBindingslistofSdkMapviewMapcamerakeyframetrackIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_iterator'));
final _harpPluginsRasterBindingslistofSdkMapviewMapcamerakeyframetrackIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_iterator_release_handle'));
final _harpPluginsRasterBindingslistofSdkMapviewMapcamerakeyframetrackIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_iterator_is_valid'));
final _harpPluginsRasterBindingslistofSdkMapviewMapcamerakeyframetrackIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_iterator_increment'));
final _harpPluginsRasterBindingslistofSdkMapviewMapcamerakeyframetrackIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_iterator_get'));

Pointer<Void> harpPluginsRasterBindingslistofSdkMapviewMapcamerakeyframetrackToFfi(List<MapCameraKeyframeTrack> value) {
  final _result = _harpPluginsRasterBindingslistofSdkMapviewMapcamerakeyframetrackCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkMapviewMapcamerakeyframetrackToFfi(element);
    _harpPluginsRasterBindingslistofSdkMapviewMapcamerakeyframetrackInsert(_result, _elementHandle);
    sdkMapviewMapcamerakeyframetrackReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<MapCameraKeyframeTrack> harpPluginsRasterBindingslistofSdkMapviewMapcamerakeyframetrackFromFfi(Pointer<Void> handle) {
  final result = List<MapCameraKeyframeTrack>.empty(growable: true);
  final _iteratorHandle = _harpPluginsRasterBindingslistofSdkMapviewMapcamerakeyframetrackIterator(handle);
  while (_harpPluginsRasterBindingslistofSdkMapviewMapcamerakeyframetrackIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _harpPluginsRasterBindingslistofSdkMapviewMapcamerakeyframetrackIteratorGet(_iteratorHandle);
    try {
      result.add(sdkMapviewMapcamerakeyframetrackFromFfi(_elementHandle));
    } finally {
      sdkMapviewMapcamerakeyframetrackReleaseFfiHandle(_elementHandle);
    }
    _harpPluginsRasterBindingslistofSdkMapviewMapcamerakeyframetrackIteratorIncrement(_iteratorHandle);
  }
  _harpPluginsRasterBindingslistofSdkMapviewMapcamerakeyframetrackIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void harpPluginsRasterBindingslistofSdkMapviewMapcamerakeyframetrackReleaseFfiHandle(Pointer<Void> handle) => _harpPluginsRasterBindingslistofSdkMapviewMapcamerakeyframetrackReleaseHandle(handle);

final _harpPluginsRasterBindingslistofSdkMapviewMapcamerakeyframetrackCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_create_handle_nullable'));
final _harpPluginsRasterBindingslistofSdkMapviewMapcamerakeyframetrackReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_release_handle_nullable'));
final _harpPluginsRasterBindingslistofSdkMapviewMapcamerakeyframetrackGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_get_value_nullable'));

Pointer<Void> harpPluginsRasterBindingslistofSdkMapviewMapcamerakeyframetrackToFfiNullable(List<MapCameraKeyframeTrack>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = harpPluginsRasterBindingslistofSdkMapviewMapcamerakeyframetrackToFfi(value);
  final result = _harpPluginsRasterBindingslistofSdkMapviewMapcamerakeyframetrackCreateHandleNullable(_handle);
  harpPluginsRasterBindingslistofSdkMapviewMapcamerakeyframetrackReleaseFfiHandle(_handle);
  return result;
}

List<MapCameraKeyframeTrack>? harpPluginsRasterBindingslistofSdkMapviewMapcamerakeyframetrackFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _harpPluginsRasterBindingslistofSdkMapviewMapcamerakeyframetrackGetValueNullable(handle);
  final result = harpPluginsRasterBindingslistofSdkMapviewMapcamerakeyframetrackFromFfi(_handle);
  harpPluginsRasterBindingslistofSdkMapviewMapcamerakeyframetrackReleaseFfiHandle(_handle);
  return result;
}

void harpPluginsRasterBindingslistofSdkMapviewMapcamerakeyframetrackReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _harpPluginsRasterBindingslistofSdkMapviewMapcamerakeyframetrackReleaseHandleNullable(handle);

final _harpPluginsRasterBindingslistofSdkMapviewMapmarkerCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapMarker_create_handle'));
final _harpPluginsRasterBindingslistofSdkMapviewMapmarkerReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapMarker_release_handle'));
final _harpPluginsRasterBindingslistofSdkMapviewMapmarkerInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapMarker_insert'));
final _harpPluginsRasterBindingslistofSdkMapviewMapmarkerIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapMarker_iterator'));
final _harpPluginsRasterBindingslistofSdkMapviewMapmarkerIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapMarker_iterator_release_handle'));
final _harpPluginsRasterBindingslistofSdkMapviewMapmarkerIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapMarker_iterator_is_valid'));
final _harpPluginsRasterBindingslistofSdkMapviewMapmarkerIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapMarker_iterator_increment'));
final _harpPluginsRasterBindingslistofSdkMapviewMapmarkerIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapMarker_iterator_get'));

Pointer<Void> harpPluginsRasterBindingslistofSdkMapviewMapmarkerToFfi(List<MapMarker> value) {
  final _result = _harpPluginsRasterBindingslistofSdkMapviewMapmarkerCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkMapviewMapmarkerToFfi(element);
    _harpPluginsRasterBindingslistofSdkMapviewMapmarkerInsert(_result, _elementHandle);
    sdkMapviewMapmarkerReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<MapMarker> harpPluginsRasterBindingslistofSdkMapviewMapmarkerFromFfi(Pointer<Void> handle) {
  final result = List<MapMarker>.empty(growable: true);
  final _iteratorHandle = _harpPluginsRasterBindingslistofSdkMapviewMapmarkerIterator(handle);
  while (_harpPluginsRasterBindingslistofSdkMapviewMapmarkerIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _harpPluginsRasterBindingslistofSdkMapviewMapmarkerIteratorGet(_iteratorHandle);
    try {
      result.add(sdkMapviewMapmarkerFromFfi(_elementHandle));
    } finally {
      sdkMapviewMapmarkerReleaseFfiHandle(_elementHandle);
    }
    _harpPluginsRasterBindingslistofSdkMapviewMapmarkerIteratorIncrement(_iteratorHandle);
  }
  _harpPluginsRasterBindingslistofSdkMapviewMapmarkerIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void harpPluginsRasterBindingslistofSdkMapviewMapmarkerReleaseFfiHandle(Pointer<Void> handle) => _harpPluginsRasterBindingslistofSdkMapviewMapmarkerReleaseHandle(handle);

final _harpPluginsRasterBindingslistofSdkMapviewMapmarkerCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapMarker_create_handle_nullable'));
final _harpPluginsRasterBindingslistofSdkMapviewMapmarkerReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapMarker_release_handle_nullable'));
final _harpPluginsRasterBindingslistofSdkMapviewMapmarkerGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsListOf_sdk_mapview_MapMarker_get_value_nullable'));

Pointer<Void> harpPluginsRasterBindingslistofSdkMapviewMapmarkerToFfiNullable(List<MapMarker>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = harpPluginsRasterBindingslistofSdkMapviewMapmarkerToFfi(value);
  final result = _harpPluginsRasterBindingslistofSdkMapviewMapmarkerCreateHandleNullable(_handle);
  harpPluginsRasterBindingslistofSdkMapviewMapmarkerReleaseFfiHandle(_handle);
  return result;
}

List<MapMarker>? harpPluginsRasterBindingslistofSdkMapviewMapmarkerFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _harpPluginsRasterBindingslistofSdkMapviewMapmarkerGetValueNullable(handle);
  final result = harpPluginsRasterBindingslistofSdkMapviewMapmarkerFromFfi(_handle);
  harpPluginsRasterBindingslistofSdkMapviewMapmarkerReleaseFfiHandle(_handle);
  return result;
}

void harpPluginsRasterBindingslistofSdkMapviewMapmarkerReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _harpPluginsRasterBindingslistofSdkMapviewMapmarkerReleaseHandleNullable(handle);

final _harpPluginsRasterBindingsmapofStringToStringCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_harp_plugins_raster_bindingsMapOf_String_to_String_create_handle'));
final _harpPluginsRasterBindingsmapofStringToStringReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsMapOf_String_to_String_release_handle'));
final _harpPluginsRasterBindingsmapofStringToStringPut = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>, Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsMapOf_String_to_String_put'));
final _harpPluginsRasterBindingsmapofStringToStringIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsMapOf_String_to_String_iterator'));
final _harpPluginsRasterBindingsmapofStringToStringIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsMapOf_String_to_String_iterator_release_handle'));
final _harpPluginsRasterBindingsmapofStringToStringIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsMapOf_String_to_String_iterator_is_valid'));
final _harpPluginsRasterBindingsmapofStringToStringIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsMapOf_String_to_String_iterator_increment'));
final _harpPluginsRasterBindingsmapofStringToStringIteratorGetKey = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsMapOf_String_to_String_iterator_get_key'));
final _harpPluginsRasterBindingsmapofStringToStringIteratorGetValue = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_plugins_raster_bindingsMapOf_String_to_String_iterator_get_value'));

Pointer<Void> harpPluginsRasterBindingsmapofStringToStringToFfi(Map<String, String> value) {
  final _result = _harpPluginsRasterBindingsmapofStringToStringCreateHandle();
  for (final entry in value.entries) {
    final _keyHandle = stringToFfi(entry.key);
    final _valueHandle = stringToFfi(entry.value);
    _harpPluginsRasterBindingsmapofStringToStringPut(_result, _keyHandle, _valueHandle);
    stringReleaseFfiHandle(_keyHandle);
    stringReleaseFfiHandle(_valueHandle);
  }
  return _result;
}

Map<String, String> harpPluginsRasterBindingsmapofStringToStringFromFfi(Pointer<Void> handle) {
  final result = Map<String, String>();
  final _iteratorHandle = _harpPluginsRasterBindingsmapofStringToStringIterator(handle);
  while (_harpPluginsRasterBindingsmapofStringToStringIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _keyHandle = _harpPluginsRasterBindingsmapofStringToStringIteratorGetKey(_iteratorHandle);
    final _valueHandle = _harpPluginsRasterBindingsmapofStringToStringIteratorGetValue(_iteratorHandle);
    try {
      result[stringFromFfi(_keyHandle)] =
        stringFromFfi(_valueHandle);
    } finally {
      stringReleaseFfiHandle(_keyHandle);
      stringReleaseFfiHandle(_valueHandle);
    }
    _harpPluginsRasterBindingsmapofStringToStringIteratorIncrement(_iteratorHandle);
  }
  _harpPluginsRasterBindingsmapofStringToStringIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void harpPluginsRasterBindingsmapofStringToStringReleaseFfiHandle(Pointer<Void> handle) => _harpPluginsRasterBindingsmapofStringToStringReleaseHandle(handle);

final _harpPluginsRasterBindingsmapofStringToStringCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsMapOf_String_to_String_create_handle_nullable'));
final _harpPluginsRasterBindingsmapofStringToStringReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsMapOf_String_to_String_release_handle_nullable'));
final _harpPluginsRasterBindingsmapofStringToStringGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_plugins_raster_bindingsMapOf_String_to_String_get_value_nullable'));

Pointer<Void> harpPluginsRasterBindingsmapofStringToStringToFfiNullable(Map<String, String>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = harpPluginsRasterBindingsmapofStringToStringToFfi(value);
  final result = _harpPluginsRasterBindingsmapofStringToStringCreateHandleNullable(_handle);
  harpPluginsRasterBindingsmapofStringToStringReleaseFfiHandle(_handle);
  return result;
}

Map<String, String>? harpPluginsRasterBindingsmapofStringToStringFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _harpPluginsRasterBindingsmapofStringToStringGetValueNullable(handle);
  final result = harpPluginsRasterBindingsmapofStringToStringFromFfi(_handle);
  harpPluginsRasterBindingsmapofStringToStringReleaseFfiHandle(_handle);
  return result;
}

void harpPluginsRasterBindingsmapofStringToStringReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _harpPluginsRasterBindingsmapofStringToStringReleaseHandleNullable(handle);


// Copyright (c) 2019-2022 HERE Global B.V. and its affiliate(s).
// All rights reserved.
// This software and other materials contain proprietary information
// controlled by HERE and are protected by applicable copyright legislation.
// Any use and utilization of this software and other materials and
// disclosure to any third parties is conditional upon having a separate
// agreement with HERE for the access, use, utilization or disclosure of this
// software. In the absence of such agreement, the use of the software is not
// allowed.
//














final _harpSdkBindingslistofSdkAnimationAnchor2dkeyframeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_harp_sdk_bindingsListOf_sdk_animation_Anchor2DKeyframe_create_handle'));
final _harpSdkBindingslistofSdkAnimationAnchor2dkeyframeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_animation_Anchor2DKeyframe_release_handle'));
final _harpSdkBindingslistofSdkAnimationAnchor2dkeyframeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_animation_Anchor2DKeyframe_insert'));
final _harpSdkBindingslistofSdkAnimationAnchor2dkeyframeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_animation_Anchor2DKeyframe_iterator'));
final _harpSdkBindingslistofSdkAnimationAnchor2dkeyframeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_animation_Anchor2DKeyframe_iterator_release_handle'));
final _harpSdkBindingslistofSdkAnimationAnchor2dkeyframeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_animation_Anchor2DKeyframe_iterator_is_valid'));
final _harpSdkBindingslistofSdkAnimationAnchor2dkeyframeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_animation_Anchor2DKeyframe_iterator_increment'));
final _harpSdkBindingslistofSdkAnimationAnchor2dkeyframeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_animation_Anchor2DKeyframe_iterator_get'));

Pointer<Void> harpSdkBindingslistofSdkAnimationAnchor2dkeyframeToFfi(List<Anchor2DKeyframe> value) {
  final _result = _harpSdkBindingslistofSdkAnimationAnchor2dkeyframeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkAnimationAnchor2dkeyframeToFfi(element);
    _harpSdkBindingslistofSdkAnimationAnchor2dkeyframeInsert(_result, _elementHandle);
    sdkAnimationAnchor2dkeyframeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Anchor2DKeyframe> harpSdkBindingslistofSdkAnimationAnchor2dkeyframeFromFfi(Pointer<Void> handle) {
  final result = List<Anchor2DKeyframe>.empty(growable: true);
  final _iteratorHandle = _harpSdkBindingslistofSdkAnimationAnchor2dkeyframeIterator(handle);
  while (_harpSdkBindingslistofSdkAnimationAnchor2dkeyframeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _harpSdkBindingslistofSdkAnimationAnchor2dkeyframeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkAnimationAnchor2dkeyframeFromFfi(_elementHandle));
    } finally {
      sdkAnimationAnchor2dkeyframeReleaseFfiHandle(_elementHandle);
    }
    _harpSdkBindingslistofSdkAnimationAnchor2dkeyframeIteratorIncrement(_iteratorHandle);
  }
  _harpSdkBindingslistofSdkAnimationAnchor2dkeyframeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void harpSdkBindingslistofSdkAnimationAnchor2dkeyframeReleaseFfiHandle(Pointer<Void> handle) => _harpSdkBindingslistofSdkAnimationAnchor2dkeyframeReleaseHandle(handle);

final _harpSdkBindingslistofSdkAnimationAnchor2dkeyframeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_animation_Anchor2DKeyframe_create_handle_nullable'));
final _harpSdkBindingslistofSdkAnimationAnchor2dkeyframeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_animation_Anchor2DKeyframe_release_handle_nullable'));
final _harpSdkBindingslistofSdkAnimationAnchor2dkeyframeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_animation_Anchor2DKeyframe_get_value_nullable'));

Pointer<Void> harpSdkBindingslistofSdkAnimationAnchor2dkeyframeToFfiNullable(List<Anchor2DKeyframe>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = harpSdkBindingslistofSdkAnimationAnchor2dkeyframeToFfi(value);
  final result = _harpSdkBindingslistofSdkAnimationAnchor2dkeyframeCreateHandleNullable(_handle);
  harpSdkBindingslistofSdkAnimationAnchor2dkeyframeReleaseFfiHandle(_handle);
  return result;
}

List<Anchor2DKeyframe>? harpSdkBindingslistofSdkAnimationAnchor2dkeyframeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _harpSdkBindingslistofSdkAnimationAnchor2dkeyframeGetValueNullable(handle);
  final result = harpSdkBindingslistofSdkAnimationAnchor2dkeyframeFromFfi(_handle);
  harpSdkBindingslistofSdkAnimationAnchor2dkeyframeReleaseFfiHandle(_handle);
  return result;
}

void harpSdkBindingslistofSdkAnimationAnchor2dkeyframeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _harpSdkBindingslistofSdkAnimationAnchor2dkeyframeReleaseHandleNullable(handle);

final _harpSdkBindingslistofSdkAnimationGeocoordinateskeyframeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_harp_sdk_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_create_handle'));
final _harpSdkBindingslistofSdkAnimationGeocoordinateskeyframeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_release_handle'));
final _harpSdkBindingslistofSdkAnimationGeocoordinateskeyframeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_insert'));
final _harpSdkBindingslistofSdkAnimationGeocoordinateskeyframeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_iterator'));
final _harpSdkBindingslistofSdkAnimationGeocoordinateskeyframeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_iterator_release_handle'));
final _harpSdkBindingslistofSdkAnimationGeocoordinateskeyframeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_iterator_is_valid'));
final _harpSdkBindingslistofSdkAnimationGeocoordinateskeyframeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_iterator_increment'));
final _harpSdkBindingslistofSdkAnimationGeocoordinateskeyframeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_iterator_get'));

Pointer<Void> harpSdkBindingslistofSdkAnimationGeocoordinateskeyframeToFfi(List<GeoCoordinatesKeyframe> value) {
  final _result = _harpSdkBindingslistofSdkAnimationGeocoordinateskeyframeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkAnimationGeocoordinateskeyframeToFfi(element);
    _harpSdkBindingslistofSdkAnimationGeocoordinateskeyframeInsert(_result, _elementHandle);
    sdkAnimationGeocoordinateskeyframeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoCoordinatesKeyframe> harpSdkBindingslistofSdkAnimationGeocoordinateskeyframeFromFfi(Pointer<Void> handle) {
  final result = List<GeoCoordinatesKeyframe>.empty(growable: true);
  final _iteratorHandle = _harpSdkBindingslistofSdkAnimationGeocoordinateskeyframeIterator(handle);
  while (_harpSdkBindingslistofSdkAnimationGeocoordinateskeyframeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _harpSdkBindingslistofSdkAnimationGeocoordinateskeyframeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkAnimationGeocoordinateskeyframeFromFfi(_elementHandle));
    } finally {
      sdkAnimationGeocoordinateskeyframeReleaseFfiHandle(_elementHandle);
    }
    _harpSdkBindingslistofSdkAnimationGeocoordinateskeyframeIteratorIncrement(_iteratorHandle);
  }
  _harpSdkBindingslistofSdkAnimationGeocoordinateskeyframeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void harpSdkBindingslistofSdkAnimationGeocoordinateskeyframeReleaseFfiHandle(Pointer<Void> handle) => _harpSdkBindingslistofSdkAnimationGeocoordinateskeyframeReleaseHandle(handle);

final _harpSdkBindingslistofSdkAnimationGeocoordinateskeyframeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_create_handle_nullable'));
final _harpSdkBindingslistofSdkAnimationGeocoordinateskeyframeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_release_handle_nullable'));
final _harpSdkBindingslistofSdkAnimationGeocoordinateskeyframeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_get_value_nullable'));

Pointer<Void> harpSdkBindingslistofSdkAnimationGeocoordinateskeyframeToFfiNullable(List<GeoCoordinatesKeyframe>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = harpSdkBindingslistofSdkAnimationGeocoordinateskeyframeToFfi(value);
  final result = _harpSdkBindingslistofSdkAnimationGeocoordinateskeyframeCreateHandleNullable(_handle);
  harpSdkBindingslistofSdkAnimationGeocoordinateskeyframeReleaseFfiHandle(_handle);
  return result;
}

List<GeoCoordinatesKeyframe>? harpSdkBindingslistofSdkAnimationGeocoordinateskeyframeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _harpSdkBindingslistofSdkAnimationGeocoordinateskeyframeGetValueNullable(handle);
  final result = harpSdkBindingslistofSdkAnimationGeocoordinateskeyframeFromFfi(_handle);
  harpSdkBindingslistofSdkAnimationGeocoordinateskeyframeReleaseFfiHandle(_handle);
  return result;
}

void harpSdkBindingslistofSdkAnimationGeocoordinateskeyframeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _harpSdkBindingslistofSdkAnimationGeocoordinateskeyframeReleaseHandleNullable(handle);

final _harpSdkBindingslistofSdkAnimationGeoorientationkeyframeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_harp_sdk_bindingsListOf_sdk_animation_GeoOrientationKeyframe_create_handle'));
final _harpSdkBindingslistofSdkAnimationGeoorientationkeyframeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_animation_GeoOrientationKeyframe_release_handle'));
final _harpSdkBindingslistofSdkAnimationGeoorientationkeyframeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_animation_GeoOrientationKeyframe_insert'));
final _harpSdkBindingslistofSdkAnimationGeoorientationkeyframeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_animation_GeoOrientationKeyframe_iterator'));
final _harpSdkBindingslistofSdkAnimationGeoorientationkeyframeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_animation_GeoOrientationKeyframe_iterator_release_handle'));
final _harpSdkBindingslistofSdkAnimationGeoorientationkeyframeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_animation_GeoOrientationKeyframe_iterator_is_valid'));
final _harpSdkBindingslistofSdkAnimationGeoorientationkeyframeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_animation_GeoOrientationKeyframe_iterator_increment'));
final _harpSdkBindingslistofSdkAnimationGeoorientationkeyframeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_animation_GeoOrientationKeyframe_iterator_get'));

Pointer<Void> harpSdkBindingslistofSdkAnimationGeoorientationkeyframeToFfi(List<GeoOrientationKeyframe> value) {
  final _result = _harpSdkBindingslistofSdkAnimationGeoorientationkeyframeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkAnimationGeoorientationkeyframeToFfi(element);
    _harpSdkBindingslistofSdkAnimationGeoorientationkeyframeInsert(_result, _elementHandle);
    sdkAnimationGeoorientationkeyframeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoOrientationKeyframe> harpSdkBindingslistofSdkAnimationGeoorientationkeyframeFromFfi(Pointer<Void> handle) {
  final result = List<GeoOrientationKeyframe>.empty(growable: true);
  final _iteratorHandle = _harpSdkBindingslistofSdkAnimationGeoorientationkeyframeIterator(handle);
  while (_harpSdkBindingslistofSdkAnimationGeoorientationkeyframeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _harpSdkBindingslistofSdkAnimationGeoorientationkeyframeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkAnimationGeoorientationkeyframeFromFfi(_elementHandle));
    } finally {
      sdkAnimationGeoorientationkeyframeReleaseFfiHandle(_elementHandle);
    }
    _harpSdkBindingslistofSdkAnimationGeoorientationkeyframeIteratorIncrement(_iteratorHandle);
  }
  _harpSdkBindingslistofSdkAnimationGeoorientationkeyframeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void harpSdkBindingslistofSdkAnimationGeoorientationkeyframeReleaseFfiHandle(Pointer<Void> handle) => _harpSdkBindingslistofSdkAnimationGeoorientationkeyframeReleaseHandle(handle);

final _harpSdkBindingslistofSdkAnimationGeoorientationkeyframeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_animation_GeoOrientationKeyframe_create_handle_nullable'));
final _harpSdkBindingslistofSdkAnimationGeoorientationkeyframeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_animation_GeoOrientationKeyframe_release_handle_nullable'));
final _harpSdkBindingslistofSdkAnimationGeoorientationkeyframeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_animation_GeoOrientationKeyframe_get_value_nullable'));

Pointer<Void> harpSdkBindingslistofSdkAnimationGeoorientationkeyframeToFfiNullable(List<GeoOrientationKeyframe>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = harpSdkBindingslistofSdkAnimationGeoorientationkeyframeToFfi(value);
  final result = _harpSdkBindingslistofSdkAnimationGeoorientationkeyframeCreateHandleNullable(_handle);
  harpSdkBindingslistofSdkAnimationGeoorientationkeyframeReleaseFfiHandle(_handle);
  return result;
}

List<GeoOrientationKeyframe>? harpSdkBindingslistofSdkAnimationGeoorientationkeyframeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _harpSdkBindingslistofSdkAnimationGeoorientationkeyframeGetValueNullable(handle);
  final result = harpSdkBindingslistofSdkAnimationGeoorientationkeyframeFromFfi(_handle);
  harpSdkBindingslistofSdkAnimationGeoorientationkeyframeReleaseFfiHandle(_handle);
  return result;
}

void harpSdkBindingslistofSdkAnimationGeoorientationkeyframeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _harpSdkBindingslistofSdkAnimationGeoorientationkeyframeReleaseHandleNullable(handle);

final _harpSdkBindingslistofSdkAnimationPoint2dkeyframeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_harp_sdk_bindingsListOf_sdk_animation_Point2DKeyframe_create_handle'));
final _harpSdkBindingslistofSdkAnimationPoint2dkeyframeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_animation_Point2DKeyframe_release_handle'));
final _harpSdkBindingslistofSdkAnimationPoint2dkeyframeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_animation_Point2DKeyframe_insert'));
final _harpSdkBindingslistofSdkAnimationPoint2dkeyframeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_animation_Point2DKeyframe_iterator'));
final _harpSdkBindingslistofSdkAnimationPoint2dkeyframeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_animation_Point2DKeyframe_iterator_release_handle'));
final _harpSdkBindingslistofSdkAnimationPoint2dkeyframeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_animation_Point2DKeyframe_iterator_is_valid'));
final _harpSdkBindingslistofSdkAnimationPoint2dkeyframeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_animation_Point2DKeyframe_iterator_increment'));
final _harpSdkBindingslistofSdkAnimationPoint2dkeyframeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_animation_Point2DKeyframe_iterator_get'));

Pointer<Void> harpSdkBindingslistofSdkAnimationPoint2dkeyframeToFfi(List<Point2DKeyframe> value) {
  final _result = _harpSdkBindingslistofSdkAnimationPoint2dkeyframeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkAnimationPoint2dkeyframeToFfi(element);
    _harpSdkBindingslistofSdkAnimationPoint2dkeyframeInsert(_result, _elementHandle);
    sdkAnimationPoint2dkeyframeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Point2DKeyframe> harpSdkBindingslistofSdkAnimationPoint2dkeyframeFromFfi(Pointer<Void> handle) {
  final result = List<Point2DKeyframe>.empty(growable: true);
  final _iteratorHandle = _harpSdkBindingslistofSdkAnimationPoint2dkeyframeIterator(handle);
  while (_harpSdkBindingslistofSdkAnimationPoint2dkeyframeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _harpSdkBindingslistofSdkAnimationPoint2dkeyframeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkAnimationPoint2dkeyframeFromFfi(_elementHandle));
    } finally {
      sdkAnimationPoint2dkeyframeReleaseFfiHandle(_elementHandle);
    }
    _harpSdkBindingslistofSdkAnimationPoint2dkeyframeIteratorIncrement(_iteratorHandle);
  }
  _harpSdkBindingslistofSdkAnimationPoint2dkeyframeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void harpSdkBindingslistofSdkAnimationPoint2dkeyframeReleaseFfiHandle(Pointer<Void> handle) => _harpSdkBindingslistofSdkAnimationPoint2dkeyframeReleaseHandle(handle);

final _harpSdkBindingslistofSdkAnimationPoint2dkeyframeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_animation_Point2DKeyframe_create_handle_nullable'));
final _harpSdkBindingslistofSdkAnimationPoint2dkeyframeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_animation_Point2DKeyframe_release_handle_nullable'));
final _harpSdkBindingslistofSdkAnimationPoint2dkeyframeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_animation_Point2DKeyframe_get_value_nullable'));

Pointer<Void> harpSdkBindingslistofSdkAnimationPoint2dkeyframeToFfiNullable(List<Point2DKeyframe>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = harpSdkBindingslistofSdkAnimationPoint2dkeyframeToFfi(value);
  final result = _harpSdkBindingslistofSdkAnimationPoint2dkeyframeCreateHandleNullable(_handle);
  harpSdkBindingslistofSdkAnimationPoint2dkeyframeReleaseFfiHandle(_handle);
  return result;
}

List<Point2DKeyframe>? harpSdkBindingslistofSdkAnimationPoint2dkeyframeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _harpSdkBindingslistofSdkAnimationPoint2dkeyframeGetValueNullable(handle);
  final result = harpSdkBindingslistofSdkAnimationPoint2dkeyframeFromFfi(_handle);
  harpSdkBindingslistofSdkAnimationPoint2dkeyframeReleaseFfiHandle(_handle);
  return result;
}

void harpSdkBindingslistofSdkAnimationPoint2dkeyframeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _harpSdkBindingslistofSdkAnimationPoint2dkeyframeReleaseHandleNullable(handle);

final _harpSdkBindingslistofSdkAnimationScalarkeyframeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_harp_sdk_bindingsListOf_sdk_animation_ScalarKeyframe_create_handle'));
final _harpSdkBindingslistofSdkAnimationScalarkeyframeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_animation_ScalarKeyframe_release_handle'));
final _harpSdkBindingslistofSdkAnimationScalarkeyframeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_animation_ScalarKeyframe_insert'));
final _harpSdkBindingslistofSdkAnimationScalarkeyframeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_animation_ScalarKeyframe_iterator'));
final _harpSdkBindingslistofSdkAnimationScalarkeyframeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_animation_ScalarKeyframe_iterator_release_handle'));
final _harpSdkBindingslistofSdkAnimationScalarkeyframeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_animation_ScalarKeyframe_iterator_is_valid'));
final _harpSdkBindingslistofSdkAnimationScalarkeyframeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_animation_ScalarKeyframe_iterator_increment'));
final _harpSdkBindingslistofSdkAnimationScalarkeyframeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_animation_ScalarKeyframe_iterator_get'));

Pointer<Void> harpSdkBindingslistofSdkAnimationScalarkeyframeToFfi(List<ScalarKeyframe> value) {
  final _result = _harpSdkBindingslistofSdkAnimationScalarkeyframeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkAnimationScalarkeyframeToFfi(element);
    _harpSdkBindingslistofSdkAnimationScalarkeyframeInsert(_result, _elementHandle);
    sdkAnimationScalarkeyframeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<ScalarKeyframe> harpSdkBindingslistofSdkAnimationScalarkeyframeFromFfi(Pointer<Void> handle) {
  final result = List<ScalarKeyframe>.empty(growable: true);
  final _iteratorHandle = _harpSdkBindingslistofSdkAnimationScalarkeyframeIterator(handle);
  while (_harpSdkBindingslistofSdkAnimationScalarkeyframeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _harpSdkBindingslistofSdkAnimationScalarkeyframeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkAnimationScalarkeyframeFromFfi(_elementHandle));
    } finally {
      sdkAnimationScalarkeyframeReleaseFfiHandle(_elementHandle);
    }
    _harpSdkBindingslistofSdkAnimationScalarkeyframeIteratorIncrement(_iteratorHandle);
  }
  _harpSdkBindingslistofSdkAnimationScalarkeyframeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void harpSdkBindingslistofSdkAnimationScalarkeyframeReleaseFfiHandle(Pointer<Void> handle) => _harpSdkBindingslistofSdkAnimationScalarkeyframeReleaseHandle(handle);

final _harpSdkBindingslistofSdkAnimationScalarkeyframeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_animation_ScalarKeyframe_create_handle_nullable'));
final _harpSdkBindingslistofSdkAnimationScalarkeyframeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_animation_ScalarKeyframe_release_handle_nullable'));
final _harpSdkBindingslistofSdkAnimationScalarkeyframeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_animation_ScalarKeyframe_get_value_nullable'));

Pointer<Void> harpSdkBindingslistofSdkAnimationScalarkeyframeToFfiNullable(List<ScalarKeyframe>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = harpSdkBindingslistofSdkAnimationScalarkeyframeToFfi(value);
  final result = _harpSdkBindingslistofSdkAnimationScalarkeyframeCreateHandleNullable(_handle);
  harpSdkBindingslistofSdkAnimationScalarkeyframeReleaseFfiHandle(_handle);
  return result;
}

List<ScalarKeyframe>? harpSdkBindingslistofSdkAnimationScalarkeyframeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _harpSdkBindingslistofSdkAnimationScalarkeyframeGetValueNullable(handle);
  final result = harpSdkBindingslistofSdkAnimationScalarkeyframeFromFfi(_handle);
  harpSdkBindingslistofSdkAnimationScalarkeyframeReleaseFfiHandle(_handle);
  return result;
}

void harpSdkBindingslistofSdkAnimationScalarkeyframeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _harpSdkBindingslistofSdkAnimationScalarkeyframeReleaseHandleNullable(handle);

final _harpSdkBindingslistofSdkCoreGeocoordinatesCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_harp_sdk_bindingsListOf_sdk_core_GeoCoordinates_create_handle'));
final _harpSdkBindingslistofSdkCoreGeocoordinatesReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_core_GeoCoordinates_release_handle'));
final _harpSdkBindingslistofSdkCoreGeocoordinatesInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_core_GeoCoordinates_insert'));
final _harpSdkBindingslistofSdkCoreGeocoordinatesIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_core_GeoCoordinates_iterator'));
final _harpSdkBindingslistofSdkCoreGeocoordinatesIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_core_GeoCoordinates_iterator_release_handle'));
final _harpSdkBindingslistofSdkCoreGeocoordinatesIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_core_GeoCoordinates_iterator_is_valid'));
final _harpSdkBindingslistofSdkCoreGeocoordinatesIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_core_GeoCoordinates_iterator_increment'));
final _harpSdkBindingslistofSdkCoreGeocoordinatesIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_core_GeoCoordinates_iterator_get'));

Pointer<Void> harpSdkBindingslistofSdkCoreGeocoordinatesToFfi(List<GeoCoordinates> value) {
  final _result = _harpSdkBindingslistofSdkCoreGeocoordinatesCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreGeocoordinatesToFfi(element);
    _harpSdkBindingslistofSdkCoreGeocoordinatesInsert(_result, _elementHandle);
    sdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoCoordinates> harpSdkBindingslistofSdkCoreGeocoordinatesFromFfi(Pointer<Void> handle) {
  final result = List<GeoCoordinates>.empty(growable: true);
  final _iteratorHandle = _harpSdkBindingslistofSdkCoreGeocoordinatesIterator(handle);
  while (_harpSdkBindingslistofSdkCoreGeocoordinatesIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _harpSdkBindingslistofSdkCoreGeocoordinatesIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreGeocoordinatesFromFfi(_elementHandle));
    } finally {
      sdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
    }
    _harpSdkBindingslistofSdkCoreGeocoordinatesIteratorIncrement(_iteratorHandle);
  }
  _harpSdkBindingslistofSdkCoreGeocoordinatesIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void harpSdkBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(Pointer<Void> handle) => _harpSdkBindingslistofSdkCoreGeocoordinatesReleaseHandle(handle);

final _harpSdkBindingslistofSdkCoreGeocoordinatesCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_core_GeoCoordinates_create_handle_nullable'));
final _harpSdkBindingslistofSdkCoreGeocoordinatesReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_core_GeoCoordinates_release_handle_nullable'));
final _harpSdkBindingslistofSdkCoreGeocoordinatesGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_core_GeoCoordinates_get_value_nullable'));

Pointer<Void> harpSdkBindingslistofSdkCoreGeocoordinatesToFfiNullable(List<GeoCoordinates>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = harpSdkBindingslistofSdkCoreGeocoordinatesToFfi(value);
  final result = _harpSdkBindingslistofSdkCoreGeocoordinatesCreateHandleNullable(_handle);
  harpSdkBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

List<GeoCoordinates>? harpSdkBindingslistofSdkCoreGeocoordinatesFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _harpSdkBindingslistofSdkCoreGeocoordinatesGetValueNullable(handle);
  final result = harpSdkBindingslistofSdkCoreGeocoordinatesFromFfi(_handle);
  harpSdkBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

void harpSdkBindingslistofSdkCoreGeocoordinatesReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _harpSdkBindingslistofSdkCoreGeocoordinatesReleaseHandleNullable(handle);

final _harpSdkBindingslistofSdkMapviewMapcamerakeyframetrackCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_create_handle'));
final _harpSdkBindingslistofSdkMapviewMapcamerakeyframetrackReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_release_handle'));
final _harpSdkBindingslistofSdkMapviewMapcamerakeyframetrackInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_insert'));
final _harpSdkBindingslistofSdkMapviewMapcamerakeyframetrackIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_iterator'));
final _harpSdkBindingslistofSdkMapviewMapcamerakeyframetrackIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_iterator_release_handle'));
final _harpSdkBindingslistofSdkMapviewMapcamerakeyframetrackIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_iterator_is_valid'));
final _harpSdkBindingslistofSdkMapviewMapcamerakeyframetrackIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_iterator_increment'));
final _harpSdkBindingslistofSdkMapviewMapcamerakeyframetrackIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_iterator_get'));

Pointer<Void> harpSdkBindingslistofSdkMapviewMapcamerakeyframetrackToFfi(List<MapCameraKeyframeTrack> value) {
  final _result = _harpSdkBindingslistofSdkMapviewMapcamerakeyframetrackCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkMapviewMapcamerakeyframetrackToFfi(element);
    _harpSdkBindingslistofSdkMapviewMapcamerakeyframetrackInsert(_result, _elementHandle);
    sdkMapviewMapcamerakeyframetrackReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<MapCameraKeyframeTrack> harpSdkBindingslistofSdkMapviewMapcamerakeyframetrackFromFfi(Pointer<Void> handle) {
  final result = List<MapCameraKeyframeTrack>.empty(growable: true);
  final _iteratorHandle = _harpSdkBindingslistofSdkMapviewMapcamerakeyframetrackIterator(handle);
  while (_harpSdkBindingslistofSdkMapviewMapcamerakeyframetrackIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _harpSdkBindingslistofSdkMapviewMapcamerakeyframetrackIteratorGet(_iteratorHandle);
    try {
      result.add(sdkMapviewMapcamerakeyframetrackFromFfi(_elementHandle));
    } finally {
      sdkMapviewMapcamerakeyframetrackReleaseFfiHandle(_elementHandle);
    }
    _harpSdkBindingslistofSdkMapviewMapcamerakeyframetrackIteratorIncrement(_iteratorHandle);
  }
  _harpSdkBindingslistofSdkMapviewMapcamerakeyframetrackIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void harpSdkBindingslistofSdkMapviewMapcamerakeyframetrackReleaseFfiHandle(Pointer<Void> handle) => _harpSdkBindingslistofSdkMapviewMapcamerakeyframetrackReleaseHandle(handle);

final _harpSdkBindingslistofSdkMapviewMapcamerakeyframetrackCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_create_handle_nullable'));
final _harpSdkBindingslistofSdkMapviewMapcamerakeyframetrackReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_release_handle_nullable'));
final _harpSdkBindingslistofSdkMapviewMapcamerakeyframetrackGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_get_value_nullable'));

Pointer<Void> harpSdkBindingslistofSdkMapviewMapcamerakeyframetrackToFfiNullable(List<MapCameraKeyframeTrack>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = harpSdkBindingslistofSdkMapviewMapcamerakeyframetrackToFfi(value);
  final result = _harpSdkBindingslistofSdkMapviewMapcamerakeyframetrackCreateHandleNullable(_handle);
  harpSdkBindingslistofSdkMapviewMapcamerakeyframetrackReleaseFfiHandle(_handle);
  return result;
}

List<MapCameraKeyframeTrack>? harpSdkBindingslistofSdkMapviewMapcamerakeyframetrackFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _harpSdkBindingslistofSdkMapviewMapcamerakeyframetrackGetValueNullable(handle);
  final result = harpSdkBindingslistofSdkMapviewMapcamerakeyframetrackFromFfi(_handle);
  harpSdkBindingslistofSdkMapviewMapcamerakeyframetrackReleaseFfiHandle(_handle);
  return result;
}

void harpSdkBindingslistofSdkMapviewMapcamerakeyframetrackReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _harpSdkBindingslistofSdkMapviewMapcamerakeyframetrackReleaseHandleNullable(handle);

final _harpSdkBindingslistofSdkMapviewMapmarkerCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapMarker_create_handle'));
final _harpSdkBindingslistofSdkMapviewMapmarkerReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapMarker_release_handle'));
final _harpSdkBindingslistofSdkMapviewMapmarkerInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapMarker_insert'));
final _harpSdkBindingslistofSdkMapviewMapmarkerIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapMarker_iterator'));
final _harpSdkBindingslistofSdkMapviewMapmarkerIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapMarker_iterator_release_handle'));
final _harpSdkBindingslistofSdkMapviewMapmarkerIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapMarker_iterator_is_valid'));
final _harpSdkBindingslistofSdkMapviewMapmarkerIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapMarker_iterator_increment'));
final _harpSdkBindingslistofSdkMapviewMapmarkerIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapMarker_iterator_get'));

Pointer<Void> harpSdkBindingslistofSdkMapviewMapmarkerToFfi(List<MapMarker> value) {
  final _result = _harpSdkBindingslistofSdkMapviewMapmarkerCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkMapviewMapmarkerToFfi(element);
    _harpSdkBindingslistofSdkMapviewMapmarkerInsert(_result, _elementHandle);
    sdkMapviewMapmarkerReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<MapMarker> harpSdkBindingslistofSdkMapviewMapmarkerFromFfi(Pointer<Void> handle) {
  final result = List<MapMarker>.empty(growable: true);
  final _iteratorHandle = _harpSdkBindingslistofSdkMapviewMapmarkerIterator(handle);
  while (_harpSdkBindingslistofSdkMapviewMapmarkerIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _harpSdkBindingslistofSdkMapviewMapmarkerIteratorGet(_iteratorHandle);
    try {
      result.add(sdkMapviewMapmarkerFromFfi(_elementHandle));
    } finally {
      sdkMapviewMapmarkerReleaseFfiHandle(_elementHandle);
    }
    _harpSdkBindingslistofSdkMapviewMapmarkerIteratorIncrement(_iteratorHandle);
  }
  _harpSdkBindingslistofSdkMapviewMapmarkerIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void harpSdkBindingslistofSdkMapviewMapmarkerReleaseFfiHandle(Pointer<Void> handle) => _harpSdkBindingslistofSdkMapviewMapmarkerReleaseHandle(handle);

final _harpSdkBindingslistofSdkMapviewMapmarkerCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapMarker_create_handle_nullable'));
final _harpSdkBindingslistofSdkMapviewMapmarkerReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapMarker_release_handle_nullable'));
final _harpSdkBindingslistofSdkMapviewMapmarkerGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_harp_sdk_bindingsListOf_sdk_mapview_MapMarker_get_value_nullable'));

Pointer<Void> harpSdkBindingslistofSdkMapviewMapmarkerToFfiNullable(List<MapMarker>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = harpSdkBindingslistofSdkMapviewMapmarkerToFfi(value);
  final result = _harpSdkBindingslistofSdkMapviewMapmarkerCreateHandleNullable(_handle);
  harpSdkBindingslistofSdkMapviewMapmarkerReleaseFfiHandle(_handle);
  return result;
}

List<MapMarker>? harpSdkBindingslistofSdkMapviewMapmarkerFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _harpSdkBindingslistofSdkMapviewMapmarkerGetValueNullable(handle);
  final result = harpSdkBindingslistofSdkMapviewMapmarkerFromFfi(_handle);
  harpSdkBindingslistofSdkMapviewMapmarkerReleaseFfiHandle(_handle);
  return result;
}

void harpSdkBindingslistofSdkMapviewMapmarkerReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _harpSdkBindingslistofSdkMapviewMapmarkerReleaseHandleNullable(handle);


// Copyright (c) 2018-2022 HERE Global B.V. and its affiliate(s).
// All rights reserved.
//
// This software and other materials contain proprietary information
// controlled by HERE and are protected by applicable copyright legislation.
// Any use and utilization of this software and other materials and
// disclosure to any third parties is conditional upon having a separate
// agreement with HERE for the access, use, utilization or disclosure of this
// software. In the absence of such agreement, the use of the software is not
// allowed.
//












final _heresdkConsentBindingslistofLocaleCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_consent_bindingsListOf_Locale_create_handle'));
final _heresdkConsentBindingslistofLocaleReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_consent_bindingsListOf_Locale_release_handle'));
final _heresdkConsentBindingslistofLocaleInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_consent_bindingsListOf_Locale_insert'));
final _heresdkConsentBindingslistofLocaleIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_consent_bindingsListOf_Locale_iterator'));
final _heresdkConsentBindingslistofLocaleIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_consent_bindingsListOf_Locale_iterator_release_handle'));
final _heresdkConsentBindingslistofLocaleIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_consent_bindingsListOf_Locale_iterator_is_valid'));
final _heresdkConsentBindingslistofLocaleIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_consent_bindingsListOf_Locale_iterator_increment'));
final _heresdkConsentBindingslistofLocaleIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_consent_bindingsListOf_Locale_iterator_get'));

Pointer<Void> heresdkConsentBindingslistofLocaleToFfi(List<Locale> value) {
  final _result = _heresdkConsentBindingslistofLocaleCreateHandle();
  for (final element in value) {
    final _elementHandle = localeToFfi(element);
    _heresdkConsentBindingslistofLocaleInsert(_result, _elementHandle);
    localeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Locale> heresdkConsentBindingslistofLocaleFromFfi(Pointer<Void> handle) {
  final result = List<Locale>.empty(growable: true);
  final _iteratorHandle = _heresdkConsentBindingslistofLocaleIterator(handle);
  while (_heresdkConsentBindingslistofLocaleIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkConsentBindingslistofLocaleIteratorGet(_iteratorHandle);
    try {
      result.add(localeFromFfi(_elementHandle));
    } finally {
      localeReleaseFfiHandle(_elementHandle);
    }
    _heresdkConsentBindingslistofLocaleIteratorIncrement(_iteratorHandle);
  }
  _heresdkConsentBindingslistofLocaleIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkConsentBindingslistofLocaleReleaseFfiHandle(Pointer<Void> handle) => _heresdkConsentBindingslistofLocaleReleaseHandle(handle);

final _heresdkConsentBindingslistofLocaleCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_consent_bindingsListOf_Locale_create_handle_nullable'));
final _heresdkConsentBindingslistofLocaleReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_consent_bindingsListOf_Locale_release_handle_nullable'));
final _heresdkConsentBindingslistofLocaleGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_consent_bindingsListOf_Locale_get_value_nullable'));

Pointer<Void> heresdkConsentBindingslistofLocaleToFfiNullable(List<Locale>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkConsentBindingslistofLocaleToFfi(value);
  final result = _heresdkConsentBindingslistofLocaleCreateHandleNullable(_handle);
  heresdkConsentBindingslistofLocaleReleaseFfiHandle(_handle);
  return result;
}

List<Locale>? heresdkConsentBindingslistofLocaleFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkConsentBindingslistofLocaleGetValueNullable(handle);
  final result = heresdkConsentBindingslistofLocaleFromFfi(_handle);
  heresdkConsentBindingslistofLocaleReleaseFfiHandle(_handle);
  return result;
}

void heresdkConsentBindingslistofLocaleReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkConsentBindingslistofLocaleReleaseHandleNullable(handle);

final _heresdkConsentBindingslistofSdkCoreGeocoordinatesCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_consent_bindingsListOf_sdk_core_GeoCoordinates_create_handle'));
final _heresdkConsentBindingslistofSdkCoreGeocoordinatesReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_consent_bindingsListOf_sdk_core_GeoCoordinates_release_handle'));
final _heresdkConsentBindingslistofSdkCoreGeocoordinatesInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_consent_bindingsListOf_sdk_core_GeoCoordinates_insert'));
final _heresdkConsentBindingslistofSdkCoreGeocoordinatesIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_consent_bindingsListOf_sdk_core_GeoCoordinates_iterator'));
final _heresdkConsentBindingslistofSdkCoreGeocoordinatesIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_consent_bindingsListOf_sdk_core_GeoCoordinates_iterator_release_handle'));
final _heresdkConsentBindingslistofSdkCoreGeocoordinatesIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_consent_bindingsListOf_sdk_core_GeoCoordinates_iterator_is_valid'));
final _heresdkConsentBindingslistofSdkCoreGeocoordinatesIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_consent_bindingsListOf_sdk_core_GeoCoordinates_iterator_increment'));
final _heresdkConsentBindingslistofSdkCoreGeocoordinatesIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_consent_bindingsListOf_sdk_core_GeoCoordinates_iterator_get'));

Pointer<Void> heresdkConsentBindingslistofSdkCoreGeocoordinatesToFfi(List<GeoCoordinates> value) {
  final _result = _heresdkConsentBindingslistofSdkCoreGeocoordinatesCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreGeocoordinatesToFfi(element);
    _heresdkConsentBindingslistofSdkCoreGeocoordinatesInsert(_result, _elementHandle);
    sdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoCoordinates> heresdkConsentBindingslistofSdkCoreGeocoordinatesFromFfi(Pointer<Void> handle) {
  final result = List<GeoCoordinates>.empty(growable: true);
  final _iteratorHandle = _heresdkConsentBindingslistofSdkCoreGeocoordinatesIterator(handle);
  while (_heresdkConsentBindingslistofSdkCoreGeocoordinatesIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkConsentBindingslistofSdkCoreGeocoordinatesIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreGeocoordinatesFromFfi(_elementHandle));
    } finally {
      sdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
    }
    _heresdkConsentBindingslistofSdkCoreGeocoordinatesIteratorIncrement(_iteratorHandle);
  }
  _heresdkConsentBindingslistofSdkCoreGeocoordinatesIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkConsentBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(Pointer<Void> handle) => _heresdkConsentBindingslistofSdkCoreGeocoordinatesReleaseHandle(handle);

final _heresdkConsentBindingslistofSdkCoreGeocoordinatesCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_consent_bindingsListOf_sdk_core_GeoCoordinates_create_handle_nullable'));
final _heresdkConsentBindingslistofSdkCoreGeocoordinatesReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_consent_bindingsListOf_sdk_core_GeoCoordinates_release_handle_nullable'));
final _heresdkConsentBindingslistofSdkCoreGeocoordinatesGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_consent_bindingsListOf_sdk_core_GeoCoordinates_get_value_nullable'));

Pointer<Void> heresdkConsentBindingslistofSdkCoreGeocoordinatesToFfiNullable(List<GeoCoordinates>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkConsentBindingslistofSdkCoreGeocoordinatesToFfi(value);
  final result = _heresdkConsentBindingslistofSdkCoreGeocoordinatesCreateHandleNullable(_handle);
  heresdkConsentBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

List<GeoCoordinates>? heresdkConsentBindingslistofSdkCoreGeocoordinatesFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkConsentBindingslistofSdkCoreGeocoordinatesGetValueNullable(handle);
  final result = heresdkConsentBindingslistofSdkCoreGeocoordinatesFromFfi(_handle);
  heresdkConsentBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

void heresdkConsentBindingslistofSdkCoreGeocoordinatesReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkConsentBindingslistofSdkCoreGeocoordinatesReleaseHandleNullable(handle);

final _heresdkConsentBindingslistofSdkCoreLocalizedtextCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_consent_bindingsListOf_sdk_core_LocalizedText_create_handle'));
final _heresdkConsentBindingslistofSdkCoreLocalizedtextReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_consent_bindingsListOf_sdk_core_LocalizedText_release_handle'));
final _heresdkConsentBindingslistofSdkCoreLocalizedtextInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_consent_bindingsListOf_sdk_core_LocalizedText_insert'));
final _heresdkConsentBindingslistofSdkCoreLocalizedtextIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_consent_bindingsListOf_sdk_core_LocalizedText_iterator'));
final _heresdkConsentBindingslistofSdkCoreLocalizedtextIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_consent_bindingsListOf_sdk_core_LocalizedText_iterator_release_handle'));
final _heresdkConsentBindingslistofSdkCoreLocalizedtextIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_consent_bindingsListOf_sdk_core_LocalizedText_iterator_is_valid'));
final _heresdkConsentBindingslistofSdkCoreLocalizedtextIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_consent_bindingsListOf_sdk_core_LocalizedText_iterator_increment'));
final _heresdkConsentBindingslistofSdkCoreLocalizedtextIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_consent_bindingsListOf_sdk_core_LocalizedText_iterator_get'));

Pointer<Void> heresdkConsentBindingslistofSdkCoreLocalizedtextToFfi(List<LocalizedText> value) {
  final _result = _heresdkConsentBindingslistofSdkCoreLocalizedtextCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreLocalizedtextToFfi(element);
    _heresdkConsentBindingslistofSdkCoreLocalizedtextInsert(_result, _elementHandle);
    sdkCoreLocalizedtextReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<LocalizedText> heresdkConsentBindingslistofSdkCoreLocalizedtextFromFfi(Pointer<Void> handle) {
  final result = List<LocalizedText>.empty(growable: true);
  final _iteratorHandle = _heresdkConsentBindingslistofSdkCoreLocalizedtextIterator(handle);
  while (_heresdkConsentBindingslistofSdkCoreLocalizedtextIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkConsentBindingslistofSdkCoreLocalizedtextIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreLocalizedtextFromFfi(_elementHandle));
    } finally {
      sdkCoreLocalizedtextReleaseFfiHandle(_elementHandle);
    }
    _heresdkConsentBindingslistofSdkCoreLocalizedtextIteratorIncrement(_iteratorHandle);
  }
  _heresdkConsentBindingslistofSdkCoreLocalizedtextIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkConsentBindingslistofSdkCoreLocalizedtextReleaseFfiHandle(Pointer<Void> handle) => _heresdkConsentBindingslistofSdkCoreLocalizedtextReleaseHandle(handle);

final _heresdkConsentBindingslistofSdkCoreLocalizedtextCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_consent_bindingsListOf_sdk_core_LocalizedText_create_handle_nullable'));
final _heresdkConsentBindingslistofSdkCoreLocalizedtextReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_consent_bindingsListOf_sdk_core_LocalizedText_release_handle_nullable'));
final _heresdkConsentBindingslistofSdkCoreLocalizedtextGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_consent_bindingsListOf_sdk_core_LocalizedText_get_value_nullable'));

Pointer<Void> heresdkConsentBindingslistofSdkCoreLocalizedtextToFfiNullable(List<LocalizedText>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkConsentBindingslistofSdkCoreLocalizedtextToFfi(value);
  final result = _heresdkConsentBindingslistofSdkCoreLocalizedtextCreateHandleNullable(_handle);
  heresdkConsentBindingslistofSdkCoreLocalizedtextReleaseFfiHandle(_handle);
  return result;
}

List<LocalizedText>? heresdkConsentBindingslistofSdkCoreLocalizedtextFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkConsentBindingslistofSdkCoreLocalizedtextGetValueNullable(handle);
  final result = heresdkConsentBindingslistofSdkCoreLocalizedtextFromFfi(_handle);
  heresdkConsentBindingslistofSdkCoreLocalizedtextReleaseFfiHandle(_handle);
  return result;
}

void heresdkConsentBindingslistofSdkCoreLocalizedtextReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkConsentBindingslistofSdkCoreLocalizedtextReleaseHandleNullable(handle);

final _heresdkConsentBindingslistofSdkCoreEngineLayerconfigurationFeatureCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_consent_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_create_handle'));
final _heresdkConsentBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_consent_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_release_handle'));
final _heresdkConsentBindingslistofSdkCoreEngineLayerconfigurationFeatureInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_consent_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_insert'));
final _heresdkConsentBindingslistofSdkCoreEngineLayerconfigurationFeatureIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_consent_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator'));
final _heresdkConsentBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_consent_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator_release_handle'));
final _heresdkConsentBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_consent_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator_is_valid'));
final _heresdkConsentBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_consent_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator_increment'));
final _heresdkConsentBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_consent_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator_get'));

Pointer<Void> heresdkConsentBindingslistofSdkCoreEngineLayerconfigurationFeatureToFfi(List<LayerConfigurationFeature> value) {
  final _result = _heresdkConsentBindingslistofSdkCoreEngineLayerconfigurationFeatureCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreEngineLayerconfigurationFeatureToFfi(element);
    _heresdkConsentBindingslistofSdkCoreEngineLayerconfigurationFeatureInsert(_result, _elementHandle);
    sdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<LayerConfigurationFeature> heresdkConsentBindingslistofSdkCoreEngineLayerconfigurationFeatureFromFfi(Pointer<Void> handle) {
  final result = List<LayerConfigurationFeature>.empty(growable: true);
  final _iteratorHandle = _heresdkConsentBindingslistofSdkCoreEngineLayerconfigurationFeatureIterator(handle);
  while (_heresdkConsentBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkConsentBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreEngineLayerconfigurationFeatureFromFfi(_elementHandle));
    } finally {
      sdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(_elementHandle);
    }
    _heresdkConsentBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorIncrement(_iteratorHandle);
  }
  _heresdkConsentBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkConsentBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(Pointer<Void> handle) => _heresdkConsentBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseHandle(handle);

final _heresdkConsentBindingslistofSdkCoreEngineLayerconfigurationFeatureCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_consent_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_create_handle_nullable'));
final _heresdkConsentBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_consent_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_release_handle_nullable'));
final _heresdkConsentBindingslistofSdkCoreEngineLayerconfigurationFeatureGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_consent_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_get_value_nullable'));

Pointer<Void> heresdkConsentBindingslistofSdkCoreEngineLayerconfigurationFeatureToFfiNullable(List<LayerConfigurationFeature>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkConsentBindingslistofSdkCoreEngineLayerconfigurationFeatureToFfi(value);
  final result = _heresdkConsentBindingslistofSdkCoreEngineLayerconfigurationFeatureCreateHandleNullable(_handle);
  heresdkConsentBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(_handle);
  return result;
}

List<LayerConfigurationFeature>? heresdkConsentBindingslistofSdkCoreEngineLayerconfigurationFeatureFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkConsentBindingslistofSdkCoreEngineLayerconfigurationFeatureGetValueNullable(handle);
  final result = heresdkConsentBindingslistofSdkCoreEngineLayerconfigurationFeatureFromFfi(_handle);
  heresdkConsentBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(_handle);
  return result;
}

void heresdkConsentBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkConsentBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseHandleNullable(handle);

final _heresdkConsentBindingsmapofSdkCoreEngineEnginebaseurlToStringCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_consent_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_create_handle'));
final _heresdkConsentBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_consent_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_release_handle'));
final _heresdkConsentBindingsmapofSdkCoreEngineEnginebaseurlToStringPut = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32, Pointer<Void>),
    void Function(Pointer<Void>, int, Pointer<Void>)
  >('here_sdk_heresdk_consent_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_put'));
final _heresdkConsentBindingsmapofSdkCoreEngineEnginebaseurlToStringIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_consent_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_iterator'));
final _heresdkConsentBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_consent_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_iterator_release_handle'));
final _heresdkConsentBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_consent_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_iterator_is_valid'));
final _heresdkConsentBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_consent_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_iterator_increment'));
final _heresdkConsentBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorGetKey = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_consent_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_iterator_get_key'));
final _heresdkConsentBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorGetValue = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_consent_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_iterator_get_value'));

Pointer<Void> heresdkConsentBindingsmapofSdkCoreEngineEnginebaseurlToStringToFfi(Map<EngineBaseURL, String> value) {
  final _result = _heresdkConsentBindingsmapofSdkCoreEngineEnginebaseurlToStringCreateHandle();
  for (final entry in value.entries) {
    final _keyHandle = sdkCoreEngineEnginebaseurlToFfi(entry.key);
    final _valueHandle = stringToFfi(entry.value);
    _heresdkConsentBindingsmapofSdkCoreEngineEnginebaseurlToStringPut(_result, _keyHandle, _valueHandle);
    sdkCoreEngineEnginebaseurlReleaseFfiHandle(_keyHandle);
    stringReleaseFfiHandle(_valueHandle);
  }
  return _result;
}

Map<EngineBaseURL, String> heresdkConsentBindingsmapofSdkCoreEngineEnginebaseurlToStringFromFfi(Pointer<Void> handle) {
  final result = Map<EngineBaseURL, String>();
  final _iteratorHandle = _heresdkConsentBindingsmapofSdkCoreEngineEnginebaseurlToStringIterator(handle);
  while (_heresdkConsentBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _keyHandle = _heresdkConsentBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorGetKey(_iteratorHandle);
    final _valueHandle = _heresdkConsentBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorGetValue(_iteratorHandle);
    try {
      result[sdkCoreEngineEnginebaseurlFromFfi(_keyHandle)] =
        stringFromFfi(_valueHandle);
    } finally {
      sdkCoreEngineEnginebaseurlReleaseFfiHandle(_keyHandle);
      stringReleaseFfiHandle(_valueHandle);
    }
    _heresdkConsentBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorIncrement(_iteratorHandle);
  }
  _heresdkConsentBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkConsentBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseFfiHandle(Pointer<Void> handle) => _heresdkConsentBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseHandle(handle);

final _heresdkConsentBindingsmapofSdkCoreEngineEnginebaseurlToStringCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_consent_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_create_handle_nullable'));
final _heresdkConsentBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_consent_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_release_handle_nullable'));
final _heresdkConsentBindingsmapofSdkCoreEngineEnginebaseurlToStringGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_consent_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_get_value_nullable'));

Pointer<Void> heresdkConsentBindingsmapofSdkCoreEngineEnginebaseurlToStringToFfiNullable(Map<EngineBaseURL, String>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkConsentBindingsmapofSdkCoreEngineEnginebaseurlToStringToFfi(value);
  final result = _heresdkConsentBindingsmapofSdkCoreEngineEnginebaseurlToStringCreateHandleNullable(_handle);
  heresdkConsentBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseFfiHandle(_handle);
  return result;
}

Map<EngineBaseURL, String>? heresdkConsentBindingsmapofSdkCoreEngineEnginebaseurlToStringFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkConsentBindingsmapofSdkCoreEngineEnginebaseurlToStringGetValueNullable(handle);
  final result = heresdkConsentBindingsmapofSdkCoreEngineEnginebaseurlToStringFromFfi(_handle);
  heresdkConsentBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseFfiHandle(_handle);
  return result;
}

void heresdkConsentBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkConsentBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseHandleNullable(handle);


// Copyright (c) 2018-2022 HERE Global B.V. and its affiliate(s).
// All rights reserved.
//
// This software and other materials contain proprietary information
// controlled by HERE and are protected by applicable copyright legislation.
// Any use and utilization of this software and other materials and
// disclosure to any third parties is conditional upon having a separate
// agreement with HERE for the access, use, utilization or disclosure of this
// software. In the absence of such agreement, the use of the software is not
// allowed.
//












final _heresdkCoreBindingslistofLocaleCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_core_bindingsListOf_Locale_create_handle'));
final _heresdkCoreBindingslistofLocaleReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_core_bindingsListOf_Locale_release_handle'));
final _heresdkCoreBindingslistofLocaleInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_core_bindingsListOf_Locale_insert'));
final _heresdkCoreBindingslistofLocaleIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_core_bindingsListOf_Locale_iterator'));
final _heresdkCoreBindingslistofLocaleIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_core_bindingsListOf_Locale_iterator_release_handle'));
final _heresdkCoreBindingslistofLocaleIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_core_bindingsListOf_Locale_iterator_is_valid'));
final _heresdkCoreBindingslistofLocaleIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_core_bindingsListOf_Locale_iterator_increment'));
final _heresdkCoreBindingslistofLocaleIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_core_bindingsListOf_Locale_iterator_get'));

Pointer<Void> heresdkCoreBindingslistofLocaleToFfi(List<Locale> value) {
  final _result = _heresdkCoreBindingslistofLocaleCreateHandle();
  for (final element in value) {
    final _elementHandle = localeToFfi(element);
    _heresdkCoreBindingslistofLocaleInsert(_result, _elementHandle);
    localeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Locale> heresdkCoreBindingslistofLocaleFromFfi(Pointer<Void> handle) {
  final result = List<Locale>.empty(growable: true);
  final _iteratorHandle = _heresdkCoreBindingslistofLocaleIterator(handle);
  while (_heresdkCoreBindingslistofLocaleIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkCoreBindingslistofLocaleIteratorGet(_iteratorHandle);
    try {
      result.add(localeFromFfi(_elementHandle));
    } finally {
      localeReleaseFfiHandle(_elementHandle);
    }
    _heresdkCoreBindingslistofLocaleIteratorIncrement(_iteratorHandle);
  }
  _heresdkCoreBindingslistofLocaleIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkCoreBindingslistofLocaleReleaseFfiHandle(Pointer<Void> handle) => _heresdkCoreBindingslistofLocaleReleaseHandle(handle);

final _heresdkCoreBindingslistofLocaleCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_core_bindingsListOf_Locale_create_handle_nullable'));
final _heresdkCoreBindingslistofLocaleReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_core_bindingsListOf_Locale_release_handle_nullable'));
final _heresdkCoreBindingslistofLocaleGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_core_bindingsListOf_Locale_get_value_nullable'));

Pointer<Void> heresdkCoreBindingslistofLocaleToFfiNullable(List<Locale>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkCoreBindingslistofLocaleToFfi(value);
  final result = _heresdkCoreBindingslistofLocaleCreateHandleNullable(_handle);
  heresdkCoreBindingslistofLocaleReleaseFfiHandle(_handle);
  return result;
}

List<Locale>? heresdkCoreBindingslistofLocaleFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkCoreBindingslistofLocaleGetValueNullable(handle);
  final result = heresdkCoreBindingslistofLocaleFromFfi(_handle);
  heresdkCoreBindingslistofLocaleReleaseFfiHandle(_handle);
  return result;
}

void heresdkCoreBindingslistofLocaleReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkCoreBindingslistofLocaleReleaseHandleNullable(handle);

final _heresdkCoreBindingslistofSdkCoreGeocoordinatesCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_core_bindingsListOf_sdk_core_GeoCoordinates_create_handle'));
final _heresdkCoreBindingslistofSdkCoreGeocoordinatesReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_core_bindingsListOf_sdk_core_GeoCoordinates_release_handle'));
final _heresdkCoreBindingslistofSdkCoreGeocoordinatesInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_core_bindingsListOf_sdk_core_GeoCoordinates_insert'));
final _heresdkCoreBindingslistofSdkCoreGeocoordinatesIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_core_bindingsListOf_sdk_core_GeoCoordinates_iterator'));
final _heresdkCoreBindingslistofSdkCoreGeocoordinatesIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_core_bindingsListOf_sdk_core_GeoCoordinates_iterator_release_handle'));
final _heresdkCoreBindingslistofSdkCoreGeocoordinatesIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_core_bindingsListOf_sdk_core_GeoCoordinates_iterator_is_valid'));
final _heresdkCoreBindingslistofSdkCoreGeocoordinatesIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_core_bindingsListOf_sdk_core_GeoCoordinates_iterator_increment'));
final _heresdkCoreBindingslistofSdkCoreGeocoordinatesIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_core_bindingsListOf_sdk_core_GeoCoordinates_iterator_get'));

Pointer<Void> heresdkCoreBindingslistofSdkCoreGeocoordinatesToFfi(List<GeoCoordinates> value) {
  final _result = _heresdkCoreBindingslistofSdkCoreGeocoordinatesCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreGeocoordinatesToFfi(element);
    _heresdkCoreBindingslistofSdkCoreGeocoordinatesInsert(_result, _elementHandle);
    sdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoCoordinates> heresdkCoreBindingslistofSdkCoreGeocoordinatesFromFfi(Pointer<Void> handle) {
  final result = List<GeoCoordinates>.empty(growable: true);
  final _iteratorHandle = _heresdkCoreBindingslistofSdkCoreGeocoordinatesIterator(handle);
  while (_heresdkCoreBindingslistofSdkCoreGeocoordinatesIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkCoreBindingslistofSdkCoreGeocoordinatesIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreGeocoordinatesFromFfi(_elementHandle));
    } finally {
      sdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
    }
    _heresdkCoreBindingslistofSdkCoreGeocoordinatesIteratorIncrement(_iteratorHandle);
  }
  _heresdkCoreBindingslistofSdkCoreGeocoordinatesIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkCoreBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(Pointer<Void> handle) => _heresdkCoreBindingslistofSdkCoreGeocoordinatesReleaseHandle(handle);

final _heresdkCoreBindingslistofSdkCoreGeocoordinatesCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_core_bindingsListOf_sdk_core_GeoCoordinates_create_handle_nullable'));
final _heresdkCoreBindingslistofSdkCoreGeocoordinatesReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_core_bindingsListOf_sdk_core_GeoCoordinates_release_handle_nullable'));
final _heresdkCoreBindingslistofSdkCoreGeocoordinatesGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_core_bindingsListOf_sdk_core_GeoCoordinates_get_value_nullable'));

Pointer<Void> heresdkCoreBindingslistofSdkCoreGeocoordinatesToFfiNullable(List<GeoCoordinates>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkCoreBindingslistofSdkCoreGeocoordinatesToFfi(value);
  final result = _heresdkCoreBindingslistofSdkCoreGeocoordinatesCreateHandleNullable(_handle);
  heresdkCoreBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

List<GeoCoordinates>? heresdkCoreBindingslistofSdkCoreGeocoordinatesFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkCoreBindingslistofSdkCoreGeocoordinatesGetValueNullable(handle);
  final result = heresdkCoreBindingslistofSdkCoreGeocoordinatesFromFfi(_handle);
  heresdkCoreBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

void heresdkCoreBindingslistofSdkCoreGeocoordinatesReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkCoreBindingslistofSdkCoreGeocoordinatesReleaseHandleNullable(handle);

final _heresdkCoreBindingslistofSdkCoreLocalizedtextCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_core_bindingsListOf_sdk_core_LocalizedText_create_handle'));
final _heresdkCoreBindingslistofSdkCoreLocalizedtextReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_core_bindingsListOf_sdk_core_LocalizedText_release_handle'));
final _heresdkCoreBindingslistofSdkCoreLocalizedtextInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_core_bindingsListOf_sdk_core_LocalizedText_insert'));
final _heresdkCoreBindingslistofSdkCoreLocalizedtextIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_core_bindingsListOf_sdk_core_LocalizedText_iterator'));
final _heresdkCoreBindingslistofSdkCoreLocalizedtextIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_core_bindingsListOf_sdk_core_LocalizedText_iterator_release_handle'));
final _heresdkCoreBindingslistofSdkCoreLocalizedtextIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_core_bindingsListOf_sdk_core_LocalizedText_iterator_is_valid'));
final _heresdkCoreBindingslistofSdkCoreLocalizedtextIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_core_bindingsListOf_sdk_core_LocalizedText_iterator_increment'));
final _heresdkCoreBindingslistofSdkCoreLocalizedtextIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_core_bindingsListOf_sdk_core_LocalizedText_iterator_get'));

Pointer<Void> heresdkCoreBindingslistofSdkCoreLocalizedtextToFfi(List<LocalizedText> value) {
  final _result = _heresdkCoreBindingslistofSdkCoreLocalizedtextCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreLocalizedtextToFfi(element);
    _heresdkCoreBindingslistofSdkCoreLocalizedtextInsert(_result, _elementHandle);
    sdkCoreLocalizedtextReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<LocalizedText> heresdkCoreBindingslistofSdkCoreLocalizedtextFromFfi(Pointer<Void> handle) {
  final result = List<LocalizedText>.empty(growable: true);
  final _iteratorHandle = _heresdkCoreBindingslistofSdkCoreLocalizedtextIterator(handle);
  while (_heresdkCoreBindingslistofSdkCoreLocalizedtextIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkCoreBindingslistofSdkCoreLocalizedtextIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreLocalizedtextFromFfi(_elementHandle));
    } finally {
      sdkCoreLocalizedtextReleaseFfiHandle(_elementHandle);
    }
    _heresdkCoreBindingslistofSdkCoreLocalizedtextIteratorIncrement(_iteratorHandle);
  }
  _heresdkCoreBindingslistofSdkCoreLocalizedtextIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkCoreBindingslistofSdkCoreLocalizedtextReleaseFfiHandle(Pointer<Void> handle) => _heresdkCoreBindingslistofSdkCoreLocalizedtextReleaseHandle(handle);

final _heresdkCoreBindingslistofSdkCoreLocalizedtextCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_core_bindingsListOf_sdk_core_LocalizedText_create_handle_nullable'));
final _heresdkCoreBindingslistofSdkCoreLocalizedtextReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_core_bindingsListOf_sdk_core_LocalizedText_release_handle_nullable'));
final _heresdkCoreBindingslistofSdkCoreLocalizedtextGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_core_bindingsListOf_sdk_core_LocalizedText_get_value_nullable'));

Pointer<Void> heresdkCoreBindingslistofSdkCoreLocalizedtextToFfiNullable(List<LocalizedText>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkCoreBindingslistofSdkCoreLocalizedtextToFfi(value);
  final result = _heresdkCoreBindingslistofSdkCoreLocalizedtextCreateHandleNullable(_handle);
  heresdkCoreBindingslistofSdkCoreLocalizedtextReleaseFfiHandle(_handle);
  return result;
}

List<LocalizedText>? heresdkCoreBindingslistofSdkCoreLocalizedtextFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkCoreBindingslistofSdkCoreLocalizedtextGetValueNullable(handle);
  final result = heresdkCoreBindingslistofSdkCoreLocalizedtextFromFfi(_handle);
  heresdkCoreBindingslistofSdkCoreLocalizedtextReleaseFfiHandle(_handle);
  return result;
}

void heresdkCoreBindingslistofSdkCoreLocalizedtextReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkCoreBindingslistofSdkCoreLocalizedtextReleaseHandleNullable(handle);

final _heresdkCoreBindingslistofSdkCoreEngineLayerconfigurationFeatureCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_core_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_create_handle'));
final _heresdkCoreBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_core_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_release_handle'));
final _heresdkCoreBindingslistofSdkCoreEngineLayerconfigurationFeatureInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_core_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_insert'));
final _heresdkCoreBindingslistofSdkCoreEngineLayerconfigurationFeatureIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_core_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator'));
final _heresdkCoreBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_core_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator_release_handle'));
final _heresdkCoreBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_core_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator_is_valid'));
final _heresdkCoreBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_core_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator_increment'));
final _heresdkCoreBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_core_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator_get'));

Pointer<Void> heresdkCoreBindingslistofSdkCoreEngineLayerconfigurationFeatureToFfi(List<LayerConfigurationFeature> value) {
  final _result = _heresdkCoreBindingslistofSdkCoreEngineLayerconfigurationFeatureCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreEngineLayerconfigurationFeatureToFfi(element);
    _heresdkCoreBindingslistofSdkCoreEngineLayerconfigurationFeatureInsert(_result, _elementHandle);
    sdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<LayerConfigurationFeature> heresdkCoreBindingslistofSdkCoreEngineLayerconfigurationFeatureFromFfi(Pointer<Void> handle) {
  final result = List<LayerConfigurationFeature>.empty(growable: true);
  final _iteratorHandle = _heresdkCoreBindingslistofSdkCoreEngineLayerconfigurationFeatureIterator(handle);
  while (_heresdkCoreBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkCoreBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreEngineLayerconfigurationFeatureFromFfi(_elementHandle));
    } finally {
      sdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(_elementHandle);
    }
    _heresdkCoreBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorIncrement(_iteratorHandle);
  }
  _heresdkCoreBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkCoreBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(Pointer<Void> handle) => _heresdkCoreBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseHandle(handle);

final _heresdkCoreBindingslistofSdkCoreEngineLayerconfigurationFeatureCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_core_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_create_handle_nullable'));
final _heresdkCoreBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_core_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_release_handle_nullable'));
final _heresdkCoreBindingslistofSdkCoreEngineLayerconfigurationFeatureGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_core_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_get_value_nullable'));

Pointer<Void> heresdkCoreBindingslistofSdkCoreEngineLayerconfigurationFeatureToFfiNullable(List<LayerConfigurationFeature>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkCoreBindingslistofSdkCoreEngineLayerconfigurationFeatureToFfi(value);
  final result = _heresdkCoreBindingslistofSdkCoreEngineLayerconfigurationFeatureCreateHandleNullable(_handle);
  heresdkCoreBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(_handle);
  return result;
}

List<LayerConfigurationFeature>? heresdkCoreBindingslistofSdkCoreEngineLayerconfigurationFeatureFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkCoreBindingslistofSdkCoreEngineLayerconfigurationFeatureGetValueNullable(handle);
  final result = heresdkCoreBindingslistofSdkCoreEngineLayerconfigurationFeatureFromFfi(_handle);
  heresdkCoreBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(_handle);
  return result;
}

void heresdkCoreBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkCoreBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseHandleNullable(handle);

final _heresdkCoreBindingsmapofSdkCoreEngineEnginebaseurlToStringCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_core_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_create_handle'));
final _heresdkCoreBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_core_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_release_handle'));
final _heresdkCoreBindingsmapofSdkCoreEngineEnginebaseurlToStringPut = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32, Pointer<Void>),
    void Function(Pointer<Void>, int, Pointer<Void>)
  >('here_sdk_heresdk_core_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_put'));
final _heresdkCoreBindingsmapofSdkCoreEngineEnginebaseurlToStringIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_core_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_iterator'));
final _heresdkCoreBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_core_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_iterator_release_handle'));
final _heresdkCoreBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_core_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_iterator_is_valid'));
final _heresdkCoreBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_core_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_iterator_increment'));
final _heresdkCoreBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorGetKey = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_core_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_iterator_get_key'));
final _heresdkCoreBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorGetValue = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_core_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_iterator_get_value'));

Pointer<Void> heresdkCoreBindingsmapofSdkCoreEngineEnginebaseurlToStringToFfi(Map<EngineBaseURL, String> value) {
  final _result = _heresdkCoreBindingsmapofSdkCoreEngineEnginebaseurlToStringCreateHandle();
  for (final entry in value.entries) {
    final _keyHandle = sdkCoreEngineEnginebaseurlToFfi(entry.key);
    final _valueHandle = stringToFfi(entry.value);
    _heresdkCoreBindingsmapofSdkCoreEngineEnginebaseurlToStringPut(_result, _keyHandle, _valueHandle);
    sdkCoreEngineEnginebaseurlReleaseFfiHandle(_keyHandle);
    stringReleaseFfiHandle(_valueHandle);
  }
  return _result;
}

Map<EngineBaseURL, String> heresdkCoreBindingsmapofSdkCoreEngineEnginebaseurlToStringFromFfi(Pointer<Void> handle) {
  final result = Map<EngineBaseURL, String>();
  final _iteratorHandle = _heresdkCoreBindingsmapofSdkCoreEngineEnginebaseurlToStringIterator(handle);
  while (_heresdkCoreBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _keyHandle = _heresdkCoreBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorGetKey(_iteratorHandle);
    final _valueHandle = _heresdkCoreBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorGetValue(_iteratorHandle);
    try {
      result[sdkCoreEngineEnginebaseurlFromFfi(_keyHandle)] =
        stringFromFfi(_valueHandle);
    } finally {
      sdkCoreEngineEnginebaseurlReleaseFfiHandle(_keyHandle);
      stringReleaseFfiHandle(_valueHandle);
    }
    _heresdkCoreBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorIncrement(_iteratorHandle);
  }
  _heresdkCoreBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkCoreBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseFfiHandle(Pointer<Void> handle) => _heresdkCoreBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseHandle(handle);

final _heresdkCoreBindingsmapofSdkCoreEngineEnginebaseurlToStringCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_core_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_create_handle_nullable'));
final _heresdkCoreBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_core_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_release_handle_nullable'));
final _heresdkCoreBindingsmapofSdkCoreEngineEnginebaseurlToStringGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_core_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_get_value_nullable'));

Pointer<Void> heresdkCoreBindingsmapofSdkCoreEngineEnginebaseurlToStringToFfiNullable(Map<EngineBaseURL, String>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkCoreBindingsmapofSdkCoreEngineEnginebaseurlToStringToFfi(value);
  final result = _heresdkCoreBindingsmapofSdkCoreEngineEnginebaseurlToStringCreateHandleNullable(_handle);
  heresdkCoreBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseFfiHandle(_handle);
  return result;
}

Map<EngineBaseURL, String>? heresdkCoreBindingsmapofSdkCoreEngineEnginebaseurlToStringFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkCoreBindingsmapofSdkCoreEngineEnginebaseurlToStringGetValueNullable(handle);
  final result = heresdkCoreBindingsmapofSdkCoreEngineEnginebaseurlToStringFromFfi(_handle);
  heresdkCoreBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseFfiHandle(_handle);
  return result;
}

void heresdkCoreBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkCoreBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseHandleNullable(handle);


// Copyright (c) 2018-2022 HERE Global B.V. and its affiliate(s).
// All rights reserved.
//
// This software and other materials contain proprietary information
// controlled by HERE and are protected by applicable copyright legislation.
// Any use and utilization of this software and other materials and
// disclosure to any third parties is conditional upon having a separate
// agreement with HERE for the access, use, utilization or disclosure of this
// software. In the absence of such agreement, the use of the software is not
// allowed.
//












final _heresdkGesturesBindingslistofLocaleCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_gestures_bindingsListOf_Locale_create_handle'));
final _heresdkGesturesBindingslistofLocaleReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_gestures_bindingsListOf_Locale_release_handle'));
final _heresdkGesturesBindingslistofLocaleInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_gestures_bindingsListOf_Locale_insert'));
final _heresdkGesturesBindingslistofLocaleIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_gestures_bindingsListOf_Locale_iterator'));
final _heresdkGesturesBindingslistofLocaleIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_gestures_bindingsListOf_Locale_iterator_release_handle'));
final _heresdkGesturesBindingslistofLocaleIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_gestures_bindingsListOf_Locale_iterator_is_valid'));
final _heresdkGesturesBindingslistofLocaleIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_gestures_bindingsListOf_Locale_iterator_increment'));
final _heresdkGesturesBindingslistofLocaleIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_gestures_bindingsListOf_Locale_iterator_get'));

Pointer<Void> heresdkGesturesBindingslistofLocaleToFfi(List<Locale> value) {
  final _result = _heresdkGesturesBindingslistofLocaleCreateHandle();
  for (final element in value) {
    final _elementHandle = localeToFfi(element);
    _heresdkGesturesBindingslistofLocaleInsert(_result, _elementHandle);
    localeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Locale> heresdkGesturesBindingslistofLocaleFromFfi(Pointer<Void> handle) {
  final result = List<Locale>.empty(growable: true);
  final _iteratorHandle = _heresdkGesturesBindingslistofLocaleIterator(handle);
  while (_heresdkGesturesBindingslistofLocaleIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkGesturesBindingslistofLocaleIteratorGet(_iteratorHandle);
    try {
      result.add(localeFromFfi(_elementHandle));
    } finally {
      localeReleaseFfiHandle(_elementHandle);
    }
    _heresdkGesturesBindingslistofLocaleIteratorIncrement(_iteratorHandle);
  }
  _heresdkGesturesBindingslistofLocaleIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkGesturesBindingslistofLocaleReleaseFfiHandle(Pointer<Void> handle) => _heresdkGesturesBindingslistofLocaleReleaseHandle(handle);

final _heresdkGesturesBindingslistofLocaleCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_gestures_bindingsListOf_Locale_create_handle_nullable'));
final _heresdkGesturesBindingslistofLocaleReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_gestures_bindingsListOf_Locale_release_handle_nullable'));
final _heresdkGesturesBindingslistofLocaleGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_gestures_bindingsListOf_Locale_get_value_nullable'));

Pointer<Void> heresdkGesturesBindingslistofLocaleToFfiNullable(List<Locale>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkGesturesBindingslistofLocaleToFfi(value);
  final result = _heresdkGesturesBindingslistofLocaleCreateHandleNullable(_handle);
  heresdkGesturesBindingslistofLocaleReleaseFfiHandle(_handle);
  return result;
}

List<Locale>? heresdkGesturesBindingslistofLocaleFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkGesturesBindingslistofLocaleGetValueNullable(handle);
  final result = heresdkGesturesBindingslistofLocaleFromFfi(_handle);
  heresdkGesturesBindingslistofLocaleReleaseFfiHandle(_handle);
  return result;
}

void heresdkGesturesBindingslistofLocaleReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkGesturesBindingslistofLocaleReleaseHandleNullable(handle);

final _heresdkGesturesBindingslistofSdkCoreGeocoordinatesCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_gestures_bindingsListOf_sdk_core_GeoCoordinates_create_handle'));
final _heresdkGesturesBindingslistofSdkCoreGeocoordinatesReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_gestures_bindingsListOf_sdk_core_GeoCoordinates_release_handle'));
final _heresdkGesturesBindingslistofSdkCoreGeocoordinatesInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_gestures_bindingsListOf_sdk_core_GeoCoordinates_insert'));
final _heresdkGesturesBindingslistofSdkCoreGeocoordinatesIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_gestures_bindingsListOf_sdk_core_GeoCoordinates_iterator'));
final _heresdkGesturesBindingslistofSdkCoreGeocoordinatesIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_gestures_bindingsListOf_sdk_core_GeoCoordinates_iterator_release_handle'));
final _heresdkGesturesBindingslistofSdkCoreGeocoordinatesIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_gestures_bindingsListOf_sdk_core_GeoCoordinates_iterator_is_valid'));
final _heresdkGesturesBindingslistofSdkCoreGeocoordinatesIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_gestures_bindingsListOf_sdk_core_GeoCoordinates_iterator_increment'));
final _heresdkGesturesBindingslistofSdkCoreGeocoordinatesIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_gestures_bindingsListOf_sdk_core_GeoCoordinates_iterator_get'));

Pointer<Void> heresdkGesturesBindingslistofSdkCoreGeocoordinatesToFfi(List<GeoCoordinates> value) {
  final _result = _heresdkGesturesBindingslistofSdkCoreGeocoordinatesCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreGeocoordinatesToFfi(element);
    _heresdkGesturesBindingslistofSdkCoreGeocoordinatesInsert(_result, _elementHandle);
    sdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoCoordinates> heresdkGesturesBindingslistofSdkCoreGeocoordinatesFromFfi(Pointer<Void> handle) {
  final result = List<GeoCoordinates>.empty(growable: true);
  final _iteratorHandle = _heresdkGesturesBindingslistofSdkCoreGeocoordinatesIterator(handle);
  while (_heresdkGesturesBindingslistofSdkCoreGeocoordinatesIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkGesturesBindingslistofSdkCoreGeocoordinatesIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreGeocoordinatesFromFfi(_elementHandle));
    } finally {
      sdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
    }
    _heresdkGesturesBindingslistofSdkCoreGeocoordinatesIteratorIncrement(_iteratorHandle);
  }
  _heresdkGesturesBindingslistofSdkCoreGeocoordinatesIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkGesturesBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(Pointer<Void> handle) => _heresdkGesturesBindingslistofSdkCoreGeocoordinatesReleaseHandle(handle);

final _heresdkGesturesBindingslistofSdkCoreGeocoordinatesCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_gestures_bindingsListOf_sdk_core_GeoCoordinates_create_handle_nullable'));
final _heresdkGesturesBindingslistofSdkCoreGeocoordinatesReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_gestures_bindingsListOf_sdk_core_GeoCoordinates_release_handle_nullable'));
final _heresdkGesturesBindingslistofSdkCoreGeocoordinatesGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_gestures_bindingsListOf_sdk_core_GeoCoordinates_get_value_nullable'));

Pointer<Void> heresdkGesturesBindingslistofSdkCoreGeocoordinatesToFfiNullable(List<GeoCoordinates>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkGesturesBindingslistofSdkCoreGeocoordinatesToFfi(value);
  final result = _heresdkGesturesBindingslistofSdkCoreGeocoordinatesCreateHandleNullable(_handle);
  heresdkGesturesBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

List<GeoCoordinates>? heresdkGesturesBindingslistofSdkCoreGeocoordinatesFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkGesturesBindingslistofSdkCoreGeocoordinatesGetValueNullable(handle);
  final result = heresdkGesturesBindingslistofSdkCoreGeocoordinatesFromFfi(_handle);
  heresdkGesturesBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

void heresdkGesturesBindingslistofSdkCoreGeocoordinatesReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkGesturesBindingslistofSdkCoreGeocoordinatesReleaseHandleNullable(handle);

final _heresdkGesturesBindingslistofSdkCoreLocalizedtextCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_gestures_bindingsListOf_sdk_core_LocalizedText_create_handle'));
final _heresdkGesturesBindingslistofSdkCoreLocalizedtextReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_gestures_bindingsListOf_sdk_core_LocalizedText_release_handle'));
final _heresdkGesturesBindingslistofSdkCoreLocalizedtextInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_gestures_bindingsListOf_sdk_core_LocalizedText_insert'));
final _heresdkGesturesBindingslistofSdkCoreLocalizedtextIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_gestures_bindingsListOf_sdk_core_LocalizedText_iterator'));
final _heresdkGesturesBindingslistofSdkCoreLocalizedtextIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_gestures_bindingsListOf_sdk_core_LocalizedText_iterator_release_handle'));
final _heresdkGesturesBindingslistofSdkCoreLocalizedtextIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_gestures_bindingsListOf_sdk_core_LocalizedText_iterator_is_valid'));
final _heresdkGesturesBindingslistofSdkCoreLocalizedtextIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_gestures_bindingsListOf_sdk_core_LocalizedText_iterator_increment'));
final _heresdkGesturesBindingslistofSdkCoreLocalizedtextIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_gestures_bindingsListOf_sdk_core_LocalizedText_iterator_get'));

Pointer<Void> heresdkGesturesBindingslistofSdkCoreLocalizedtextToFfi(List<LocalizedText> value) {
  final _result = _heresdkGesturesBindingslistofSdkCoreLocalizedtextCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreLocalizedtextToFfi(element);
    _heresdkGesturesBindingslistofSdkCoreLocalizedtextInsert(_result, _elementHandle);
    sdkCoreLocalizedtextReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<LocalizedText> heresdkGesturesBindingslistofSdkCoreLocalizedtextFromFfi(Pointer<Void> handle) {
  final result = List<LocalizedText>.empty(growable: true);
  final _iteratorHandle = _heresdkGesturesBindingslistofSdkCoreLocalizedtextIterator(handle);
  while (_heresdkGesturesBindingslistofSdkCoreLocalizedtextIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkGesturesBindingslistofSdkCoreLocalizedtextIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreLocalizedtextFromFfi(_elementHandle));
    } finally {
      sdkCoreLocalizedtextReleaseFfiHandle(_elementHandle);
    }
    _heresdkGesturesBindingslistofSdkCoreLocalizedtextIteratorIncrement(_iteratorHandle);
  }
  _heresdkGesturesBindingslistofSdkCoreLocalizedtextIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkGesturesBindingslistofSdkCoreLocalizedtextReleaseFfiHandle(Pointer<Void> handle) => _heresdkGesturesBindingslistofSdkCoreLocalizedtextReleaseHandle(handle);

final _heresdkGesturesBindingslistofSdkCoreLocalizedtextCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_gestures_bindingsListOf_sdk_core_LocalizedText_create_handle_nullable'));
final _heresdkGesturesBindingslistofSdkCoreLocalizedtextReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_gestures_bindingsListOf_sdk_core_LocalizedText_release_handle_nullable'));
final _heresdkGesturesBindingslistofSdkCoreLocalizedtextGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_gestures_bindingsListOf_sdk_core_LocalizedText_get_value_nullable'));

Pointer<Void> heresdkGesturesBindingslistofSdkCoreLocalizedtextToFfiNullable(List<LocalizedText>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkGesturesBindingslistofSdkCoreLocalizedtextToFfi(value);
  final result = _heresdkGesturesBindingslistofSdkCoreLocalizedtextCreateHandleNullable(_handle);
  heresdkGesturesBindingslistofSdkCoreLocalizedtextReleaseFfiHandle(_handle);
  return result;
}

List<LocalizedText>? heresdkGesturesBindingslistofSdkCoreLocalizedtextFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkGesturesBindingslistofSdkCoreLocalizedtextGetValueNullable(handle);
  final result = heresdkGesturesBindingslistofSdkCoreLocalizedtextFromFfi(_handle);
  heresdkGesturesBindingslistofSdkCoreLocalizedtextReleaseFfiHandle(_handle);
  return result;
}

void heresdkGesturesBindingslistofSdkCoreLocalizedtextReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkGesturesBindingslistofSdkCoreLocalizedtextReleaseHandleNullable(handle);

final _heresdkGesturesBindingslistofSdkCoreEngineLayerconfigurationFeatureCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_gestures_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_create_handle'));
final _heresdkGesturesBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_gestures_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_release_handle'));
final _heresdkGesturesBindingslistofSdkCoreEngineLayerconfigurationFeatureInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_gestures_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_insert'));
final _heresdkGesturesBindingslistofSdkCoreEngineLayerconfigurationFeatureIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_gestures_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator'));
final _heresdkGesturesBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_gestures_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator_release_handle'));
final _heresdkGesturesBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_gestures_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator_is_valid'));
final _heresdkGesturesBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_gestures_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator_increment'));
final _heresdkGesturesBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_gestures_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator_get'));

Pointer<Void> heresdkGesturesBindingslistofSdkCoreEngineLayerconfigurationFeatureToFfi(List<LayerConfigurationFeature> value) {
  final _result = _heresdkGesturesBindingslistofSdkCoreEngineLayerconfigurationFeatureCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreEngineLayerconfigurationFeatureToFfi(element);
    _heresdkGesturesBindingslistofSdkCoreEngineLayerconfigurationFeatureInsert(_result, _elementHandle);
    sdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<LayerConfigurationFeature> heresdkGesturesBindingslistofSdkCoreEngineLayerconfigurationFeatureFromFfi(Pointer<Void> handle) {
  final result = List<LayerConfigurationFeature>.empty(growable: true);
  final _iteratorHandle = _heresdkGesturesBindingslistofSdkCoreEngineLayerconfigurationFeatureIterator(handle);
  while (_heresdkGesturesBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkGesturesBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreEngineLayerconfigurationFeatureFromFfi(_elementHandle));
    } finally {
      sdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(_elementHandle);
    }
    _heresdkGesturesBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorIncrement(_iteratorHandle);
  }
  _heresdkGesturesBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkGesturesBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(Pointer<Void> handle) => _heresdkGesturesBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseHandle(handle);

final _heresdkGesturesBindingslistofSdkCoreEngineLayerconfigurationFeatureCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_gestures_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_create_handle_nullable'));
final _heresdkGesturesBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_gestures_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_release_handle_nullable'));
final _heresdkGesturesBindingslistofSdkCoreEngineLayerconfigurationFeatureGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_gestures_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_get_value_nullable'));

Pointer<Void> heresdkGesturesBindingslistofSdkCoreEngineLayerconfigurationFeatureToFfiNullable(List<LayerConfigurationFeature>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkGesturesBindingslistofSdkCoreEngineLayerconfigurationFeatureToFfi(value);
  final result = _heresdkGesturesBindingslistofSdkCoreEngineLayerconfigurationFeatureCreateHandleNullable(_handle);
  heresdkGesturesBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(_handle);
  return result;
}

List<LayerConfigurationFeature>? heresdkGesturesBindingslistofSdkCoreEngineLayerconfigurationFeatureFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkGesturesBindingslistofSdkCoreEngineLayerconfigurationFeatureGetValueNullable(handle);
  final result = heresdkGesturesBindingslistofSdkCoreEngineLayerconfigurationFeatureFromFfi(_handle);
  heresdkGesturesBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(_handle);
  return result;
}

void heresdkGesturesBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkGesturesBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseHandleNullable(handle);

final _heresdkGesturesBindingsmapofSdkCoreEngineEnginebaseurlToStringCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_gestures_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_create_handle'));
final _heresdkGesturesBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_gestures_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_release_handle'));
final _heresdkGesturesBindingsmapofSdkCoreEngineEnginebaseurlToStringPut = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32, Pointer<Void>),
    void Function(Pointer<Void>, int, Pointer<Void>)
  >('here_sdk_heresdk_gestures_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_put'));
final _heresdkGesturesBindingsmapofSdkCoreEngineEnginebaseurlToStringIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_gestures_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_iterator'));
final _heresdkGesturesBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_gestures_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_iterator_release_handle'));
final _heresdkGesturesBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_gestures_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_iterator_is_valid'));
final _heresdkGesturesBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_gestures_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_iterator_increment'));
final _heresdkGesturesBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorGetKey = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_gestures_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_iterator_get_key'));
final _heresdkGesturesBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorGetValue = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_gestures_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_iterator_get_value'));

Pointer<Void> heresdkGesturesBindingsmapofSdkCoreEngineEnginebaseurlToStringToFfi(Map<EngineBaseURL, String> value) {
  final _result = _heresdkGesturesBindingsmapofSdkCoreEngineEnginebaseurlToStringCreateHandle();
  for (final entry in value.entries) {
    final _keyHandle = sdkCoreEngineEnginebaseurlToFfi(entry.key);
    final _valueHandle = stringToFfi(entry.value);
    _heresdkGesturesBindingsmapofSdkCoreEngineEnginebaseurlToStringPut(_result, _keyHandle, _valueHandle);
    sdkCoreEngineEnginebaseurlReleaseFfiHandle(_keyHandle);
    stringReleaseFfiHandle(_valueHandle);
  }
  return _result;
}

Map<EngineBaseURL, String> heresdkGesturesBindingsmapofSdkCoreEngineEnginebaseurlToStringFromFfi(Pointer<Void> handle) {
  final result = Map<EngineBaseURL, String>();
  final _iteratorHandle = _heresdkGesturesBindingsmapofSdkCoreEngineEnginebaseurlToStringIterator(handle);
  while (_heresdkGesturesBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _keyHandle = _heresdkGesturesBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorGetKey(_iteratorHandle);
    final _valueHandle = _heresdkGesturesBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorGetValue(_iteratorHandle);
    try {
      result[sdkCoreEngineEnginebaseurlFromFfi(_keyHandle)] =
        stringFromFfi(_valueHandle);
    } finally {
      sdkCoreEngineEnginebaseurlReleaseFfiHandle(_keyHandle);
      stringReleaseFfiHandle(_valueHandle);
    }
    _heresdkGesturesBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorIncrement(_iteratorHandle);
  }
  _heresdkGesturesBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkGesturesBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseFfiHandle(Pointer<Void> handle) => _heresdkGesturesBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseHandle(handle);

final _heresdkGesturesBindingsmapofSdkCoreEngineEnginebaseurlToStringCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_gestures_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_create_handle_nullable'));
final _heresdkGesturesBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_gestures_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_release_handle_nullable'));
final _heresdkGesturesBindingsmapofSdkCoreEngineEnginebaseurlToStringGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_gestures_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_get_value_nullable'));

Pointer<Void> heresdkGesturesBindingsmapofSdkCoreEngineEnginebaseurlToStringToFfiNullable(Map<EngineBaseURL, String>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkGesturesBindingsmapofSdkCoreEngineEnginebaseurlToStringToFfi(value);
  final result = _heresdkGesturesBindingsmapofSdkCoreEngineEnginebaseurlToStringCreateHandleNullable(_handle);
  heresdkGesturesBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseFfiHandle(_handle);
  return result;
}

Map<EngineBaseURL, String>? heresdkGesturesBindingsmapofSdkCoreEngineEnginebaseurlToStringFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkGesturesBindingsmapofSdkCoreEngineEnginebaseurlToStringGetValueNullable(handle);
  final result = heresdkGesturesBindingsmapofSdkCoreEngineEnginebaseurlToStringFromFfi(_handle);
  heresdkGesturesBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseFfiHandle(_handle);
  return result;
}

void heresdkGesturesBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkGesturesBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseHandleNullable(handle);


// Copyright (c) 2018-2022 HERE Global B.V. and its affiliate(s).
// All rights reserved.
//
// This software and other materials contain proprietary information
// controlled by HERE and are protected by applicable copyright legislation.
// Any use and utilization of this software and other materials and
// disclosure to any third parties is conditional upon having a separate
// agreement with HERE for the access, use, utilization or disclosure of this
// software. In the absence of such agreement, the use of the software is not
// allowed.
//















final _heresdkMaploaderBindingslistofLocaleCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_maploader_bindingsListOf_Locale_create_handle'));
final _heresdkMaploaderBindingslistofLocaleReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_maploader_bindingsListOf_Locale_release_handle'));
final _heresdkMaploaderBindingslistofLocaleInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_maploader_bindingsListOf_Locale_insert'));
final _heresdkMaploaderBindingslistofLocaleIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_maploader_bindingsListOf_Locale_iterator'));
final _heresdkMaploaderBindingslistofLocaleIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_maploader_bindingsListOf_Locale_iterator_release_handle'));
final _heresdkMaploaderBindingslistofLocaleIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_maploader_bindingsListOf_Locale_iterator_is_valid'));
final _heresdkMaploaderBindingslistofLocaleIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_maploader_bindingsListOf_Locale_iterator_increment'));
final _heresdkMaploaderBindingslistofLocaleIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_maploader_bindingsListOf_Locale_iterator_get'));

Pointer<Void> heresdkMaploaderBindingslistofLocaleToFfi(List<Locale> value) {
  final _result = _heresdkMaploaderBindingslistofLocaleCreateHandle();
  for (final element in value) {
    final _elementHandle = localeToFfi(element);
    _heresdkMaploaderBindingslistofLocaleInsert(_result, _elementHandle);
    localeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Locale> heresdkMaploaderBindingslistofLocaleFromFfi(Pointer<Void> handle) {
  final result = List<Locale>.empty(growable: true);
  final _iteratorHandle = _heresdkMaploaderBindingslistofLocaleIterator(handle);
  while (_heresdkMaploaderBindingslistofLocaleIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkMaploaderBindingslistofLocaleIteratorGet(_iteratorHandle);
    try {
      result.add(localeFromFfi(_elementHandle));
    } finally {
      localeReleaseFfiHandle(_elementHandle);
    }
    _heresdkMaploaderBindingslistofLocaleIteratorIncrement(_iteratorHandle);
  }
  _heresdkMaploaderBindingslistofLocaleIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMaploaderBindingslistofLocaleReleaseFfiHandle(Pointer<Void> handle) => _heresdkMaploaderBindingslistofLocaleReleaseHandle(handle);

final _heresdkMaploaderBindingslistofLocaleCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_maploader_bindingsListOf_Locale_create_handle_nullable'));
final _heresdkMaploaderBindingslistofLocaleReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_maploader_bindingsListOf_Locale_release_handle_nullable'));
final _heresdkMaploaderBindingslistofLocaleGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_maploader_bindingsListOf_Locale_get_value_nullable'));

Pointer<Void> heresdkMaploaderBindingslistofLocaleToFfiNullable(List<Locale>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMaploaderBindingslistofLocaleToFfi(value);
  final result = _heresdkMaploaderBindingslistofLocaleCreateHandleNullable(_handle);
  heresdkMaploaderBindingslistofLocaleReleaseFfiHandle(_handle);
  return result;
}

List<Locale>? heresdkMaploaderBindingslistofLocaleFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkMaploaderBindingslistofLocaleGetValueNullable(handle);
  final result = heresdkMaploaderBindingslistofLocaleFromFfi(_handle);
  heresdkMaploaderBindingslistofLocaleReleaseFfiHandle(_handle);
  return result;
}

void heresdkMaploaderBindingslistofLocaleReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMaploaderBindingslistofLocaleReleaseHandleNullable(handle);

final _heresdkMaploaderBindingslistofSdkCoreGeocoordinatesCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_maploader_bindingsListOf_sdk_core_GeoCoordinates_create_handle'));
final _heresdkMaploaderBindingslistofSdkCoreGeocoordinatesReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_maploader_bindingsListOf_sdk_core_GeoCoordinates_release_handle'));
final _heresdkMaploaderBindingslistofSdkCoreGeocoordinatesInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_maploader_bindingsListOf_sdk_core_GeoCoordinates_insert'));
final _heresdkMaploaderBindingslistofSdkCoreGeocoordinatesIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_maploader_bindingsListOf_sdk_core_GeoCoordinates_iterator'));
final _heresdkMaploaderBindingslistofSdkCoreGeocoordinatesIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_maploader_bindingsListOf_sdk_core_GeoCoordinates_iterator_release_handle'));
final _heresdkMaploaderBindingslistofSdkCoreGeocoordinatesIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_maploader_bindingsListOf_sdk_core_GeoCoordinates_iterator_is_valid'));
final _heresdkMaploaderBindingslistofSdkCoreGeocoordinatesIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_maploader_bindingsListOf_sdk_core_GeoCoordinates_iterator_increment'));
final _heresdkMaploaderBindingslistofSdkCoreGeocoordinatesIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_maploader_bindingsListOf_sdk_core_GeoCoordinates_iterator_get'));

Pointer<Void> heresdkMaploaderBindingslistofSdkCoreGeocoordinatesToFfi(List<GeoCoordinates> value) {
  final _result = _heresdkMaploaderBindingslistofSdkCoreGeocoordinatesCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreGeocoordinatesToFfi(element);
    _heresdkMaploaderBindingslistofSdkCoreGeocoordinatesInsert(_result, _elementHandle);
    sdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoCoordinates> heresdkMaploaderBindingslistofSdkCoreGeocoordinatesFromFfi(Pointer<Void> handle) {
  final result = List<GeoCoordinates>.empty(growable: true);
  final _iteratorHandle = _heresdkMaploaderBindingslistofSdkCoreGeocoordinatesIterator(handle);
  while (_heresdkMaploaderBindingslistofSdkCoreGeocoordinatesIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkMaploaderBindingslistofSdkCoreGeocoordinatesIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreGeocoordinatesFromFfi(_elementHandle));
    } finally {
      sdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
    }
    _heresdkMaploaderBindingslistofSdkCoreGeocoordinatesIteratorIncrement(_iteratorHandle);
  }
  _heresdkMaploaderBindingslistofSdkCoreGeocoordinatesIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMaploaderBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(Pointer<Void> handle) => _heresdkMaploaderBindingslistofSdkCoreGeocoordinatesReleaseHandle(handle);

final _heresdkMaploaderBindingslistofSdkCoreGeocoordinatesCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_maploader_bindingsListOf_sdk_core_GeoCoordinates_create_handle_nullable'));
final _heresdkMaploaderBindingslistofSdkCoreGeocoordinatesReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_maploader_bindingsListOf_sdk_core_GeoCoordinates_release_handle_nullable'));
final _heresdkMaploaderBindingslistofSdkCoreGeocoordinatesGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_maploader_bindingsListOf_sdk_core_GeoCoordinates_get_value_nullable'));

Pointer<Void> heresdkMaploaderBindingslistofSdkCoreGeocoordinatesToFfiNullable(List<GeoCoordinates>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMaploaderBindingslistofSdkCoreGeocoordinatesToFfi(value);
  final result = _heresdkMaploaderBindingslistofSdkCoreGeocoordinatesCreateHandleNullable(_handle);
  heresdkMaploaderBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

List<GeoCoordinates>? heresdkMaploaderBindingslistofSdkCoreGeocoordinatesFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkMaploaderBindingslistofSdkCoreGeocoordinatesGetValueNullable(handle);
  final result = heresdkMaploaderBindingslistofSdkCoreGeocoordinatesFromFfi(_handle);
  heresdkMaploaderBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

void heresdkMaploaderBindingslistofSdkCoreGeocoordinatesReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMaploaderBindingslistofSdkCoreGeocoordinatesReleaseHandleNullable(handle);

final _heresdkMaploaderBindingslistofSdkCoreLocalizedtextCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_maploader_bindingsListOf_sdk_core_LocalizedText_create_handle'));
final _heresdkMaploaderBindingslistofSdkCoreLocalizedtextReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_maploader_bindingsListOf_sdk_core_LocalizedText_release_handle'));
final _heresdkMaploaderBindingslistofSdkCoreLocalizedtextInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_maploader_bindingsListOf_sdk_core_LocalizedText_insert'));
final _heresdkMaploaderBindingslistofSdkCoreLocalizedtextIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_maploader_bindingsListOf_sdk_core_LocalizedText_iterator'));
final _heresdkMaploaderBindingslistofSdkCoreLocalizedtextIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_maploader_bindingsListOf_sdk_core_LocalizedText_iterator_release_handle'));
final _heresdkMaploaderBindingslistofSdkCoreLocalizedtextIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_maploader_bindingsListOf_sdk_core_LocalizedText_iterator_is_valid'));
final _heresdkMaploaderBindingslistofSdkCoreLocalizedtextIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_maploader_bindingsListOf_sdk_core_LocalizedText_iterator_increment'));
final _heresdkMaploaderBindingslistofSdkCoreLocalizedtextIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_maploader_bindingsListOf_sdk_core_LocalizedText_iterator_get'));

Pointer<Void> heresdkMaploaderBindingslistofSdkCoreLocalizedtextToFfi(List<LocalizedText> value) {
  final _result = _heresdkMaploaderBindingslistofSdkCoreLocalizedtextCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreLocalizedtextToFfi(element);
    _heresdkMaploaderBindingslistofSdkCoreLocalizedtextInsert(_result, _elementHandle);
    sdkCoreLocalizedtextReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<LocalizedText> heresdkMaploaderBindingslistofSdkCoreLocalizedtextFromFfi(Pointer<Void> handle) {
  final result = List<LocalizedText>.empty(growable: true);
  final _iteratorHandle = _heresdkMaploaderBindingslistofSdkCoreLocalizedtextIterator(handle);
  while (_heresdkMaploaderBindingslistofSdkCoreLocalizedtextIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkMaploaderBindingslistofSdkCoreLocalizedtextIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreLocalizedtextFromFfi(_elementHandle));
    } finally {
      sdkCoreLocalizedtextReleaseFfiHandle(_elementHandle);
    }
    _heresdkMaploaderBindingslistofSdkCoreLocalizedtextIteratorIncrement(_iteratorHandle);
  }
  _heresdkMaploaderBindingslistofSdkCoreLocalizedtextIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMaploaderBindingslistofSdkCoreLocalizedtextReleaseFfiHandle(Pointer<Void> handle) => _heresdkMaploaderBindingslistofSdkCoreLocalizedtextReleaseHandle(handle);

final _heresdkMaploaderBindingslistofSdkCoreLocalizedtextCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_maploader_bindingsListOf_sdk_core_LocalizedText_create_handle_nullable'));
final _heresdkMaploaderBindingslistofSdkCoreLocalizedtextReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_maploader_bindingsListOf_sdk_core_LocalizedText_release_handle_nullable'));
final _heresdkMaploaderBindingslistofSdkCoreLocalizedtextGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_maploader_bindingsListOf_sdk_core_LocalizedText_get_value_nullable'));

Pointer<Void> heresdkMaploaderBindingslistofSdkCoreLocalizedtextToFfiNullable(List<LocalizedText>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMaploaderBindingslistofSdkCoreLocalizedtextToFfi(value);
  final result = _heresdkMaploaderBindingslistofSdkCoreLocalizedtextCreateHandleNullable(_handle);
  heresdkMaploaderBindingslistofSdkCoreLocalizedtextReleaseFfiHandle(_handle);
  return result;
}

List<LocalizedText>? heresdkMaploaderBindingslistofSdkCoreLocalizedtextFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkMaploaderBindingslistofSdkCoreLocalizedtextGetValueNullable(handle);
  final result = heresdkMaploaderBindingslistofSdkCoreLocalizedtextFromFfi(_handle);
  heresdkMaploaderBindingslistofSdkCoreLocalizedtextReleaseFfiHandle(_handle);
  return result;
}

void heresdkMaploaderBindingslistofSdkCoreLocalizedtextReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMaploaderBindingslistofSdkCoreLocalizedtextReleaseHandleNullable(handle);

final _heresdkMaploaderBindingslistofSdkCoreEngineLayerconfigurationFeatureCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_maploader_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_create_handle'));
final _heresdkMaploaderBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_maploader_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_release_handle'));
final _heresdkMaploaderBindingslistofSdkCoreEngineLayerconfigurationFeatureInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_maploader_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_insert'));
final _heresdkMaploaderBindingslistofSdkCoreEngineLayerconfigurationFeatureIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_maploader_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator'));
final _heresdkMaploaderBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_maploader_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator_release_handle'));
final _heresdkMaploaderBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_maploader_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator_is_valid'));
final _heresdkMaploaderBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_maploader_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator_increment'));
final _heresdkMaploaderBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_maploader_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator_get'));

Pointer<Void> heresdkMaploaderBindingslistofSdkCoreEngineLayerconfigurationFeatureToFfi(List<LayerConfigurationFeature> value) {
  final _result = _heresdkMaploaderBindingslistofSdkCoreEngineLayerconfigurationFeatureCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreEngineLayerconfigurationFeatureToFfi(element);
    _heresdkMaploaderBindingslistofSdkCoreEngineLayerconfigurationFeatureInsert(_result, _elementHandle);
    sdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<LayerConfigurationFeature> heresdkMaploaderBindingslistofSdkCoreEngineLayerconfigurationFeatureFromFfi(Pointer<Void> handle) {
  final result = List<LayerConfigurationFeature>.empty(growable: true);
  final _iteratorHandle = _heresdkMaploaderBindingslistofSdkCoreEngineLayerconfigurationFeatureIterator(handle);
  while (_heresdkMaploaderBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkMaploaderBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreEngineLayerconfigurationFeatureFromFfi(_elementHandle));
    } finally {
      sdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(_elementHandle);
    }
    _heresdkMaploaderBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorIncrement(_iteratorHandle);
  }
  _heresdkMaploaderBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMaploaderBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(Pointer<Void> handle) => _heresdkMaploaderBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseHandle(handle);

final _heresdkMaploaderBindingslistofSdkCoreEngineLayerconfigurationFeatureCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_maploader_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_create_handle_nullable'));
final _heresdkMaploaderBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_maploader_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_release_handle_nullable'));
final _heresdkMaploaderBindingslistofSdkCoreEngineLayerconfigurationFeatureGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_maploader_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_get_value_nullable'));

Pointer<Void> heresdkMaploaderBindingslistofSdkCoreEngineLayerconfigurationFeatureToFfiNullable(List<LayerConfigurationFeature>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMaploaderBindingslistofSdkCoreEngineLayerconfigurationFeatureToFfi(value);
  final result = _heresdkMaploaderBindingslistofSdkCoreEngineLayerconfigurationFeatureCreateHandleNullable(_handle);
  heresdkMaploaderBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(_handle);
  return result;
}

List<LayerConfigurationFeature>? heresdkMaploaderBindingslistofSdkCoreEngineLayerconfigurationFeatureFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkMaploaderBindingslistofSdkCoreEngineLayerconfigurationFeatureGetValueNullable(handle);
  final result = heresdkMaploaderBindingslistofSdkCoreEngineLayerconfigurationFeatureFromFfi(_handle);
  heresdkMaploaderBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(_handle);
  return result;
}

void heresdkMaploaderBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMaploaderBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseHandleNullable(handle);

final _heresdkMaploaderBindingslistofSdkMaploaderInstalledregionCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_maploader_bindingsListOf_sdk_maploader_InstalledRegion_create_handle'));
final _heresdkMaploaderBindingslistofSdkMaploaderInstalledregionReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_maploader_bindingsListOf_sdk_maploader_InstalledRegion_release_handle'));
final _heresdkMaploaderBindingslistofSdkMaploaderInstalledregionInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_maploader_bindingsListOf_sdk_maploader_InstalledRegion_insert'));
final _heresdkMaploaderBindingslistofSdkMaploaderInstalledregionIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_maploader_bindingsListOf_sdk_maploader_InstalledRegion_iterator'));
final _heresdkMaploaderBindingslistofSdkMaploaderInstalledregionIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_maploader_bindingsListOf_sdk_maploader_InstalledRegion_iterator_release_handle'));
final _heresdkMaploaderBindingslistofSdkMaploaderInstalledregionIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_maploader_bindingsListOf_sdk_maploader_InstalledRegion_iterator_is_valid'));
final _heresdkMaploaderBindingslistofSdkMaploaderInstalledregionIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_maploader_bindingsListOf_sdk_maploader_InstalledRegion_iterator_increment'));
final _heresdkMaploaderBindingslistofSdkMaploaderInstalledregionIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_maploader_bindingsListOf_sdk_maploader_InstalledRegion_iterator_get'));

Pointer<Void> heresdkMaploaderBindingslistofSdkMaploaderInstalledregionToFfi(List<InstalledRegion> value) {
  final _result = _heresdkMaploaderBindingslistofSdkMaploaderInstalledregionCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkMaploaderInstalledregionToFfi(element);
    _heresdkMaploaderBindingslistofSdkMaploaderInstalledregionInsert(_result, _elementHandle);
    sdkMaploaderInstalledregionReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<InstalledRegion> heresdkMaploaderBindingslistofSdkMaploaderInstalledregionFromFfi(Pointer<Void> handle) {
  final result = List<InstalledRegion>.empty(growable: true);
  final _iteratorHandle = _heresdkMaploaderBindingslistofSdkMaploaderInstalledregionIterator(handle);
  while (_heresdkMaploaderBindingslistofSdkMaploaderInstalledregionIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkMaploaderBindingslistofSdkMaploaderInstalledregionIteratorGet(_iteratorHandle);
    try {
      result.add(sdkMaploaderInstalledregionFromFfi(_elementHandle));
    } finally {
      sdkMaploaderInstalledregionReleaseFfiHandle(_elementHandle);
    }
    _heresdkMaploaderBindingslistofSdkMaploaderInstalledregionIteratorIncrement(_iteratorHandle);
  }
  _heresdkMaploaderBindingslistofSdkMaploaderInstalledregionIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMaploaderBindingslistofSdkMaploaderInstalledregionReleaseFfiHandle(Pointer<Void> handle) => _heresdkMaploaderBindingslistofSdkMaploaderInstalledregionReleaseHandle(handle);

final _heresdkMaploaderBindingslistofSdkMaploaderInstalledregionCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_maploader_bindingsListOf_sdk_maploader_InstalledRegion_create_handle_nullable'));
final _heresdkMaploaderBindingslistofSdkMaploaderInstalledregionReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_maploader_bindingsListOf_sdk_maploader_InstalledRegion_release_handle_nullable'));
final _heresdkMaploaderBindingslistofSdkMaploaderInstalledregionGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_maploader_bindingsListOf_sdk_maploader_InstalledRegion_get_value_nullable'));

Pointer<Void> heresdkMaploaderBindingslistofSdkMaploaderInstalledregionToFfiNullable(List<InstalledRegion>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMaploaderBindingslistofSdkMaploaderInstalledregionToFfi(value);
  final result = _heresdkMaploaderBindingslistofSdkMaploaderInstalledregionCreateHandleNullable(_handle);
  heresdkMaploaderBindingslistofSdkMaploaderInstalledregionReleaseFfiHandle(_handle);
  return result;
}

List<InstalledRegion>? heresdkMaploaderBindingslistofSdkMaploaderInstalledregionFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkMaploaderBindingslistofSdkMaploaderInstalledregionGetValueNullable(handle);
  final result = heresdkMaploaderBindingslistofSdkMaploaderInstalledregionFromFfi(_handle);
  heresdkMaploaderBindingslistofSdkMaploaderInstalledregionReleaseFfiHandle(_handle);
  return result;
}

void heresdkMaploaderBindingslistofSdkMaploaderInstalledregionReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMaploaderBindingslistofSdkMaploaderInstalledregionReleaseHandleNullable(handle);

final _heresdkMaploaderBindingslistofSdkMaploaderRegionCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_maploader_bindingsListOf_sdk_maploader_Region_create_handle'));
final _heresdkMaploaderBindingslistofSdkMaploaderRegionReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_maploader_bindingsListOf_sdk_maploader_Region_release_handle'));
final _heresdkMaploaderBindingslistofSdkMaploaderRegionInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_maploader_bindingsListOf_sdk_maploader_Region_insert'));
final _heresdkMaploaderBindingslistofSdkMaploaderRegionIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_maploader_bindingsListOf_sdk_maploader_Region_iterator'));
final _heresdkMaploaderBindingslistofSdkMaploaderRegionIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_maploader_bindingsListOf_sdk_maploader_Region_iterator_release_handle'));
final _heresdkMaploaderBindingslistofSdkMaploaderRegionIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_maploader_bindingsListOf_sdk_maploader_Region_iterator_is_valid'));
final _heresdkMaploaderBindingslistofSdkMaploaderRegionIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_maploader_bindingsListOf_sdk_maploader_Region_iterator_increment'));
final _heresdkMaploaderBindingslistofSdkMaploaderRegionIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_maploader_bindingsListOf_sdk_maploader_Region_iterator_get'));

Pointer<Void> heresdkMaploaderBindingslistofSdkMaploaderRegionToFfi(List<Region> value) {
  final _result = _heresdkMaploaderBindingslistofSdkMaploaderRegionCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkMaploaderRegionToFfi(element);
    _heresdkMaploaderBindingslistofSdkMaploaderRegionInsert(_result, _elementHandle);
    sdkMaploaderRegionReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Region> heresdkMaploaderBindingslistofSdkMaploaderRegionFromFfi(Pointer<Void> handle) {
  final result = List<Region>.empty(growable: true);
  final _iteratorHandle = _heresdkMaploaderBindingslistofSdkMaploaderRegionIterator(handle);
  while (_heresdkMaploaderBindingslistofSdkMaploaderRegionIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkMaploaderBindingslistofSdkMaploaderRegionIteratorGet(_iteratorHandle);
    try {
      result.add(sdkMaploaderRegionFromFfi(_elementHandle));
    } finally {
      sdkMaploaderRegionReleaseFfiHandle(_elementHandle);
    }
    _heresdkMaploaderBindingslistofSdkMaploaderRegionIteratorIncrement(_iteratorHandle);
  }
  _heresdkMaploaderBindingslistofSdkMaploaderRegionIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMaploaderBindingslistofSdkMaploaderRegionReleaseFfiHandle(Pointer<Void> handle) => _heresdkMaploaderBindingslistofSdkMaploaderRegionReleaseHandle(handle);

final _heresdkMaploaderBindingslistofSdkMaploaderRegionCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_maploader_bindingsListOf_sdk_maploader_Region_create_handle_nullable'));
final _heresdkMaploaderBindingslistofSdkMaploaderRegionReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_maploader_bindingsListOf_sdk_maploader_Region_release_handle_nullable'));
final _heresdkMaploaderBindingslistofSdkMaploaderRegionGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_maploader_bindingsListOf_sdk_maploader_Region_get_value_nullable'));

Pointer<Void> heresdkMaploaderBindingslistofSdkMaploaderRegionToFfiNullable(List<Region>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMaploaderBindingslistofSdkMaploaderRegionToFfi(value);
  final result = _heresdkMaploaderBindingslistofSdkMaploaderRegionCreateHandleNullable(_handle);
  heresdkMaploaderBindingslistofSdkMaploaderRegionReleaseFfiHandle(_handle);
  return result;
}

List<Region>? heresdkMaploaderBindingslistofSdkMaploaderRegionFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkMaploaderBindingslistofSdkMaploaderRegionGetValueNullable(handle);
  final result = heresdkMaploaderBindingslistofSdkMaploaderRegionFromFfi(_handle);
  heresdkMaploaderBindingslistofSdkMaploaderRegionReleaseFfiHandle(_handle);
  return result;
}

void heresdkMaploaderBindingslistofSdkMaploaderRegionReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMaploaderBindingslistofSdkMaploaderRegionReleaseHandleNullable(handle);

final _heresdkMaploaderBindingslistofSdkMaploaderRegionidCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_maploader_bindingsListOf_sdk_maploader_RegionId_create_handle'));
final _heresdkMaploaderBindingslistofSdkMaploaderRegionidReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_maploader_bindingsListOf_sdk_maploader_RegionId_release_handle'));
final _heresdkMaploaderBindingslistofSdkMaploaderRegionidInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_maploader_bindingsListOf_sdk_maploader_RegionId_insert'));
final _heresdkMaploaderBindingslistofSdkMaploaderRegionidIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_maploader_bindingsListOf_sdk_maploader_RegionId_iterator'));
final _heresdkMaploaderBindingslistofSdkMaploaderRegionidIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_maploader_bindingsListOf_sdk_maploader_RegionId_iterator_release_handle'));
final _heresdkMaploaderBindingslistofSdkMaploaderRegionidIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_maploader_bindingsListOf_sdk_maploader_RegionId_iterator_is_valid'));
final _heresdkMaploaderBindingslistofSdkMaploaderRegionidIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_maploader_bindingsListOf_sdk_maploader_RegionId_iterator_increment'));
final _heresdkMaploaderBindingslistofSdkMaploaderRegionidIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_maploader_bindingsListOf_sdk_maploader_RegionId_iterator_get'));

Pointer<Void> heresdkMaploaderBindingslistofSdkMaploaderRegionidToFfi(List<RegionId> value) {
  final _result = _heresdkMaploaderBindingslistofSdkMaploaderRegionidCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkMaploaderRegionidToFfi(element);
    _heresdkMaploaderBindingslistofSdkMaploaderRegionidInsert(_result, _elementHandle);
    sdkMaploaderRegionidReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<RegionId> heresdkMaploaderBindingslistofSdkMaploaderRegionidFromFfi(Pointer<Void> handle) {
  final result = List<RegionId>.empty(growable: true);
  final _iteratorHandle = _heresdkMaploaderBindingslistofSdkMaploaderRegionidIterator(handle);
  while (_heresdkMaploaderBindingslistofSdkMaploaderRegionidIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkMaploaderBindingslistofSdkMaploaderRegionidIteratorGet(_iteratorHandle);
    try {
      result.add(sdkMaploaderRegionidFromFfi(_elementHandle));
    } finally {
      sdkMaploaderRegionidReleaseFfiHandle(_elementHandle);
    }
    _heresdkMaploaderBindingslistofSdkMaploaderRegionidIteratorIncrement(_iteratorHandle);
  }
  _heresdkMaploaderBindingslistofSdkMaploaderRegionidIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMaploaderBindingslistofSdkMaploaderRegionidReleaseFfiHandle(Pointer<Void> handle) => _heresdkMaploaderBindingslistofSdkMaploaderRegionidReleaseHandle(handle);

final _heresdkMaploaderBindingslistofSdkMaploaderRegionidCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_maploader_bindingsListOf_sdk_maploader_RegionId_create_handle_nullable'));
final _heresdkMaploaderBindingslistofSdkMaploaderRegionidReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_maploader_bindingsListOf_sdk_maploader_RegionId_release_handle_nullable'));
final _heresdkMaploaderBindingslistofSdkMaploaderRegionidGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_maploader_bindingsListOf_sdk_maploader_RegionId_get_value_nullable'));

Pointer<Void> heresdkMaploaderBindingslistofSdkMaploaderRegionidToFfiNullable(List<RegionId>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMaploaderBindingslistofSdkMaploaderRegionidToFfi(value);
  final result = _heresdkMaploaderBindingslistofSdkMaploaderRegionidCreateHandleNullable(_handle);
  heresdkMaploaderBindingslistofSdkMaploaderRegionidReleaseFfiHandle(_handle);
  return result;
}

List<RegionId>? heresdkMaploaderBindingslistofSdkMaploaderRegionidFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkMaploaderBindingslistofSdkMaploaderRegionidGetValueNullable(handle);
  final result = heresdkMaploaderBindingslistofSdkMaploaderRegionidFromFfi(_handle);
  heresdkMaploaderBindingslistofSdkMaploaderRegionidReleaseFfiHandle(_handle);
  return result;
}

void heresdkMaploaderBindingslistofSdkMaploaderRegionidReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMaploaderBindingslistofSdkMaploaderRegionidReleaseHandleNullable(handle);

final _heresdkMaploaderBindingsmapofSdkCoreEngineEnginebaseurlToStringCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_maploader_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_create_handle'));
final _heresdkMaploaderBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_maploader_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_release_handle'));
final _heresdkMaploaderBindingsmapofSdkCoreEngineEnginebaseurlToStringPut = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32, Pointer<Void>),
    void Function(Pointer<Void>, int, Pointer<Void>)
  >('here_sdk_heresdk_maploader_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_put'));
final _heresdkMaploaderBindingsmapofSdkCoreEngineEnginebaseurlToStringIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_maploader_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_iterator'));
final _heresdkMaploaderBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_maploader_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_iterator_release_handle'));
final _heresdkMaploaderBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_maploader_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_iterator_is_valid'));
final _heresdkMaploaderBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_maploader_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_iterator_increment'));
final _heresdkMaploaderBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorGetKey = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_maploader_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_iterator_get_key'));
final _heresdkMaploaderBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorGetValue = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_maploader_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_iterator_get_value'));

Pointer<Void> heresdkMaploaderBindingsmapofSdkCoreEngineEnginebaseurlToStringToFfi(Map<EngineBaseURL, String> value) {
  final _result = _heresdkMaploaderBindingsmapofSdkCoreEngineEnginebaseurlToStringCreateHandle();
  for (final entry in value.entries) {
    final _keyHandle = sdkCoreEngineEnginebaseurlToFfi(entry.key);
    final _valueHandle = stringToFfi(entry.value);
    _heresdkMaploaderBindingsmapofSdkCoreEngineEnginebaseurlToStringPut(_result, _keyHandle, _valueHandle);
    sdkCoreEngineEnginebaseurlReleaseFfiHandle(_keyHandle);
    stringReleaseFfiHandle(_valueHandle);
  }
  return _result;
}

Map<EngineBaseURL, String> heresdkMaploaderBindingsmapofSdkCoreEngineEnginebaseurlToStringFromFfi(Pointer<Void> handle) {
  final result = Map<EngineBaseURL, String>();
  final _iteratorHandle = _heresdkMaploaderBindingsmapofSdkCoreEngineEnginebaseurlToStringIterator(handle);
  while (_heresdkMaploaderBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _keyHandle = _heresdkMaploaderBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorGetKey(_iteratorHandle);
    final _valueHandle = _heresdkMaploaderBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorGetValue(_iteratorHandle);
    try {
      result[sdkCoreEngineEnginebaseurlFromFfi(_keyHandle)] =
        stringFromFfi(_valueHandle);
    } finally {
      sdkCoreEngineEnginebaseurlReleaseFfiHandle(_keyHandle);
      stringReleaseFfiHandle(_valueHandle);
    }
    _heresdkMaploaderBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorIncrement(_iteratorHandle);
  }
  _heresdkMaploaderBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMaploaderBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseFfiHandle(Pointer<Void> handle) => _heresdkMaploaderBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseHandle(handle);

final _heresdkMaploaderBindingsmapofSdkCoreEngineEnginebaseurlToStringCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_maploader_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_create_handle_nullable'));
final _heresdkMaploaderBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_maploader_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_release_handle_nullable'));
final _heresdkMaploaderBindingsmapofSdkCoreEngineEnginebaseurlToStringGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_maploader_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_get_value_nullable'));

Pointer<Void> heresdkMaploaderBindingsmapofSdkCoreEngineEnginebaseurlToStringToFfiNullable(Map<EngineBaseURL, String>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMaploaderBindingsmapofSdkCoreEngineEnginebaseurlToStringToFfi(value);
  final result = _heresdkMaploaderBindingsmapofSdkCoreEngineEnginebaseurlToStringCreateHandleNullable(_handle);
  heresdkMaploaderBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseFfiHandle(_handle);
  return result;
}

Map<EngineBaseURL, String>? heresdkMaploaderBindingsmapofSdkCoreEngineEnginebaseurlToStringFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkMaploaderBindingsmapofSdkCoreEngineEnginebaseurlToStringGetValueNullable(handle);
  final result = heresdkMaploaderBindingsmapofSdkCoreEngineEnginebaseurlToStringFromFfi(_handle);
  heresdkMaploaderBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseFfiHandle(_handle);
  return result;
}

void heresdkMaploaderBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMaploaderBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseHandleNullable(handle);


// Copyright (c) 2018-2022 HERE Global B.V. and its affiliate(s).
// All rights reserved.
//
// This software and other materials contain proprietary information
// controlled by HERE and are protected by applicable copyright legislation.
// Any use and utilization of this software and other materials and
// disclosure to any third parties is conditional upon having a separate
// agreement with HERE for the access, use, utilization or disclosure of this
// software. In the absence of such agreement, the use of the software is not
// allowed.
//



















final _heresdkMapviewCommonBindingslistofLocaleCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_mapview_common_bindingsListOf_Locale_create_handle'));
final _heresdkMapviewCommonBindingslistofLocaleReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_Locale_release_handle'));
final _heresdkMapviewCommonBindingslistofLocaleInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_Locale_insert'));
final _heresdkMapviewCommonBindingslistofLocaleIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_Locale_iterator'));
final _heresdkMapviewCommonBindingslistofLocaleIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_Locale_iterator_release_handle'));
final _heresdkMapviewCommonBindingslistofLocaleIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_Locale_iterator_is_valid'));
final _heresdkMapviewCommonBindingslistofLocaleIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_Locale_iterator_increment'));
final _heresdkMapviewCommonBindingslistofLocaleIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_Locale_iterator_get'));

Pointer<Void> heresdkMapviewCommonBindingslistofLocaleToFfi(List<Locale> value) {
  final _result = _heresdkMapviewCommonBindingslistofLocaleCreateHandle();
  for (final element in value) {
    final _elementHandle = localeToFfi(element);
    _heresdkMapviewCommonBindingslistofLocaleInsert(_result, _elementHandle);
    localeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Locale> heresdkMapviewCommonBindingslistofLocaleFromFfi(Pointer<Void> handle) {
  final result = List<Locale>.empty(growable: true);
  final _iteratorHandle = _heresdkMapviewCommonBindingslistofLocaleIterator(handle);
  while (_heresdkMapviewCommonBindingslistofLocaleIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkMapviewCommonBindingslistofLocaleIteratorGet(_iteratorHandle);
    try {
      result.add(localeFromFfi(_elementHandle));
    } finally {
      localeReleaseFfiHandle(_elementHandle);
    }
    _heresdkMapviewCommonBindingslistofLocaleIteratorIncrement(_iteratorHandle);
  }
  _heresdkMapviewCommonBindingslistofLocaleIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMapviewCommonBindingslistofLocaleReleaseFfiHandle(Pointer<Void> handle) => _heresdkMapviewCommonBindingslistofLocaleReleaseHandle(handle);

final _heresdkMapviewCommonBindingslistofLocaleCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_Locale_create_handle_nullable'));
final _heresdkMapviewCommonBindingslistofLocaleReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_Locale_release_handle_nullable'));
final _heresdkMapviewCommonBindingslistofLocaleGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_Locale_get_value_nullable'));

Pointer<Void> heresdkMapviewCommonBindingslistofLocaleToFfiNullable(List<Locale>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMapviewCommonBindingslistofLocaleToFfi(value);
  final result = _heresdkMapviewCommonBindingslistofLocaleCreateHandleNullable(_handle);
  heresdkMapviewCommonBindingslistofLocaleReleaseFfiHandle(_handle);
  return result;
}

List<Locale>? heresdkMapviewCommonBindingslistofLocaleFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkMapviewCommonBindingslistofLocaleGetValueNullable(handle);
  final result = heresdkMapviewCommonBindingslistofLocaleFromFfi(_handle);
  heresdkMapviewCommonBindingslistofLocaleReleaseFfiHandle(_handle);
  return result;
}

void heresdkMapviewCommonBindingslistofLocaleReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMapviewCommonBindingslistofLocaleReleaseHandleNullable(handle);

final _heresdkMapviewCommonBindingslistofStringCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_mapview_common_bindingsListOf_String_create_handle'));
final _heresdkMapviewCommonBindingslistofStringReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_String_release_handle'));
final _heresdkMapviewCommonBindingslistofStringInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_String_insert'));
final _heresdkMapviewCommonBindingslistofStringIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_String_iterator'));
final _heresdkMapviewCommonBindingslistofStringIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_String_iterator_release_handle'));
final _heresdkMapviewCommonBindingslistofStringIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_String_iterator_is_valid'));
final _heresdkMapviewCommonBindingslistofStringIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_String_iterator_increment'));
final _heresdkMapviewCommonBindingslistofStringIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_String_iterator_get'));

Pointer<Void> heresdkMapviewCommonBindingslistofStringToFfi(List<String> value) {
  final _result = _heresdkMapviewCommonBindingslistofStringCreateHandle();
  for (final element in value) {
    final _elementHandle = stringToFfi(element);
    _heresdkMapviewCommonBindingslistofStringInsert(_result, _elementHandle);
    stringReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<String> heresdkMapviewCommonBindingslistofStringFromFfi(Pointer<Void> handle) {
  final result = List<String>.empty(growable: true);
  final _iteratorHandle = _heresdkMapviewCommonBindingslistofStringIterator(handle);
  while (_heresdkMapviewCommonBindingslistofStringIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkMapviewCommonBindingslistofStringIteratorGet(_iteratorHandle);
    try {
      result.add(stringFromFfi(_elementHandle));
    } finally {
      stringReleaseFfiHandle(_elementHandle);
    }
    _heresdkMapviewCommonBindingslistofStringIteratorIncrement(_iteratorHandle);
  }
  _heresdkMapviewCommonBindingslistofStringIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMapviewCommonBindingslistofStringReleaseFfiHandle(Pointer<Void> handle) => _heresdkMapviewCommonBindingslistofStringReleaseHandle(handle);

final _heresdkMapviewCommonBindingslistofStringCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_String_create_handle_nullable'));
final _heresdkMapviewCommonBindingslistofStringReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_String_release_handle_nullable'));
final _heresdkMapviewCommonBindingslistofStringGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_String_get_value_nullable'));

Pointer<Void> heresdkMapviewCommonBindingslistofStringToFfiNullable(List<String>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMapviewCommonBindingslistofStringToFfi(value);
  final result = _heresdkMapviewCommonBindingslistofStringCreateHandleNullable(_handle);
  heresdkMapviewCommonBindingslistofStringReleaseFfiHandle(_handle);
  return result;
}

List<String>? heresdkMapviewCommonBindingslistofStringFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkMapviewCommonBindingslistofStringGetValueNullable(handle);
  final result = heresdkMapviewCommonBindingslistofStringFromFfi(_handle);
  heresdkMapviewCommonBindingslistofStringReleaseFfiHandle(_handle);
  return result;
}

void heresdkMapviewCommonBindingslistofStringReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMapviewCommonBindingslistofStringReleaseHandleNullable(handle);

final _heresdkMapviewCommonBindingslistofSdkAnimationAnchor2dkeyframeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_animation_Anchor2DKeyframe_create_handle'));
final _heresdkMapviewCommonBindingslistofSdkAnimationAnchor2dkeyframeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_animation_Anchor2DKeyframe_release_handle'));
final _heresdkMapviewCommonBindingslistofSdkAnimationAnchor2dkeyframeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_animation_Anchor2DKeyframe_insert'));
final _heresdkMapviewCommonBindingslistofSdkAnimationAnchor2dkeyframeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_animation_Anchor2DKeyframe_iterator'));
final _heresdkMapviewCommonBindingslistofSdkAnimationAnchor2dkeyframeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_animation_Anchor2DKeyframe_iterator_release_handle'));
final _heresdkMapviewCommonBindingslistofSdkAnimationAnchor2dkeyframeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_animation_Anchor2DKeyframe_iterator_is_valid'));
final _heresdkMapviewCommonBindingslistofSdkAnimationAnchor2dkeyframeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_animation_Anchor2DKeyframe_iterator_increment'));
final _heresdkMapviewCommonBindingslistofSdkAnimationAnchor2dkeyframeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_animation_Anchor2DKeyframe_iterator_get'));

Pointer<Void> heresdkMapviewCommonBindingslistofSdkAnimationAnchor2dkeyframeToFfi(List<Anchor2DKeyframe> value) {
  final _result = _heresdkMapviewCommonBindingslistofSdkAnimationAnchor2dkeyframeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkAnimationAnchor2dkeyframeToFfi(element);
    _heresdkMapviewCommonBindingslistofSdkAnimationAnchor2dkeyframeInsert(_result, _elementHandle);
    sdkAnimationAnchor2dkeyframeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Anchor2DKeyframe> heresdkMapviewCommonBindingslistofSdkAnimationAnchor2dkeyframeFromFfi(Pointer<Void> handle) {
  final result = List<Anchor2DKeyframe>.empty(growable: true);
  final _iteratorHandle = _heresdkMapviewCommonBindingslistofSdkAnimationAnchor2dkeyframeIterator(handle);
  while (_heresdkMapviewCommonBindingslistofSdkAnimationAnchor2dkeyframeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkMapviewCommonBindingslistofSdkAnimationAnchor2dkeyframeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkAnimationAnchor2dkeyframeFromFfi(_elementHandle));
    } finally {
      sdkAnimationAnchor2dkeyframeReleaseFfiHandle(_elementHandle);
    }
    _heresdkMapviewCommonBindingslistofSdkAnimationAnchor2dkeyframeIteratorIncrement(_iteratorHandle);
  }
  _heresdkMapviewCommonBindingslistofSdkAnimationAnchor2dkeyframeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMapviewCommonBindingslistofSdkAnimationAnchor2dkeyframeReleaseFfiHandle(Pointer<Void> handle) => _heresdkMapviewCommonBindingslistofSdkAnimationAnchor2dkeyframeReleaseHandle(handle);

final _heresdkMapviewCommonBindingslistofSdkAnimationAnchor2dkeyframeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_animation_Anchor2DKeyframe_create_handle_nullable'));
final _heresdkMapviewCommonBindingslistofSdkAnimationAnchor2dkeyframeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_animation_Anchor2DKeyframe_release_handle_nullable'));
final _heresdkMapviewCommonBindingslistofSdkAnimationAnchor2dkeyframeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_animation_Anchor2DKeyframe_get_value_nullable'));

Pointer<Void> heresdkMapviewCommonBindingslistofSdkAnimationAnchor2dkeyframeToFfiNullable(List<Anchor2DKeyframe>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMapviewCommonBindingslistofSdkAnimationAnchor2dkeyframeToFfi(value);
  final result = _heresdkMapviewCommonBindingslistofSdkAnimationAnchor2dkeyframeCreateHandleNullable(_handle);
  heresdkMapviewCommonBindingslistofSdkAnimationAnchor2dkeyframeReleaseFfiHandle(_handle);
  return result;
}

List<Anchor2DKeyframe>? heresdkMapviewCommonBindingslistofSdkAnimationAnchor2dkeyframeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkMapviewCommonBindingslistofSdkAnimationAnchor2dkeyframeGetValueNullable(handle);
  final result = heresdkMapviewCommonBindingslistofSdkAnimationAnchor2dkeyframeFromFfi(_handle);
  heresdkMapviewCommonBindingslistofSdkAnimationAnchor2dkeyframeReleaseFfiHandle(_handle);
  return result;
}

void heresdkMapviewCommonBindingslistofSdkAnimationAnchor2dkeyframeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMapviewCommonBindingslistofSdkAnimationAnchor2dkeyframeReleaseHandleNullable(handle);

final _heresdkMapviewCommonBindingslistofSdkAnimationGeocoordinateskeyframeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_create_handle'));
final _heresdkMapviewCommonBindingslistofSdkAnimationGeocoordinateskeyframeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_release_handle'));
final _heresdkMapviewCommonBindingslistofSdkAnimationGeocoordinateskeyframeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_insert'));
final _heresdkMapviewCommonBindingslistofSdkAnimationGeocoordinateskeyframeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_iterator'));
final _heresdkMapviewCommonBindingslistofSdkAnimationGeocoordinateskeyframeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_iterator_release_handle'));
final _heresdkMapviewCommonBindingslistofSdkAnimationGeocoordinateskeyframeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_iterator_is_valid'));
final _heresdkMapviewCommonBindingslistofSdkAnimationGeocoordinateskeyframeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_iterator_increment'));
final _heresdkMapviewCommonBindingslistofSdkAnimationGeocoordinateskeyframeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_iterator_get'));

Pointer<Void> heresdkMapviewCommonBindingslistofSdkAnimationGeocoordinateskeyframeToFfi(List<GeoCoordinatesKeyframe> value) {
  final _result = _heresdkMapviewCommonBindingslistofSdkAnimationGeocoordinateskeyframeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkAnimationGeocoordinateskeyframeToFfi(element);
    _heresdkMapviewCommonBindingslistofSdkAnimationGeocoordinateskeyframeInsert(_result, _elementHandle);
    sdkAnimationGeocoordinateskeyframeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoCoordinatesKeyframe> heresdkMapviewCommonBindingslistofSdkAnimationGeocoordinateskeyframeFromFfi(Pointer<Void> handle) {
  final result = List<GeoCoordinatesKeyframe>.empty(growable: true);
  final _iteratorHandle = _heresdkMapviewCommonBindingslistofSdkAnimationGeocoordinateskeyframeIterator(handle);
  while (_heresdkMapviewCommonBindingslistofSdkAnimationGeocoordinateskeyframeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkMapviewCommonBindingslistofSdkAnimationGeocoordinateskeyframeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkAnimationGeocoordinateskeyframeFromFfi(_elementHandle));
    } finally {
      sdkAnimationGeocoordinateskeyframeReleaseFfiHandle(_elementHandle);
    }
    _heresdkMapviewCommonBindingslistofSdkAnimationGeocoordinateskeyframeIteratorIncrement(_iteratorHandle);
  }
  _heresdkMapviewCommonBindingslistofSdkAnimationGeocoordinateskeyframeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMapviewCommonBindingslistofSdkAnimationGeocoordinateskeyframeReleaseFfiHandle(Pointer<Void> handle) => _heresdkMapviewCommonBindingslistofSdkAnimationGeocoordinateskeyframeReleaseHandle(handle);

final _heresdkMapviewCommonBindingslistofSdkAnimationGeocoordinateskeyframeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_create_handle_nullable'));
final _heresdkMapviewCommonBindingslistofSdkAnimationGeocoordinateskeyframeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_release_handle_nullable'));
final _heresdkMapviewCommonBindingslistofSdkAnimationGeocoordinateskeyframeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_get_value_nullable'));

Pointer<Void> heresdkMapviewCommonBindingslistofSdkAnimationGeocoordinateskeyframeToFfiNullable(List<GeoCoordinatesKeyframe>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMapviewCommonBindingslistofSdkAnimationGeocoordinateskeyframeToFfi(value);
  final result = _heresdkMapviewCommonBindingslistofSdkAnimationGeocoordinateskeyframeCreateHandleNullable(_handle);
  heresdkMapviewCommonBindingslistofSdkAnimationGeocoordinateskeyframeReleaseFfiHandle(_handle);
  return result;
}

List<GeoCoordinatesKeyframe>? heresdkMapviewCommonBindingslistofSdkAnimationGeocoordinateskeyframeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkMapviewCommonBindingslistofSdkAnimationGeocoordinateskeyframeGetValueNullable(handle);
  final result = heresdkMapviewCommonBindingslistofSdkAnimationGeocoordinateskeyframeFromFfi(_handle);
  heresdkMapviewCommonBindingslistofSdkAnimationGeocoordinateskeyframeReleaseFfiHandle(_handle);
  return result;
}

void heresdkMapviewCommonBindingslistofSdkAnimationGeocoordinateskeyframeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMapviewCommonBindingslistofSdkAnimationGeocoordinateskeyframeReleaseHandleNullable(handle);

final _heresdkMapviewCommonBindingslistofSdkAnimationGeoorientationkeyframeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_animation_GeoOrientationKeyframe_create_handle'));
final _heresdkMapviewCommonBindingslistofSdkAnimationGeoorientationkeyframeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_animation_GeoOrientationKeyframe_release_handle'));
final _heresdkMapviewCommonBindingslistofSdkAnimationGeoorientationkeyframeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_animation_GeoOrientationKeyframe_insert'));
final _heresdkMapviewCommonBindingslistofSdkAnimationGeoorientationkeyframeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_animation_GeoOrientationKeyframe_iterator'));
final _heresdkMapviewCommonBindingslistofSdkAnimationGeoorientationkeyframeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_animation_GeoOrientationKeyframe_iterator_release_handle'));
final _heresdkMapviewCommonBindingslistofSdkAnimationGeoorientationkeyframeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_animation_GeoOrientationKeyframe_iterator_is_valid'));
final _heresdkMapviewCommonBindingslistofSdkAnimationGeoorientationkeyframeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_animation_GeoOrientationKeyframe_iterator_increment'));
final _heresdkMapviewCommonBindingslistofSdkAnimationGeoorientationkeyframeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_animation_GeoOrientationKeyframe_iterator_get'));

Pointer<Void> heresdkMapviewCommonBindingslistofSdkAnimationGeoorientationkeyframeToFfi(List<GeoOrientationKeyframe> value) {
  final _result = _heresdkMapviewCommonBindingslistofSdkAnimationGeoorientationkeyframeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkAnimationGeoorientationkeyframeToFfi(element);
    _heresdkMapviewCommonBindingslistofSdkAnimationGeoorientationkeyframeInsert(_result, _elementHandle);
    sdkAnimationGeoorientationkeyframeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoOrientationKeyframe> heresdkMapviewCommonBindingslistofSdkAnimationGeoorientationkeyframeFromFfi(Pointer<Void> handle) {
  final result = List<GeoOrientationKeyframe>.empty(growable: true);
  final _iteratorHandle = _heresdkMapviewCommonBindingslistofSdkAnimationGeoorientationkeyframeIterator(handle);
  while (_heresdkMapviewCommonBindingslistofSdkAnimationGeoorientationkeyframeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkMapviewCommonBindingslistofSdkAnimationGeoorientationkeyframeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkAnimationGeoorientationkeyframeFromFfi(_elementHandle));
    } finally {
      sdkAnimationGeoorientationkeyframeReleaseFfiHandle(_elementHandle);
    }
    _heresdkMapviewCommonBindingslistofSdkAnimationGeoorientationkeyframeIteratorIncrement(_iteratorHandle);
  }
  _heresdkMapviewCommonBindingslistofSdkAnimationGeoorientationkeyframeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMapviewCommonBindingslistofSdkAnimationGeoorientationkeyframeReleaseFfiHandle(Pointer<Void> handle) => _heresdkMapviewCommonBindingslistofSdkAnimationGeoorientationkeyframeReleaseHandle(handle);

final _heresdkMapviewCommonBindingslistofSdkAnimationGeoorientationkeyframeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_animation_GeoOrientationKeyframe_create_handle_nullable'));
final _heresdkMapviewCommonBindingslistofSdkAnimationGeoorientationkeyframeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_animation_GeoOrientationKeyframe_release_handle_nullable'));
final _heresdkMapviewCommonBindingslistofSdkAnimationGeoorientationkeyframeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_animation_GeoOrientationKeyframe_get_value_nullable'));

Pointer<Void> heresdkMapviewCommonBindingslistofSdkAnimationGeoorientationkeyframeToFfiNullable(List<GeoOrientationKeyframe>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMapviewCommonBindingslistofSdkAnimationGeoorientationkeyframeToFfi(value);
  final result = _heresdkMapviewCommonBindingslistofSdkAnimationGeoorientationkeyframeCreateHandleNullable(_handle);
  heresdkMapviewCommonBindingslistofSdkAnimationGeoorientationkeyframeReleaseFfiHandle(_handle);
  return result;
}

List<GeoOrientationKeyframe>? heresdkMapviewCommonBindingslistofSdkAnimationGeoorientationkeyframeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkMapviewCommonBindingslistofSdkAnimationGeoorientationkeyframeGetValueNullable(handle);
  final result = heresdkMapviewCommonBindingslistofSdkAnimationGeoorientationkeyframeFromFfi(_handle);
  heresdkMapviewCommonBindingslistofSdkAnimationGeoorientationkeyframeReleaseFfiHandle(_handle);
  return result;
}

void heresdkMapviewCommonBindingslistofSdkAnimationGeoorientationkeyframeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMapviewCommonBindingslistofSdkAnimationGeoorientationkeyframeReleaseHandleNullable(handle);

final _heresdkMapviewCommonBindingslistofSdkAnimationPoint2dkeyframeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_animation_Point2DKeyframe_create_handle'));
final _heresdkMapviewCommonBindingslistofSdkAnimationPoint2dkeyframeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_animation_Point2DKeyframe_release_handle'));
final _heresdkMapviewCommonBindingslistofSdkAnimationPoint2dkeyframeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_animation_Point2DKeyframe_insert'));
final _heresdkMapviewCommonBindingslistofSdkAnimationPoint2dkeyframeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_animation_Point2DKeyframe_iterator'));
final _heresdkMapviewCommonBindingslistofSdkAnimationPoint2dkeyframeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_animation_Point2DKeyframe_iterator_release_handle'));
final _heresdkMapviewCommonBindingslistofSdkAnimationPoint2dkeyframeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_animation_Point2DKeyframe_iterator_is_valid'));
final _heresdkMapviewCommonBindingslistofSdkAnimationPoint2dkeyframeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_animation_Point2DKeyframe_iterator_increment'));
final _heresdkMapviewCommonBindingslistofSdkAnimationPoint2dkeyframeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_animation_Point2DKeyframe_iterator_get'));

Pointer<Void> heresdkMapviewCommonBindingslistofSdkAnimationPoint2dkeyframeToFfi(List<Point2DKeyframe> value) {
  final _result = _heresdkMapviewCommonBindingslistofSdkAnimationPoint2dkeyframeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkAnimationPoint2dkeyframeToFfi(element);
    _heresdkMapviewCommonBindingslistofSdkAnimationPoint2dkeyframeInsert(_result, _elementHandle);
    sdkAnimationPoint2dkeyframeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Point2DKeyframe> heresdkMapviewCommonBindingslistofSdkAnimationPoint2dkeyframeFromFfi(Pointer<Void> handle) {
  final result = List<Point2DKeyframe>.empty(growable: true);
  final _iteratorHandle = _heresdkMapviewCommonBindingslistofSdkAnimationPoint2dkeyframeIterator(handle);
  while (_heresdkMapviewCommonBindingslistofSdkAnimationPoint2dkeyframeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkMapviewCommonBindingslistofSdkAnimationPoint2dkeyframeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkAnimationPoint2dkeyframeFromFfi(_elementHandle));
    } finally {
      sdkAnimationPoint2dkeyframeReleaseFfiHandle(_elementHandle);
    }
    _heresdkMapviewCommonBindingslistofSdkAnimationPoint2dkeyframeIteratorIncrement(_iteratorHandle);
  }
  _heresdkMapviewCommonBindingslistofSdkAnimationPoint2dkeyframeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMapviewCommonBindingslistofSdkAnimationPoint2dkeyframeReleaseFfiHandle(Pointer<Void> handle) => _heresdkMapviewCommonBindingslistofSdkAnimationPoint2dkeyframeReleaseHandle(handle);

final _heresdkMapviewCommonBindingslistofSdkAnimationPoint2dkeyframeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_animation_Point2DKeyframe_create_handle_nullable'));
final _heresdkMapviewCommonBindingslistofSdkAnimationPoint2dkeyframeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_animation_Point2DKeyframe_release_handle_nullable'));
final _heresdkMapviewCommonBindingslistofSdkAnimationPoint2dkeyframeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_animation_Point2DKeyframe_get_value_nullable'));

Pointer<Void> heresdkMapviewCommonBindingslistofSdkAnimationPoint2dkeyframeToFfiNullable(List<Point2DKeyframe>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMapviewCommonBindingslistofSdkAnimationPoint2dkeyframeToFfi(value);
  final result = _heresdkMapviewCommonBindingslistofSdkAnimationPoint2dkeyframeCreateHandleNullable(_handle);
  heresdkMapviewCommonBindingslistofSdkAnimationPoint2dkeyframeReleaseFfiHandle(_handle);
  return result;
}

List<Point2DKeyframe>? heresdkMapviewCommonBindingslistofSdkAnimationPoint2dkeyframeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkMapviewCommonBindingslistofSdkAnimationPoint2dkeyframeGetValueNullable(handle);
  final result = heresdkMapviewCommonBindingslistofSdkAnimationPoint2dkeyframeFromFfi(_handle);
  heresdkMapviewCommonBindingslistofSdkAnimationPoint2dkeyframeReleaseFfiHandle(_handle);
  return result;
}

void heresdkMapviewCommonBindingslistofSdkAnimationPoint2dkeyframeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMapviewCommonBindingslistofSdkAnimationPoint2dkeyframeReleaseHandleNullable(handle);

final _heresdkMapviewCommonBindingslistofSdkAnimationScalarkeyframeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_animation_ScalarKeyframe_create_handle'));
final _heresdkMapviewCommonBindingslistofSdkAnimationScalarkeyframeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_animation_ScalarKeyframe_release_handle'));
final _heresdkMapviewCommonBindingslistofSdkAnimationScalarkeyframeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_animation_ScalarKeyframe_insert'));
final _heresdkMapviewCommonBindingslistofSdkAnimationScalarkeyframeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_animation_ScalarKeyframe_iterator'));
final _heresdkMapviewCommonBindingslistofSdkAnimationScalarkeyframeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_animation_ScalarKeyframe_iterator_release_handle'));
final _heresdkMapviewCommonBindingslistofSdkAnimationScalarkeyframeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_animation_ScalarKeyframe_iterator_is_valid'));
final _heresdkMapviewCommonBindingslistofSdkAnimationScalarkeyframeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_animation_ScalarKeyframe_iterator_increment'));
final _heresdkMapviewCommonBindingslistofSdkAnimationScalarkeyframeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_animation_ScalarKeyframe_iterator_get'));

Pointer<Void> heresdkMapviewCommonBindingslistofSdkAnimationScalarkeyframeToFfi(List<ScalarKeyframe> value) {
  final _result = _heresdkMapviewCommonBindingslistofSdkAnimationScalarkeyframeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkAnimationScalarkeyframeToFfi(element);
    _heresdkMapviewCommonBindingslistofSdkAnimationScalarkeyframeInsert(_result, _elementHandle);
    sdkAnimationScalarkeyframeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<ScalarKeyframe> heresdkMapviewCommonBindingslistofSdkAnimationScalarkeyframeFromFfi(Pointer<Void> handle) {
  final result = List<ScalarKeyframe>.empty(growable: true);
  final _iteratorHandle = _heresdkMapviewCommonBindingslistofSdkAnimationScalarkeyframeIterator(handle);
  while (_heresdkMapviewCommonBindingslistofSdkAnimationScalarkeyframeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkMapviewCommonBindingslistofSdkAnimationScalarkeyframeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkAnimationScalarkeyframeFromFfi(_elementHandle));
    } finally {
      sdkAnimationScalarkeyframeReleaseFfiHandle(_elementHandle);
    }
    _heresdkMapviewCommonBindingslistofSdkAnimationScalarkeyframeIteratorIncrement(_iteratorHandle);
  }
  _heresdkMapviewCommonBindingslistofSdkAnimationScalarkeyframeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMapviewCommonBindingslistofSdkAnimationScalarkeyframeReleaseFfiHandle(Pointer<Void> handle) => _heresdkMapviewCommonBindingslistofSdkAnimationScalarkeyframeReleaseHandle(handle);

final _heresdkMapviewCommonBindingslistofSdkAnimationScalarkeyframeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_animation_ScalarKeyframe_create_handle_nullable'));
final _heresdkMapviewCommonBindingslistofSdkAnimationScalarkeyframeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_animation_ScalarKeyframe_release_handle_nullable'));
final _heresdkMapviewCommonBindingslistofSdkAnimationScalarkeyframeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_animation_ScalarKeyframe_get_value_nullable'));

Pointer<Void> heresdkMapviewCommonBindingslistofSdkAnimationScalarkeyframeToFfiNullable(List<ScalarKeyframe>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMapviewCommonBindingslistofSdkAnimationScalarkeyframeToFfi(value);
  final result = _heresdkMapviewCommonBindingslistofSdkAnimationScalarkeyframeCreateHandleNullable(_handle);
  heresdkMapviewCommonBindingslistofSdkAnimationScalarkeyframeReleaseFfiHandle(_handle);
  return result;
}

List<ScalarKeyframe>? heresdkMapviewCommonBindingslistofSdkAnimationScalarkeyframeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkMapviewCommonBindingslistofSdkAnimationScalarkeyframeGetValueNullable(handle);
  final result = heresdkMapviewCommonBindingslistofSdkAnimationScalarkeyframeFromFfi(_handle);
  heresdkMapviewCommonBindingslistofSdkAnimationScalarkeyframeReleaseFfiHandle(_handle);
  return result;
}

void heresdkMapviewCommonBindingslistofSdkAnimationScalarkeyframeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMapviewCommonBindingslistofSdkAnimationScalarkeyframeReleaseHandleNullable(handle);

final _heresdkMapviewCommonBindingslistofSdkCoreGeocoordinatesCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_GeoCoordinates_create_handle'));
final _heresdkMapviewCommonBindingslistofSdkCoreGeocoordinatesReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_GeoCoordinates_release_handle'));
final _heresdkMapviewCommonBindingslistofSdkCoreGeocoordinatesInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_GeoCoordinates_insert'));
final _heresdkMapviewCommonBindingslistofSdkCoreGeocoordinatesIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_GeoCoordinates_iterator'));
final _heresdkMapviewCommonBindingslistofSdkCoreGeocoordinatesIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_GeoCoordinates_iterator_release_handle'));
final _heresdkMapviewCommonBindingslistofSdkCoreGeocoordinatesIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_GeoCoordinates_iterator_is_valid'));
final _heresdkMapviewCommonBindingslistofSdkCoreGeocoordinatesIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_GeoCoordinates_iterator_increment'));
final _heresdkMapviewCommonBindingslistofSdkCoreGeocoordinatesIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_GeoCoordinates_iterator_get'));

Pointer<Void> heresdkMapviewCommonBindingslistofSdkCoreGeocoordinatesToFfi(List<GeoCoordinates> value) {
  final _result = _heresdkMapviewCommonBindingslistofSdkCoreGeocoordinatesCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreGeocoordinatesToFfi(element);
    _heresdkMapviewCommonBindingslistofSdkCoreGeocoordinatesInsert(_result, _elementHandle);
    sdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoCoordinates> heresdkMapviewCommonBindingslistofSdkCoreGeocoordinatesFromFfi(Pointer<Void> handle) {
  final result = List<GeoCoordinates>.empty(growable: true);
  final _iteratorHandle = _heresdkMapviewCommonBindingslistofSdkCoreGeocoordinatesIterator(handle);
  while (_heresdkMapviewCommonBindingslistofSdkCoreGeocoordinatesIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkMapviewCommonBindingslistofSdkCoreGeocoordinatesIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreGeocoordinatesFromFfi(_elementHandle));
    } finally {
      sdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
    }
    _heresdkMapviewCommonBindingslistofSdkCoreGeocoordinatesIteratorIncrement(_iteratorHandle);
  }
  _heresdkMapviewCommonBindingslistofSdkCoreGeocoordinatesIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMapviewCommonBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(Pointer<Void> handle) => _heresdkMapviewCommonBindingslistofSdkCoreGeocoordinatesReleaseHandle(handle);

final _heresdkMapviewCommonBindingslistofSdkCoreGeocoordinatesCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_GeoCoordinates_create_handle_nullable'));
final _heresdkMapviewCommonBindingslistofSdkCoreGeocoordinatesReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_GeoCoordinates_release_handle_nullable'));
final _heresdkMapviewCommonBindingslistofSdkCoreGeocoordinatesGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_GeoCoordinates_get_value_nullable'));

Pointer<Void> heresdkMapviewCommonBindingslistofSdkCoreGeocoordinatesToFfiNullable(List<GeoCoordinates>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMapviewCommonBindingslistofSdkCoreGeocoordinatesToFfi(value);
  final result = _heresdkMapviewCommonBindingslistofSdkCoreGeocoordinatesCreateHandleNullable(_handle);
  heresdkMapviewCommonBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

List<GeoCoordinates>? heresdkMapviewCommonBindingslistofSdkCoreGeocoordinatesFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkMapviewCommonBindingslistofSdkCoreGeocoordinatesGetValueNullable(handle);
  final result = heresdkMapviewCommonBindingslistofSdkCoreGeocoordinatesFromFfi(_handle);
  heresdkMapviewCommonBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

void heresdkMapviewCommonBindingslistofSdkCoreGeocoordinatesReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMapviewCommonBindingslistofSdkCoreGeocoordinatesReleaseHandleNullable(handle);

final _heresdkMapviewCommonBindingslistofSdkCoreLocalizedtextCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_LocalizedText_create_handle'));
final _heresdkMapviewCommonBindingslistofSdkCoreLocalizedtextReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_LocalizedText_release_handle'));
final _heresdkMapviewCommonBindingslistofSdkCoreLocalizedtextInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_LocalizedText_insert'));
final _heresdkMapviewCommonBindingslistofSdkCoreLocalizedtextIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_LocalizedText_iterator'));
final _heresdkMapviewCommonBindingslistofSdkCoreLocalizedtextIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_LocalizedText_iterator_release_handle'));
final _heresdkMapviewCommonBindingslistofSdkCoreLocalizedtextIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_LocalizedText_iterator_is_valid'));
final _heresdkMapviewCommonBindingslistofSdkCoreLocalizedtextIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_LocalizedText_iterator_increment'));
final _heresdkMapviewCommonBindingslistofSdkCoreLocalizedtextIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_LocalizedText_iterator_get'));

Pointer<Void> heresdkMapviewCommonBindingslistofSdkCoreLocalizedtextToFfi(List<LocalizedText> value) {
  final _result = _heresdkMapviewCommonBindingslistofSdkCoreLocalizedtextCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreLocalizedtextToFfi(element);
    _heresdkMapviewCommonBindingslistofSdkCoreLocalizedtextInsert(_result, _elementHandle);
    sdkCoreLocalizedtextReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<LocalizedText> heresdkMapviewCommonBindingslistofSdkCoreLocalizedtextFromFfi(Pointer<Void> handle) {
  final result = List<LocalizedText>.empty(growable: true);
  final _iteratorHandle = _heresdkMapviewCommonBindingslistofSdkCoreLocalizedtextIterator(handle);
  while (_heresdkMapviewCommonBindingslistofSdkCoreLocalizedtextIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkMapviewCommonBindingslistofSdkCoreLocalizedtextIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreLocalizedtextFromFfi(_elementHandle));
    } finally {
      sdkCoreLocalizedtextReleaseFfiHandle(_elementHandle);
    }
    _heresdkMapviewCommonBindingslistofSdkCoreLocalizedtextIteratorIncrement(_iteratorHandle);
  }
  _heresdkMapviewCommonBindingslistofSdkCoreLocalizedtextIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMapviewCommonBindingslistofSdkCoreLocalizedtextReleaseFfiHandle(Pointer<Void> handle) => _heresdkMapviewCommonBindingslistofSdkCoreLocalizedtextReleaseHandle(handle);

final _heresdkMapviewCommonBindingslistofSdkCoreLocalizedtextCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_LocalizedText_create_handle_nullable'));
final _heresdkMapviewCommonBindingslistofSdkCoreLocalizedtextReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_LocalizedText_release_handle_nullable'));
final _heresdkMapviewCommonBindingslistofSdkCoreLocalizedtextGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_LocalizedText_get_value_nullable'));

Pointer<Void> heresdkMapviewCommonBindingslistofSdkCoreLocalizedtextToFfiNullable(List<LocalizedText>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMapviewCommonBindingslistofSdkCoreLocalizedtextToFfi(value);
  final result = _heresdkMapviewCommonBindingslistofSdkCoreLocalizedtextCreateHandleNullable(_handle);
  heresdkMapviewCommonBindingslistofSdkCoreLocalizedtextReleaseFfiHandle(_handle);
  return result;
}

List<LocalizedText>? heresdkMapviewCommonBindingslistofSdkCoreLocalizedtextFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkMapviewCommonBindingslistofSdkCoreLocalizedtextGetValueNullable(handle);
  final result = heresdkMapviewCommonBindingslistofSdkCoreLocalizedtextFromFfi(_handle);
  heresdkMapviewCommonBindingslistofSdkCoreLocalizedtextReleaseFfiHandle(_handle);
  return result;
}

void heresdkMapviewCommonBindingslistofSdkCoreLocalizedtextReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMapviewCommonBindingslistofSdkCoreLocalizedtextReleaseHandleNullable(handle);

final _heresdkMapviewCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_create_handle'));
final _heresdkMapviewCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_release_handle'));
final _heresdkMapviewCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_insert'));
final _heresdkMapviewCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator'));
final _heresdkMapviewCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator_release_handle'));
final _heresdkMapviewCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator_is_valid'));
final _heresdkMapviewCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator_increment'));
final _heresdkMapviewCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator_get'));

Pointer<Void> heresdkMapviewCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureToFfi(List<LayerConfigurationFeature> value) {
  final _result = _heresdkMapviewCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreEngineLayerconfigurationFeatureToFfi(element);
    _heresdkMapviewCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureInsert(_result, _elementHandle);
    sdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<LayerConfigurationFeature> heresdkMapviewCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureFromFfi(Pointer<Void> handle) {
  final result = List<LayerConfigurationFeature>.empty(growable: true);
  final _iteratorHandle = _heresdkMapviewCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureIterator(handle);
  while (_heresdkMapviewCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkMapviewCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreEngineLayerconfigurationFeatureFromFfi(_elementHandle));
    } finally {
      sdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(_elementHandle);
    }
    _heresdkMapviewCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorIncrement(_iteratorHandle);
  }
  _heresdkMapviewCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMapviewCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(Pointer<Void> handle) => _heresdkMapviewCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseHandle(handle);

final _heresdkMapviewCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_create_handle_nullable'));
final _heresdkMapviewCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_release_handle_nullable'));
final _heresdkMapviewCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_get_value_nullable'));

Pointer<Void> heresdkMapviewCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureToFfiNullable(List<LayerConfigurationFeature>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMapviewCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureToFfi(value);
  final result = _heresdkMapviewCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureCreateHandleNullable(_handle);
  heresdkMapviewCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(_handle);
  return result;
}

List<LayerConfigurationFeature>? heresdkMapviewCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkMapviewCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureGetValueNullable(handle);
  final result = heresdkMapviewCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureFromFfi(_handle);
  heresdkMapviewCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(_handle);
  return result;
}

void heresdkMapviewCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMapviewCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseHandleNullable(handle);

final _heresdkMapviewCommonBindingslistofSdkMapviewMapcamerakeyframetrackCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_create_handle'));
final _heresdkMapviewCommonBindingslistofSdkMapviewMapcamerakeyframetrackReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_release_handle'));
final _heresdkMapviewCommonBindingslistofSdkMapviewMapcamerakeyframetrackInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_insert'));
final _heresdkMapviewCommonBindingslistofSdkMapviewMapcamerakeyframetrackIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_iterator'));
final _heresdkMapviewCommonBindingslistofSdkMapviewMapcamerakeyframetrackIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_iterator_release_handle'));
final _heresdkMapviewCommonBindingslistofSdkMapviewMapcamerakeyframetrackIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_iterator_is_valid'));
final _heresdkMapviewCommonBindingslistofSdkMapviewMapcamerakeyframetrackIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_iterator_increment'));
final _heresdkMapviewCommonBindingslistofSdkMapviewMapcamerakeyframetrackIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_iterator_get'));

Pointer<Void> heresdkMapviewCommonBindingslistofSdkMapviewMapcamerakeyframetrackToFfi(List<MapCameraKeyframeTrack> value) {
  final _result = _heresdkMapviewCommonBindingslistofSdkMapviewMapcamerakeyframetrackCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkMapviewMapcamerakeyframetrackToFfi(element);
    _heresdkMapviewCommonBindingslistofSdkMapviewMapcamerakeyframetrackInsert(_result, _elementHandle);
    sdkMapviewMapcamerakeyframetrackReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<MapCameraKeyframeTrack> heresdkMapviewCommonBindingslistofSdkMapviewMapcamerakeyframetrackFromFfi(Pointer<Void> handle) {
  final result = List<MapCameraKeyframeTrack>.empty(growable: true);
  final _iteratorHandle = _heresdkMapviewCommonBindingslistofSdkMapviewMapcamerakeyframetrackIterator(handle);
  while (_heresdkMapviewCommonBindingslistofSdkMapviewMapcamerakeyframetrackIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkMapviewCommonBindingslistofSdkMapviewMapcamerakeyframetrackIteratorGet(_iteratorHandle);
    try {
      result.add(sdkMapviewMapcamerakeyframetrackFromFfi(_elementHandle));
    } finally {
      sdkMapviewMapcamerakeyframetrackReleaseFfiHandle(_elementHandle);
    }
    _heresdkMapviewCommonBindingslistofSdkMapviewMapcamerakeyframetrackIteratorIncrement(_iteratorHandle);
  }
  _heresdkMapviewCommonBindingslistofSdkMapviewMapcamerakeyframetrackIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMapviewCommonBindingslistofSdkMapviewMapcamerakeyframetrackReleaseFfiHandle(Pointer<Void> handle) => _heresdkMapviewCommonBindingslistofSdkMapviewMapcamerakeyframetrackReleaseHandle(handle);

final _heresdkMapviewCommonBindingslistofSdkMapviewMapcamerakeyframetrackCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_create_handle_nullable'));
final _heresdkMapviewCommonBindingslistofSdkMapviewMapcamerakeyframetrackReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_release_handle_nullable'));
final _heresdkMapviewCommonBindingslistofSdkMapviewMapcamerakeyframetrackGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_get_value_nullable'));

Pointer<Void> heresdkMapviewCommonBindingslistofSdkMapviewMapcamerakeyframetrackToFfiNullable(List<MapCameraKeyframeTrack>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMapviewCommonBindingslistofSdkMapviewMapcamerakeyframetrackToFfi(value);
  final result = _heresdkMapviewCommonBindingslistofSdkMapviewMapcamerakeyframetrackCreateHandleNullable(_handle);
  heresdkMapviewCommonBindingslistofSdkMapviewMapcamerakeyframetrackReleaseFfiHandle(_handle);
  return result;
}

List<MapCameraKeyframeTrack>? heresdkMapviewCommonBindingslistofSdkMapviewMapcamerakeyframetrackFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkMapviewCommonBindingslistofSdkMapviewMapcamerakeyframetrackGetValueNullable(handle);
  final result = heresdkMapviewCommonBindingslistofSdkMapviewMapcamerakeyframetrackFromFfi(_handle);
  heresdkMapviewCommonBindingslistofSdkMapviewMapcamerakeyframetrackReleaseFfiHandle(_handle);
  return result;
}

void heresdkMapviewCommonBindingslistofSdkMapviewMapcamerakeyframetrackReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMapviewCommonBindingslistofSdkMapviewMapcamerakeyframetrackReleaseHandleNullable(handle);

final _heresdkMapviewCommonBindingslistofSdkMapviewMapmarkerCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_MapMarker_create_handle'));
final _heresdkMapviewCommonBindingslistofSdkMapviewMapmarkerReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_MapMarker_release_handle'));
final _heresdkMapviewCommonBindingslistofSdkMapviewMapmarkerInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_MapMarker_insert'));
final _heresdkMapviewCommonBindingslistofSdkMapviewMapmarkerIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_MapMarker_iterator'));
final _heresdkMapviewCommonBindingslistofSdkMapviewMapmarkerIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_MapMarker_iterator_release_handle'));
final _heresdkMapviewCommonBindingslistofSdkMapviewMapmarkerIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_MapMarker_iterator_is_valid'));
final _heresdkMapviewCommonBindingslistofSdkMapviewMapmarkerIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_MapMarker_iterator_increment'));
final _heresdkMapviewCommonBindingslistofSdkMapviewMapmarkerIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_MapMarker_iterator_get'));

Pointer<Void> heresdkMapviewCommonBindingslistofSdkMapviewMapmarkerToFfi(List<MapMarker> value) {
  final _result = _heresdkMapviewCommonBindingslistofSdkMapviewMapmarkerCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkMapviewMapmarkerToFfi(element);
    _heresdkMapviewCommonBindingslistofSdkMapviewMapmarkerInsert(_result, _elementHandle);
    sdkMapviewMapmarkerReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<MapMarker> heresdkMapviewCommonBindingslistofSdkMapviewMapmarkerFromFfi(Pointer<Void> handle) {
  final result = List<MapMarker>.empty(growable: true);
  final _iteratorHandle = _heresdkMapviewCommonBindingslistofSdkMapviewMapmarkerIterator(handle);
  while (_heresdkMapviewCommonBindingslistofSdkMapviewMapmarkerIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkMapviewCommonBindingslistofSdkMapviewMapmarkerIteratorGet(_iteratorHandle);
    try {
      result.add(sdkMapviewMapmarkerFromFfi(_elementHandle));
    } finally {
      sdkMapviewMapmarkerReleaseFfiHandle(_elementHandle);
    }
    _heresdkMapviewCommonBindingslistofSdkMapviewMapmarkerIteratorIncrement(_iteratorHandle);
  }
  _heresdkMapviewCommonBindingslistofSdkMapviewMapmarkerIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMapviewCommonBindingslistofSdkMapviewMapmarkerReleaseFfiHandle(Pointer<Void> handle) => _heresdkMapviewCommonBindingslistofSdkMapviewMapmarkerReleaseHandle(handle);

final _heresdkMapviewCommonBindingslistofSdkMapviewMapmarkerCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_MapMarker_create_handle_nullable'));
final _heresdkMapviewCommonBindingslistofSdkMapviewMapmarkerReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_MapMarker_release_handle_nullable'));
final _heresdkMapviewCommonBindingslistofSdkMapviewMapmarkerGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsListOf_sdk_mapview_MapMarker_get_value_nullable'));

Pointer<Void> heresdkMapviewCommonBindingslistofSdkMapviewMapmarkerToFfiNullable(List<MapMarker>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMapviewCommonBindingslistofSdkMapviewMapmarkerToFfi(value);
  final result = _heresdkMapviewCommonBindingslistofSdkMapviewMapmarkerCreateHandleNullable(_handle);
  heresdkMapviewCommonBindingslistofSdkMapviewMapmarkerReleaseFfiHandle(_handle);
  return result;
}

List<MapMarker>? heresdkMapviewCommonBindingslistofSdkMapviewMapmarkerFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkMapviewCommonBindingslistofSdkMapviewMapmarkerGetValueNullable(handle);
  final result = heresdkMapviewCommonBindingslistofSdkMapviewMapmarkerFromFfi(_handle);
  heresdkMapviewCommonBindingslistofSdkMapviewMapmarkerReleaseFfiHandle(_handle);
  return result;
}

void heresdkMapviewCommonBindingslistofSdkMapviewMapmarkerReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMapviewCommonBindingslistofSdkMapviewMapmarkerReleaseHandleNullable(handle);

final _heresdkMapviewCommonBindingsmapofSdkCoreEngineEnginebaseurlToStringCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_mapview_common_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_create_handle'));
final _heresdkMapviewCommonBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_release_handle'));
final _heresdkMapviewCommonBindingsmapofSdkCoreEngineEnginebaseurlToStringPut = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32, Pointer<Void>),
    void Function(Pointer<Void>, int, Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_put'));
final _heresdkMapviewCommonBindingsmapofSdkCoreEngineEnginebaseurlToStringIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_iterator'));
final _heresdkMapviewCommonBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_iterator_release_handle'));
final _heresdkMapviewCommonBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_iterator_is_valid'));
final _heresdkMapviewCommonBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_iterator_increment'));
final _heresdkMapviewCommonBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorGetKey = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_iterator_get_key'));
final _heresdkMapviewCommonBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorGetValue = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_iterator_get_value'));

Pointer<Void> heresdkMapviewCommonBindingsmapofSdkCoreEngineEnginebaseurlToStringToFfi(Map<EngineBaseURL, String> value) {
  final _result = _heresdkMapviewCommonBindingsmapofSdkCoreEngineEnginebaseurlToStringCreateHandle();
  for (final entry in value.entries) {
    final _keyHandle = sdkCoreEngineEnginebaseurlToFfi(entry.key);
    final _valueHandle = stringToFfi(entry.value);
    _heresdkMapviewCommonBindingsmapofSdkCoreEngineEnginebaseurlToStringPut(_result, _keyHandle, _valueHandle);
    sdkCoreEngineEnginebaseurlReleaseFfiHandle(_keyHandle);
    stringReleaseFfiHandle(_valueHandle);
  }
  return _result;
}

Map<EngineBaseURL, String> heresdkMapviewCommonBindingsmapofSdkCoreEngineEnginebaseurlToStringFromFfi(Pointer<Void> handle) {
  final result = Map<EngineBaseURL, String>();
  final _iteratorHandle = _heresdkMapviewCommonBindingsmapofSdkCoreEngineEnginebaseurlToStringIterator(handle);
  while (_heresdkMapviewCommonBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _keyHandle = _heresdkMapviewCommonBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorGetKey(_iteratorHandle);
    final _valueHandle = _heresdkMapviewCommonBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorGetValue(_iteratorHandle);
    try {
      result[sdkCoreEngineEnginebaseurlFromFfi(_keyHandle)] =
        stringFromFfi(_valueHandle);
    } finally {
      sdkCoreEngineEnginebaseurlReleaseFfiHandle(_keyHandle);
      stringReleaseFfiHandle(_valueHandle);
    }
    _heresdkMapviewCommonBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorIncrement(_iteratorHandle);
  }
  _heresdkMapviewCommonBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMapviewCommonBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseFfiHandle(Pointer<Void> handle) => _heresdkMapviewCommonBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseHandle(handle);

final _heresdkMapviewCommonBindingsmapofSdkCoreEngineEnginebaseurlToStringCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_create_handle_nullable'));
final _heresdkMapviewCommonBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_release_handle_nullable'));
final _heresdkMapviewCommonBindingsmapofSdkCoreEngineEnginebaseurlToStringGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_get_value_nullable'));

Pointer<Void> heresdkMapviewCommonBindingsmapofSdkCoreEngineEnginebaseurlToStringToFfiNullable(Map<EngineBaseURL, String>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMapviewCommonBindingsmapofSdkCoreEngineEnginebaseurlToStringToFfi(value);
  final result = _heresdkMapviewCommonBindingsmapofSdkCoreEngineEnginebaseurlToStringCreateHandleNullable(_handle);
  heresdkMapviewCommonBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseFfiHandle(_handle);
  return result;
}

Map<EngineBaseURL, String>? heresdkMapviewCommonBindingsmapofSdkCoreEngineEnginebaseurlToStringFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkMapviewCommonBindingsmapofSdkCoreEngineEnginebaseurlToStringGetValueNullable(handle);
  final result = heresdkMapviewCommonBindingsmapofSdkCoreEngineEnginebaseurlToStringFromFfi(_handle);
  heresdkMapviewCommonBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseFfiHandle(_handle);
  return result;
}

void heresdkMapviewCommonBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMapviewCommonBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseHandleNullable(handle);


// Copyright (c) 2018-2022 HERE Global B.V. and its affiliate(s).
// All rights reserved.
//
// This software and other materials contain proprietary information
// controlled by HERE and are protected by applicable copyright legislation.
// Any use and utilization of this software and other materials and
// disclosure to any third parties is conditional upon having a separate
// agreement with HERE for the access, use, utilization or disclosure of this
// software. In the absence of such agreement, the use of the software is not
// allowed.
//
























final _heresdkMapviewHarpBindingslistofLocaleCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_Locale_create_handle'));
final _heresdkMapviewHarpBindingslistofLocaleReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_Locale_release_handle'));
final _heresdkMapviewHarpBindingslistofLocaleInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_Locale_insert'));
final _heresdkMapviewHarpBindingslistofLocaleIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_Locale_iterator'));
final _heresdkMapviewHarpBindingslistofLocaleIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_Locale_iterator_release_handle'));
final _heresdkMapviewHarpBindingslistofLocaleIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_Locale_iterator_is_valid'));
final _heresdkMapviewHarpBindingslistofLocaleIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_Locale_iterator_increment'));
final _heresdkMapviewHarpBindingslistofLocaleIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_Locale_iterator_get'));

Pointer<Void> heresdkMapviewHarpBindingslistofLocaleToFfi(List<Locale> value) {
  final _result = _heresdkMapviewHarpBindingslistofLocaleCreateHandle();
  for (final element in value) {
    final _elementHandle = localeToFfi(element);
    _heresdkMapviewHarpBindingslistofLocaleInsert(_result, _elementHandle);
    localeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Locale> heresdkMapviewHarpBindingslistofLocaleFromFfi(Pointer<Void> handle) {
  final result = List<Locale>.empty(growable: true);
  final _iteratorHandle = _heresdkMapviewHarpBindingslistofLocaleIterator(handle);
  while (_heresdkMapviewHarpBindingslistofLocaleIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkMapviewHarpBindingslistofLocaleIteratorGet(_iteratorHandle);
    try {
      result.add(localeFromFfi(_elementHandle));
    } finally {
      localeReleaseFfiHandle(_elementHandle);
    }
    _heresdkMapviewHarpBindingslistofLocaleIteratorIncrement(_iteratorHandle);
  }
  _heresdkMapviewHarpBindingslistofLocaleIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMapviewHarpBindingslistofLocaleReleaseFfiHandle(Pointer<Void> handle) => _heresdkMapviewHarpBindingslistofLocaleReleaseHandle(handle);

final _heresdkMapviewHarpBindingslistofLocaleCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_Locale_create_handle_nullable'));
final _heresdkMapviewHarpBindingslistofLocaleReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_Locale_release_handle_nullable'));
final _heresdkMapviewHarpBindingslistofLocaleGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_Locale_get_value_nullable'));

Pointer<Void> heresdkMapviewHarpBindingslistofLocaleToFfiNullable(List<Locale>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMapviewHarpBindingslistofLocaleToFfi(value);
  final result = _heresdkMapviewHarpBindingslistofLocaleCreateHandleNullable(_handle);
  heresdkMapviewHarpBindingslistofLocaleReleaseFfiHandle(_handle);
  return result;
}

List<Locale>? heresdkMapviewHarpBindingslistofLocaleFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkMapviewHarpBindingslistofLocaleGetValueNullable(handle);
  final result = heresdkMapviewHarpBindingslistofLocaleFromFfi(_handle);
  heresdkMapviewHarpBindingslistofLocaleReleaseFfiHandle(_handle);
  return result;
}

void heresdkMapviewHarpBindingslistofLocaleReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMapviewHarpBindingslistofLocaleReleaseHandleNullable(handle);

final _heresdkMapviewHarpBindingslistofStringCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_String_create_handle'));
final _heresdkMapviewHarpBindingslistofStringReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_String_release_handle'));
final _heresdkMapviewHarpBindingslistofStringInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_String_insert'));
final _heresdkMapviewHarpBindingslistofStringIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_String_iterator'));
final _heresdkMapviewHarpBindingslistofStringIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_String_iterator_release_handle'));
final _heresdkMapviewHarpBindingslistofStringIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_String_iterator_is_valid'));
final _heresdkMapviewHarpBindingslistofStringIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_String_iterator_increment'));
final _heresdkMapviewHarpBindingslistofStringIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_String_iterator_get'));

Pointer<Void> heresdkMapviewHarpBindingslistofStringToFfi(List<String> value) {
  final _result = _heresdkMapviewHarpBindingslistofStringCreateHandle();
  for (final element in value) {
    final _elementHandle = stringToFfi(element);
    _heresdkMapviewHarpBindingslistofStringInsert(_result, _elementHandle);
    stringReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<String> heresdkMapviewHarpBindingslistofStringFromFfi(Pointer<Void> handle) {
  final result = List<String>.empty(growable: true);
  final _iteratorHandle = _heresdkMapviewHarpBindingslistofStringIterator(handle);
  while (_heresdkMapviewHarpBindingslistofStringIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkMapviewHarpBindingslistofStringIteratorGet(_iteratorHandle);
    try {
      result.add(stringFromFfi(_elementHandle));
    } finally {
      stringReleaseFfiHandle(_elementHandle);
    }
    _heresdkMapviewHarpBindingslistofStringIteratorIncrement(_iteratorHandle);
  }
  _heresdkMapviewHarpBindingslistofStringIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMapviewHarpBindingslistofStringReleaseFfiHandle(Pointer<Void> handle) => _heresdkMapviewHarpBindingslistofStringReleaseHandle(handle);

final _heresdkMapviewHarpBindingslistofStringCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_String_create_handle_nullable'));
final _heresdkMapviewHarpBindingslistofStringReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_String_release_handle_nullable'));
final _heresdkMapviewHarpBindingslistofStringGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_String_get_value_nullable'));

Pointer<Void> heresdkMapviewHarpBindingslistofStringToFfiNullable(List<String>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMapviewHarpBindingslistofStringToFfi(value);
  final result = _heresdkMapviewHarpBindingslistofStringCreateHandleNullable(_handle);
  heresdkMapviewHarpBindingslistofStringReleaseFfiHandle(_handle);
  return result;
}

List<String>? heresdkMapviewHarpBindingslistofStringFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkMapviewHarpBindingslistofStringGetValueNullable(handle);
  final result = heresdkMapviewHarpBindingslistofStringFromFfi(_handle);
  heresdkMapviewHarpBindingslistofStringReleaseFfiHandle(_handle);
  return result;
}

void heresdkMapviewHarpBindingslistofStringReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMapviewHarpBindingslistofStringReleaseHandleNullable(handle);

final _heresdkMapviewHarpBindingslistofSdkAnimationAnchor2dkeyframeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_Anchor2DKeyframe_create_handle'));
final _heresdkMapviewHarpBindingslistofSdkAnimationAnchor2dkeyframeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_Anchor2DKeyframe_release_handle'));
final _heresdkMapviewHarpBindingslistofSdkAnimationAnchor2dkeyframeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_Anchor2DKeyframe_insert'));
final _heresdkMapviewHarpBindingslistofSdkAnimationAnchor2dkeyframeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_Anchor2DKeyframe_iterator'));
final _heresdkMapviewHarpBindingslistofSdkAnimationAnchor2dkeyframeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_Anchor2DKeyframe_iterator_release_handle'));
final _heresdkMapviewHarpBindingslistofSdkAnimationAnchor2dkeyframeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_Anchor2DKeyframe_iterator_is_valid'));
final _heresdkMapviewHarpBindingslistofSdkAnimationAnchor2dkeyframeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_Anchor2DKeyframe_iterator_increment'));
final _heresdkMapviewHarpBindingslistofSdkAnimationAnchor2dkeyframeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_Anchor2DKeyframe_iterator_get'));

Pointer<Void> heresdkMapviewHarpBindingslistofSdkAnimationAnchor2dkeyframeToFfi(List<Anchor2DKeyframe> value) {
  final _result = _heresdkMapviewHarpBindingslistofSdkAnimationAnchor2dkeyframeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkAnimationAnchor2dkeyframeToFfi(element);
    _heresdkMapviewHarpBindingslistofSdkAnimationAnchor2dkeyframeInsert(_result, _elementHandle);
    sdkAnimationAnchor2dkeyframeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Anchor2DKeyframe> heresdkMapviewHarpBindingslistofSdkAnimationAnchor2dkeyframeFromFfi(Pointer<Void> handle) {
  final result = List<Anchor2DKeyframe>.empty(growable: true);
  final _iteratorHandle = _heresdkMapviewHarpBindingslistofSdkAnimationAnchor2dkeyframeIterator(handle);
  while (_heresdkMapviewHarpBindingslistofSdkAnimationAnchor2dkeyframeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkMapviewHarpBindingslistofSdkAnimationAnchor2dkeyframeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkAnimationAnchor2dkeyframeFromFfi(_elementHandle));
    } finally {
      sdkAnimationAnchor2dkeyframeReleaseFfiHandle(_elementHandle);
    }
    _heresdkMapviewHarpBindingslistofSdkAnimationAnchor2dkeyframeIteratorIncrement(_iteratorHandle);
  }
  _heresdkMapviewHarpBindingslistofSdkAnimationAnchor2dkeyframeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMapviewHarpBindingslistofSdkAnimationAnchor2dkeyframeReleaseFfiHandle(Pointer<Void> handle) => _heresdkMapviewHarpBindingslistofSdkAnimationAnchor2dkeyframeReleaseHandle(handle);

final _heresdkMapviewHarpBindingslistofSdkAnimationAnchor2dkeyframeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_Anchor2DKeyframe_create_handle_nullable'));
final _heresdkMapviewHarpBindingslistofSdkAnimationAnchor2dkeyframeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_Anchor2DKeyframe_release_handle_nullable'));
final _heresdkMapviewHarpBindingslistofSdkAnimationAnchor2dkeyframeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_Anchor2DKeyframe_get_value_nullable'));

Pointer<Void> heresdkMapviewHarpBindingslistofSdkAnimationAnchor2dkeyframeToFfiNullable(List<Anchor2DKeyframe>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMapviewHarpBindingslistofSdkAnimationAnchor2dkeyframeToFfi(value);
  final result = _heresdkMapviewHarpBindingslistofSdkAnimationAnchor2dkeyframeCreateHandleNullable(_handle);
  heresdkMapviewHarpBindingslistofSdkAnimationAnchor2dkeyframeReleaseFfiHandle(_handle);
  return result;
}

List<Anchor2DKeyframe>? heresdkMapviewHarpBindingslistofSdkAnimationAnchor2dkeyframeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkMapviewHarpBindingslistofSdkAnimationAnchor2dkeyframeGetValueNullable(handle);
  final result = heresdkMapviewHarpBindingslistofSdkAnimationAnchor2dkeyframeFromFfi(_handle);
  heresdkMapviewHarpBindingslistofSdkAnimationAnchor2dkeyframeReleaseFfiHandle(_handle);
  return result;
}

void heresdkMapviewHarpBindingslistofSdkAnimationAnchor2dkeyframeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMapviewHarpBindingslistofSdkAnimationAnchor2dkeyframeReleaseHandleNullable(handle);

final _heresdkMapviewHarpBindingslistofSdkAnimationGeocoordinateskeyframeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_create_handle'));
final _heresdkMapviewHarpBindingslistofSdkAnimationGeocoordinateskeyframeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_release_handle'));
final _heresdkMapviewHarpBindingslistofSdkAnimationGeocoordinateskeyframeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_insert'));
final _heresdkMapviewHarpBindingslistofSdkAnimationGeocoordinateskeyframeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_iterator'));
final _heresdkMapviewHarpBindingslistofSdkAnimationGeocoordinateskeyframeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_iterator_release_handle'));
final _heresdkMapviewHarpBindingslistofSdkAnimationGeocoordinateskeyframeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_iterator_is_valid'));
final _heresdkMapviewHarpBindingslistofSdkAnimationGeocoordinateskeyframeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_iterator_increment'));
final _heresdkMapviewHarpBindingslistofSdkAnimationGeocoordinateskeyframeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_iterator_get'));

Pointer<Void> heresdkMapviewHarpBindingslistofSdkAnimationGeocoordinateskeyframeToFfi(List<GeoCoordinatesKeyframe> value) {
  final _result = _heresdkMapviewHarpBindingslistofSdkAnimationGeocoordinateskeyframeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkAnimationGeocoordinateskeyframeToFfi(element);
    _heresdkMapviewHarpBindingslistofSdkAnimationGeocoordinateskeyframeInsert(_result, _elementHandle);
    sdkAnimationGeocoordinateskeyframeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoCoordinatesKeyframe> heresdkMapviewHarpBindingslistofSdkAnimationGeocoordinateskeyframeFromFfi(Pointer<Void> handle) {
  final result = List<GeoCoordinatesKeyframe>.empty(growable: true);
  final _iteratorHandle = _heresdkMapviewHarpBindingslistofSdkAnimationGeocoordinateskeyframeIterator(handle);
  while (_heresdkMapviewHarpBindingslistofSdkAnimationGeocoordinateskeyframeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkMapviewHarpBindingslistofSdkAnimationGeocoordinateskeyframeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkAnimationGeocoordinateskeyframeFromFfi(_elementHandle));
    } finally {
      sdkAnimationGeocoordinateskeyframeReleaseFfiHandle(_elementHandle);
    }
    _heresdkMapviewHarpBindingslistofSdkAnimationGeocoordinateskeyframeIteratorIncrement(_iteratorHandle);
  }
  _heresdkMapviewHarpBindingslistofSdkAnimationGeocoordinateskeyframeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMapviewHarpBindingslistofSdkAnimationGeocoordinateskeyframeReleaseFfiHandle(Pointer<Void> handle) => _heresdkMapviewHarpBindingslistofSdkAnimationGeocoordinateskeyframeReleaseHandle(handle);

final _heresdkMapviewHarpBindingslistofSdkAnimationGeocoordinateskeyframeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_create_handle_nullable'));
final _heresdkMapviewHarpBindingslistofSdkAnimationGeocoordinateskeyframeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_release_handle_nullable'));
final _heresdkMapviewHarpBindingslistofSdkAnimationGeocoordinateskeyframeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_get_value_nullable'));

Pointer<Void> heresdkMapviewHarpBindingslistofSdkAnimationGeocoordinateskeyframeToFfiNullable(List<GeoCoordinatesKeyframe>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMapviewHarpBindingslistofSdkAnimationGeocoordinateskeyframeToFfi(value);
  final result = _heresdkMapviewHarpBindingslistofSdkAnimationGeocoordinateskeyframeCreateHandleNullable(_handle);
  heresdkMapviewHarpBindingslistofSdkAnimationGeocoordinateskeyframeReleaseFfiHandle(_handle);
  return result;
}

List<GeoCoordinatesKeyframe>? heresdkMapviewHarpBindingslistofSdkAnimationGeocoordinateskeyframeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkMapviewHarpBindingslistofSdkAnimationGeocoordinateskeyframeGetValueNullable(handle);
  final result = heresdkMapviewHarpBindingslistofSdkAnimationGeocoordinateskeyframeFromFfi(_handle);
  heresdkMapviewHarpBindingslistofSdkAnimationGeocoordinateskeyframeReleaseFfiHandle(_handle);
  return result;
}

void heresdkMapviewHarpBindingslistofSdkAnimationGeocoordinateskeyframeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMapviewHarpBindingslistofSdkAnimationGeocoordinateskeyframeReleaseHandleNullable(handle);

final _heresdkMapviewHarpBindingslistofSdkAnimationGeoorientationkeyframeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_GeoOrientationKeyframe_create_handle'));
final _heresdkMapviewHarpBindingslistofSdkAnimationGeoorientationkeyframeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_GeoOrientationKeyframe_release_handle'));
final _heresdkMapviewHarpBindingslistofSdkAnimationGeoorientationkeyframeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_GeoOrientationKeyframe_insert'));
final _heresdkMapviewHarpBindingslistofSdkAnimationGeoorientationkeyframeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_GeoOrientationKeyframe_iterator'));
final _heresdkMapviewHarpBindingslistofSdkAnimationGeoorientationkeyframeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_GeoOrientationKeyframe_iterator_release_handle'));
final _heresdkMapviewHarpBindingslistofSdkAnimationGeoorientationkeyframeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_GeoOrientationKeyframe_iterator_is_valid'));
final _heresdkMapviewHarpBindingslistofSdkAnimationGeoorientationkeyframeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_GeoOrientationKeyframe_iterator_increment'));
final _heresdkMapviewHarpBindingslistofSdkAnimationGeoorientationkeyframeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_GeoOrientationKeyframe_iterator_get'));

Pointer<Void> heresdkMapviewHarpBindingslistofSdkAnimationGeoorientationkeyframeToFfi(List<GeoOrientationKeyframe> value) {
  final _result = _heresdkMapviewHarpBindingslistofSdkAnimationGeoorientationkeyframeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkAnimationGeoorientationkeyframeToFfi(element);
    _heresdkMapviewHarpBindingslistofSdkAnimationGeoorientationkeyframeInsert(_result, _elementHandle);
    sdkAnimationGeoorientationkeyframeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoOrientationKeyframe> heresdkMapviewHarpBindingslistofSdkAnimationGeoorientationkeyframeFromFfi(Pointer<Void> handle) {
  final result = List<GeoOrientationKeyframe>.empty(growable: true);
  final _iteratorHandle = _heresdkMapviewHarpBindingslistofSdkAnimationGeoorientationkeyframeIterator(handle);
  while (_heresdkMapviewHarpBindingslistofSdkAnimationGeoorientationkeyframeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkMapviewHarpBindingslistofSdkAnimationGeoorientationkeyframeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkAnimationGeoorientationkeyframeFromFfi(_elementHandle));
    } finally {
      sdkAnimationGeoorientationkeyframeReleaseFfiHandle(_elementHandle);
    }
    _heresdkMapviewHarpBindingslistofSdkAnimationGeoorientationkeyframeIteratorIncrement(_iteratorHandle);
  }
  _heresdkMapviewHarpBindingslistofSdkAnimationGeoorientationkeyframeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMapviewHarpBindingslistofSdkAnimationGeoorientationkeyframeReleaseFfiHandle(Pointer<Void> handle) => _heresdkMapviewHarpBindingslistofSdkAnimationGeoorientationkeyframeReleaseHandle(handle);

final _heresdkMapviewHarpBindingslistofSdkAnimationGeoorientationkeyframeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_GeoOrientationKeyframe_create_handle_nullable'));
final _heresdkMapviewHarpBindingslistofSdkAnimationGeoorientationkeyframeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_GeoOrientationKeyframe_release_handle_nullable'));
final _heresdkMapviewHarpBindingslistofSdkAnimationGeoorientationkeyframeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_GeoOrientationKeyframe_get_value_nullable'));

Pointer<Void> heresdkMapviewHarpBindingslistofSdkAnimationGeoorientationkeyframeToFfiNullable(List<GeoOrientationKeyframe>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMapviewHarpBindingslistofSdkAnimationGeoorientationkeyframeToFfi(value);
  final result = _heresdkMapviewHarpBindingslistofSdkAnimationGeoorientationkeyframeCreateHandleNullable(_handle);
  heresdkMapviewHarpBindingslistofSdkAnimationGeoorientationkeyframeReleaseFfiHandle(_handle);
  return result;
}

List<GeoOrientationKeyframe>? heresdkMapviewHarpBindingslistofSdkAnimationGeoorientationkeyframeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkMapviewHarpBindingslistofSdkAnimationGeoorientationkeyframeGetValueNullable(handle);
  final result = heresdkMapviewHarpBindingslistofSdkAnimationGeoorientationkeyframeFromFfi(_handle);
  heresdkMapviewHarpBindingslistofSdkAnimationGeoorientationkeyframeReleaseFfiHandle(_handle);
  return result;
}

void heresdkMapviewHarpBindingslistofSdkAnimationGeoorientationkeyframeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMapviewHarpBindingslistofSdkAnimationGeoorientationkeyframeReleaseHandleNullable(handle);

final _heresdkMapviewHarpBindingslistofSdkAnimationPoint2dkeyframeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_Point2DKeyframe_create_handle'));
final _heresdkMapviewHarpBindingslistofSdkAnimationPoint2dkeyframeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_Point2DKeyframe_release_handle'));
final _heresdkMapviewHarpBindingslistofSdkAnimationPoint2dkeyframeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_Point2DKeyframe_insert'));
final _heresdkMapviewHarpBindingslistofSdkAnimationPoint2dkeyframeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_Point2DKeyframe_iterator'));
final _heresdkMapviewHarpBindingslistofSdkAnimationPoint2dkeyframeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_Point2DKeyframe_iterator_release_handle'));
final _heresdkMapviewHarpBindingslistofSdkAnimationPoint2dkeyframeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_Point2DKeyframe_iterator_is_valid'));
final _heresdkMapviewHarpBindingslistofSdkAnimationPoint2dkeyframeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_Point2DKeyframe_iterator_increment'));
final _heresdkMapviewHarpBindingslistofSdkAnimationPoint2dkeyframeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_Point2DKeyframe_iterator_get'));

Pointer<Void> heresdkMapviewHarpBindingslistofSdkAnimationPoint2dkeyframeToFfi(List<Point2DKeyframe> value) {
  final _result = _heresdkMapviewHarpBindingslistofSdkAnimationPoint2dkeyframeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkAnimationPoint2dkeyframeToFfi(element);
    _heresdkMapviewHarpBindingslistofSdkAnimationPoint2dkeyframeInsert(_result, _elementHandle);
    sdkAnimationPoint2dkeyframeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Point2DKeyframe> heresdkMapviewHarpBindingslistofSdkAnimationPoint2dkeyframeFromFfi(Pointer<Void> handle) {
  final result = List<Point2DKeyframe>.empty(growable: true);
  final _iteratorHandle = _heresdkMapviewHarpBindingslistofSdkAnimationPoint2dkeyframeIterator(handle);
  while (_heresdkMapviewHarpBindingslistofSdkAnimationPoint2dkeyframeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkMapviewHarpBindingslistofSdkAnimationPoint2dkeyframeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkAnimationPoint2dkeyframeFromFfi(_elementHandle));
    } finally {
      sdkAnimationPoint2dkeyframeReleaseFfiHandle(_elementHandle);
    }
    _heresdkMapviewHarpBindingslistofSdkAnimationPoint2dkeyframeIteratorIncrement(_iteratorHandle);
  }
  _heresdkMapviewHarpBindingslistofSdkAnimationPoint2dkeyframeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMapviewHarpBindingslistofSdkAnimationPoint2dkeyframeReleaseFfiHandle(Pointer<Void> handle) => _heresdkMapviewHarpBindingslistofSdkAnimationPoint2dkeyframeReleaseHandle(handle);

final _heresdkMapviewHarpBindingslistofSdkAnimationPoint2dkeyframeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_Point2DKeyframe_create_handle_nullable'));
final _heresdkMapviewHarpBindingslistofSdkAnimationPoint2dkeyframeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_Point2DKeyframe_release_handle_nullable'));
final _heresdkMapviewHarpBindingslistofSdkAnimationPoint2dkeyframeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_Point2DKeyframe_get_value_nullable'));

Pointer<Void> heresdkMapviewHarpBindingslistofSdkAnimationPoint2dkeyframeToFfiNullable(List<Point2DKeyframe>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMapviewHarpBindingslistofSdkAnimationPoint2dkeyframeToFfi(value);
  final result = _heresdkMapviewHarpBindingslistofSdkAnimationPoint2dkeyframeCreateHandleNullable(_handle);
  heresdkMapviewHarpBindingslistofSdkAnimationPoint2dkeyframeReleaseFfiHandle(_handle);
  return result;
}

List<Point2DKeyframe>? heresdkMapviewHarpBindingslistofSdkAnimationPoint2dkeyframeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkMapviewHarpBindingslistofSdkAnimationPoint2dkeyframeGetValueNullable(handle);
  final result = heresdkMapviewHarpBindingslistofSdkAnimationPoint2dkeyframeFromFfi(_handle);
  heresdkMapviewHarpBindingslistofSdkAnimationPoint2dkeyframeReleaseFfiHandle(_handle);
  return result;
}

void heresdkMapviewHarpBindingslistofSdkAnimationPoint2dkeyframeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMapviewHarpBindingslistofSdkAnimationPoint2dkeyframeReleaseHandleNullable(handle);

final _heresdkMapviewHarpBindingslistofSdkAnimationScalarkeyframeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_ScalarKeyframe_create_handle'));
final _heresdkMapviewHarpBindingslistofSdkAnimationScalarkeyframeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_ScalarKeyframe_release_handle'));
final _heresdkMapviewHarpBindingslistofSdkAnimationScalarkeyframeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_ScalarKeyframe_insert'));
final _heresdkMapviewHarpBindingslistofSdkAnimationScalarkeyframeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_ScalarKeyframe_iterator'));
final _heresdkMapviewHarpBindingslistofSdkAnimationScalarkeyframeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_ScalarKeyframe_iterator_release_handle'));
final _heresdkMapviewHarpBindingslistofSdkAnimationScalarkeyframeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_ScalarKeyframe_iterator_is_valid'));
final _heresdkMapviewHarpBindingslistofSdkAnimationScalarkeyframeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_ScalarKeyframe_iterator_increment'));
final _heresdkMapviewHarpBindingslistofSdkAnimationScalarkeyframeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_ScalarKeyframe_iterator_get'));

Pointer<Void> heresdkMapviewHarpBindingslistofSdkAnimationScalarkeyframeToFfi(List<ScalarKeyframe> value) {
  final _result = _heresdkMapviewHarpBindingslistofSdkAnimationScalarkeyframeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkAnimationScalarkeyframeToFfi(element);
    _heresdkMapviewHarpBindingslistofSdkAnimationScalarkeyframeInsert(_result, _elementHandle);
    sdkAnimationScalarkeyframeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<ScalarKeyframe> heresdkMapviewHarpBindingslistofSdkAnimationScalarkeyframeFromFfi(Pointer<Void> handle) {
  final result = List<ScalarKeyframe>.empty(growable: true);
  final _iteratorHandle = _heresdkMapviewHarpBindingslistofSdkAnimationScalarkeyframeIterator(handle);
  while (_heresdkMapviewHarpBindingslistofSdkAnimationScalarkeyframeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkMapviewHarpBindingslistofSdkAnimationScalarkeyframeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkAnimationScalarkeyframeFromFfi(_elementHandle));
    } finally {
      sdkAnimationScalarkeyframeReleaseFfiHandle(_elementHandle);
    }
    _heresdkMapviewHarpBindingslistofSdkAnimationScalarkeyframeIteratorIncrement(_iteratorHandle);
  }
  _heresdkMapviewHarpBindingslistofSdkAnimationScalarkeyframeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMapviewHarpBindingslistofSdkAnimationScalarkeyframeReleaseFfiHandle(Pointer<Void> handle) => _heresdkMapviewHarpBindingslistofSdkAnimationScalarkeyframeReleaseHandle(handle);

final _heresdkMapviewHarpBindingslistofSdkAnimationScalarkeyframeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_ScalarKeyframe_create_handle_nullable'));
final _heresdkMapviewHarpBindingslistofSdkAnimationScalarkeyframeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_ScalarKeyframe_release_handle_nullable'));
final _heresdkMapviewHarpBindingslistofSdkAnimationScalarkeyframeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_animation_ScalarKeyframe_get_value_nullable'));

Pointer<Void> heresdkMapviewHarpBindingslistofSdkAnimationScalarkeyframeToFfiNullable(List<ScalarKeyframe>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMapviewHarpBindingslistofSdkAnimationScalarkeyframeToFfi(value);
  final result = _heresdkMapviewHarpBindingslistofSdkAnimationScalarkeyframeCreateHandleNullable(_handle);
  heresdkMapviewHarpBindingslistofSdkAnimationScalarkeyframeReleaseFfiHandle(_handle);
  return result;
}

List<ScalarKeyframe>? heresdkMapviewHarpBindingslistofSdkAnimationScalarkeyframeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkMapviewHarpBindingslistofSdkAnimationScalarkeyframeGetValueNullable(handle);
  final result = heresdkMapviewHarpBindingslistofSdkAnimationScalarkeyframeFromFfi(_handle);
  heresdkMapviewHarpBindingslistofSdkAnimationScalarkeyframeReleaseFfiHandle(_handle);
  return result;
}

void heresdkMapviewHarpBindingslistofSdkAnimationScalarkeyframeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMapviewHarpBindingslistofSdkAnimationScalarkeyframeReleaseHandleNullable(handle);

final _heresdkMapviewHarpBindingslistofSdkCoreGeocoordinatesCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_GeoCoordinates_create_handle'));
final _heresdkMapviewHarpBindingslistofSdkCoreGeocoordinatesReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_GeoCoordinates_release_handle'));
final _heresdkMapviewHarpBindingslistofSdkCoreGeocoordinatesInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_GeoCoordinates_insert'));
final _heresdkMapviewHarpBindingslistofSdkCoreGeocoordinatesIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_GeoCoordinates_iterator'));
final _heresdkMapviewHarpBindingslistofSdkCoreGeocoordinatesIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_GeoCoordinates_iterator_release_handle'));
final _heresdkMapviewHarpBindingslistofSdkCoreGeocoordinatesIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_GeoCoordinates_iterator_is_valid'));
final _heresdkMapviewHarpBindingslistofSdkCoreGeocoordinatesIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_GeoCoordinates_iterator_increment'));
final _heresdkMapviewHarpBindingslistofSdkCoreGeocoordinatesIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_GeoCoordinates_iterator_get'));

Pointer<Void> heresdkMapviewHarpBindingslistofSdkCoreGeocoordinatesToFfi(List<GeoCoordinates> value) {
  final _result = _heresdkMapviewHarpBindingslistofSdkCoreGeocoordinatesCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreGeocoordinatesToFfi(element);
    _heresdkMapviewHarpBindingslistofSdkCoreGeocoordinatesInsert(_result, _elementHandle);
    sdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoCoordinates> heresdkMapviewHarpBindingslistofSdkCoreGeocoordinatesFromFfi(Pointer<Void> handle) {
  final result = List<GeoCoordinates>.empty(growable: true);
  final _iteratorHandle = _heresdkMapviewHarpBindingslistofSdkCoreGeocoordinatesIterator(handle);
  while (_heresdkMapviewHarpBindingslistofSdkCoreGeocoordinatesIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkMapviewHarpBindingslistofSdkCoreGeocoordinatesIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreGeocoordinatesFromFfi(_elementHandle));
    } finally {
      sdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
    }
    _heresdkMapviewHarpBindingslistofSdkCoreGeocoordinatesIteratorIncrement(_iteratorHandle);
  }
  _heresdkMapviewHarpBindingslistofSdkCoreGeocoordinatesIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMapviewHarpBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(Pointer<Void> handle) => _heresdkMapviewHarpBindingslistofSdkCoreGeocoordinatesReleaseHandle(handle);

final _heresdkMapviewHarpBindingslistofSdkCoreGeocoordinatesCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_GeoCoordinates_create_handle_nullable'));
final _heresdkMapviewHarpBindingslistofSdkCoreGeocoordinatesReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_GeoCoordinates_release_handle_nullable'));
final _heresdkMapviewHarpBindingslistofSdkCoreGeocoordinatesGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_GeoCoordinates_get_value_nullable'));

Pointer<Void> heresdkMapviewHarpBindingslistofSdkCoreGeocoordinatesToFfiNullable(List<GeoCoordinates>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMapviewHarpBindingslistofSdkCoreGeocoordinatesToFfi(value);
  final result = _heresdkMapviewHarpBindingslistofSdkCoreGeocoordinatesCreateHandleNullable(_handle);
  heresdkMapviewHarpBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

List<GeoCoordinates>? heresdkMapviewHarpBindingslistofSdkCoreGeocoordinatesFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkMapviewHarpBindingslistofSdkCoreGeocoordinatesGetValueNullable(handle);
  final result = heresdkMapviewHarpBindingslistofSdkCoreGeocoordinatesFromFfi(_handle);
  heresdkMapviewHarpBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

void heresdkMapviewHarpBindingslistofSdkCoreGeocoordinatesReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMapviewHarpBindingslistofSdkCoreGeocoordinatesReleaseHandleNullable(handle);

final _heresdkMapviewHarpBindingslistofSdkCoreLocalizedtextCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_LocalizedText_create_handle'));
final _heresdkMapviewHarpBindingslistofSdkCoreLocalizedtextReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_LocalizedText_release_handle'));
final _heresdkMapviewHarpBindingslistofSdkCoreLocalizedtextInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_LocalizedText_insert'));
final _heresdkMapviewHarpBindingslistofSdkCoreLocalizedtextIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_LocalizedText_iterator'));
final _heresdkMapviewHarpBindingslistofSdkCoreLocalizedtextIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_LocalizedText_iterator_release_handle'));
final _heresdkMapviewHarpBindingslistofSdkCoreLocalizedtextIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_LocalizedText_iterator_is_valid'));
final _heresdkMapviewHarpBindingslistofSdkCoreLocalizedtextIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_LocalizedText_iterator_increment'));
final _heresdkMapviewHarpBindingslistofSdkCoreLocalizedtextIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_LocalizedText_iterator_get'));

Pointer<Void> heresdkMapviewHarpBindingslistofSdkCoreLocalizedtextToFfi(List<LocalizedText> value) {
  final _result = _heresdkMapviewHarpBindingslistofSdkCoreLocalizedtextCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreLocalizedtextToFfi(element);
    _heresdkMapviewHarpBindingslistofSdkCoreLocalizedtextInsert(_result, _elementHandle);
    sdkCoreLocalizedtextReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<LocalizedText> heresdkMapviewHarpBindingslistofSdkCoreLocalizedtextFromFfi(Pointer<Void> handle) {
  final result = List<LocalizedText>.empty(growable: true);
  final _iteratorHandle = _heresdkMapviewHarpBindingslistofSdkCoreLocalizedtextIterator(handle);
  while (_heresdkMapviewHarpBindingslistofSdkCoreLocalizedtextIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkMapviewHarpBindingslistofSdkCoreLocalizedtextIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreLocalizedtextFromFfi(_elementHandle));
    } finally {
      sdkCoreLocalizedtextReleaseFfiHandle(_elementHandle);
    }
    _heresdkMapviewHarpBindingslistofSdkCoreLocalizedtextIteratorIncrement(_iteratorHandle);
  }
  _heresdkMapviewHarpBindingslistofSdkCoreLocalizedtextIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMapviewHarpBindingslistofSdkCoreLocalizedtextReleaseFfiHandle(Pointer<Void> handle) => _heresdkMapviewHarpBindingslistofSdkCoreLocalizedtextReleaseHandle(handle);

final _heresdkMapviewHarpBindingslistofSdkCoreLocalizedtextCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_LocalizedText_create_handle_nullable'));
final _heresdkMapviewHarpBindingslistofSdkCoreLocalizedtextReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_LocalizedText_release_handle_nullable'));
final _heresdkMapviewHarpBindingslistofSdkCoreLocalizedtextGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_LocalizedText_get_value_nullable'));

Pointer<Void> heresdkMapviewHarpBindingslistofSdkCoreLocalizedtextToFfiNullable(List<LocalizedText>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMapviewHarpBindingslistofSdkCoreLocalizedtextToFfi(value);
  final result = _heresdkMapviewHarpBindingslistofSdkCoreLocalizedtextCreateHandleNullable(_handle);
  heresdkMapviewHarpBindingslistofSdkCoreLocalizedtextReleaseFfiHandle(_handle);
  return result;
}

List<LocalizedText>? heresdkMapviewHarpBindingslistofSdkCoreLocalizedtextFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkMapviewHarpBindingslistofSdkCoreLocalizedtextGetValueNullable(handle);
  final result = heresdkMapviewHarpBindingslistofSdkCoreLocalizedtextFromFfi(_handle);
  heresdkMapviewHarpBindingslistofSdkCoreLocalizedtextReleaseFfiHandle(_handle);
  return result;
}

void heresdkMapviewHarpBindingslistofSdkCoreLocalizedtextReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMapviewHarpBindingslistofSdkCoreLocalizedtextReleaseHandleNullable(handle);

final _heresdkMapviewHarpBindingslistofSdkCoreEngineLayerconfigurationFeatureCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_create_handle'));
final _heresdkMapviewHarpBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_release_handle'));
final _heresdkMapviewHarpBindingslistofSdkCoreEngineLayerconfigurationFeatureInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_insert'));
final _heresdkMapviewHarpBindingslistofSdkCoreEngineLayerconfigurationFeatureIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator'));
final _heresdkMapviewHarpBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator_release_handle'));
final _heresdkMapviewHarpBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator_is_valid'));
final _heresdkMapviewHarpBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator_increment'));
final _heresdkMapviewHarpBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator_get'));

Pointer<Void> heresdkMapviewHarpBindingslistofSdkCoreEngineLayerconfigurationFeatureToFfi(List<LayerConfigurationFeature> value) {
  final _result = _heresdkMapviewHarpBindingslistofSdkCoreEngineLayerconfigurationFeatureCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreEngineLayerconfigurationFeatureToFfi(element);
    _heresdkMapviewHarpBindingslistofSdkCoreEngineLayerconfigurationFeatureInsert(_result, _elementHandle);
    sdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<LayerConfigurationFeature> heresdkMapviewHarpBindingslistofSdkCoreEngineLayerconfigurationFeatureFromFfi(Pointer<Void> handle) {
  final result = List<LayerConfigurationFeature>.empty(growable: true);
  final _iteratorHandle = _heresdkMapviewHarpBindingslistofSdkCoreEngineLayerconfigurationFeatureIterator(handle);
  while (_heresdkMapviewHarpBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkMapviewHarpBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreEngineLayerconfigurationFeatureFromFfi(_elementHandle));
    } finally {
      sdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(_elementHandle);
    }
    _heresdkMapviewHarpBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorIncrement(_iteratorHandle);
  }
  _heresdkMapviewHarpBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMapviewHarpBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(Pointer<Void> handle) => _heresdkMapviewHarpBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseHandle(handle);

final _heresdkMapviewHarpBindingslistofSdkCoreEngineLayerconfigurationFeatureCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_create_handle_nullable'));
final _heresdkMapviewHarpBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_release_handle_nullable'));
final _heresdkMapviewHarpBindingslistofSdkCoreEngineLayerconfigurationFeatureGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_get_value_nullable'));

Pointer<Void> heresdkMapviewHarpBindingslistofSdkCoreEngineLayerconfigurationFeatureToFfiNullable(List<LayerConfigurationFeature>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMapviewHarpBindingslistofSdkCoreEngineLayerconfigurationFeatureToFfi(value);
  final result = _heresdkMapviewHarpBindingslistofSdkCoreEngineLayerconfigurationFeatureCreateHandleNullable(_handle);
  heresdkMapviewHarpBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(_handle);
  return result;
}

List<LayerConfigurationFeature>? heresdkMapviewHarpBindingslistofSdkCoreEngineLayerconfigurationFeatureFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkMapviewHarpBindingslistofSdkCoreEngineLayerconfigurationFeatureGetValueNullable(handle);
  final result = heresdkMapviewHarpBindingslistofSdkCoreEngineLayerconfigurationFeatureFromFfi(_handle);
  heresdkMapviewHarpBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(_handle);
  return result;
}

void heresdkMapviewHarpBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMapviewHarpBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseHandleNullable(handle);

final _heresdkMapviewHarpBindingslistofSdkMapviewMapcamerakeyframetrackCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_create_handle'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMapcamerakeyframetrackReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_release_handle'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMapcamerakeyframetrackInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_insert'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMapcamerakeyframetrackIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_iterator'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMapcamerakeyframetrackIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_iterator_release_handle'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMapcamerakeyframetrackIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_iterator_is_valid'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMapcamerakeyframetrackIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_iterator_increment'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMapcamerakeyframetrackIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_iterator_get'));

Pointer<Void> heresdkMapviewHarpBindingslistofSdkMapviewMapcamerakeyframetrackToFfi(List<MapCameraKeyframeTrack> value) {
  final _result = _heresdkMapviewHarpBindingslistofSdkMapviewMapcamerakeyframetrackCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkMapviewMapcamerakeyframetrackToFfi(element);
    _heresdkMapviewHarpBindingslistofSdkMapviewMapcamerakeyframetrackInsert(_result, _elementHandle);
    sdkMapviewMapcamerakeyframetrackReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<MapCameraKeyframeTrack> heresdkMapviewHarpBindingslistofSdkMapviewMapcamerakeyframetrackFromFfi(Pointer<Void> handle) {
  final result = List<MapCameraKeyframeTrack>.empty(growable: true);
  final _iteratorHandle = _heresdkMapviewHarpBindingslistofSdkMapviewMapcamerakeyframetrackIterator(handle);
  while (_heresdkMapviewHarpBindingslistofSdkMapviewMapcamerakeyframetrackIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkMapviewHarpBindingslistofSdkMapviewMapcamerakeyframetrackIteratorGet(_iteratorHandle);
    try {
      result.add(sdkMapviewMapcamerakeyframetrackFromFfi(_elementHandle));
    } finally {
      sdkMapviewMapcamerakeyframetrackReleaseFfiHandle(_elementHandle);
    }
    _heresdkMapviewHarpBindingslistofSdkMapviewMapcamerakeyframetrackIteratorIncrement(_iteratorHandle);
  }
  _heresdkMapviewHarpBindingslistofSdkMapviewMapcamerakeyframetrackIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMapviewHarpBindingslistofSdkMapviewMapcamerakeyframetrackReleaseFfiHandle(Pointer<Void> handle) => _heresdkMapviewHarpBindingslistofSdkMapviewMapcamerakeyframetrackReleaseHandle(handle);

final _heresdkMapviewHarpBindingslistofSdkMapviewMapcamerakeyframetrackCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_create_handle_nullable'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMapcamerakeyframetrackReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_release_handle_nullable'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMapcamerakeyframetrackGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_get_value_nullable'));

Pointer<Void> heresdkMapviewHarpBindingslistofSdkMapviewMapcamerakeyframetrackToFfiNullable(List<MapCameraKeyframeTrack>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMapviewHarpBindingslistofSdkMapviewMapcamerakeyframetrackToFfi(value);
  final result = _heresdkMapviewHarpBindingslistofSdkMapviewMapcamerakeyframetrackCreateHandleNullable(_handle);
  heresdkMapviewHarpBindingslistofSdkMapviewMapcamerakeyframetrackReleaseFfiHandle(_handle);
  return result;
}

List<MapCameraKeyframeTrack>? heresdkMapviewHarpBindingslistofSdkMapviewMapcamerakeyframetrackFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkMapviewHarpBindingslistofSdkMapviewMapcamerakeyframetrackGetValueNullable(handle);
  final result = heresdkMapviewHarpBindingslistofSdkMapviewMapcamerakeyframetrackFromFfi(_handle);
  heresdkMapviewHarpBindingslistofSdkMapviewMapcamerakeyframetrackReleaseFfiHandle(_handle);
  return result;
}

void heresdkMapviewHarpBindingslistofSdkMapviewMapcamerakeyframetrackReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMapviewHarpBindingslistofSdkMapviewMapcamerakeyframetrackReleaseHandleNullable(handle);

final _heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapMarker_create_handle'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapMarker_release_handle'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapMarker_insert'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapMarker_iterator'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapMarker_iterator_release_handle'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapMarker_iterator_is_valid'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapMarker_iterator_increment'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapMarker_iterator_get'));

Pointer<Void> heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerToFfi(List<MapMarker> value) {
  final _result = _heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkMapviewMapmarkerToFfi(element);
    _heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerInsert(_result, _elementHandle);
    sdkMapviewMapmarkerReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<MapMarker> heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerFromFfi(Pointer<Void> handle) {
  final result = List<MapMarker>.empty(growable: true);
  final _iteratorHandle = _heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerIterator(handle);
  while (_heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerIteratorGet(_iteratorHandle);
    try {
      result.add(sdkMapviewMapmarkerFromFfi(_elementHandle));
    } finally {
      sdkMapviewMapmarkerReleaseFfiHandle(_elementHandle);
    }
    _heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerIteratorIncrement(_iteratorHandle);
  }
  _heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerReleaseFfiHandle(Pointer<Void> handle) => _heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerReleaseHandle(handle);

final _heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapMarker_create_handle_nullable'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapMarker_release_handle_nullable'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapMarker_get_value_nullable'));

Pointer<Void> heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerToFfiNullable(List<MapMarker>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerToFfi(value);
  final result = _heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerCreateHandleNullable(_handle);
  heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerReleaseFfiHandle(_handle);
  return result;
}

List<MapMarker>? heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerGetValueNullable(handle);
  final result = heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerFromFfi(_handle);
  heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerReleaseFfiHandle(_handle);
  return result;
}

void heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerReleaseHandleNullable(handle);

final _heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerclusterGroupingCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapMarkerCluster_Grouping_create_handle'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerclusterGroupingReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapMarkerCluster_Grouping_release_handle'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerclusterGroupingInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapMarkerCluster_Grouping_insert'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerclusterGroupingIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapMarkerCluster_Grouping_iterator'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerclusterGroupingIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapMarkerCluster_Grouping_iterator_release_handle'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerclusterGroupingIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapMarkerCluster_Grouping_iterator_is_valid'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerclusterGroupingIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapMarkerCluster_Grouping_iterator_increment'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerclusterGroupingIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapMarkerCluster_Grouping_iterator_get'));

Pointer<Void> heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerclusterGroupingToFfi(List<MapMarkerClusterGrouping> value) {
  final _result = _heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerclusterGroupingCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkMapviewMapmarkerclusterGroupingToFfi(element);
    _heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerclusterGroupingInsert(_result, _elementHandle);
    sdkMapviewMapmarkerclusterGroupingReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<MapMarkerClusterGrouping> heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerclusterGroupingFromFfi(Pointer<Void> handle) {
  final result = List<MapMarkerClusterGrouping>.empty(growable: true);
  final _iteratorHandle = _heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerclusterGroupingIterator(handle);
  while (_heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerclusterGroupingIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerclusterGroupingIteratorGet(_iteratorHandle);
    try {
      result.add(sdkMapviewMapmarkerclusterGroupingFromFfi(_elementHandle));
    } finally {
      sdkMapviewMapmarkerclusterGroupingReleaseFfiHandle(_elementHandle);
    }
    _heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerclusterGroupingIteratorIncrement(_iteratorHandle);
  }
  _heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerclusterGroupingIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerclusterGroupingReleaseFfiHandle(Pointer<Void> handle) => _heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerclusterGroupingReleaseHandle(handle);

final _heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerclusterGroupingCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapMarkerCluster_Grouping_create_handle_nullable'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerclusterGroupingReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapMarkerCluster_Grouping_release_handle_nullable'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerclusterGroupingGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapMarkerCluster_Grouping_get_value_nullable'));

Pointer<Void> heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerclusterGroupingToFfiNullable(List<MapMarkerClusterGrouping>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerclusterGroupingToFfi(value);
  final result = _heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerclusterGroupingCreateHandleNullable(_handle);
  heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerclusterGroupingReleaseFfiHandle(_handle);
  return result;
}

List<MapMarkerClusterGrouping>? heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerclusterGroupingFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerclusterGroupingGetValueNullable(handle);
  final result = heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerclusterGroupingFromFfi(_handle);
  heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerclusterGroupingReleaseFfiHandle(_handle);
  return result;
}

void heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerclusterGroupingReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMapviewHarpBindingslistofSdkMapviewMapmarkerclusterGroupingReleaseHandleNullable(handle);

final _heresdkMapviewHarpBindingslistofSdkMapviewMappolygonCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapPolygon_create_handle'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMappolygonReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapPolygon_release_handle'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMappolygonInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapPolygon_insert'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMappolygonIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapPolygon_iterator'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMappolygonIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapPolygon_iterator_release_handle'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMappolygonIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapPolygon_iterator_is_valid'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMappolygonIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapPolygon_iterator_increment'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMappolygonIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapPolygon_iterator_get'));

Pointer<Void> heresdkMapviewHarpBindingslistofSdkMapviewMappolygonToFfi(List<MapPolygon> value) {
  final _result = _heresdkMapviewHarpBindingslistofSdkMapviewMappolygonCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkMapviewMappolygonToFfi(element);
    _heresdkMapviewHarpBindingslistofSdkMapviewMappolygonInsert(_result, _elementHandle);
    sdkMapviewMappolygonReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<MapPolygon> heresdkMapviewHarpBindingslistofSdkMapviewMappolygonFromFfi(Pointer<Void> handle) {
  final result = List<MapPolygon>.empty(growable: true);
  final _iteratorHandle = _heresdkMapviewHarpBindingslistofSdkMapviewMappolygonIterator(handle);
  while (_heresdkMapviewHarpBindingslistofSdkMapviewMappolygonIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkMapviewHarpBindingslistofSdkMapviewMappolygonIteratorGet(_iteratorHandle);
    try {
      result.add(sdkMapviewMappolygonFromFfi(_elementHandle));
    } finally {
      sdkMapviewMappolygonReleaseFfiHandle(_elementHandle);
    }
    _heresdkMapviewHarpBindingslistofSdkMapviewMappolygonIteratorIncrement(_iteratorHandle);
  }
  _heresdkMapviewHarpBindingslistofSdkMapviewMappolygonIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMapviewHarpBindingslistofSdkMapviewMappolygonReleaseFfiHandle(Pointer<Void> handle) => _heresdkMapviewHarpBindingslistofSdkMapviewMappolygonReleaseHandle(handle);

final _heresdkMapviewHarpBindingslistofSdkMapviewMappolygonCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapPolygon_create_handle_nullable'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMappolygonReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapPolygon_release_handle_nullable'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMappolygonGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapPolygon_get_value_nullable'));

Pointer<Void> heresdkMapviewHarpBindingslistofSdkMapviewMappolygonToFfiNullable(List<MapPolygon>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMapviewHarpBindingslistofSdkMapviewMappolygonToFfi(value);
  final result = _heresdkMapviewHarpBindingslistofSdkMapviewMappolygonCreateHandleNullable(_handle);
  heresdkMapviewHarpBindingslistofSdkMapviewMappolygonReleaseFfiHandle(_handle);
  return result;
}

List<MapPolygon>? heresdkMapviewHarpBindingslistofSdkMapviewMappolygonFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkMapviewHarpBindingslistofSdkMapviewMappolygonGetValueNullable(handle);
  final result = heresdkMapviewHarpBindingslistofSdkMapviewMappolygonFromFfi(_handle);
  heresdkMapviewHarpBindingslistofSdkMapviewMappolygonReleaseFfiHandle(_handle);
  return result;
}

void heresdkMapviewHarpBindingslistofSdkMapviewMappolygonReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMapviewHarpBindingslistofSdkMapviewMappolygonReleaseHandleNullable(handle);

final _heresdkMapviewHarpBindingslistofSdkMapviewMappolylineCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapPolyline_create_handle'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMappolylineReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapPolyline_release_handle'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMappolylineInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapPolyline_insert'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMappolylineIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapPolyline_iterator'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMappolylineIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapPolyline_iterator_release_handle'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMappolylineIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapPolyline_iterator_is_valid'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMappolylineIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapPolyline_iterator_increment'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMappolylineIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapPolyline_iterator_get'));

Pointer<Void> heresdkMapviewHarpBindingslistofSdkMapviewMappolylineToFfi(List<MapPolyline> value) {
  final _result = _heresdkMapviewHarpBindingslistofSdkMapviewMappolylineCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkMapviewMappolylineToFfi(element);
    _heresdkMapviewHarpBindingslistofSdkMapviewMappolylineInsert(_result, _elementHandle);
    sdkMapviewMappolylineReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<MapPolyline> heresdkMapviewHarpBindingslistofSdkMapviewMappolylineFromFfi(Pointer<Void> handle) {
  final result = List<MapPolyline>.empty(growable: true);
  final _iteratorHandle = _heresdkMapviewHarpBindingslistofSdkMapviewMappolylineIterator(handle);
  while (_heresdkMapviewHarpBindingslistofSdkMapviewMappolylineIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkMapviewHarpBindingslistofSdkMapviewMappolylineIteratorGet(_iteratorHandle);
    try {
      result.add(sdkMapviewMappolylineFromFfi(_elementHandle));
    } finally {
      sdkMapviewMappolylineReleaseFfiHandle(_elementHandle);
    }
    _heresdkMapviewHarpBindingslistofSdkMapviewMappolylineIteratorIncrement(_iteratorHandle);
  }
  _heresdkMapviewHarpBindingslistofSdkMapviewMappolylineIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMapviewHarpBindingslistofSdkMapviewMappolylineReleaseFfiHandle(Pointer<Void> handle) => _heresdkMapviewHarpBindingslistofSdkMapviewMappolylineReleaseHandle(handle);

final _heresdkMapviewHarpBindingslistofSdkMapviewMappolylineCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapPolyline_create_handle_nullable'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMappolylineReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapPolyline_release_handle_nullable'));
final _heresdkMapviewHarpBindingslistofSdkMapviewMappolylineGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_MapPolyline_get_value_nullable'));

Pointer<Void> heresdkMapviewHarpBindingslistofSdkMapviewMappolylineToFfiNullable(List<MapPolyline>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMapviewHarpBindingslistofSdkMapviewMappolylineToFfi(value);
  final result = _heresdkMapviewHarpBindingslistofSdkMapviewMappolylineCreateHandleNullable(_handle);
  heresdkMapviewHarpBindingslistofSdkMapviewMappolylineReleaseFfiHandle(_handle);
  return result;
}

List<MapPolyline>? heresdkMapviewHarpBindingslistofSdkMapviewMappolylineFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkMapviewHarpBindingslistofSdkMapviewMappolylineGetValueNullable(handle);
  final result = heresdkMapviewHarpBindingslistofSdkMapviewMappolylineFromFfi(_handle);
  heresdkMapviewHarpBindingslistofSdkMapviewMappolylineReleaseFfiHandle(_handle);
  return result;
}

void heresdkMapviewHarpBindingslistofSdkMapviewMappolylineReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMapviewHarpBindingslistofSdkMapviewMappolylineReleaseHandleNullable(handle);

final _heresdkMapviewHarpBindingslistofSdkMapviewPickmapcontentresultforflutterTrafficincidentresultCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_PickMapContentResultForFlutter_TrafficIncidentResult_create_handle'));
final _heresdkMapviewHarpBindingslistofSdkMapviewPickmapcontentresultforflutterTrafficincidentresultReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_PickMapContentResultForFlutter_TrafficIncidentResult_release_handle'));
final _heresdkMapviewHarpBindingslistofSdkMapviewPickmapcontentresultforflutterTrafficincidentresultInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_PickMapContentResultForFlutter_TrafficIncidentResult_insert'));
final _heresdkMapviewHarpBindingslistofSdkMapviewPickmapcontentresultforflutterTrafficincidentresultIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_PickMapContentResultForFlutter_TrafficIncidentResult_iterator'));
final _heresdkMapviewHarpBindingslistofSdkMapviewPickmapcontentresultforflutterTrafficincidentresultIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_PickMapContentResultForFlutter_TrafficIncidentResult_iterator_release_handle'));
final _heresdkMapviewHarpBindingslistofSdkMapviewPickmapcontentresultforflutterTrafficincidentresultIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_PickMapContentResultForFlutter_TrafficIncidentResult_iterator_is_valid'));
final _heresdkMapviewHarpBindingslistofSdkMapviewPickmapcontentresultforflutterTrafficincidentresultIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_PickMapContentResultForFlutter_TrafficIncidentResult_iterator_increment'));
final _heresdkMapviewHarpBindingslistofSdkMapviewPickmapcontentresultforflutterTrafficincidentresultIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_PickMapContentResultForFlutter_TrafficIncidentResult_iterator_get'));

Pointer<Void> heresdkMapviewHarpBindingslistofSdkMapviewPickmapcontentresultforflutterTrafficincidentresultToFfi(List<PickTrafficIncidentResult> value) {
  final _result = _heresdkMapviewHarpBindingslistofSdkMapviewPickmapcontentresultforflutterTrafficincidentresultCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkMapviewPickmapcontentresultforflutterTrafficincidentresultToFfi(element);
    _heresdkMapviewHarpBindingslistofSdkMapviewPickmapcontentresultforflutterTrafficincidentresultInsert(_result, _elementHandle);
    sdkMapviewPickmapcontentresultforflutterTrafficincidentresultReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<PickTrafficIncidentResult> heresdkMapviewHarpBindingslistofSdkMapviewPickmapcontentresultforflutterTrafficincidentresultFromFfi(Pointer<Void> handle) {
  final result = List<PickTrafficIncidentResult>.empty(growable: true);
  final _iteratorHandle = _heresdkMapviewHarpBindingslistofSdkMapviewPickmapcontentresultforflutterTrafficincidentresultIterator(handle);
  while (_heresdkMapviewHarpBindingslistofSdkMapviewPickmapcontentresultforflutterTrafficincidentresultIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkMapviewHarpBindingslistofSdkMapviewPickmapcontentresultforflutterTrafficincidentresultIteratorGet(_iteratorHandle);
    try {
      result.add(sdkMapviewPickmapcontentresultforflutterTrafficincidentresultFromFfi(_elementHandle));
    } finally {
      sdkMapviewPickmapcontentresultforflutterTrafficincidentresultReleaseFfiHandle(_elementHandle);
    }
    _heresdkMapviewHarpBindingslistofSdkMapviewPickmapcontentresultforflutterTrafficincidentresultIteratorIncrement(_iteratorHandle);
  }
  _heresdkMapviewHarpBindingslistofSdkMapviewPickmapcontentresultforflutterTrafficincidentresultIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMapviewHarpBindingslistofSdkMapviewPickmapcontentresultforflutterTrafficincidentresultReleaseFfiHandle(Pointer<Void> handle) => _heresdkMapviewHarpBindingslistofSdkMapviewPickmapcontentresultforflutterTrafficincidentresultReleaseHandle(handle);

final _heresdkMapviewHarpBindingslistofSdkMapviewPickmapcontentresultforflutterTrafficincidentresultCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_PickMapContentResultForFlutter_TrafficIncidentResult_create_handle_nullable'));
final _heresdkMapviewHarpBindingslistofSdkMapviewPickmapcontentresultforflutterTrafficincidentresultReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_PickMapContentResultForFlutter_TrafficIncidentResult_release_handle_nullable'));
final _heresdkMapviewHarpBindingslistofSdkMapviewPickmapcontentresultforflutterTrafficincidentresultGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_PickMapContentResultForFlutter_TrafficIncidentResult_get_value_nullable'));

Pointer<Void> heresdkMapviewHarpBindingslistofSdkMapviewPickmapcontentresultforflutterTrafficincidentresultToFfiNullable(List<PickTrafficIncidentResult>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMapviewHarpBindingslistofSdkMapviewPickmapcontentresultforflutterTrafficincidentresultToFfi(value);
  final result = _heresdkMapviewHarpBindingslistofSdkMapviewPickmapcontentresultforflutterTrafficincidentresultCreateHandleNullable(_handle);
  heresdkMapviewHarpBindingslistofSdkMapviewPickmapcontentresultforflutterTrafficincidentresultReleaseFfiHandle(_handle);
  return result;
}

List<PickTrafficIncidentResult>? heresdkMapviewHarpBindingslistofSdkMapviewPickmapcontentresultforflutterTrafficincidentresultFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkMapviewHarpBindingslistofSdkMapviewPickmapcontentresultforflutterTrafficincidentresultGetValueNullable(handle);
  final result = heresdkMapviewHarpBindingslistofSdkMapviewPickmapcontentresultforflutterTrafficincidentresultFromFfi(_handle);
  heresdkMapviewHarpBindingslistofSdkMapviewPickmapcontentresultforflutterTrafficincidentresultReleaseFfiHandle(_handle);
  return result;
}

void heresdkMapviewHarpBindingslistofSdkMapviewPickmapcontentresultforflutterTrafficincidentresultReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMapviewHarpBindingslistofSdkMapviewPickmapcontentresultforflutterTrafficincidentresultReleaseHandleNullable(handle);

final _heresdkMapviewHarpBindingslistofSdkMapviewPickmapfeaturesresultPoiresultCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_PickMapFeaturesResult_PoiResult_create_handle'));
final _heresdkMapviewHarpBindingslistofSdkMapviewPickmapfeaturesresultPoiresultReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_PickMapFeaturesResult_PoiResult_release_handle'));
final _heresdkMapviewHarpBindingslistofSdkMapviewPickmapfeaturesresultPoiresultInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_PickMapFeaturesResult_PoiResult_insert'));
final _heresdkMapviewHarpBindingslistofSdkMapviewPickmapfeaturesresultPoiresultIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_PickMapFeaturesResult_PoiResult_iterator'));
final _heresdkMapviewHarpBindingslistofSdkMapviewPickmapfeaturesresultPoiresultIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_PickMapFeaturesResult_PoiResult_iterator_release_handle'));
final _heresdkMapviewHarpBindingslistofSdkMapviewPickmapfeaturesresultPoiresultIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_PickMapFeaturesResult_PoiResult_iterator_is_valid'));
final _heresdkMapviewHarpBindingslistofSdkMapviewPickmapfeaturesresultPoiresultIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_PickMapFeaturesResult_PoiResult_iterator_increment'));
final _heresdkMapviewHarpBindingslistofSdkMapviewPickmapfeaturesresultPoiresultIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_PickMapFeaturesResult_PoiResult_iterator_get'));

Pointer<Void> heresdkMapviewHarpBindingslistofSdkMapviewPickmapfeaturesresultPoiresultToFfi(List<PickPoiResult> value) {
  final _result = _heresdkMapviewHarpBindingslistofSdkMapviewPickmapfeaturesresultPoiresultCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkMapviewPickmapfeaturesresultPoiresultToFfi(element);
    _heresdkMapviewHarpBindingslistofSdkMapviewPickmapfeaturesresultPoiresultInsert(_result, _elementHandle);
    sdkMapviewPickmapfeaturesresultPoiresultReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<PickPoiResult> heresdkMapviewHarpBindingslistofSdkMapviewPickmapfeaturesresultPoiresultFromFfi(Pointer<Void> handle) {
  final result = List<PickPoiResult>.empty(growable: true);
  final _iteratorHandle = _heresdkMapviewHarpBindingslistofSdkMapviewPickmapfeaturesresultPoiresultIterator(handle);
  while (_heresdkMapviewHarpBindingslistofSdkMapviewPickmapfeaturesresultPoiresultIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkMapviewHarpBindingslistofSdkMapviewPickmapfeaturesresultPoiresultIteratorGet(_iteratorHandle);
    try {
      result.add(sdkMapviewPickmapfeaturesresultPoiresultFromFfi(_elementHandle));
    } finally {
      sdkMapviewPickmapfeaturesresultPoiresultReleaseFfiHandle(_elementHandle);
    }
    _heresdkMapviewHarpBindingslistofSdkMapviewPickmapfeaturesresultPoiresultIteratorIncrement(_iteratorHandle);
  }
  _heresdkMapviewHarpBindingslistofSdkMapviewPickmapfeaturesresultPoiresultIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMapviewHarpBindingslistofSdkMapviewPickmapfeaturesresultPoiresultReleaseFfiHandle(Pointer<Void> handle) => _heresdkMapviewHarpBindingslistofSdkMapviewPickmapfeaturesresultPoiresultReleaseHandle(handle);

final _heresdkMapviewHarpBindingslistofSdkMapviewPickmapfeaturesresultPoiresultCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_PickMapFeaturesResult_PoiResult_create_handle_nullable'));
final _heresdkMapviewHarpBindingslistofSdkMapviewPickmapfeaturesresultPoiresultReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_PickMapFeaturesResult_PoiResult_release_handle_nullable'));
final _heresdkMapviewHarpBindingslistofSdkMapviewPickmapfeaturesresultPoiresultGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsListOf_sdk_mapview_PickMapFeaturesResult_PoiResult_get_value_nullable'));

Pointer<Void> heresdkMapviewHarpBindingslistofSdkMapviewPickmapfeaturesresultPoiresultToFfiNullable(List<PickPoiResult>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMapviewHarpBindingslistofSdkMapviewPickmapfeaturesresultPoiresultToFfi(value);
  final result = _heresdkMapviewHarpBindingslistofSdkMapviewPickmapfeaturesresultPoiresultCreateHandleNullable(_handle);
  heresdkMapviewHarpBindingslistofSdkMapviewPickmapfeaturesresultPoiresultReleaseFfiHandle(_handle);
  return result;
}

List<PickPoiResult>? heresdkMapviewHarpBindingslistofSdkMapviewPickmapfeaturesresultPoiresultFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkMapviewHarpBindingslistofSdkMapviewPickmapfeaturesresultPoiresultGetValueNullable(handle);
  final result = heresdkMapviewHarpBindingslistofSdkMapviewPickmapfeaturesresultPoiresultFromFfi(_handle);
  heresdkMapviewHarpBindingslistofSdkMapviewPickmapfeaturesresultPoiresultReleaseFfiHandle(_handle);
  return result;
}

void heresdkMapviewHarpBindingslistofSdkMapviewPickmapfeaturesresultPoiresultReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMapviewHarpBindingslistofSdkMapviewPickmapfeaturesresultPoiresultReleaseHandleNullable(handle);

final _heresdkMapviewHarpBindingsmapofSdkCoreEngineEnginebaseurlToStringCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_mapview_harp_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_create_handle'));
final _heresdkMapviewHarpBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_release_handle'));
final _heresdkMapviewHarpBindingsmapofSdkCoreEngineEnginebaseurlToStringPut = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32, Pointer<Void>),
    void Function(Pointer<Void>, int, Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_put'));
final _heresdkMapviewHarpBindingsmapofSdkCoreEngineEnginebaseurlToStringIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_iterator'));
final _heresdkMapviewHarpBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_iterator_release_handle'));
final _heresdkMapviewHarpBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_iterator_is_valid'));
final _heresdkMapviewHarpBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_iterator_increment'));
final _heresdkMapviewHarpBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorGetKey = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_iterator_get_key'));
final _heresdkMapviewHarpBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorGetValue = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_iterator_get_value'));

Pointer<Void> heresdkMapviewHarpBindingsmapofSdkCoreEngineEnginebaseurlToStringToFfi(Map<EngineBaseURL, String> value) {
  final _result = _heresdkMapviewHarpBindingsmapofSdkCoreEngineEnginebaseurlToStringCreateHandle();
  for (final entry in value.entries) {
    final _keyHandle = sdkCoreEngineEnginebaseurlToFfi(entry.key);
    final _valueHandle = stringToFfi(entry.value);
    _heresdkMapviewHarpBindingsmapofSdkCoreEngineEnginebaseurlToStringPut(_result, _keyHandle, _valueHandle);
    sdkCoreEngineEnginebaseurlReleaseFfiHandle(_keyHandle);
    stringReleaseFfiHandle(_valueHandle);
  }
  return _result;
}

Map<EngineBaseURL, String> heresdkMapviewHarpBindingsmapofSdkCoreEngineEnginebaseurlToStringFromFfi(Pointer<Void> handle) {
  final result = Map<EngineBaseURL, String>();
  final _iteratorHandle = _heresdkMapviewHarpBindingsmapofSdkCoreEngineEnginebaseurlToStringIterator(handle);
  while (_heresdkMapviewHarpBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _keyHandle = _heresdkMapviewHarpBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorGetKey(_iteratorHandle);
    final _valueHandle = _heresdkMapviewHarpBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorGetValue(_iteratorHandle);
    try {
      result[sdkCoreEngineEnginebaseurlFromFfi(_keyHandle)] =
        stringFromFfi(_valueHandle);
    } finally {
      sdkCoreEngineEnginebaseurlReleaseFfiHandle(_keyHandle);
      stringReleaseFfiHandle(_valueHandle);
    }
    _heresdkMapviewHarpBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorIncrement(_iteratorHandle);
  }
  _heresdkMapviewHarpBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMapviewHarpBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseFfiHandle(Pointer<Void> handle) => _heresdkMapviewHarpBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseHandle(handle);

final _heresdkMapviewHarpBindingsmapofSdkCoreEngineEnginebaseurlToStringCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_create_handle_nullable'));
final _heresdkMapviewHarpBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_release_handle_nullable'));
final _heresdkMapviewHarpBindingsmapofSdkCoreEngineEnginebaseurlToStringGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_get_value_nullable'));

Pointer<Void> heresdkMapviewHarpBindingsmapofSdkCoreEngineEnginebaseurlToStringToFfiNullable(Map<EngineBaseURL, String>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMapviewHarpBindingsmapofSdkCoreEngineEnginebaseurlToStringToFfi(value);
  final result = _heresdkMapviewHarpBindingsmapofSdkCoreEngineEnginebaseurlToStringCreateHandleNullable(_handle);
  heresdkMapviewHarpBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseFfiHandle(_handle);
  return result;
}

Map<EngineBaseURL, String>? heresdkMapviewHarpBindingsmapofSdkCoreEngineEnginebaseurlToStringFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkMapviewHarpBindingsmapofSdkCoreEngineEnginebaseurlToStringGetValueNullable(handle);
  final result = heresdkMapviewHarpBindingsmapofSdkCoreEngineEnginebaseurlToStringFromFfi(_handle);
  heresdkMapviewHarpBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseFfiHandle(_handle);
  return result;
}

void heresdkMapviewHarpBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMapviewHarpBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseHandleNullable(handle);


// Copyright (c) 2018-2022 HERE Global B.V. and its affiliate(s).
// All rights reserved.
//
// This software and other materials contain proprietary information
// controlled by HERE and are protected by applicable copyright legislation.
// Any use and utilization of this software and other materials and
// disclosure to any third parties is conditional upon having a separate
// agreement with HERE for the access, use, utilization or disclosure of this
// software. In the absence of such agreement, the use of the software is not
// allowed.
//













































final _heresdkNavigationBindingslistofIntCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_navigation_bindingsListOf_Int_create_handle'));
final _heresdkNavigationBindingslistofIntReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_Int_release_handle'));
final _heresdkNavigationBindingslistofIntInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Int32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_navigation_bindingsListOf_Int_insert'));
final _heresdkNavigationBindingslistofIntIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_Int_iterator'));
final _heresdkNavigationBindingslistofIntIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_Int_iterator_release_handle'));
final _heresdkNavigationBindingslistofIntIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_Int_iterator_is_valid'));
final _heresdkNavigationBindingslistofIntIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_Int_iterator_increment'));
final _heresdkNavigationBindingslistofIntIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_Int_iterator_get'));

Pointer<Void> heresdkNavigationBindingslistofIntToFfi(List<int> value) {
  final _result = _heresdkNavigationBindingslistofIntCreateHandle();
  for (final element in value) {
    final _elementHandle = (element);
    _heresdkNavigationBindingslistofIntInsert(_result, _elementHandle);
    
  }
  return _result;
}

List<int> heresdkNavigationBindingslistofIntFromFfi(Pointer<Void> handle) {
  final result = List<int>.empty(growable: true);
  final _iteratorHandle = _heresdkNavigationBindingslistofIntIterator(handle);
  while (_heresdkNavigationBindingslistofIntIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkNavigationBindingslistofIntIteratorGet(_iteratorHandle);
    try {
      result.add((_elementHandle));
    } finally {
      
    }
    _heresdkNavigationBindingslistofIntIteratorIncrement(_iteratorHandle);
  }
  _heresdkNavigationBindingslistofIntIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkNavigationBindingslistofIntReleaseFfiHandle(Pointer<Void> handle) => _heresdkNavigationBindingslistofIntReleaseHandle(handle);

final _heresdkNavigationBindingslistofIntCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_Int_create_handle_nullable'));
final _heresdkNavigationBindingslistofIntReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_Int_release_handle_nullable'));
final _heresdkNavigationBindingslistofIntGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_Int_get_value_nullable'));

Pointer<Void> heresdkNavigationBindingslistofIntToFfiNullable(List<int>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkNavigationBindingslistofIntToFfi(value);
  final result = _heresdkNavigationBindingslistofIntCreateHandleNullable(_handle);
  heresdkNavigationBindingslistofIntReleaseFfiHandle(_handle);
  return result;
}

List<int>? heresdkNavigationBindingslistofIntFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkNavigationBindingslistofIntGetValueNullable(handle);
  final result = heresdkNavigationBindingslistofIntFromFfi(_handle);
  heresdkNavigationBindingslistofIntReleaseFfiHandle(_handle);
  return result;
}

void heresdkNavigationBindingslistofIntReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkNavigationBindingslistofIntReleaseHandleNullable(handle);

final _heresdkNavigationBindingslistofLocaleCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_navigation_bindingsListOf_Locale_create_handle'));
final _heresdkNavigationBindingslistofLocaleReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_Locale_release_handle'));
final _heresdkNavigationBindingslistofLocaleInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_Locale_insert'));
final _heresdkNavigationBindingslistofLocaleIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_Locale_iterator'));
final _heresdkNavigationBindingslistofLocaleIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_Locale_iterator_release_handle'));
final _heresdkNavigationBindingslistofLocaleIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_Locale_iterator_is_valid'));
final _heresdkNavigationBindingslistofLocaleIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_Locale_iterator_increment'));
final _heresdkNavigationBindingslistofLocaleIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_Locale_iterator_get'));

Pointer<Void> heresdkNavigationBindingslistofLocaleToFfi(List<Locale> value) {
  final _result = _heresdkNavigationBindingslistofLocaleCreateHandle();
  for (final element in value) {
    final _elementHandle = localeToFfi(element);
    _heresdkNavigationBindingslistofLocaleInsert(_result, _elementHandle);
    localeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Locale> heresdkNavigationBindingslistofLocaleFromFfi(Pointer<Void> handle) {
  final result = List<Locale>.empty(growable: true);
  final _iteratorHandle = _heresdkNavigationBindingslistofLocaleIterator(handle);
  while (_heresdkNavigationBindingslistofLocaleIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkNavigationBindingslistofLocaleIteratorGet(_iteratorHandle);
    try {
      result.add(localeFromFfi(_elementHandle));
    } finally {
      localeReleaseFfiHandle(_elementHandle);
    }
    _heresdkNavigationBindingslistofLocaleIteratorIncrement(_iteratorHandle);
  }
  _heresdkNavigationBindingslistofLocaleIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkNavigationBindingslistofLocaleReleaseFfiHandle(Pointer<Void> handle) => _heresdkNavigationBindingslistofLocaleReleaseHandle(handle);

final _heresdkNavigationBindingslistofLocaleCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_Locale_create_handle_nullable'));
final _heresdkNavigationBindingslistofLocaleReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_Locale_release_handle_nullable'));
final _heresdkNavigationBindingslistofLocaleGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_Locale_get_value_nullable'));

Pointer<Void> heresdkNavigationBindingslistofLocaleToFfiNullable(List<Locale>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkNavigationBindingslistofLocaleToFfi(value);
  final result = _heresdkNavigationBindingslistofLocaleCreateHandleNullable(_handle);
  heresdkNavigationBindingslistofLocaleReleaseFfiHandle(_handle);
  return result;
}

List<Locale>? heresdkNavigationBindingslistofLocaleFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkNavigationBindingslistofLocaleGetValueNullable(handle);
  final result = heresdkNavigationBindingslistofLocaleFromFfi(_handle);
  heresdkNavigationBindingslistofLocaleReleaseFfiHandle(_handle);
  return result;
}

void heresdkNavigationBindingslistofLocaleReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkNavigationBindingslistofLocaleReleaseHandleNullable(handle);

final _heresdkNavigationBindingslistofSdkCoreCountrycodeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_core_CountryCode_create_handle'));
final _heresdkNavigationBindingslistofSdkCoreCountrycodeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_core_CountryCode_release_handle'));
final _heresdkNavigationBindingslistofSdkCoreCountrycodeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_core_CountryCode_insert'));
final _heresdkNavigationBindingslistofSdkCoreCountrycodeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_core_CountryCode_iterator'));
final _heresdkNavigationBindingslistofSdkCoreCountrycodeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_core_CountryCode_iterator_release_handle'));
final _heresdkNavigationBindingslistofSdkCoreCountrycodeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_core_CountryCode_iterator_is_valid'));
final _heresdkNavigationBindingslistofSdkCoreCountrycodeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_core_CountryCode_iterator_increment'));
final _heresdkNavigationBindingslistofSdkCoreCountrycodeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_core_CountryCode_iterator_get'));

Pointer<Void> heresdkNavigationBindingslistofSdkCoreCountrycodeToFfi(List<CountryCode> value) {
  final _result = _heresdkNavigationBindingslistofSdkCoreCountrycodeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreCountrycodeToFfi(element);
    _heresdkNavigationBindingslistofSdkCoreCountrycodeInsert(_result, _elementHandle);
    sdkCoreCountrycodeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<CountryCode> heresdkNavigationBindingslistofSdkCoreCountrycodeFromFfi(Pointer<Void> handle) {
  final result = List<CountryCode>.empty(growable: true);
  final _iteratorHandle = _heresdkNavigationBindingslistofSdkCoreCountrycodeIterator(handle);
  while (_heresdkNavigationBindingslistofSdkCoreCountrycodeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkNavigationBindingslistofSdkCoreCountrycodeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreCountrycodeFromFfi(_elementHandle));
    } finally {
      sdkCoreCountrycodeReleaseFfiHandle(_elementHandle);
    }
    _heresdkNavigationBindingslistofSdkCoreCountrycodeIteratorIncrement(_iteratorHandle);
  }
  _heresdkNavigationBindingslistofSdkCoreCountrycodeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkNavigationBindingslistofSdkCoreCountrycodeReleaseFfiHandle(Pointer<Void> handle) => _heresdkNavigationBindingslistofSdkCoreCountrycodeReleaseHandle(handle);

final _heresdkNavigationBindingslistofSdkCoreCountrycodeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_core_CountryCode_create_handle_nullable'));
final _heresdkNavigationBindingslistofSdkCoreCountrycodeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_core_CountryCode_release_handle_nullable'));
final _heresdkNavigationBindingslistofSdkCoreCountrycodeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_core_CountryCode_get_value_nullable'));

Pointer<Void> heresdkNavigationBindingslistofSdkCoreCountrycodeToFfiNullable(List<CountryCode>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkNavigationBindingslistofSdkCoreCountrycodeToFfi(value);
  final result = _heresdkNavigationBindingslistofSdkCoreCountrycodeCreateHandleNullable(_handle);
  heresdkNavigationBindingslistofSdkCoreCountrycodeReleaseFfiHandle(_handle);
  return result;
}

List<CountryCode>? heresdkNavigationBindingslistofSdkCoreCountrycodeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkNavigationBindingslistofSdkCoreCountrycodeGetValueNullable(handle);
  final result = heresdkNavigationBindingslistofSdkCoreCountrycodeFromFfi(_handle);
  heresdkNavigationBindingslistofSdkCoreCountrycodeReleaseFfiHandle(_handle);
  return result;
}

void heresdkNavigationBindingslistofSdkCoreCountrycodeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkNavigationBindingslistofSdkCoreCountrycodeReleaseHandleNullable(handle);

final _heresdkNavigationBindingslistofSdkCoreGeoboxCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_core_GeoBox_create_handle'));
final _heresdkNavigationBindingslistofSdkCoreGeoboxReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_core_GeoBox_release_handle'));
final _heresdkNavigationBindingslistofSdkCoreGeoboxInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_core_GeoBox_insert'));
final _heresdkNavigationBindingslistofSdkCoreGeoboxIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_core_GeoBox_iterator'));
final _heresdkNavigationBindingslistofSdkCoreGeoboxIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_core_GeoBox_iterator_release_handle'));
final _heresdkNavigationBindingslistofSdkCoreGeoboxIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_core_GeoBox_iterator_is_valid'));
final _heresdkNavigationBindingslistofSdkCoreGeoboxIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_core_GeoBox_iterator_increment'));
final _heresdkNavigationBindingslistofSdkCoreGeoboxIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_core_GeoBox_iterator_get'));

Pointer<Void> heresdkNavigationBindingslistofSdkCoreGeoboxToFfi(List<GeoBox> value) {
  final _result = _heresdkNavigationBindingslistofSdkCoreGeoboxCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreGeoboxToFfi(element);
    _heresdkNavigationBindingslistofSdkCoreGeoboxInsert(_result, _elementHandle);
    sdkCoreGeoboxReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoBox> heresdkNavigationBindingslistofSdkCoreGeoboxFromFfi(Pointer<Void> handle) {
  final result = List<GeoBox>.empty(growable: true);
  final _iteratorHandle = _heresdkNavigationBindingslistofSdkCoreGeoboxIterator(handle);
  while (_heresdkNavigationBindingslistofSdkCoreGeoboxIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkNavigationBindingslistofSdkCoreGeoboxIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreGeoboxFromFfi(_elementHandle));
    } finally {
      sdkCoreGeoboxReleaseFfiHandle(_elementHandle);
    }
    _heresdkNavigationBindingslistofSdkCoreGeoboxIteratorIncrement(_iteratorHandle);
  }
  _heresdkNavigationBindingslistofSdkCoreGeoboxIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkNavigationBindingslistofSdkCoreGeoboxReleaseFfiHandle(Pointer<Void> handle) => _heresdkNavigationBindingslistofSdkCoreGeoboxReleaseHandle(handle);

final _heresdkNavigationBindingslistofSdkCoreGeoboxCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_core_GeoBox_create_handle_nullable'));
final _heresdkNavigationBindingslistofSdkCoreGeoboxReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_core_GeoBox_release_handle_nullable'));
final _heresdkNavigationBindingslistofSdkCoreGeoboxGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_core_GeoBox_get_value_nullable'));

Pointer<Void> heresdkNavigationBindingslistofSdkCoreGeoboxToFfiNullable(List<GeoBox>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkNavigationBindingslistofSdkCoreGeoboxToFfi(value);
  final result = _heresdkNavigationBindingslistofSdkCoreGeoboxCreateHandleNullable(_handle);
  heresdkNavigationBindingslistofSdkCoreGeoboxReleaseFfiHandle(_handle);
  return result;
}

List<GeoBox>? heresdkNavigationBindingslistofSdkCoreGeoboxFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkNavigationBindingslistofSdkCoreGeoboxGetValueNullable(handle);
  final result = heresdkNavigationBindingslistofSdkCoreGeoboxFromFfi(_handle);
  heresdkNavigationBindingslistofSdkCoreGeoboxReleaseFfiHandle(_handle);
  return result;
}

void heresdkNavigationBindingslistofSdkCoreGeoboxReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkNavigationBindingslistofSdkCoreGeoboxReleaseHandleNullable(handle);

final _heresdkNavigationBindingslistofSdkCoreGeocoordinatesCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_core_GeoCoordinates_create_handle'));
final _heresdkNavigationBindingslistofSdkCoreGeocoordinatesReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_core_GeoCoordinates_release_handle'));
final _heresdkNavigationBindingslistofSdkCoreGeocoordinatesInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_core_GeoCoordinates_insert'));
final _heresdkNavigationBindingslistofSdkCoreGeocoordinatesIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_core_GeoCoordinates_iterator'));
final _heresdkNavigationBindingslistofSdkCoreGeocoordinatesIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_core_GeoCoordinates_iterator_release_handle'));
final _heresdkNavigationBindingslistofSdkCoreGeocoordinatesIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_core_GeoCoordinates_iterator_is_valid'));
final _heresdkNavigationBindingslistofSdkCoreGeocoordinatesIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_core_GeoCoordinates_iterator_increment'));
final _heresdkNavigationBindingslistofSdkCoreGeocoordinatesIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_core_GeoCoordinates_iterator_get'));

Pointer<Void> heresdkNavigationBindingslistofSdkCoreGeocoordinatesToFfi(List<GeoCoordinates> value) {
  final _result = _heresdkNavigationBindingslistofSdkCoreGeocoordinatesCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreGeocoordinatesToFfi(element);
    _heresdkNavigationBindingslistofSdkCoreGeocoordinatesInsert(_result, _elementHandle);
    sdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoCoordinates> heresdkNavigationBindingslistofSdkCoreGeocoordinatesFromFfi(Pointer<Void> handle) {
  final result = List<GeoCoordinates>.empty(growable: true);
  final _iteratorHandle = _heresdkNavigationBindingslistofSdkCoreGeocoordinatesIterator(handle);
  while (_heresdkNavigationBindingslistofSdkCoreGeocoordinatesIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkNavigationBindingslistofSdkCoreGeocoordinatesIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreGeocoordinatesFromFfi(_elementHandle));
    } finally {
      sdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
    }
    _heresdkNavigationBindingslistofSdkCoreGeocoordinatesIteratorIncrement(_iteratorHandle);
  }
  _heresdkNavigationBindingslistofSdkCoreGeocoordinatesIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkNavigationBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(Pointer<Void> handle) => _heresdkNavigationBindingslistofSdkCoreGeocoordinatesReleaseHandle(handle);

final _heresdkNavigationBindingslistofSdkCoreGeocoordinatesCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_core_GeoCoordinates_create_handle_nullable'));
final _heresdkNavigationBindingslistofSdkCoreGeocoordinatesReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_core_GeoCoordinates_release_handle_nullable'));
final _heresdkNavigationBindingslistofSdkCoreGeocoordinatesGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_core_GeoCoordinates_get_value_nullable'));

Pointer<Void> heresdkNavigationBindingslistofSdkCoreGeocoordinatesToFfiNullable(List<GeoCoordinates>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkNavigationBindingslistofSdkCoreGeocoordinatesToFfi(value);
  final result = _heresdkNavigationBindingslistofSdkCoreGeocoordinatesCreateHandleNullable(_handle);
  heresdkNavigationBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

List<GeoCoordinates>? heresdkNavigationBindingslistofSdkCoreGeocoordinatesFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkNavigationBindingslistofSdkCoreGeocoordinatesGetValueNullable(handle);
  final result = heresdkNavigationBindingslistofSdkCoreGeocoordinatesFromFfi(_handle);
  heresdkNavigationBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

void heresdkNavigationBindingslistofSdkCoreGeocoordinatesReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkNavigationBindingslistofSdkCoreGeocoordinatesReleaseHandleNullable(handle);

final _heresdkNavigationBindingslistofSdkCoreLanguagecodeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_core_LanguageCode_create_handle'));
final _heresdkNavigationBindingslistofSdkCoreLanguagecodeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_core_LanguageCode_release_handle'));
final _heresdkNavigationBindingslistofSdkCoreLanguagecodeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_core_LanguageCode_insert'));
final _heresdkNavigationBindingslistofSdkCoreLanguagecodeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_core_LanguageCode_iterator'));
final _heresdkNavigationBindingslistofSdkCoreLanguagecodeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_core_LanguageCode_iterator_release_handle'));
final _heresdkNavigationBindingslistofSdkCoreLanguagecodeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_core_LanguageCode_iterator_is_valid'));
final _heresdkNavigationBindingslistofSdkCoreLanguagecodeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_core_LanguageCode_iterator_increment'));
final _heresdkNavigationBindingslistofSdkCoreLanguagecodeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_core_LanguageCode_iterator_get'));

Pointer<Void> heresdkNavigationBindingslistofSdkCoreLanguagecodeToFfi(List<LanguageCode> value) {
  final _result = _heresdkNavigationBindingslistofSdkCoreLanguagecodeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreLanguagecodeToFfi(element);
    _heresdkNavigationBindingslistofSdkCoreLanguagecodeInsert(_result, _elementHandle);
    sdkCoreLanguagecodeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<LanguageCode> heresdkNavigationBindingslistofSdkCoreLanguagecodeFromFfi(Pointer<Void> handle) {
  final result = List<LanguageCode>.empty(growable: true);
  final _iteratorHandle = _heresdkNavigationBindingslistofSdkCoreLanguagecodeIterator(handle);
  while (_heresdkNavigationBindingslistofSdkCoreLanguagecodeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkNavigationBindingslistofSdkCoreLanguagecodeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreLanguagecodeFromFfi(_elementHandle));
    } finally {
      sdkCoreLanguagecodeReleaseFfiHandle(_elementHandle);
    }
    _heresdkNavigationBindingslistofSdkCoreLanguagecodeIteratorIncrement(_iteratorHandle);
  }
  _heresdkNavigationBindingslistofSdkCoreLanguagecodeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkNavigationBindingslistofSdkCoreLanguagecodeReleaseFfiHandle(Pointer<Void> handle) => _heresdkNavigationBindingslistofSdkCoreLanguagecodeReleaseHandle(handle);

final _heresdkNavigationBindingslistofSdkCoreLanguagecodeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_core_LanguageCode_create_handle_nullable'));
final _heresdkNavigationBindingslistofSdkCoreLanguagecodeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_core_LanguageCode_release_handle_nullable'));
final _heresdkNavigationBindingslistofSdkCoreLanguagecodeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_core_LanguageCode_get_value_nullable'));

Pointer<Void> heresdkNavigationBindingslistofSdkCoreLanguagecodeToFfiNullable(List<LanguageCode>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkNavigationBindingslistofSdkCoreLanguagecodeToFfi(value);
  final result = _heresdkNavigationBindingslistofSdkCoreLanguagecodeCreateHandleNullable(_handle);
  heresdkNavigationBindingslistofSdkCoreLanguagecodeReleaseFfiHandle(_handle);
  return result;
}

List<LanguageCode>? heresdkNavigationBindingslistofSdkCoreLanguagecodeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkNavigationBindingslistofSdkCoreLanguagecodeGetValueNullable(handle);
  final result = heresdkNavigationBindingslistofSdkCoreLanguagecodeFromFfi(_handle);
  heresdkNavigationBindingslistofSdkCoreLanguagecodeReleaseFfiHandle(_handle);
  return result;
}

void heresdkNavigationBindingslistofSdkCoreLanguagecodeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkNavigationBindingslistofSdkCoreLanguagecodeReleaseHandleNullable(handle);

final _heresdkNavigationBindingslistofSdkCoreLocalizedtextCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_core_LocalizedText_create_handle'));
final _heresdkNavigationBindingslistofSdkCoreLocalizedtextReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_core_LocalizedText_release_handle'));
final _heresdkNavigationBindingslistofSdkCoreLocalizedtextInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_core_LocalizedText_insert'));
final _heresdkNavigationBindingslistofSdkCoreLocalizedtextIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_core_LocalizedText_iterator'));
final _heresdkNavigationBindingslistofSdkCoreLocalizedtextIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_core_LocalizedText_iterator_release_handle'));
final _heresdkNavigationBindingslistofSdkCoreLocalizedtextIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_core_LocalizedText_iterator_is_valid'));
final _heresdkNavigationBindingslistofSdkCoreLocalizedtextIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_core_LocalizedText_iterator_increment'));
final _heresdkNavigationBindingslistofSdkCoreLocalizedtextIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_core_LocalizedText_iterator_get'));

Pointer<Void> heresdkNavigationBindingslistofSdkCoreLocalizedtextToFfi(List<LocalizedText> value) {
  final _result = _heresdkNavigationBindingslistofSdkCoreLocalizedtextCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreLocalizedtextToFfi(element);
    _heresdkNavigationBindingslistofSdkCoreLocalizedtextInsert(_result, _elementHandle);
    sdkCoreLocalizedtextReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<LocalizedText> heresdkNavigationBindingslistofSdkCoreLocalizedtextFromFfi(Pointer<Void> handle) {
  final result = List<LocalizedText>.empty(growable: true);
  final _iteratorHandle = _heresdkNavigationBindingslistofSdkCoreLocalizedtextIterator(handle);
  while (_heresdkNavigationBindingslistofSdkCoreLocalizedtextIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkNavigationBindingslistofSdkCoreLocalizedtextIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreLocalizedtextFromFfi(_elementHandle));
    } finally {
      sdkCoreLocalizedtextReleaseFfiHandle(_elementHandle);
    }
    _heresdkNavigationBindingslistofSdkCoreLocalizedtextIteratorIncrement(_iteratorHandle);
  }
  _heresdkNavigationBindingslistofSdkCoreLocalizedtextIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkNavigationBindingslistofSdkCoreLocalizedtextReleaseFfiHandle(Pointer<Void> handle) => _heresdkNavigationBindingslistofSdkCoreLocalizedtextReleaseHandle(handle);

final _heresdkNavigationBindingslistofSdkCoreLocalizedtextCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_core_LocalizedText_create_handle_nullable'));
final _heresdkNavigationBindingslistofSdkCoreLocalizedtextReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_core_LocalizedText_release_handle_nullable'));
final _heresdkNavigationBindingslistofSdkCoreLocalizedtextGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_core_LocalizedText_get_value_nullable'));

Pointer<Void> heresdkNavigationBindingslistofSdkCoreLocalizedtextToFfiNullable(List<LocalizedText>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkNavigationBindingslistofSdkCoreLocalizedtextToFfi(value);
  final result = _heresdkNavigationBindingslistofSdkCoreLocalizedtextCreateHandleNullable(_handle);
  heresdkNavigationBindingslistofSdkCoreLocalizedtextReleaseFfiHandle(_handle);
  return result;
}

List<LocalizedText>? heresdkNavigationBindingslistofSdkCoreLocalizedtextFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkNavigationBindingslistofSdkCoreLocalizedtextGetValueNullable(handle);
  final result = heresdkNavigationBindingslistofSdkCoreLocalizedtextFromFfi(_handle);
  heresdkNavigationBindingslistofSdkCoreLocalizedtextReleaseFfiHandle(_handle);
  return result;
}

void heresdkNavigationBindingslistofSdkCoreLocalizedtextReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkNavigationBindingslistofSdkCoreLocalizedtextReleaseHandleNullable(handle);

final _heresdkNavigationBindingslistofSdkCoreEngineLayerconfigurationFeatureCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_create_handle'));
final _heresdkNavigationBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_release_handle'));
final _heresdkNavigationBindingslistofSdkCoreEngineLayerconfigurationFeatureInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_insert'));
final _heresdkNavigationBindingslistofSdkCoreEngineLayerconfigurationFeatureIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator'));
final _heresdkNavigationBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator_release_handle'));
final _heresdkNavigationBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator_is_valid'));
final _heresdkNavigationBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator_increment'));
final _heresdkNavigationBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator_get'));

Pointer<Void> heresdkNavigationBindingslistofSdkCoreEngineLayerconfigurationFeatureToFfi(List<LayerConfigurationFeature> value) {
  final _result = _heresdkNavigationBindingslistofSdkCoreEngineLayerconfigurationFeatureCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreEngineLayerconfigurationFeatureToFfi(element);
    _heresdkNavigationBindingslistofSdkCoreEngineLayerconfigurationFeatureInsert(_result, _elementHandle);
    sdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<LayerConfigurationFeature> heresdkNavigationBindingslistofSdkCoreEngineLayerconfigurationFeatureFromFfi(Pointer<Void> handle) {
  final result = List<LayerConfigurationFeature>.empty(growable: true);
  final _iteratorHandle = _heresdkNavigationBindingslistofSdkCoreEngineLayerconfigurationFeatureIterator(handle);
  while (_heresdkNavigationBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkNavigationBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreEngineLayerconfigurationFeatureFromFfi(_elementHandle));
    } finally {
      sdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(_elementHandle);
    }
    _heresdkNavigationBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorIncrement(_iteratorHandle);
  }
  _heresdkNavigationBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkNavigationBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(Pointer<Void> handle) => _heresdkNavigationBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseHandle(handle);

final _heresdkNavigationBindingslistofSdkCoreEngineLayerconfigurationFeatureCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_create_handle_nullable'));
final _heresdkNavigationBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_release_handle_nullable'));
final _heresdkNavigationBindingslistofSdkCoreEngineLayerconfigurationFeatureGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_get_value_nullable'));

Pointer<Void> heresdkNavigationBindingslistofSdkCoreEngineLayerconfigurationFeatureToFfiNullable(List<LayerConfigurationFeature>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkNavigationBindingslistofSdkCoreEngineLayerconfigurationFeatureToFfi(value);
  final result = _heresdkNavigationBindingslistofSdkCoreEngineLayerconfigurationFeatureCreateHandleNullable(_handle);
  heresdkNavigationBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(_handle);
  return result;
}

List<LayerConfigurationFeature>? heresdkNavigationBindingslistofSdkCoreEngineLayerconfigurationFeatureFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkNavigationBindingslistofSdkCoreEngineLayerconfigurationFeatureGetValueNullable(handle);
  final result = heresdkNavigationBindingslistofSdkCoreEngineLayerconfigurationFeatureFromFfi(_handle);
  heresdkNavigationBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(_handle);
  return result;
}

void heresdkNavigationBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkNavigationBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseHandleNullable(handle);

final _heresdkNavigationBindingslistofSdkNavigationGpxtrackCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_navigation_GPXTrack_create_handle'));
final _heresdkNavigationBindingslistofSdkNavigationGpxtrackReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_navigation_GPXTrack_release_handle'));
final _heresdkNavigationBindingslistofSdkNavigationGpxtrackInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_navigation_GPXTrack_insert'));
final _heresdkNavigationBindingslistofSdkNavigationGpxtrackIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_navigation_GPXTrack_iterator'));
final _heresdkNavigationBindingslistofSdkNavigationGpxtrackIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_navigation_GPXTrack_iterator_release_handle'));
final _heresdkNavigationBindingslistofSdkNavigationGpxtrackIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_navigation_GPXTrack_iterator_is_valid'));
final _heresdkNavigationBindingslistofSdkNavigationGpxtrackIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_navigation_GPXTrack_iterator_increment'));
final _heresdkNavigationBindingslistofSdkNavigationGpxtrackIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_navigation_GPXTrack_iterator_get'));

Pointer<Void> heresdkNavigationBindingslistofSdkNavigationGpxtrackToFfi(List<GPXTrack> value) {
  final _result = _heresdkNavigationBindingslistofSdkNavigationGpxtrackCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkNavigationGpxtrackToFfi(element);
    _heresdkNavigationBindingslistofSdkNavigationGpxtrackInsert(_result, _elementHandle);
    sdkNavigationGpxtrackReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GPXTrack> heresdkNavigationBindingslistofSdkNavigationGpxtrackFromFfi(Pointer<Void> handle) {
  final result = List<GPXTrack>.empty(growable: true);
  final _iteratorHandle = _heresdkNavigationBindingslistofSdkNavigationGpxtrackIterator(handle);
  while (_heresdkNavigationBindingslistofSdkNavigationGpxtrackIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkNavigationBindingslistofSdkNavigationGpxtrackIteratorGet(_iteratorHandle);
    try {
      result.add(sdkNavigationGpxtrackFromFfi(_elementHandle));
    } finally {
      sdkNavigationGpxtrackReleaseFfiHandle(_elementHandle);
    }
    _heresdkNavigationBindingslistofSdkNavigationGpxtrackIteratorIncrement(_iteratorHandle);
  }
  _heresdkNavigationBindingslistofSdkNavigationGpxtrackIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkNavigationBindingslistofSdkNavigationGpxtrackReleaseFfiHandle(Pointer<Void> handle) => _heresdkNavigationBindingslistofSdkNavigationGpxtrackReleaseHandle(handle);

final _heresdkNavigationBindingslistofSdkNavigationGpxtrackCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_navigation_GPXTrack_create_handle_nullable'));
final _heresdkNavigationBindingslistofSdkNavigationGpxtrackReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_navigation_GPXTrack_release_handle_nullable'));
final _heresdkNavigationBindingslistofSdkNavigationGpxtrackGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_navigation_GPXTrack_get_value_nullable'));

Pointer<Void> heresdkNavigationBindingslistofSdkNavigationGpxtrackToFfiNullable(List<GPXTrack>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkNavigationBindingslistofSdkNavigationGpxtrackToFfi(value);
  final result = _heresdkNavigationBindingslistofSdkNavigationGpxtrackCreateHandleNullable(_handle);
  heresdkNavigationBindingslistofSdkNavigationGpxtrackReleaseFfiHandle(_handle);
  return result;
}

List<GPXTrack>? heresdkNavigationBindingslistofSdkNavigationGpxtrackFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkNavigationBindingslistofSdkNavigationGpxtrackGetValueNullable(handle);
  final result = heresdkNavigationBindingslistofSdkNavigationGpxtrackFromFfi(_handle);
  heresdkNavigationBindingslistofSdkNavigationGpxtrackReleaseFfiHandle(_handle);
  return result;
}

void heresdkNavigationBindingslistofSdkNavigationGpxtrackReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkNavigationBindingslistofSdkNavigationGpxtrackReleaseHandleNullable(handle);

final _heresdkNavigationBindingslistofSdkNavigationLaneCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_navigation_Lane_create_handle'));
final _heresdkNavigationBindingslistofSdkNavigationLaneReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_navigation_Lane_release_handle'));
final _heresdkNavigationBindingslistofSdkNavigationLaneInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_navigation_Lane_insert'));
final _heresdkNavigationBindingslistofSdkNavigationLaneIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_navigation_Lane_iterator'));
final _heresdkNavigationBindingslistofSdkNavigationLaneIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_navigation_Lane_iterator_release_handle'));
final _heresdkNavigationBindingslistofSdkNavigationLaneIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_navigation_Lane_iterator_is_valid'));
final _heresdkNavigationBindingslistofSdkNavigationLaneIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_navigation_Lane_iterator_increment'));
final _heresdkNavigationBindingslistofSdkNavigationLaneIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_navigation_Lane_iterator_get'));

Pointer<Void> heresdkNavigationBindingslistofSdkNavigationLaneToFfi(List<Lane> value) {
  final _result = _heresdkNavigationBindingslistofSdkNavigationLaneCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkNavigationLaneToFfi(element);
    _heresdkNavigationBindingslistofSdkNavigationLaneInsert(_result, _elementHandle);
    sdkNavigationLaneReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Lane> heresdkNavigationBindingslistofSdkNavigationLaneFromFfi(Pointer<Void> handle) {
  final result = List<Lane>.empty(growable: true);
  final _iteratorHandle = _heresdkNavigationBindingslistofSdkNavigationLaneIterator(handle);
  while (_heresdkNavigationBindingslistofSdkNavigationLaneIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkNavigationBindingslistofSdkNavigationLaneIteratorGet(_iteratorHandle);
    try {
      result.add(sdkNavigationLaneFromFfi(_elementHandle));
    } finally {
      sdkNavigationLaneReleaseFfiHandle(_elementHandle);
    }
    _heresdkNavigationBindingslistofSdkNavigationLaneIteratorIncrement(_iteratorHandle);
  }
  _heresdkNavigationBindingslistofSdkNavigationLaneIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkNavigationBindingslistofSdkNavigationLaneReleaseFfiHandle(Pointer<Void> handle) => _heresdkNavigationBindingslistofSdkNavigationLaneReleaseHandle(handle);

final _heresdkNavigationBindingslistofSdkNavigationLaneCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_navigation_Lane_create_handle_nullable'));
final _heresdkNavigationBindingslistofSdkNavigationLaneReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_navigation_Lane_release_handle_nullable'));
final _heresdkNavigationBindingslistofSdkNavigationLaneGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_navigation_Lane_get_value_nullable'));

Pointer<Void> heresdkNavigationBindingslistofSdkNavigationLaneToFfiNullable(List<Lane>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkNavigationBindingslistofSdkNavigationLaneToFfi(value);
  final result = _heresdkNavigationBindingslistofSdkNavigationLaneCreateHandleNullable(_handle);
  heresdkNavigationBindingslistofSdkNavigationLaneReleaseFfiHandle(_handle);
  return result;
}

List<Lane>? heresdkNavigationBindingslistofSdkNavigationLaneFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkNavigationBindingslistofSdkNavigationLaneGetValueNullable(handle);
  final result = heresdkNavigationBindingslistofSdkNavigationLaneFromFfi(_handle);
  heresdkNavigationBindingslistofSdkNavigationLaneReleaseFfiHandle(_handle);
  return result;
}

void heresdkNavigationBindingslistofSdkNavigationLaneReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkNavigationBindingslistofSdkNavigationLaneReleaseHandleNullable(handle);

final _heresdkNavigationBindingslistofSdkNavigationManeuvernotificationtypeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_navigation_ManeuverNotificationType_create_handle'));
final _heresdkNavigationBindingslistofSdkNavigationManeuvernotificationtypeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_navigation_ManeuverNotificationType_release_handle'));
final _heresdkNavigationBindingslistofSdkNavigationManeuvernotificationtypeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_navigation_ManeuverNotificationType_insert'));
final _heresdkNavigationBindingslistofSdkNavigationManeuvernotificationtypeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_navigation_ManeuverNotificationType_iterator'));
final _heresdkNavigationBindingslistofSdkNavigationManeuvernotificationtypeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_navigation_ManeuverNotificationType_iterator_release_handle'));
final _heresdkNavigationBindingslistofSdkNavigationManeuvernotificationtypeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_navigation_ManeuverNotificationType_iterator_is_valid'));
final _heresdkNavigationBindingslistofSdkNavigationManeuvernotificationtypeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_navigation_ManeuverNotificationType_iterator_increment'));
final _heresdkNavigationBindingslistofSdkNavigationManeuvernotificationtypeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_navigation_ManeuverNotificationType_iterator_get'));

Pointer<Void> heresdkNavigationBindingslistofSdkNavigationManeuvernotificationtypeToFfi(List<ManeuverNotificationType> value) {
  final _result = _heresdkNavigationBindingslistofSdkNavigationManeuvernotificationtypeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkNavigationManeuvernotificationtypeToFfi(element);
    _heresdkNavigationBindingslistofSdkNavigationManeuvernotificationtypeInsert(_result, _elementHandle);
    sdkNavigationManeuvernotificationtypeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<ManeuverNotificationType> heresdkNavigationBindingslistofSdkNavigationManeuvernotificationtypeFromFfi(Pointer<Void> handle) {
  final result = List<ManeuverNotificationType>.empty(growable: true);
  final _iteratorHandle = _heresdkNavigationBindingslistofSdkNavigationManeuvernotificationtypeIterator(handle);
  while (_heresdkNavigationBindingslistofSdkNavigationManeuvernotificationtypeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkNavigationBindingslistofSdkNavigationManeuvernotificationtypeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkNavigationManeuvernotificationtypeFromFfi(_elementHandle));
    } finally {
      sdkNavigationManeuvernotificationtypeReleaseFfiHandle(_elementHandle);
    }
    _heresdkNavigationBindingslistofSdkNavigationManeuvernotificationtypeIteratorIncrement(_iteratorHandle);
  }
  _heresdkNavigationBindingslistofSdkNavigationManeuvernotificationtypeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkNavigationBindingslistofSdkNavigationManeuvernotificationtypeReleaseFfiHandle(Pointer<Void> handle) => _heresdkNavigationBindingslistofSdkNavigationManeuvernotificationtypeReleaseHandle(handle);

final _heresdkNavigationBindingslistofSdkNavigationManeuvernotificationtypeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_navigation_ManeuverNotificationType_create_handle_nullable'));
final _heresdkNavigationBindingslistofSdkNavigationManeuvernotificationtypeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_navigation_ManeuverNotificationType_release_handle_nullable'));
final _heresdkNavigationBindingslistofSdkNavigationManeuvernotificationtypeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_navigation_ManeuverNotificationType_get_value_nullable'));

Pointer<Void> heresdkNavigationBindingslistofSdkNavigationManeuvernotificationtypeToFfiNullable(List<ManeuverNotificationType>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkNavigationBindingslistofSdkNavigationManeuvernotificationtypeToFfi(value);
  final result = _heresdkNavigationBindingslistofSdkNavigationManeuvernotificationtypeCreateHandleNullable(_handle);
  heresdkNavigationBindingslistofSdkNavigationManeuvernotificationtypeReleaseFfiHandle(_handle);
  return result;
}

List<ManeuverNotificationType>? heresdkNavigationBindingslistofSdkNavigationManeuvernotificationtypeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkNavigationBindingslistofSdkNavigationManeuvernotificationtypeGetValueNullable(handle);
  final result = heresdkNavigationBindingslistofSdkNavigationManeuvernotificationtypeFromFfi(_handle);
  heresdkNavigationBindingslistofSdkNavigationManeuvernotificationtypeReleaseFfiHandle(_handle);
  return result;
}

void heresdkNavigationBindingslistofSdkNavigationManeuvernotificationtypeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkNavigationBindingslistofSdkNavigationManeuvernotificationtypeReleaseHandleNullable(handle);

final _heresdkNavigationBindingslistofSdkNavigationManeuverprogressCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_navigation_ManeuverProgress_create_handle'));
final _heresdkNavigationBindingslistofSdkNavigationManeuverprogressReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_navigation_ManeuverProgress_release_handle'));
final _heresdkNavigationBindingslistofSdkNavigationManeuverprogressInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_navigation_ManeuverProgress_insert'));
final _heresdkNavigationBindingslistofSdkNavigationManeuverprogressIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_navigation_ManeuverProgress_iterator'));
final _heresdkNavigationBindingslistofSdkNavigationManeuverprogressIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_navigation_ManeuverProgress_iterator_release_handle'));
final _heresdkNavigationBindingslistofSdkNavigationManeuverprogressIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_navigation_ManeuverProgress_iterator_is_valid'));
final _heresdkNavigationBindingslistofSdkNavigationManeuverprogressIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_navigation_ManeuverProgress_iterator_increment'));
final _heresdkNavigationBindingslistofSdkNavigationManeuverprogressIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_navigation_ManeuverProgress_iterator_get'));

Pointer<Void> heresdkNavigationBindingslistofSdkNavigationManeuverprogressToFfi(List<ManeuverProgress> value) {
  final _result = _heresdkNavigationBindingslistofSdkNavigationManeuverprogressCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkNavigationManeuverprogressToFfi(element);
    _heresdkNavigationBindingslistofSdkNavigationManeuverprogressInsert(_result, _elementHandle);
    sdkNavigationManeuverprogressReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<ManeuverProgress> heresdkNavigationBindingslistofSdkNavigationManeuverprogressFromFfi(Pointer<Void> handle) {
  final result = List<ManeuverProgress>.empty(growable: true);
  final _iteratorHandle = _heresdkNavigationBindingslistofSdkNavigationManeuverprogressIterator(handle);
  while (_heresdkNavigationBindingslistofSdkNavigationManeuverprogressIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkNavigationBindingslistofSdkNavigationManeuverprogressIteratorGet(_iteratorHandle);
    try {
      result.add(sdkNavigationManeuverprogressFromFfi(_elementHandle));
    } finally {
      sdkNavigationManeuverprogressReleaseFfiHandle(_elementHandle);
    }
    _heresdkNavigationBindingslistofSdkNavigationManeuverprogressIteratorIncrement(_iteratorHandle);
  }
  _heresdkNavigationBindingslistofSdkNavigationManeuverprogressIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkNavigationBindingslistofSdkNavigationManeuverprogressReleaseFfiHandle(Pointer<Void> handle) => _heresdkNavigationBindingslistofSdkNavigationManeuverprogressReleaseHandle(handle);

final _heresdkNavigationBindingslistofSdkNavigationManeuverprogressCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_navigation_ManeuverProgress_create_handle_nullable'));
final _heresdkNavigationBindingslistofSdkNavigationManeuverprogressReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_navigation_ManeuverProgress_release_handle_nullable'));
final _heresdkNavigationBindingslistofSdkNavigationManeuverprogressGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_navigation_ManeuverProgress_get_value_nullable'));

Pointer<Void> heresdkNavigationBindingslistofSdkNavigationManeuverprogressToFfiNullable(List<ManeuverProgress>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkNavigationBindingslistofSdkNavigationManeuverprogressToFfi(value);
  final result = _heresdkNavigationBindingslistofSdkNavigationManeuverprogressCreateHandleNullable(_handle);
  heresdkNavigationBindingslistofSdkNavigationManeuverprogressReleaseFfiHandle(_handle);
  return result;
}

List<ManeuverProgress>? heresdkNavigationBindingslistofSdkNavigationManeuverprogressFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkNavigationBindingslistofSdkNavigationManeuverprogressGetValueNullable(handle);
  final result = heresdkNavigationBindingslistofSdkNavigationManeuverprogressFromFfi(_handle);
  heresdkNavigationBindingslistofSdkNavigationManeuverprogressReleaseFfiHandle(_handle);
  return result;
}

void heresdkNavigationBindingslistofSdkNavigationManeuverprogressReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkNavigationBindingslistofSdkNavigationManeuverprogressReleaseHandleNullable(handle);

final _heresdkNavigationBindingslistofSdkNavigationSectionprogressCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_navigation_SectionProgress_create_handle'));
final _heresdkNavigationBindingslistofSdkNavigationSectionprogressReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_navigation_SectionProgress_release_handle'));
final _heresdkNavigationBindingslistofSdkNavigationSectionprogressInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_navigation_SectionProgress_insert'));
final _heresdkNavigationBindingslistofSdkNavigationSectionprogressIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_navigation_SectionProgress_iterator'));
final _heresdkNavigationBindingslistofSdkNavigationSectionprogressIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_navigation_SectionProgress_iterator_release_handle'));
final _heresdkNavigationBindingslistofSdkNavigationSectionprogressIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_navigation_SectionProgress_iterator_is_valid'));
final _heresdkNavigationBindingslistofSdkNavigationSectionprogressIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_navigation_SectionProgress_iterator_increment'));
final _heresdkNavigationBindingslistofSdkNavigationSectionprogressIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_navigation_SectionProgress_iterator_get'));

Pointer<Void> heresdkNavigationBindingslistofSdkNavigationSectionprogressToFfi(List<SectionProgress> value) {
  final _result = _heresdkNavigationBindingslistofSdkNavigationSectionprogressCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkNavigationSectionprogressToFfi(element);
    _heresdkNavigationBindingslistofSdkNavigationSectionprogressInsert(_result, _elementHandle);
    sdkNavigationSectionprogressReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<SectionProgress> heresdkNavigationBindingslistofSdkNavigationSectionprogressFromFfi(Pointer<Void> handle) {
  final result = List<SectionProgress>.empty(growable: true);
  final _iteratorHandle = _heresdkNavigationBindingslistofSdkNavigationSectionprogressIterator(handle);
  while (_heresdkNavigationBindingslistofSdkNavigationSectionprogressIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkNavigationBindingslistofSdkNavigationSectionprogressIteratorGet(_iteratorHandle);
    try {
      result.add(sdkNavigationSectionprogressFromFfi(_elementHandle));
    } finally {
      sdkNavigationSectionprogressReleaseFfiHandle(_elementHandle);
    }
    _heresdkNavigationBindingslistofSdkNavigationSectionprogressIteratorIncrement(_iteratorHandle);
  }
  _heresdkNavigationBindingslistofSdkNavigationSectionprogressIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkNavigationBindingslistofSdkNavigationSectionprogressReleaseFfiHandle(Pointer<Void> handle) => _heresdkNavigationBindingslistofSdkNavigationSectionprogressReleaseHandle(handle);

final _heresdkNavigationBindingslistofSdkNavigationSectionprogressCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_navigation_SectionProgress_create_handle_nullable'));
final _heresdkNavigationBindingslistofSdkNavigationSectionprogressReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_navigation_SectionProgress_release_handle_nullable'));
final _heresdkNavigationBindingslistofSdkNavigationSectionprogressGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_navigation_SectionProgress_get_value_nullable'));

Pointer<Void> heresdkNavigationBindingslistofSdkNavigationSectionprogressToFfiNullable(List<SectionProgress>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkNavigationBindingslistofSdkNavigationSectionprogressToFfi(value);
  final result = _heresdkNavigationBindingslistofSdkNavigationSectionprogressCreateHandleNullable(_handle);
  heresdkNavigationBindingslistofSdkNavigationSectionprogressReleaseFfiHandle(_handle);
  return result;
}

List<SectionProgress>? heresdkNavigationBindingslistofSdkNavigationSectionprogressFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkNavigationBindingslistofSdkNavigationSectionprogressGetValueNullable(handle);
  final result = heresdkNavigationBindingslistofSdkNavigationSectionprogressFromFfi(_handle);
  heresdkNavigationBindingslistofSdkNavigationSectionprogressReleaseFfiHandle(_handle);
  return result;
}

void heresdkNavigationBindingslistofSdkNavigationSectionprogressReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkNavigationBindingslistofSdkNavigationSectionprogressReleaseHandleNullable(handle);

final _heresdkNavigationBindingslistofSdkNavigationTruckrestrictionwarningCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_navigation_TruckRestrictionWarning_create_handle'));
final _heresdkNavigationBindingslistofSdkNavigationTruckrestrictionwarningReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_navigation_TruckRestrictionWarning_release_handle'));
final _heresdkNavigationBindingslistofSdkNavigationTruckrestrictionwarningInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_navigation_TruckRestrictionWarning_insert'));
final _heresdkNavigationBindingslistofSdkNavigationTruckrestrictionwarningIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_navigation_TruckRestrictionWarning_iterator'));
final _heresdkNavigationBindingslistofSdkNavigationTruckrestrictionwarningIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_navigation_TruckRestrictionWarning_iterator_release_handle'));
final _heresdkNavigationBindingslistofSdkNavigationTruckrestrictionwarningIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_navigation_TruckRestrictionWarning_iterator_is_valid'));
final _heresdkNavigationBindingslistofSdkNavigationTruckrestrictionwarningIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_navigation_TruckRestrictionWarning_iterator_increment'));
final _heresdkNavigationBindingslistofSdkNavigationTruckrestrictionwarningIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_navigation_TruckRestrictionWarning_iterator_get'));

Pointer<Void> heresdkNavigationBindingslistofSdkNavigationTruckrestrictionwarningToFfi(List<TruckRestrictionWarning> value) {
  final _result = _heresdkNavigationBindingslistofSdkNavigationTruckrestrictionwarningCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkNavigationTruckrestrictionwarningToFfi(element);
    _heresdkNavigationBindingslistofSdkNavigationTruckrestrictionwarningInsert(_result, _elementHandle);
    sdkNavigationTruckrestrictionwarningReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<TruckRestrictionWarning> heresdkNavigationBindingslistofSdkNavigationTruckrestrictionwarningFromFfi(Pointer<Void> handle) {
  final result = List<TruckRestrictionWarning>.empty(growable: true);
  final _iteratorHandle = _heresdkNavigationBindingslistofSdkNavigationTruckrestrictionwarningIterator(handle);
  while (_heresdkNavigationBindingslistofSdkNavigationTruckrestrictionwarningIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkNavigationBindingslistofSdkNavigationTruckrestrictionwarningIteratorGet(_iteratorHandle);
    try {
      result.add(sdkNavigationTruckrestrictionwarningFromFfi(_elementHandle));
    } finally {
      sdkNavigationTruckrestrictionwarningReleaseFfiHandle(_elementHandle);
    }
    _heresdkNavigationBindingslistofSdkNavigationTruckrestrictionwarningIteratorIncrement(_iteratorHandle);
  }
  _heresdkNavigationBindingslistofSdkNavigationTruckrestrictionwarningIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkNavigationBindingslistofSdkNavigationTruckrestrictionwarningReleaseFfiHandle(Pointer<Void> handle) => _heresdkNavigationBindingslistofSdkNavigationTruckrestrictionwarningReleaseHandle(handle);

final _heresdkNavigationBindingslistofSdkNavigationTruckrestrictionwarningCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_navigation_TruckRestrictionWarning_create_handle_nullable'));
final _heresdkNavigationBindingslistofSdkNavigationTruckrestrictionwarningReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_navigation_TruckRestrictionWarning_release_handle_nullable'));
final _heresdkNavigationBindingslistofSdkNavigationTruckrestrictionwarningGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_navigation_TruckRestrictionWarning_get_value_nullable'));

Pointer<Void> heresdkNavigationBindingslistofSdkNavigationTruckrestrictionwarningToFfiNullable(List<TruckRestrictionWarning>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkNavigationBindingslistofSdkNavigationTruckrestrictionwarningToFfi(value);
  final result = _heresdkNavigationBindingslistofSdkNavigationTruckrestrictionwarningCreateHandleNullable(_handle);
  heresdkNavigationBindingslistofSdkNavigationTruckrestrictionwarningReleaseFfiHandle(_handle);
  return result;
}

List<TruckRestrictionWarning>? heresdkNavigationBindingslistofSdkNavigationTruckrestrictionwarningFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkNavigationBindingslistofSdkNavigationTruckrestrictionwarningGetValueNullable(handle);
  final result = heresdkNavigationBindingslistofSdkNavigationTruckrestrictionwarningFromFfi(_handle);
  heresdkNavigationBindingslistofSdkNavigationTruckrestrictionwarningReleaseFfiHandle(_handle);
  return result;
}

void heresdkNavigationBindingslistofSdkNavigationTruckrestrictionwarningReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkNavigationBindingslistofSdkNavigationTruckrestrictionwarningReleaseHandleNullable(handle);

final _heresdkNavigationBindingslistofSdkRoutingAttributionCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_Attribution_create_handle'));
final _heresdkNavigationBindingslistofSdkRoutingAttributionReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_Attribution_release_handle'));
final _heresdkNavigationBindingslistofSdkRoutingAttributionInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_Attribution_insert'));
final _heresdkNavigationBindingslistofSdkRoutingAttributionIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_Attribution_iterator'));
final _heresdkNavigationBindingslistofSdkRoutingAttributionIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_Attribution_iterator_release_handle'));
final _heresdkNavigationBindingslistofSdkRoutingAttributionIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_Attribution_iterator_is_valid'));
final _heresdkNavigationBindingslistofSdkRoutingAttributionIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_Attribution_iterator_increment'));
final _heresdkNavigationBindingslistofSdkRoutingAttributionIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_Attribution_iterator_get'));

Pointer<Void> heresdkNavigationBindingslistofSdkRoutingAttributionToFfi(List<Attribution> value) {
  final _result = _heresdkNavigationBindingslistofSdkRoutingAttributionCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingAttributionToFfi(element);
    _heresdkNavigationBindingslistofSdkRoutingAttributionInsert(_result, _elementHandle);
    sdkRoutingAttributionReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Attribution> heresdkNavigationBindingslistofSdkRoutingAttributionFromFfi(Pointer<Void> handle) {
  final result = List<Attribution>.empty(growable: true);
  final _iteratorHandle = _heresdkNavigationBindingslistofSdkRoutingAttributionIterator(handle);
  while (_heresdkNavigationBindingslistofSdkRoutingAttributionIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkNavigationBindingslistofSdkRoutingAttributionIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingAttributionFromFfi(_elementHandle));
    } finally {
      sdkRoutingAttributionReleaseFfiHandle(_elementHandle);
    }
    _heresdkNavigationBindingslistofSdkRoutingAttributionIteratorIncrement(_iteratorHandle);
  }
  _heresdkNavigationBindingslistofSdkRoutingAttributionIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkNavigationBindingslistofSdkRoutingAttributionReleaseFfiHandle(Pointer<Void> handle) => _heresdkNavigationBindingslistofSdkRoutingAttributionReleaseHandle(handle);

final _heresdkNavigationBindingslistofSdkRoutingAttributionCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_Attribution_create_handle_nullable'));
final _heresdkNavigationBindingslistofSdkRoutingAttributionReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_Attribution_release_handle_nullable'));
final _heresdkNavigationBindingslistofSdkRoutingAttributionGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_Attribution_get_value_nullable'));

Pointer<Void> heresdkNavigationBindingslistofSdkRoutingAttributionToFfiNullable(List<Attribution>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkNavigationBindingslistofSdkRoutingAttributionToFfi(value);
  final result = _heresdkNavigationBindingslistofSdkRoutingAttributionCreateHandleNullable(_handle);
  heresdkNavigationBindingslistofSdkRoutingAttributionReleaseFfiHandle(_handle);
  return result;
}

List<Attribution>? heresdkNavigationBindingslistofSdkRoutingAttributionFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkNavigationBindingslistofSdkRoutingAttributionGetValueNullable(handle);
  final result = heresdkNavigationBindingslistofSdkRoutingAttributionFromFfi(_handle);
  heresdkNavigationBindingslistofSdkRoutingAttributionReleaseFfiHandle(_handle);
  return result;
}

void heresdkNavigationBindingslistofSdkRoutingAttributionReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkNavigationBindingslistofSdkRoutingAttributionReleaseHandleNullable(handle);

final _heresdkNavigationBindingslistofSdkRoutingChargingconnectortypeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_ChargingConnectorType_create_handle'));
final _heresdkNavigationBindingslistofSdkRoutingChargingconnectortypeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_ChargingConnectorType_release_handle'));
final _heresdkNavigationBindingslistofSdkRoutingChargingconnectortypeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_ChargingConnectorType_insert'));
final _heresdkNavigationBindingslistofSdkRoutingChargingconnectortypeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_ChargingConnectorType_iterator'));
final _heresdkNavigationBindingslistofSdkRoutingChargingconnectortypeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_ChargingConnectorType_iterator_release_handle'));
final _heresdkNavigationBindingslistofSdkRoutingChargingconnectortypeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_ChargingConnectorType_iterator_is_valid'));
final _heresdkNavigationBindingslistofSdkRoutingChargingconnectortypeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_ChargingConnectorType_iterator_increment'));
final _heresdkNavigationBindingslistofSdkRoutingChargingconnectortypeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_ChargingConnectorType_iterator_get'));

Pointer<Void> heresdkNavigationBindingslistofSdkRoutingChargingconnectortypeToFfi(List<ChargingConnectorType> value) {
  final _result = _heresdkNavigationBindingslistofSdkRoutingChargingconnectortypeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingChargingconnectortypeToFfi(element);
    _heresdkNavigationBindingslistofSdkRoutingChargingconnectortypeInsert(_result, _elementHandle);
    sdkRoutingChargingconnectortypeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<ChargingConnectorType> heresdkNavigationBindingslistofSdkRoutingChargingconnectortypeFromFfi(Pointer<Void> handle) {
  final result = List<ChargingConnectorType>.empty(growable: true);
  final _iteratorHandle = _heresdkNavigationBindingslistofSdkRoutingChargingconnectortypeIterator(handle);
  while (_heresdkNavigationBindingslistofSdkRoutingChargingconnectortypeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkNavigationBindingslistofSdkRoutingChargingconnectortypeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingChargingconnectortypeFromFfi(_elementHandle));
    } finally {
      sdkRoutingChargingconnectortypeReleaseFfiHandle(_elementHandle);
    }
    _heresdkNavigationBindingslistofSdkRoutingChargingconnectortypeIteratorIncrement(_iteratorHandle);
  }
  _heresdkNavigationBindingslistofSdkRoutingChargingconnectortypeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkNavigationBindingslistofSdkRoutingChargingconnectortypeReleaseFfiHandle(Pointer<Void> handle) => _heresdkNavigationBindingslistofSdkRoutingChargingconnectortypeReleaseHandle(handle);

final _heresdkNavigationBindingslistofSdkRoutingChargingconnectortypeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_ChargingConnectorType_create_handle_nullable'));
final _heresdkNavigationBindingslistofSdkRoutingChargingconnectortypeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_ChargingConnectorType_release_handle_nullable'));
final _heresdkNavigationBindingslistofSdkRoutingChargingconnectortypeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_ChargingConnectorType_get_value_nullable'));

Pointer<Void> heresdkNavigationBindingslistofSdkRoutingChargingconnectortypeToFfiNullable(List<ChargingConnectorType>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkNavigationBindingslistofSdkRoutingChargingconnectortypeToFfi(value);
  final result = _heresdkNavigationBindingslistofSdkRoutingChargingconnectortypeCreateHandleNullable(_handle);
  heresdkNavigationBindingslistofSdkRoutingChargingconnectortypeReleaseFfiHandle(_handle);
  return result;
}

List<ChargingConnectorType>? heresdkNavigationBindingslistofSdkRoutingChargingconnectortypeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkNavigationBindingslistofSdkRoutingChargingconnectortypeGetValueNullable(handle);
  final result = heresdkNavigationBindingslistofSdkRoutingChargingconnectortypeFromFfi(_handle);
  heresdkNavigationBindingslistofSdkRoutingChargingconnectortypeReleaseFfiHandle(_handle);
  return result;
}

void heresdkNavigationBindingslistofSdkRoutingChargingconnectortypeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkNavigationBindingslistofSdkRoutingChargingconnectortypeReleaseHandleNullable(handle);

final _heresdkNavigationBindingslistofSdkRoutingFareCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_Fare_create_handle'));
final _heresdkNavigationBindingslistofSdkRoutingFareReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_Fare_release_handle'));
final _heresdkNavigationBindingslistofSdkRoutingFareInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_Fare_insert'));
final _heresdkNavigationBindingslistofSdkRoutingFareIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_Fare_iterator'));
final _heresdkNavigationBindingslistofSdkRoutingFareIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_Fare_iterator_release_handle'));
final _heresdkNavigationBindingslistofSdkRoutingFareIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_Fare_iterator_is_valid'));
final _heresdkNavigationBindingslistofSdkRoutingFareIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_Fare_iterator_increment'));
final _heresdkNavigationBindingslistofSdkRoutingFareIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_Fare_iterator_get'));

Pointer<Void> heresdkNavigationBindingslistofSdkRoutingFareToFfi(List<Fare> value) {
  final _result = _heresdkNavigationBindingslistofSdkRoutingFareCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingFareToFfi(element);
    _heresdkNavigationBindingslistofSdkRoutingFareInsert(_result, _elementHandle);
    sdkRoutingFareReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Fare> heresdkNavigationBindingslistofSdkRoutingFareFromFfi(Pointer<Void> handle) {
  final result = List<Fare>.empty(growable: true);
  final _iteratorHandle = _heresdkNavigationBindingslistofSdkRoutingFareIterator(handle);
  while (_heresdkNavigationBindingslistofSdkRoutingFareIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkNavigationBindingslistofSdkRoutingFareIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingFareFromFfi(_elementHandle));
    } finally {
      sdkRoutingFareReleaseFfiHandle(_elementHandle);
    }
    _heresdkNavigationBindingslistofSdkRoutingFareIteratorIncrement(_iteratorHandle);
  }
  _heresdkNavigationBindingslistofSdkRoutingFareIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkNavigationBindingslistofSdkRoutingFareReleaseFfiHandle(Pointer<Void> handle) => _heresdkNavigationBindingslistofSdkRoutingFareReleaseHandle(handle);

final _heresdkNavigationBindingslistofSdkRoutingFareCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_Fare_create_handle_nullable'));
final _heresdkNavigationBindingslistofSdkRoutingFareReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_Fare_release_handle_nullable'));
final _heresdkNavigationBindingslistofSdkRoutingFareGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_Fare_get_value_nullable'));

Pointer<Void> heresdkNavigationBindingslistofSdkRoutingFareToFfiNullable(List<Fare>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkNavigationBindingslistofSdkRoutingFareToFfi(value);
  final result = _heresdkNavigationBindingslistofSdkRoutingFareCreateHandleNullable(_handle);
  heresdkNavigationBindingslistofSdkRoutingFareReleaseFfiHandle(_handle);
  return result;
}

List<Fare>? heresdkNavigationBindingslistofSdkRoutingFareFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkNavigationBindingslistofSdkRoutingFareGetValueNullable(handle);
  final result = heresdkNavigationBindingslistofSdkRoutingFareFromFfi(_handle);
  heresdkNavigationBindingslistofSdkRoutingFareReleaseFfiHandle(_handle);
  return result;
}

void heresdkNavigationBindingslistofSdkRoutingFareReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkNavigationBindingslistofSdkRoutingFareReleaseHandleNullable(handle);

final _heresdkNavigationBindingslistofSdkRoutingHazardousgoodCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_HazardousGood_create_handle'));
final _heresdkNavigationBindingslistofSdkRoutingHazardousgoodReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_HazardousGood_release_handle'));
final _heresdkNavigationBindingslistofSdkRoutingHazardousgoodInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_HazardousGood_insert'));
final _heresdkNavigationBindingslistofSdkRoutingHazardousgoodIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_HazardousGood_iterator'));
final _heresdkNavigationBindingslistofSdkRoutingHazardousgoodIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_HazardousGood_iterator_release_handle'));
final _heresdkNavigationBindingslistofSdkRoutingHazardousgoodIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_HazardousGood_iterator_is_valid'));
final _heresdkNavigationBindingslistofSdkRoutingHazardousgoodIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_HazardousGood_iterator_increment'));
final _heresdkNavigationBindingslistofSdkRoutingHazardousgoodIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_HazardousGood_iterator_get'));

Pointer<Void> heresdkNavigationBindingslistofSdkRoutingHazardousgoodToFfi(List<HazardousGood> value) {
  final _result = _heresdkNavigationBindingslistofSdkRoutingHazardousgoodCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingHazardousgoodToFfi(element);
    _heresdkNavigationBindingslistofSdkRoutingHazardousgoodInsert(_result, _elementHandle);
    sdkRoutingHazardousgoodReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<HazardousGood> heresdkNavigationBindingslistofSdkRoutingHazardousgoodFromFfi(Pointer<Void> handle) {
  final result = List<HazardousGood>.empty(growable: true);
  final _iteratorHandle = _heresdkNavigationBindingslistofSdkRoutingHazardousgoodIterator(handle);
  while (_heresdkNavigationBindingslistofSdkRoutingHazardousgoodIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkNavigationBindingslistofSdkRoutingHazardousgoodIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingHazardousgoodFromFfi(_elementHandle));
    } finally {
      sdkRoutingHazardousgoodReleaseFfiHandle(_elementHandle);
    }
    _heresdkNavigationBindingslistofSdkRoutingHazardousgoodIteratorIncrement(_iteratorHandle);
  }
  _heresdkNavigationBindingslistofSdkRoutingHazardousgoodIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkNavigationBindingslistofSdkRoutingHazardousgoodReleaseFfiHandle(Pointer<Void> handle) => _heresdkNavigationBindingslistofSdkRoutingHazardousgoodReleaseHandle(handle);

final _heresdkNavigationBindingslistofSdkRoutingHazardousgoodCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_HazardousGood_create_handle_nullable'));
final _heresdkNavigationBindingslistofSdkRoutingHazardousgoodReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_HazardousGood_release_handle_nullable'));
final _heresdkNavigationBindingslistofSdkRoutingHazardousgoodGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_HazardousGood_get_value_nullable'));

Pointer<Void> heresdkNavigationBindingslistofSdkRoutingHazardousgoodToFfiNullable(List<HazardousGood>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkNavigationBindingslistofSdkRoutingHazardousgoodToFfi(value);
  final result = _heresdkNavigationBindingslistofSdkRoutingHazardousgoodCreateHandleNullable(_handle);
  heresdkNavigationBindingslistofSdkRoutingHazardousgoodReleaseFfiHandle(_handle);
  return result;
}

List<HazardousGood>? heresdkNavigationBindingslistofSdkRoutingHazardousgoodFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkNavigationBindingslistofSdkRoutingHazardousgoodGetValueNullable(handle);
  final result = heresdkNavigationBindingslistofSdkRoutingHazardousgoodFromFfi(_handle);
  heresdkNavigationBindingslistofSdkRoutingHazardousgoodReleaseFfiHandle(_handle);
  return result;
}

void heresdkNavigationBindingslistofSdkRoutingHazardousgoodReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkNavigationBindingslistofSdkRoutingHazardousgoodReleaseHandleNullable(handle);

final _heresdkNavigationBindingslistofSdkRoutingManeuverCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_Maneuver_create_handle'));
final _heresdkNavigationBindingslistofSdkRoutingManeuverReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_Maneuver_release_handle'));
final _heresdkNavigationBindingslistofSdkRoutingManeuverInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_Maneuver_insert'));
final _heresdkNavigationBindingslistofSdkRoutingManeuverIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_Maneuver_iterator'));
final _heresdkNavigationBindingslistofSdkRoutingManeuverIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_Maneuver_iterator_release_handle'));
final _heresdkNavigationBindingslistofSdkRoutingManeuverIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_Maneuver_iterator_is_valid'));
final _heresdkNavigationBindingslistofSdkRoutingManeuverIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_Maneuver_iterator_increment'));
final _heresdkNavigationBindingslistofSdkRoutingManeuverIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_Maneuver_iterator_get'));

Pointer<Void> heresdkNavigationBindingslistofSdkRoutingManeuverToFfi(List<Maneuver> value) {
  final _result = _heresdkNavigationBindingslistofSdkRoutingManeuverCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingManeuverToFfi(element);
    _heresdkNavigationBindingslistofSdkRoutingManeuverInsert(_result, _elementHandle);
    sdkRoutingManeuverReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Maneuver> heresdkNavigationBindingslistofSdkRoutingManeuverFromFfi(Pointer<Void> handle) {
  final result = List<Maneuver>.empty(growable: true);
  final _iteratorHandle = _heresdkNavigationBindingslistofSdkRoutingManeuverIterator(handle);
  while (_heresdkNavigationBindingslistofSdkRoutingManeuverIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkNavigationBindingslistofSdkRoutingManeuverIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingManeuverFromFfi(_elementHandle));
    } finally {
      sdkRoutingManeuverReleaseFfiHandle(_elementHandle);
    }
    _heresdkNavigationBindingslistofSdkRoutingManeuverIteratorIncrement(_iteratorHandle);
  }
  _heresdkNavigationBindingslistofSdkRoutingManeuverIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkNavigationBindingslistofSdkRoutingManeuverReleaseFfiHandle(Pointer<Void> handle) => _heresdkNavigationBindingslistofSdkRoutingManeuverReleaseHandle(handle);

final _heresdkNavigationBindingslistofSdkRoutingManeuverCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_Maneuver_create_handle_nullable'));
final _heresdkNavigationBindingslistofSdkRoutingManeuverReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_Maneuver_release_handle_nullable'));
final _heresdkNavigationBindingslistofSdkRoutingManeuverGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_Maneuver_get_value_nullable'));

Pointer<Void> heresdkNavigationBindingslistofSdkRoutingManeuverToFfiNullable(List<Maneuver>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkNavigationBindingslistofSdkRoutingManeuverToFfi(value);
  final result = _heresdkNavigationBindingslistofSdkRoutingManeuverCreateHandleNullable(_handle);
  heresdkNavigationBindingslistofSdkRoutingManeuverReleaseFfiHandle(_handle);
  return result;
}

List<Maneuver>? heresdkNavigationBindingslistofSdkRoutingManeuverFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkNavigationBindingslistofSdkRoutingManeuverGetValueNullable(handle);
  final result = heresdkNavigationBindingslistofSdkRoutingManeuverFromFfi(_handle);
  heresdkNavigationBindingslistofSdkRoutingManeuverReleaseFfiHandle(_handle);
  return result;
}

void heresdkNavigationBindingslistofSdkRoutingManeuverReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkNavigationBindingslistofSdkRoutingManeuverReleaseHandleNullable(handle);

final _heresdkNavigationBindingslistofSdkRoutingPaymentmethodCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_PaymentMethod_create_handle'));
final _heresdkNavigationBindingslistofSdkRoutingPaymentmethodReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_PaymentMethod_release_handle'));
final _heresdkNavigationBindingslistofSdkRoutingPaymentmethodInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_PaymentMethod_insert'));
final _heresdkNavigationBindingslistofSdkRoutingPaymentmethodIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_PaymentMethod_iterator'));
final _heresdkNavigationBindingslistofSdkRoutingPaymentmethodIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_PaymentMethod_iterator_release_handle'));
final _heresdkNavigationBindingslistofSdkRoutingPaymentmethodIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_PaymentMethod_iterator_is_valid'));
final _heresdkNavigationBindingslistofSdkRoutingPaymentmethodIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_PaymentMethod_iterator_increment'));
final _heresdkNavigationBindingslistofSdkRoutingPaymentmethodIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_PaymentMethod_iterator_get'));

Pointer<Void> heresdkNavigationBindingslistofSdkRoutingPaymentmethodToFfi(List<PaymentMethod> value) {
  final _result = _heresdkNavigationBindingslistofSdkRoutingPaymentmethodCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingPaymentmethodToFfi(element);
    _heresdkNavigationBindingslistofSdkRoutingPaymentmethodInsert(_result, _elementHandle);
    sdkRoutingPaymentmethodReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<PaymentMethod> heresdkNavigationBindingslistofSdkRoutingPaymentmethodFromFfi(Pointer<Void> handle) {
  final result = List<PaymentMethod>.empty(growable: true);
  final _iteratorHandle = _heresdkNavigationBindingslistofSdkRoutingPaymentmethodIterator(handle);
  while (_heresdkNavigationBindingslistofSdkRoutingPaymentmethodIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkNavigationBindingslistofSdkRoutingPaymentmethodIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingPaymentmethodFromFfi(_elementHandle));
    } finally {
      sdkRoutingPaymentmethodReleaseFfiHandle(_elementHandle);
    }
    _heresdkNavigationBindingslistofSdkRoutingPaymentmethodIteratorIncrement(_iteratorHandle);
  }
  _heresdkNavigationBindingslistofSdkRoutingPaymentmethodIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkNavigationBindingslistofSdkRoutingPaymentmethodReleaseFfiHandle(Pointer<Void> handle) => _heresdkNavigationBindingslistofSdkRoutingPaymentmethodReleaseHandle(handle);

final _heresdkNavigationBindingslistofSdkRoutingPaymentmethodCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_PaymentMethod_create_handle_nullable'));
final _heresdkNavigationBindingslistofSdkRoutingPaymentmethodReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_PaymentMethod_release_handle_nullable'));
final _heresdkNavigationBindingslistofSdkRoutingPaymentmethodGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_PaymentMethod_get_value_nullable'));

Pointer<Void> heresdkNavigationBindingslistofSdkRoutingPaymentmethodToFfiNullable(List<PaymentMethod>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkNavigationBindingslistofSdkRoutingPaymentmethodToFfi(value);
  final result = _heresdkNavigationBindingslistofSdkRoutingPaymentmethodCreateHandleNullable(_handle);
  heresdkNavigationBindingslistofSdkRoutingPaymentmethodReleaseFfiHandle(_handle);
  return result;
}

List<PaymentMethod>? heresdkNavigationBindingslistofSdkRoutingPaymentmethodFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkNavigationBindingslistofSdkRoutingPaymentmethodGetValueNullable(handle);
  final result = heresdkNavigationBindingslistofSdkRoutingPaymentmethodFromFfi(_handle);
  heresdkNavigationBindingslistofSdkRoutingPaymentmethodReleaseFfiHandle(_handle);
  return result;
}

void heresdkNavigationBindingslistofSdkRoutingPaymentmethodReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkNavigationBindingslistofSdkRoutingPaymentmethodReleaseHandleNullable(handle);

final _heresdkNavigationBindingslistofSdkRoutingPostactionCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_PostAction_create_handle'));
final _heresdkNavigationBindingslistofSdkRoutingPostactionReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_PostAction_release_handle'));
final _heresdkNavigationBindingslistofSdkRoutingPostactionInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_PostAction_insert'));
final _heresdkNavigationBindingslistofSdkRoutingPostactionIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_PostAction_iterator'));
final _heresdkNavigationBindingslistofSdkRoutingPostactionIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_PostAction_iterator_release_handle'));
final _heresdkNavigationBindingslistofSdkRoutingPostactionIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_PostAction_iterator_is_valid'));
final _heresdkNavigationBindingslistofSdkRoutingPostactionIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_PostAction_iterator_increment'));
final _heresdkNavigationBindingslistofSdkRoutingPostactionIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_PostAction_iterator_get'));

Pointer<Void> heresdkNavigationBindingslistofSdkRoutingPostactionToFfi(List<PostAction> value) {
  final _result = _heresdkNavigationBindingslistofSdkRoutingPostactionCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingPostactionToFfi(element);
    _heresdkNavigationBindingslistofSdkRoutingPostactionInsert(_result, _elementHandle);
    sdkRoutingPostactionReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<PostAction> heresdkNavigationBindingslistofSdkRoutingPostactionFromFfi(Pointer<Void> handle) {
  final result = List<PostAction>.empty(growable: true);
  final _iteratorHandle = _heresdkNavigationBindingslistofSdkRoutingPostactionIterator(handle);
  while (_heresdkNavigationBindingslistofSdkRoutingPostactionIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkNavigationBindingslistofSdkRoutingPostactionIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingPostactionFromFfi(_elementHandle));
    } finally {
      sdkRoutingPostactionReleaseFfiHandle(_elementHandle);
    }
    _heresdkNavigationBindingslistofSdkRoutingPostactionIteratorIncrement(_iteratorHandle);
  }
  _heresdkNavigationBindingslistofSdkRoutingPostactionIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkNavigationBindingslistofSdkRoutingPostactionReleaseFfiHandle(Pointer<Void> handle) => _heresdkNavigationBindingslistofSdkRoutingPostactionReleaseHandle(handle);

final _heresdkNavigationBindingslistofSdkRoutingPostactionCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_PostAction_create_handle_nullable'));
final _heresdkNavigationBindingslistofSdkRoutingPostactionReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_PostAction_release_handle_nullable'));
final _heresdkNavigationBindingslistofSdkRoutingPostactionGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_PostAction_get_value_nullable'));

Pointer<Void> heresdkNavigationBindingslistofSdkRoutingPostactionToFfiNullable(List<PostAction>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkNavigationBindingslistofSdkRoutingPostactionToFfi(value);
  final result = _heresdkNavigationBindingslistofSdkRoutingPostactionCreateHandleNullable(_handle);
  heresdkNavigationBindingslistofSdkRoutingPostactionReleaseFfiHandle(_handle);
  return result;
}

List<PostAction>? heresdkNavigationBindingslistofSdkRoutingPostactionFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkNavigationBindingslistofSdkRoutingPostactionGetValueNullable(handle);
  final result = heresdkNavigationBindingslistofSdkRoutingPostactionFromFfi(_handle);
  heresdkNavigationBindingslistofSdkRoutingPostactionReleaseFfiHandle(_handle);
  return result;
}

void heresdkNavigationBindingslistofSdkRoutingPostactionReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkNavigationBindingslistofSdkRoutingPostactionReleaseHandleNullable(handle);

final _heresdkNavigationBindingslistofSdkRoutingPreactionCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_PreAction_create_handle'));
final _heresdkNavigationBindingslistofSdkRoutingPreactionReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_PreAction_release_handle'));
final _heresdkNavigationBindingslistofSdkRoutingPreactionInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_PreAction_insert'));
final _heresdkNavigationBindingslistofSdkRoutingPreactionIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_PreAction_iterator'));
final _heresdkNavigationBindingslistofSdkRoutingPreactionIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_PreAction_iterator_release_handle'));
final _heresdkNavigationBindingslistofSdkRoutingPreactionIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_PreAction_iterator_is_valid'));
final _heresdkNavigationBindingslistofSdkRoutingPreactionIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_PreAction_iterator_increment'));
final _heresdkNavigationBindingslistofSdkRoutingPreactionIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_PreAction_iterator_get'));

Pointer<Void> heresdkNavigationBindingslistofSdkRoutingPreactionToFfi(List<PreAction> value) {
  final _result = _heresdkNavigationBindingslistofSdkRoutingPreactionCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingPreactionToFfi(element);
    _heresdkNavigationBindingslistofSdkRoutingPreactionInsert(_result, _elementHandle);
    sdkRoutingPreactionReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<PreAction> heresdkNavigationBindingslistofSdkRoutingPreactionFromFfi(Pointer<Void> handle) {
  final result = List<PreAction>.empty(growable: true);
  final _iteratorHandle = _heresdkNavigationBindingslistofSdkRoutingPreactionIterator(handle);
  while (_heresdkNavigationBindingslistofSdkRoutingPreactionIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkNavigationBindingslistofSdkRoutingPreactionIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingPreactionFromFfi(_elementHandle));
    } finally {
      sdkRoutingPreactionReleaseFfiHandle(_elementHandle);
    }
    _heresdkNavigationBindingslistofSdkRoutingPreactionIteratorIncrement(_iteratorHandle);
  }
  _heresdkNavigationBindingslistofSdkRoutingPreactionIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkNavigationBindingslistofSdkRoutingPreactionReleaseFfiHandle(Pointer<Void> handle) => _heresdkNavigationBindingslistofSdkRoutingPreactionReleaseHandle(handle);

final _heresdkNavigationBindingslistofSdkRoutingPreactionCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_PreAction_create_handle_nullable'));
final _heresdkNavigationBindingslistofSdkRoutingPreactionReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_PreAction_release_handle_nullable'));
final _heresdkNavigationBindingslistofSdkRoutingPreactionGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_PreAction_get_value_nullable'));

Pointer<Void> heresdkNavigationBindingslistofSdkRoutingPreactionToFfiNullable(List<PreAction>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkNavigationBindingslistofSdkRoutingPreactionToFfi(value);
  final result = _heresdkNavigationBindingslistofSdkRoutingPreactionCreateHandleNullable(_handle);
  heresdkNavigationBindingslistofSdkRoutingPreactionReleaseFfiHandle(_handle);
  return result;
}

List<PreAction>? heresdkNavigationBindingslistofSdkRoutingPreactionFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkNavigationBindingslistofSdkRoutingPreactionGetValueNullable(handle);
  final result = heresdkNavigationBindingslistofSdkRoutingPreactionFromFfi(_handle);
  heresdkNavigationBindingslistofSdkRoutingPreactionReleaseFfiHandle(_handle);
  return result;
}

void heresdkNavigationBindingslistofSdkRoutingPreactionReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkNavigationBindingslistofSdkRoutingPreactionReleaseHandleNullable(handle);

final _heresdkNavigationBindingslistofSdkRoutingRoadfeaturesCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_RoadFeatures_create_handle'));
final _heresdkNavigationBindingslistofSdkRoutingRoadfeaturesReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_RoadFeatures_release_handle'));
final _heresdkNavigationBindingslistofSdkRoutingRoadfeaturesInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_RoadFeatures_insert'));
final _heresdkNavigationBindingslistofSdkRoutingRoadfeaturesIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_RoadFeatures_iterator'));
final _heresdkNavigationBindingslistofSdkRoutingRoadfeaturesIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_RoadFeatures_iterator_release_handle'));
final _heresdkNavigationBindingslistofSdkRoutingRoadfeaturesIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_RoadFeatures_iterator_is_valid'));
final _heresdkNavigationBindingslistofSdkRoutingRoadfeaturesIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_RoadFeatures_iterator_increment'));
final _heresdkNavigationBindingslistofSdkRoutingRoadfeaturesIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_RoadFeatures_iterator_get'));

Pointer<Void> heresdkNavigationBindingslistofSdkRoutingRoadfeaturesToFfi(List<RoadFeatures> value) {
  final _result = _heresdkNavigationBindingslistofSdkRoutingRoadfeaturesCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingRoadfeaturesToFfi(element);
    _heresdkNavigationBindingslistofSdkRoutingRoadfeaturesInsert(_result, _elementHandle);
    sdkRoutingRoadfeaturesReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<RoadFeatures> heresdkNavigationBindingslistofSdkRoutingRoadfeaturesFromFfi(Pointer<Void> handle) {
  final result = List<RoadFeatures>.empty(growable: true);
  final _iteratorHandle = _heresdkNavigationBindingslistofSdkRoutingRoadfeaturesIterator(handle);
  while (_heresdkNavigationBindingslistofSdkRoutingRoadfeaturesIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkNavigationBindingslistofSdkRoutingRoadfeaturesIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingRoadfeaturesFromFfi(_elementHandle));
    } finally {
      sdkRoutingRoadfeaturesReleaseFfiHandle(_elementHandle);
    }
    _heresdkNavigationBindingslistofSdkRoutingRoadfeaturesIteratorIncrement(_iteratorHandle);
  }
  _heresdkNavigationBindingslistofSdkRoutingRoadfeaturesIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkNavigationBindingslistofSdkRoutingRoadfeaturesReleaseFfiHandle(Pointer<Void> handle) => _heresdkNavigationBindingslistofSdkRoutingRoadfeaturesReleaseHandle(handle);

final _heresdkNavigationBindingslistofSdkRoutingRoadfeaturesCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_RoadFeatures_create_handle_nullable'));
final _heresdkNavigationBindingslistofSdkRoutingRoadfeaturesReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_RoadFeatures_release_handle_nullable'));
final _heresdkNavigationBindingslistofSdkRoutingRoadfeaturesGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_RoadFeatures_get_value_nullable'));

Pointer<Void> heresdkNavigationBindingslistofSdkRoutingRoadfeaturesToFfiNullable(List<RoadFeatures>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkNavigationBindingslistofSdkRoutingRoadfeaturesToFfi(value);
  final result = _heresdkNavigationBindingslistofSdkRoutingRoadfeaturesCreateHandleNullable(_handle);
  heresdkNavigationBindingslistofSdkRoutingRoadfeaturesReleaseFfiHandle(_handle);
  return result;
}

List<RoadFeatures>? heresdkNavigationBindingslistofSdkRoutingRoadfeaturesFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkNavigationBindingslistofSdkRoutingRoadfeaturesGetValueNullable(handle);
  final result = heresdkNavigationBindingslistofSdkRoutingRoadfeaturesFromFfi(_handle);
  heresdkNavigationBindingslistofSdkRoutingRoadfeaturesReleaseFfiHandle(_handle);
  return result;
}

void heresdkNavigationBindingslistofSdkRoutingRoadfeaturesReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkNavigationBindingslistofSdkRoutingRoadfeaturesReleaseHandleNullable(handle);

final _heresdkNavigationBindingslistofSdkRoutingRouteCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_Route_create_handle'));
final _heresdkNavigationBindingslistofSdkRoutingRouteReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_Route_release_handle'));
final _heresdkNavigationBindingslistofSdkRoutingRouteInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_Route_insert'));
final _heresdkNavigationBindingslistofSdkRoutingRouteIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_Route_iterator'));
final _heresdkNavigationBindingslistofSdkRoutingRouteIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_Route_iterator_release_handle'));
final _heresdkNavigationBindingslistofSdkRoutingRouteIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_Route_iterator_is_valid'));
final _heresdkNavigationBindingslistofSdkRoutingRouteIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_Route_iterator_increment'));
final _heresdkNavigationBindingslistofSdkRoutingRouteIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_Route_iterator_get'));

Pointer<Void> heresdkNavigationBindingslistofSdkRoutingRouteToFfi(List<Route> value) {
  final _result = _heresdkNavigationBindingslistofSdkRoutingRouteCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingRouteToFfi(element);
    _heresdkNavigationBindingslistofSdkRoutingRouteInsert(_result, _elementHandle);
    sdkRoutingRouteReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Route> heresdkNavigationBindingslistofSdkRoutingRouteFromFfi(Pointer<Void> handle) {
  final result = List<Route>.empty(growable: true);
  final _iteratorHandle = _heresdkNavigationBindingslistofSdkRoutingRouteIterator(handle);
  while (_heresdkNavigationBindingslistofSdkRoutingRouteIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkNavigationBindingslistofSdkRoutingRouteIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingRouteFromFfi(_elementHandle));
    } finally {
      sdkRoutingRouteReleaseFfiHandle(_elementHandle);
    }
    _heresdkNavigationBindingslistofSdkRoutingRouteIteratorIncrement(_iteratorHandle);
  }
  _heresdkNavigationBindingslistofSdkRoutingRouteIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkNavigationBindingslistofSdkRoutingRouteReleaseFfiHandle(Pointer<Void> handle) => _heresdkNavigationBindingslistofSdkRoutingRouteReleaseHandle(handle);

final _heresdkNavigationBindingslistofSdkRoutingRouteCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_Route_create_handle_nullable'));
final _heresdkNavigationBindingslistofSdkRoutingRouteReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_Route_release_handle_nullable'));
final _heresdkNavigationBindingslistofSdkRoutingRouteGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_Route_get_value_nullable'));

Pointer<Void> heresdkNavigationBindingslistofSdkRoutingRouteToFfiNullable(List<Route>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkNavigationBindingslistofSdkRoutingRouteToFfi(value);
  final result = _heresdkNavigationBindingslistofSdkRoutingRouteCreateHandleNullable(_handle);
  heresdkNavigationBindingslistofSdkRoutingRouteReleaseFfiHandle(_handle);
  return result;
}

List<Route>? heresdkNavigationBindingslistofSdkRoutingRouteFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkNavigationBindingslistofSdkRoutingRouteGetValueNullable(handle);
  final result = heresdkNavigationBindingslistofSdkRoutingRouteFromFfi(_handle);
  heresdkNavigationBindingslistofSdkRoutingRouteReleaseFfiHandle(_handle);
  return result;
}

void heresdkNavigationBindingslistofSdkRoutingRouteReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkNavigationBindingslistofSdkRoutingRouteReleaseHandleNullable(handle);

final _heresdkNavigationBindingslistofSdkRoutingSectionCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_Section_create_handle'));
final _heresdkNavigationBindingslistofSdkRoutingSectionReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_Section_release_handle'));
final _heresdkNavigationBindingslistofSdkRoutingSectionInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_Section_insert'));
final _heresdkNavigationBindingslistofSdkRoutingSectionIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_Section_iterator'));
final _heresdkNavigationBindingslistofSdkRoutingSectionIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_Section_iterator_release_handle'));
final _heresdkNavigationBindingslistofSdkRoutingSectionIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_Section_iterator_is_valid'));
final _heresdkNavigationBindingslistofSdkRoutingSectionIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_Section_iterator_increment'));
final _heresdkNavigationBindingslistofSdkRoutingSectionIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_Section_iterator_get'));

Pointer<Void> heresdkNavigationBindingslistofSdkRoutingSectionToFfi(List<Section> value) {
  final _result = _heresdkNavigationBindingslistofSdkRoutingSectionCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingSectionToFfi(element);
    _heresdkNavigationBindingslistofSdkRoutingSectionInsert(_result, _elementHandle);
    sdkRoutingSectionReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Section> heresdkNavigationBindingslistofSdkRoutingSectionFromFfi(Pointer<Void> handle) {
  final result = List<Section>.empty(growable: true);
  final _iteratorHandle = _heresdkNavigationBindingslistofSdkRoutingSectionIterator(handle);
  while (_heresdkNavigationBindingslistofSdkRoutingSectionIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkNavigationBindingslistofSdkRoutingSectionIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingSectionFromFfi(_elementHandle));
    } finally {
      sdkRoutingSectionReleaseFfiHandle(_elementHandle);
    }
    _heresdkNavigationBindingslistofSdkRoutingSectionIteratorIncrement(_iteratorHandle);
  }
  _heresdkNavigationBindingslistofSdkRoutingSectionIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkNavigationBindingslistofSdkRoutingSectionReleaseFfiHandle(Pointer<Void> handle) => _heresdkNavigationBindingslistofSdkRoutingSectionReleaseHandle(handle);

final _heresdkNavigationBindingslistofSdkRoutingSectionCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_Section_create_handle_nullable'));
final _heresdkNavigationBindingslistofSdkRoutingSectionReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_Section_release_handle_nullable'));
final _heresdkNavigationBindingslistofSdkRoutingSectionGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_Section_get_value_nullable'));

Pointer<Void> heresdkNavigationBindingslistofSdkRoutingSectionToFfiNullable(List<Section>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkNavigationBindingslistofSdkRoutingSectionToFfi(value);
  final result = _heresdkNavigationBindingslistofSdkRoutingSectionCreateHandleNullable(_handle);
  heresdkNavigationBindingslistofSdkRoutingSectionReleaseFfiHandle(_handle);
  return result;
}

List<Section>? heresdkNavigationBindingslistofSdkRoutingSectionFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkNavigationBindingslistofSdkRoutingSectionGetValueNullable(handle);
  final result = heresdkNavigationBindingslistofSdkRoutingSectionFromFfi(_handle);
  heresdkNavigationBindingslistofSdkRoutingSectionReleaseFfiHandle(_handle);
  return result;
}

void heresdkNavigationBindingslistofSdkRoutingSectionReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkNavigationBindingslistofSdkRoutingSectionReleaseHandleNullable(handle);

final _heresdkNavigationBindingslistofSdkRoutingSectionnoticeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_SectionNotice_create_handle'));
final _heresdkNavigationBindingslistofSdkRoutingSectionnoticeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_SectionNotice_release_handle'));
final _heresdkNavigationBindingslistofSdkRoutingSectionnoticeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_SectionNotice_insert'));
final _heresdkNavigationBindingslistofSdkRoutingSectionnoticeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_SectionNotice_iterator'));
final _heresdkNavigationBindingslistofSdkRoutingSectionnoticeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_SectionNotice_iterator_release_handle'));
final _heresdkNavigationBindingslistofSdkRoutingSectionnoticeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_SectionNotice_iterator_is_valid'));
final _heresdkNavigationBindingslistofSdkRoutingSectionnoticeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_SectionNotice_iterator_increment'));
final _heresdkNavigationBindingslistofSdkRoutingSectionnoticeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_SectionNotice_iterator_get'));

Pointer<Void> heresdkNavigationBindingslistofSdkRoutingSectionnoticeToFfi(List<SectionNotice> value) {
  final _result = _heresdkNavigationBindingslistofSdkRoutingSectionnoticeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingSectionnoticeToFfi(element);
    _heresdkNavigationBindingslistofSdkRoutingSectionnoticeInsert(_result, _elementHandle);
    sdkRoutingSectionnoticeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<SectionNotice> heresdkNavigationBindingslistofSdkRoutingSectionnoticeFromFfi(Pointer<Void> handle) {
  final result = List<SectionNotice>.empty(growable: true);
  final _iteratorHandle = _heresdkNavigationBindingslistofSdkRoutingSectionnoticeIterator(handle);
  while (_heresdkNavigationBindingslistofSdkRoutingSectionnoticeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkNavigationBindingslistofSdkRoutingSectionnoticeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingSectionnoticeFromFfi(_elementHandle));
    } finally {
      sdkRoutingSectionnoticeReleaseFfiHandle(_elementHandle);
    }
    _heresdkNavigationBindingslistofSdkRoutingSectionnoticeIteratorIncrement(_iteratorHandle);
  }
  _heresdkNavigationBindingslistofSdkRoutingSectionnoticeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkNavigationBindingslistofSdkRoutingSectionnoticeReleaseFfiHandle(Pointer<Void> handle) => _heresdkNavigationBindingslistofSdkRoutingSectionnoticeReleaseHandle(handle);

final _heresdkNavigationBindingslistofSdkRoutingSectionnoticeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_SectionNotice_create_handle_nullable'));
final _heresdkNavigationBindingslistofSdkRoutingSectionnoticeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_SectionNotice_release_handle_nullable'));
final _heresdkNavigationBindingslistofSdkRoutingSectionnoticeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_SectionNotice_get_value_nullable'));

Pointer<Void> heresdkNavigationBindingslistofSdkRoutingSectionnoticeToFfiNullable(List<SectionNotice>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkNavigationBindingslistofSdkRoutingSectionnoticeToFfi(value);
  final result = _heresdkNavigationBindingslistofSdkRoutingSectionnoticeCreateHandleNullable(_handle);
  heresdkNavigationBindingslistofSdkRoutingSectionnoticeReleaseFfiHandle(_handle);
  return result;
}

List<SectionNotice>? heresdkNavigationBindingslistofSdkRoutingSectionnoticeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkNavigationBindingslistofSdkRoutingSectionnoticeGetValueNullable(handle);
  final result = heresdkNavigationBindingslistofSdkRoutingSectionnoticeFromFfi(_handle);
  heresdkNavigationBindingslistofSdkRoutingSectionnoticeReleaseFfiHandle(_handle);
  return result;
}

void heresdkNavigationBindingslistofSdkRoutingSectionnoticeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkNavigationBindingslistofSdkRoutingSectionnoticeReleaseHandleNullable(handle);

final _heresdkNavigationBindingslistofSdkRoutingSegmentreferenceCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_SegmentReference_create_handle'));
final _heresdkNavigationBindingslistofSdkRoutingSegmentreferenceReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_SegmentReference_release_handle'));
final _heresdkNavigationBindingslistofSdkRoutingSegmentreferenceInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_SegmentReference_insert'));
final _heresdkNavigationBindingslistofSdkRoutingSegmentreferenceIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_SegmentReference_iterator'));
final _heresdkNavigationBindingslistofSdkRoutingSegmentreferenceIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_SegmentReference_iterator_release_handle'));
final _heresdkNavigationBindingslistofSdkRoutingSegmentreferenceIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_SegmentReference_iterator_is_valid'));
final _heresdkNavigationBindingslistofSdkRoutingSegmentreferenceIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_SegmentReference_iterator_increment'));
final _heresdkNavigationBindingslistofSdkRoutingSegmentreferenceIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_SegmentReference_iterator_get'));

Pointer<Void> heresdkNavigationBindingslistofSdkRoutingSegmentreferenceToFfi(List<SegmentReference> value) {
  final _result = _heresdkNavigationBindingslistofSdkRoutingSegmentreferenceCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingSegmentreferenceToFfi(element);
    _heresdkNavigationBindingslistofSdkRoutingSegmentreferenceInsert(_result, _elementHandle);
    sdkRoutingSegmentreferenceReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<SegmentReference> heresdkNavigationBindingslistofSdkRoutingSegmentreferenceFromFfi(Pointer<Void> handle) {
  final result = List<SegmentReference>.empty(growable: true);
  final _iteratorHandle = _heresdkNavigationBindingslistofSdkRoutingSegmentreferenceIterator(handle);
  while (_heresdkNavigationBindingslistofSdkRoutingSegmentreferenceIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkNavigationBindingslistofSdkRoutingSegmentreferenceIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingSegmentreferenceFromFfi(_elementHandle));
    } finally {
      sdkRoutingSegmentreferenceReleaseFfiHandle(_elementHandle);
    }
    _heresdkNavigationBindingslistofSdkRoutingSegmentreferenceIteratorIncrement(_iteratorHandle);
  }
  _heresdkNavigationBindingslistofSdkRoutingSegmentreferenceIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkNavigationBindingslistofSdkRoutingSegmentreferenceReleaseFfiHandle(Pointer<Void> handle) => _heresdkNavigationBindingslistofSdkRoutingSegmentreferenceReleaseHandle(handle);

final _heresdkNavigationBindingslistofSdkRoutingSegmentreferenceCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_SegmentReference_create_handle_nullable'));
final _heresdkNavigationBindingslistofSdkRoutingSegmentreferenceReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_SegmentReference_release_handle_nullable'));
final _heresdkNavigationBindingslistofSdkRoutingSegmentreferenceGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_SegmentReference_get_value_nullable'));

Pointer<Void> heresdkNavigationBindingslistofSdkRoutingSegmentreferenceToFfiNullable(List<SegmentReference>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkNavigationBindingslistofSdkRoutingSegmentreferenceToFfi(value);
  final result = _heresdkNavigationBindingslistofSdkRoutingSegmentreferenceCreateHandleNullable(_handle);
  heresdkNavigationBindingslistofSdkRoutingSegmentreferenceReleaseFfiHandle(_handle);
  return result;
}

List<SegmentReference>? heresdkNavigationBindingslistofSdkRoutingSegmentreferenceFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkNavigationBindingslistofSdkRoutingSegmentreferenceGetValueNullable(handle);
  final result = heresdkNavigationBindingslistofSdkRoutingSegmentreferenceFromFfi(_handle);
  heresdkNavigationBindingslistofSdkRoutingSegmentreferenceReleaseFfiHandle(_handle);
  return result;
}

void heresdkNavigationBindingslistofSdkRoutingSegmentreferenceReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkNavigationBindingslistofSdkRoutingSegmentreferenceReleaseHandleNullable(handle);

final _heresdkNavigationBindingslistofSdkRoutingSpanCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_Span_create_handle'));
final _heresdkNavigationBindingslistofSdkRoutingSpanReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_Span_release_handle'));
final _heresdkNavigationBindingslistofSdkRoutingSpanInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_Span_insert'));
final _heresdkNavigationBindingslistofSdkRoutingSpanIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_Span_iterator'));
final _heresdkNavigationBindingslistofSdkRoutingSpanIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_Span_iterator_release_handle'));
final _heresdkNavigationBindingslistofSdkRoutingSpanIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_Span_iterator_is_valid'));
final _heresdkNavigationBindingslistofSdkRoutingSpanIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_Span_iterator_increment'));
final _heresdkNavigationBindingslistofSdkRoutingSpanIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_Span_iterator_get'));

Pointer<Void> heresdkNavigationBindingslistofSdkRoutingSpanToFfi(List<Span> value) {
  final _result = _heresdkNavigationBindingslistofSdkRoutingSpanCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingSpanToFfi(element);
    _heresdkNavigationBindingslistofSdkRoutingSpanInsert(_result, _elementHandle);
    sdkRoutingSpanReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Span> heresdkNavigationBindingslistofSdkRoutingSpanFromFfi(Pointer<Void> handle) {
  final result = List<Span>.empty(growable: true);
  final _iteratorHandle = _heresdkNavigationBindingslistofSdkRoutingSpanIterator(handle);
  while (_heresdkNavigationBindingslistofSdkRoutingSpanIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkNavigationBindingslistofSdkRoutingSpanIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingSpanFromFfi(_elementHandle));
    } finally {
      sdkRoutingSpanReleaseFfiHandle(_elementHandle);
    }
    _heresdkNavigationBindingslistofSdkRoutingSpanIteratorIncrement(_iteratorHandle);
  }
  _heresdkNavigationBindingslistofSdkRoutingSpanIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkNavigationBindingslistofSdkRoutingSpanReleaseFfiHandle(Pointer<Void> handle) => _heresdkNavigationBindingslistofSdkRoutingSpanReleaseHandle(handle);

final _heresdkNavigationBindingslistofSdkRoutingSpanCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_Span_create_handle_nullable'));
final _heresdkNavigationBindingslistofSdkRoutingSpanReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_Span_release_handle_nullable'));
final _heresdkNavigationBindingslistofSdkRoutingSpanGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_Span_get_value_nullable'));

Pointer<Void> heresdkNavigationBindingslistofSdkRoutingSpanToFfiNullable(List<Span>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkNavigationBindingslistofSdkRoutingSpanToFfi(value);
  final result = _heresdkNavigationBindingslistofSdkRoutingSpanCreateHandleNullable(_handle);
  heresdkNavigationBindingslistofSdkRoutingSpanReleaseFfiHandle(_handle);
  return result;
}

List<Span>? heresdkNavigationBindingslistofSdkRoutingSpanFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkNavigationBindingslistofSdkRoutingSpanGetValueNullable(handle);
  final result = heresdkNavigationBindingslistofSdkRoutingSpanFromFfi(_handle);
  heresdkNavigationBindingslistofSdkRoutingSpanReleaseFfiHandle(_handle);
  return result;
}

void heresdkNavigationBindingslistofSdkRoutingSpanReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkNavigationBindingslistofSdkRoutingSpanReleaseHandleNullable(handle);

final _heresdkNavigationBindingslistofSdkRoutingTollCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_Toll_create_handle'));
final _heresdkNavigationBindingslistofSdkRoutingTollReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_Toll_release_handle'));
final _heresdkNavigationBindingslistofSdkRoutingTollInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_Toll_insert'));
final _heresdkNavigationBindingslistofSdkRoutingTollIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_Toll_iterator'));
final _heresdkNavigationBindingslistofSdkRoutingTollIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_Toll_iterator_release_handle'));
final _heresdkNavigationBindingslistofSdkRoutingTollIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_Toll_iterator_is_valid'));
final _heresdkNavigationBindingslistofSdkRoutingTollIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_Toll_iterator_increment'));
final _heresdkNavigationBindingslistofSdkRoutingTollIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_Toll_iterator_get'));

Pointer<Void> heresdkNavigationBindingslistofSdkRoutingTollToFfi(List<Toll> value) {
  final _result = _heresdkNavigationBindingslistofSdkRoutingTollCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingTollToFfi(element);
    _heresdkNavigationBindingslistofSdkRoutingTollInsert(_result, _elementHandle);
    sdkRoutingTollReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Toll> heresdkNavigationBindingslistofSdkRoutingTollFromFfi(Pointer<Void> handle) {
  final result = List<Toll>.empty(growable: true);
  final _iteratorHandle = _heresdkNavigationBindingslistofSdkRoutingTollIterator(handle);
  while (_heresdkNavigationBindingslistofSdkRoutingTollIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkNavigationBindingslistofSdkRoutingTollIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingTollFromFfi(_elementHandle));
    } finally {
      sdkRoutingTollReleaseFfiHandle(_elementHandle);
    }
    _heresdkNavigationBindingslistofSdkRoutingTollIteratorIncrement(_iteratorHandle);
  }
  _heresdkNavigationBindingslistofSdkRoutingTollIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkNavigationBindingslistofSdkRoutingTollReleaseFfiHandle(Pointer<Void> handle) => _heresdkNavigationBindingslistofSdkRoutingTollReleaseHandle(handle);

final _heresdkNavigationBindingslistofSdkRoutingTollCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_Toll_create_handle_nullable'));
final _heresdkNavigationBindingslistofSdkRoutingTollReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_Toll_release_handle_nullable'));
final _heresdkNavigationBindingslistofSdkRoutingTollGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_Toll_get_value_nullable'));

Pointer<Void> heresdkNavigationBindingslistofSdkRoutingTollToFfiNullable(List<Toll>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkNavigationBindingslistofSdkRoutingTollToFfi(value);
  final result = _heresdkNavigationBindingslistofSdkRoutingTollCreateHandleNullable(_handle);
  heresdkNavigationBindingslistofSdkRoutingTollReleaseFfiHandle(_handle);
  return result;
}

List<Toll>? heresdkNavigationBindingslistofSdkRoutingTollFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkNavigationBindingslistofSdkRoutingTollGetValueNullable(handle);
  final result = heresdkNavigationBindingslistofSdkRoutingTollFromFfi(_handle);
  heresdkNavigationBindingslistofSdkRoutingTollReleaseFfiHandle(_handle);
  return result;
}

void heresdkNavigationBindingslistofSdkRoutingTollReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkNavigationBindingslistofSdkRoutingTollReleaseHandleNullable(handle);

final _heresdkNavigationBindingslistofSdkRoutingTollfareCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_TollFare_create_handle'));
final _heresdkNavigationBindingslistofSdkRoutingTollfareReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_TollFare_release_handle'));
final _heresdkNavigationBindingslistofSdkRoutingTollfareInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_TollFare_insert'));
final _heresdkNavigationBindingslistofSdkRoutingTollfareIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_TollFare_iterator'));
final _heresdkNavigationBindingslistofSdkRoutingTollfareIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_TollFare_iterator_release_handle'));
final _heresdkNavigationBindingslistofSdkRoutingTollfareIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_TollFare_iterator_is_valid'));
final _heresdkNavigationBindingslistofSdkRoutingTollfareIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_TollFare_iterator_increment'));
final _heresdkNavigationBindingslistofSdkRoutingTollfareIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_TollFare_iterator_get'));

Pointer<Void> heresdkNavigationBindingslistofSdkRoutingTollfareToFfi(List<TollFare> value) {
  final _result = _heresdkNavigationBindingslistofSdkRoutingTollfareCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingTollfareToFfi(element);
    _heresdkNavigationBindingslistofSdkRoutingTollfareInsert(_result, _elementHandle);
    sdkRoutingTollfareReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<TollFare> heresdkNavigationBindingslistofSdkRoutingTollfareFromFfi(Pointer<Void> handle) {
  final result = List<TollFare>.empty(growable: true);
  final _iteratorHandle = _heresdkNavigationBindingslistofSdkRoutingTollfareIterator(handle);
  while (_heresdkNavigationBindingslistofSdkRoutingTollfareIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkNavigationBindingslistofSdkRoutingTollfareIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingTollfareFromFfi(_elementHandle));
    } finally {
      sdkRoutingTollfareReleaseFfiHandle(_elementHandle);
    }
    _heresdkNavigationBindingslistofSdkRoutingTollfareIteratorIncrement(_iteratorHandle);
  }
  _heresdkNavigationBindingslistofSdkRoutingTollfareIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkNavigationBindingslistofSdkRoutingTollfareReleaseFfiHandle(Pointer<Void> handle) => _heresdkNavigationBindingslistofSdkRoutingTollfareReleaseHandle(handle);

final _heresdkNavigationBindingslistofSdkRoutingTollfareCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_TollFare_create_handle_nullable'));
final _heresdkNavigationBindingslistofSdkRoutingTollfareReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_TollFare_release_handle_nullable'));
final _heresdkNavigationBindingslistofSdkRoutingTollfareGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_TollFare_get_value_nullable'));

Pointer<Void> heresdkNavigationBindingslistofSdkRoutingTollfareToFfiNullable(List<TollFare>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkNavigationBindingslistofSdkRoutingTollfareToFfi(value);
  final result = _heresdkNavigationBindingslistofSdkRoutingTollfareCreateHandleNullable(_handle);
  heresdkNavigationBindingslistofSdkRoutingTollfareReleaseFfiHandle(_handle);
  return result;
}

List<TollFare>? heresdkNavigationBindingslistofSdkRoutingTollfareFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkNavigationBindingslistofSdkRoutingTollfareGetValueNullable(handle);
  final result = heresdkNavigationBindingslistofSdkRoutingTollfareFromFfi(_handle);
  heresdkNavigationBindingslistofSdkRoutingTollfareReleaseFfiHandle(_handle);
  return result;
}

void heresdkNavigationBindingslistofSdkRoutingTollfareReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkNavigationBindingslistofSdkRoutingTollfareReleaseHandleNullable(handle);

final _heresdkNavigationBindingslistofSdkRoutingTrafficincidentonrouteCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_TrafficIncidentOnRoute_create_handle'));
final _heresdkNavigationBindingslistofSdkRoutingTrafficincidentonrouteReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_TrafficIncidentOnRoute_release_handle'));
final _heresdkNavigationBindingslistofSdkRoutingTrafficincidentonrouteInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_TrafficIncidentOnRoute_insert'));
final _heresdkNavigationBindingslistofSdkRoutingTrafficincidentonrouteIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_TrafficIncidentOnRoute_iterator'));
final _heresdkNavigationBindingslistofSdkRoutingTrafficincidentonrouteIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_TrafficIncidentOnRoute_iterator_release_handle'));
final _heresdkNavigationBindingslistofSdkRoutingTrafficincidentonrouteIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_TrafficIncidentOnRoute_iterator_is_valid'));
final _heresdkNavigationBindingslistofSdkRoutingTrafficincidentonrouteIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_TrafficIncidentOnRoute_iterator_increment'));
final _heresdkNavigationBindingslistofSdkRoutingTrafficincidentonrouteIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_TrafficIncidentOnRoute_iterator_get'));

Pointer<Void> heresdkNavigationBindingslistofSdkRoutingTrafficincidentonrouteToFfi(List<TrafficIncidentOnRoute> value) {
  final _result = _heresdkNavigationBindingslistofSdkRoutingTrafficincidentonrouteCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingTrafficincidentonrouteToFfi(element);
    _heresdkNavigationBindingslistofSdkRoutingTrafficincidentonrouteInsert(_result, _elementHandle);
    sdkRoutingTrafficincidentonrouteReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<TrafficIncidentOnRoute> heresdkNavigationBindingslistofSdkRoutingTrafficincidentonrouteFromFfi(Pointer<Void> handle) {
  final result = List<TrafficIncidentOnRoute>.empty(growable: true);
  final _iteratorHandle = _heresdkNavigationBindingslistofSdkRoutingTrafficincidentonrouteIterator(handle);
  while (_heresdkNavigationBindingslistofSdkRoutingTrafficincidentonrouteIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkNavigationBindingslistofSdkRoutingTrafficincidentonrouteIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingTrafficincidentonrouteFromFfi(_elementHandle));
    } finally {
      sdkRoutingTrafficincidentonrouteReleaseFfiHandle(_elementHandle);
    }
    _heresdkNavigationBindingslistofSdkRoutingTrafficincidentonrouteIteratorIncrement(_iteratorHandle);
  }
  _heresdkNavigationBindingslistofSdkRoutingTrafficincidentonrouteIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkNavigationBindingslistofSdkRoutingTrafficincidentonrouteReleaseFfiHandle(Pointer<Void> handle) => _heresdkNavigationBindingslistofSdkRoutingTrafficincidentonrouteReleaseHandle(handle);

final _heresdkNavigationBindingslistofSdkRoutingTrafficincidentonrouteCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_TrafficIncidentOnRoute_create_handle_nullable'));
final _heresdkNavigationBindingslistofSdkRoutingTrafficincidentonrouteReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_TrafficIncidentOnRoute_release_handle_nullable'));
final _heresdkNavigationBindingslistofSdkRoutingTrafficincidentonrouteGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_TrafficIncidentOnRoute_get_value_nullable'));

Pointer<Void> heresdkNavigationBindingslistofSdkRoutingTrafficincidentonrouteToFfiNullable(List<TrafficIncidentOnRoute>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkNavigationBindingslistofSdkRoutingTrafficincidentonrouteToFfi(value);
  final result = _heresdkNavigationBindingslistofSdkRoutingTrafficincidentonrouteCreateHandleNullable(_handle);
  heresdkNavigationBindingslistofSdkRoutingTrafficincidentonrouteReleaseFfiHandle(_handle);
  return result;
}

List<TrafficIncidentOnRoute>? heresdkNavigationBindingslistofSdkRoutingTrafficincidentonrouteFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkNavigationBindingslistofSdkRoutingTrafficincidentonrouteGetValueNullable(handle);
  final result = heresdkNavigationBindingslistofSdkRoutingTrafficincidentonrouteFromFfi(_handle);
  heresdkNavigationBindingslistofSdkRoutingTrafficincidentonrouteReleaseFfiHandle(_handle);
  return result;
}

void heresdkNavigationBindingslistofSdkRoutingTrafficincidentonrouteReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkNavigationBindingslistofSdkRoutingTrafficincidentonrouteReleaseHandleNullable(handle);

final _heresdkNavigationBindingslistofSdkRoutingTrafficspeedCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_TrafficSpeed_create_handle'));
final _heresdkNavigationBindingslistofSdkRoutingTrafficspeedReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_TrafficSpeed_release_handle'));
final _heresdkNavigationBindingslistofSdkRoutingTrafficspeedInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_TrafficSpeed_insert'));
final _heresdkNavigationBindingslistofSdkRoutingTrafficspeedIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_TrafficSpeed_iterator'));
final _heresdkNavigationBindingslistofSdkRoutingTrafficspeedIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_TrafficSpeed_iterator_release_handle'));
final _heresdkNavigationBindingslistofSdkRoutingTrafficspeedIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_TrafficSpeed_iterator_is_valid'));
final _heresdkNavigationBindingslistofSdkRoutingTrafficspeedIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_TrafficSpeed_iterator_increment'));
final _heresdkNavigationBindingslistofSdkRoutingTrafficspeedIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_TrafficSpeed_iterator_get'));

Pointer<Void> heresdkNavigationBindingslistofSdkRoutingTrafficspeedToFfi(List<TrafficSpeed> value) {
  final _result = _heresdkNavigationBindingslistofSdkRoutingTrafficspeedCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingTrafficspeedToFfi(element);
    _heresdkNavigationBindingslistofSdkRoutingTrafficspeedInsert(_result, _elementHandle);
    sdkRoutingTrafficspeedReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<TrafficSpeed> heresdkNavigationBindingslistofSdkRoutingTrafficspeedFromFfi(Pointer<Void> handle) {
  final result = List<TrafficSpeed>.empty(growable: true);
  final _iteratorHandle = _heresdkNavigationBindingslistofSdkRoutingTrafficspeedIterator(handle);
  while (_heresdkNavigationBindingslistofSdkRoutingTrafficspeedIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkNavigationBindingslistofSdkRoutingTrafficspeedIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingTrafficspeedFromFfi(_elementHandle));
    } finally {
      sdkRoutingTrafficspeedReleaseFfiHandle(_elementHandle);
    }
    _heresdkNavigationBindingslistofSdkRoutingTrafficspeedIteratorIncrement(_iteratorHandle);
  }
  _heresdkNavigationBindingslistofSdkRoutingTrafficspeedIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkNavigationBindingslistofSdkRoutingTrafficspeedReleaseFfiHandle(Pointer<Void> handle) => _heresdkNavigationBindingslistofSdkRoutingTrafficspeedReleaseHandle(handle);

final _heresdkNavigationBindingslistofSdkRoutingTrafficspeedCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_TrafficSpeed_create_handle_nullable'));
final _heresdkNavigationBindingslistofSdkRoutingTrafficspeedReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_TrafficSpeed_release_handle_nullable'));
final _heresdkNavigationBindingslistofSdkRoutingTrafficspeedGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_TrafficSpeed_get_value_nullable'));

Pointer<Void> heresdkNavigationBindingslistofSdkRoutingTrafficspeedToFfiNullable(List<TrafficSpeed>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkNavigationBindingslistofSdkRoutingTrafficspeedToFfi(value);
  final result = _heresdkNavigationBindingslistofSdkRoutingTrafficspeedCreateHandleNullable(_handle);
  heresdkNavigationBindingslistofSdkRoutingTrafficspeedReleaseFfiHandle(_handle);
  return result;
}

List<TrafficSpeed>? heresdkNavigationBindingslistofSdkRoutingTrafficspeedFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkNavigationBindingslistofSdkRoutingTrafficspeedGetValueNullable(handle);
  final result = heresdkNavigationBindingslistofSdkRoutingTrafficspeedFromFfi(_handle);
  heresdkNavigationBindingslistofSdkRoutingTrafficspeedReleaseFfiHandle(_handle);
  return result;
}

void heresdkNavigationBindingslistofSdkRoutingTrafficspeedReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkNavigationBindingslistofSdkRoutingTrafficspeedReleaseHandleNullable(handle);

final _heresdkNavigationBindingslistofSdkRoutingTransitincidentCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_TransitIncident_create_handle'));
final _heresdkNavigationBindingslistofSdkRoutingTransitincidentReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_TransitIncident_release_handle'));
final _heresdkNavigationBindingslistofSdkRoutingTransitincidentInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_TransitIncident_insert'));
final _heresdkNavigationBindingslistofSdkRoutingTransitincidentIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_TransitIncident_iterator'));
final _heresdkNavigationBindingslistofSdkRoutingTransitincidentIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_TransitIncident_iterator_release_handle'));
final _heresdkNavigationBindingslistofSdkRoutingTransitincidentIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_TransitIncident_iterator_is_valid'));
final _heresdkNavigationBindingslistofSdkRoutingTransitincidentIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_TransitIncident_iterator_increment'));
final _heresdkNavigationBindingslistofSdkRoutingTransitincidentIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_TransitIncident_iterator_get'));

Pointer<Void> heresdkNavigationBindingslistofSdkRoutingTransitincidentToFfi(List<TransitIncident> value) {
  final _result = _heresdkNavigationBindingslistofSdkRoutingTransitincidentCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingTransitincidentToFfi(element);
    _heresdkNavigationBindingslistofSdkRoutingTransitincidentInsert(_result, _elementHandle);
    sdkRoutingTransitincidentReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<TransitIncident> heresdkNavigationBindingslistofSdkRoutingTransitincidentFromFfi(Pointer<Void> handle) {
  final result = List<TransitIncident>.empty(growable: true);
  final _iteratorHandle = _heresdkNavigationBindingslistofSdkRoutingTransitincidentIterator(handle);
  while (_heresdkNavigationBindingslistofSdkRoutingTransitincidentIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkNavigationBindingslistofSdkRoutingTransitincidentIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingTransitincidentFromFfi(_elementHandle));
    } finally {
      sdkRoutingTransitincidentReleaseFfiHandle(_elementHandle);
    }
    _heresdkNavigationBindingslistofSdkRoutingTransitincidentIteratorIncrement(_iteratorHandle);
  }
  _heresdkNavigationBindingslistofSdkRoutingTransitincidentIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkNavigationBindingslistofSdkRoutingTransitincidentReleaseFfiHandle(Pointer<Void> handle) => _heresdkNavigationBindingslistofSdkRoutingTransitincidentReleaseHandle(handle);

final _heresdkNavigationBindingslistofSdkRoutingTransitincidentCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_TransitIncident_create_handle_nullable'));
final _heresdkNavigationBindingslistofSdkRoutingTransitincidentReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_TransitIncident_release_handle_nullable'));
final _heresdkNavigationBindingslistofSdkRoutingTransitincidentGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_TransitIncident_get_value_nullable'));

Pointer<Void> heresdkNavigationBindingslistofSdkRoutingTransitincidentToFfiNullable(List<TransitIncident>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkNavigationBindingslistofSdkRoutingTransitincidentToFfi(value);
  final result = _heresdkNavigationBindingslistofSdkRoutingTransitincidentCreateHandleNullable(_handle);
  heresdkNavigationBindingslistofSdkRoutingTransitincidentReleaseFfiHandle(_handle);
  return result;
}

List<TransitIncident>? heresdkNavigationBindingslistofSdkRoutingTransitincidentFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkNavigationBindingslistofSdkRoutingTransitincidentGetValueNullable(handle);
  final result = heresdkNavigationBindingslistofSdkRoutingTransitincidentFromFfi(_handle);
  heresdkNavigationBindingslistofSdkRoutingTransitincidentReleaseFfiHandle(_handle);
  return result;
}

void heresdkNavigationBindingslistofSdkRoutingTransitincidentReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkNavigationBindingslistofSdkRoutingTransitincidentReleaseHandleNullable(handle);

final _heresdkNavigationBindingslistofSdkRoutingTransitmodeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_TransitMode_create_handle'));
final _heresdkNavigationBindingslistofSdkRoutingTransitmodeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_TransitMode_release_handle'));
final _heresdkNavigationBindingslistofSdkRoutingTransitmodeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_TransitMode_insert'));
final _heresdkNavigationBindingslistofSdkRoutingTransitmodeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_TransitMode_iterator'));
final _heresdkNavigationBindingslistofSdkRoutingTransitmodeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_TransitMode_iterator_release_handle'));
final _heresdkNavigationBindingslistofSdkRoutingTransitmodeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_TransitMode_iterator_is_valid'));
final _heresdkNavigationBindingslistofSdkRoutingTransitmodeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_TransitMode_iterator_increment'));
final _heresdkNavigationBindingslistofSdkRoutingTransitmodeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_TransitMode_iterator_get'));

Pointer<Void> heresdkNavigationBindingslistofSdkRoutingTransitmodeToFfi(List<TransitMode> value) {
  final _result = _heresdkNavigationBindingslistofSdkRoutingTransitmodeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingTransitmodeToFfi(element);
    _heresdkNavigationBindingslistofSdkRoutingTransitmodeInsert(_result, _elementHandle);
    sdkRoutingTransitmodeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<TransitMode> heresdkNavigationBindingslistofSdkRoutingTransitmodeFromFfi(Pointer<Void> handle) {
  final result = List<TransitMode>.empty(growable: true);
  final _iteratorHandle = _heresdkNavigationBindingslistofSdkRoutingTransitmodeIterator(handle);
  while (_heresdkNavigationBindingslistofSdkRoutingTransitmodeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkNavigationBindingslistofSdkRoutingTransitmodeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingTransitmodeFromFfi(_elementHandle));
    } finally {
      sdkRoutingTransitmodeReleaseFfiHandle(_elementHandle);
    }
    _heresdkNavigationBindingslistofSdkRoutingTransitmodeIteratorIncrement(_iteratorHandle);
  }
  _heresdkNavigationBindingslistofSdkRoutingTransitmodeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkNavigationBindingslistofSdkRoutingTransitmodeReleaseFfiHandle(Pointer<Void> handle) => _heresdkNavigationBindingslistofSdkRoutingTransitmodeReleaseHandle(handle);

final _heresdkNavigationBindingslistofSdkRoutingTransitmodeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_TransitMode_create_handle_nullable'));
final _heresdkNavigationBindingslistofSdkRoutingTransitmodeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_TransitMode_release_handle_nullable'));
final _heresdkNavigationBindingslistofSdkRoutingTransitmodeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_TransitMode_get_value_nullable'));

Pointer<Void> heresdkNavigationBindingslistofSdkRoutingTransitmodeToFfiNullable(List<TransitMode>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkNavigationBindingslistofSdkRoutingTransitmodeToFfi(value);
  final result = _heresdkNavigationBindingslistofSdkRoutingTransitmodeCreateHandleNullable(_handle);
  heresdkNavigationBindingslistofSdkRoutingTransitmodeReleaseFfiHandle(_handle);
  return result;
}

List<TransitMode>? heresdkNavigationBindingslistofSdkRoutingTransitmodeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkNavigationBindingslistofSdkRoutingTransitmodeGetValueNullable(handle);
  final result = heresdkNavigationBindingslistofSdkRoutingTransitmodeFromFfi(_handle);
  heresdkNavigationBindingslistofSdkRoutingTransitmodeReleaseFfiHandle(_handle);
  return result;
}

void heresdkNavigationBindingslistofSdkRoutingTransitmodeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkNavigationBindingslistofSdkRoutingTransitmodeReleaseHandleNullable(handle);

final _heresdkNavigationBindingslistofSdkRoutingTransitstopCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_TransitStop_create_handle'));
final _heresdkNavigationBindingslistofSdkRoutingTransitstopReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_TransitStop_release_handle'));
final _heresdkNavigationBindingslistofSdkRoutingTransitstopInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_TransitStop_insert'));
final _heresdkNavigationBindingslistofSdkRoutingTransitstopIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_TransitStop_iterator'));
final _heresdkNavigationBindingslistofSdkRoutingTransitstopIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_TransitStop_iterator_release_handle'));
final _heresdkNavigationBindingslistofSdkRoutingTransitstopIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_TransitStop_iterator_is_valid'));
final _heresdkNavigationBindingslistofSdkRoutingTransitstopIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_TransitStop_iterator_increment'));
final _heresdkNavigationBindingslistofSdkRoutingTransitstopIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_TransitStop_iterator_get'));

Pointer<Void> heresdkNavigationBindingslistofSdkRoutingTransitstopToFfi(List<TransitStop> value) {
  final _result = _heresdkNavigationBindingslistofSdkRoutingTransitstopCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingTransitstopToFfi(element);
    _heresdkNavigationBindingslistofSdkRoutingTransitstopInsert(_result, _elementHandle);
    sdkRoutingTransitstopReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<TransitStop> heresdkNavigationBindingslistofSdkRoutingTransitstopFromFfi(Pointer<Void> handle) {
  final result = List<TransitStop>.empty(growable: true);
  final _iteratorHandle = _heresdkNavigationBindingslistofSdkRoutingTransitstopIterator(handle);
  while (_heresdkNavigationBindingslistofSdkRoutingTransitstopIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkNavigationBindingslistofSdkRoutingTransitstopIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingTransitstopFromFfi(_elementHandle));
    } finally {
      sdkRoutingTransitstopReleaseFfiHandle(_elementHandle);
    }
    _heresdkNavigationBindingslistofSdkRoutingTransitstopIteratorIncrement(_iteratorHandle);
  }
  _heresdkNavigationBindingslistofSdkRoutingTransitstopIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkNavigationBindingslistofSdkRoutingTransitstopReleaseFfiHandle(Pointer<Void> handle) => _heresdkNavigationBindingslistofSdkRoutingTransitstopReleaseHandle(handle);

final _heresdkNavigationBindingslistofSdkRoutingTransitstopCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_TransitStop_create_handle_nullable'));
final _heresdkNavigationBindingslistofSdkRoutingTransitstopReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_TransitStop_release_handle_nullable'));
final _heresdkNavigationBindingslistofSdkRoutingTransitstopGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_TransitStop_get_value_nullable'));

Pointer<Void> heresdkNavigationBindingslistofSdkRoutingTransitstopToFfiNullable(List<TransitStop>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkNavigationBindingslistofSdkRoutingTransitstopToFfi(value);
  final result = _heresdkNavigationBindingslistofSdkRoutingTransitstopCreateHandleNullable(_handle);
  heresdkNavigationBindingslistofSdkRoutingTransitstopReleaseFfiHandle(_handle);
  return result;
}

List<TransitStop>? heresdkNavigationBindingslistofSdkRoutingTransitstopFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkNavigationBindingslistofSdkRoutingTransitstopGetValueNullable(handle);
  final result = heresdkNavigationBindingslistofSdkRoutingTransitstopFromFfi(_handle);
  heresdkNavigationBindingslistofSdkRoutingTransitstopReleaseFfiHandle(_handle);
  return result;
}

void heresdkNavigationBindingslistofSdkRoutingTransitstopReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkNavigationBindingslistofSdkRoutingTransitstopReleaseHandleNullable(handle);

final _heresdkNavigationBindingslistofSdkRoutingWaypointCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_Waypoint_create_handle'));
final _heresdkNavigationBindingslistofSdkRoutingWaypointReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_Waypoint_release_handle'));
final _heresdkNavigationBindingslistofSdkRoutingWaypointInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_Waypoint_insert'));
final _heresdkNavigationBindingslistofSdkRoutingWaypointIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_Waypoint_iterator'));
final _heresdkNavigationBindingslistofSdkRoutingWaypointIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_Waypoint_iterator_release_handle'));
final _heresdkNavigationBindingslistofSdkRoutingWaypointIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_Waypoint_iterator_is_valid'));
final _heresdkNavigationBindingslistofSdkRoutingWaypointIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_Waypoint_iterator_increment'));
final _heresdkNavigationBindingslistofSdkRoutingWaypointIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_Waypoint_iterator_get'));

Pointer<Void> heresdkNavigationBindingslistofSdkRoutingWaypointToFfi(List<Waypoint> value) {
  final _result = _heresdkNavigationBindingslistofSdkRoutingWaypointCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingWaypointToFfi(element);
    _heresdkNavigationBindingslistofSdkRoutingWaypointInsert(_result, _elementHandle);
    sdkRoutingWaypointReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Waypoint> heresdkNavigationBindingslistofSdkRoutingWaypointFromFfi(Pointer<Void> handle) {
  final result = List<Waypoint>.empty(growable: true);
  final _iteratorHandle = _heresdkNavigationBindingslistofSdkRoutingWaypointIterator(handle);
  while (_heresdkNavigationBindingslistofSdkRoutingWaypointIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkNavigationBindingslistofSdkRoutingWaypointIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingWaypointFromFfi(_elementHandle));
    } finally {
      sdkRoutingWaypointReleaseFfiHandle(_elementHandle);
    }
    _heresdkNavigationBindingslistofSdkRoutingWaypointIteratorIncrement(_iteratorHandle);
  }
  _heresdkNavigationBindingslistofSdkRoutingWaypointIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkNavigationBindingslistofSdkRoutingWaypointReleaseFfiHandle(Pointer<Void> handle) => _heresdkNavigationBindingslistofSdkRoutingWaypointReleaseHandle(handle);

final _heresdkNavigationBindingslistofSdkRoutingWaypointCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_Waypoint_create_handle_nullable'));
final _heresdkNavigationBindingslistofSdkRoutingWaypointReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_Waypoint_release_handle_nullable'));
final _heresdkNavigationBindingslistofSdkRoutingWaypointGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_Waypoint_get_value_nullable'));

Pointer<Void> heresdkNavigationBindingslistofSdkRoutingWaypointToFfiNullable(List<Waypoint>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkNavigationBindingslistofSdkRoutingWaypointToFfi(value);
  final result = _heresdkNavigationBindingslistofSdkRoutingWaypointCreateHandleNullable(_handle);
  heresdkNavigationBindingslistofSdkRoutingWaypointReleaseFfiHandle(_handle);
  return result;
}

List<Waypoint>? heresdkNavigationBindingslistofSdkRoutingWaypointFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkNavigationBindingslistofSdkRoutingWaypointGetValueNullable(handle);
  final result = heresdkNavigationBindingslistofSdkRoutingWaypointFromFfi(_handle);
  heresdkNavigationBindingslistofSdkRoutingWaypointReleaseFfiHandle(_handle);
  return result;
}

void heresdkNavigationBindingslistofSdkRoutingWaypointReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkNavigationBindingslistofSdkRoutingWaypointReleaseHandleNullable(handle);

final _heresdkNavigationBindingslistofSdkRoutingZonecategoryCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_ZoneCategory_create_handle'));
final _heresdkNavigationBindingslistofSdkRoutingZonecategoryReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_ZoneCategory_release_handle'));
final _heresdkNavigationBindingslistofSdkRoutingZonecategoryInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_ZoneCategory_insert'));
final _heresdkNavigationBindingslistofSdkRoutingZonecategoryIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_ZoneCategory_iterator'));
final _heresdkNavigationBindingslistofSdkRoutingZonecategoryIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_ZoneCategory_iterator_release_handle'));
final _heresdkNavigationBindingslistofSdkRoutingZonecategoryIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_ZoneCategory_iterator_is_valid'));
final _heresdkNavigationBindingslistofSdkRoutingZonecategoryIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_ZoneCategory_iterator_increment'));
final _heresdkNavigationBindingslistofSdkRoutingZonecategoryIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_ZoneCategory_iterator_get'));

Pointer<Void> heresdkNavigationBindingslistofSdkRoutingZonecategoryToFfi(List<ZoneCategory> value) {
  final _result = _heresdkNavigationBindingslistofSdkRoutingZonecategoryCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingZonecategoryToFfi(element);
    _heresdkNavigationBindingslistofSdkRoutingZonecategoryInsert(_result, _elementHandle);
    sdkRoutingZonecategoryReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<ZoneCategory> heresdkNavigationBindingslistofSdkRoutingZonecategoryFromFfi(Pointer<Void> handle) {
  final result = List<ZoneCategory>.empty(growable: true);
  final _iteratorHandle = _heresdkNavigationBindingslistofSdkRoutingZonecategoryIterator(handle);
  while (_heresdkNavigationBindingslistofSdkRoutingZonecategoryIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkNavigationBindingslistofSdkRoutingZonecategoryIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingZonecategoryFromFfi(_elementHandle));
    } finally {
      sdkRoutingZonecategoryReleaseFfiHandle(_elementHandle);
    }
    _heresdkNavigationBindingslistofSdkRoutingZonecategoryIteratorIncrement(_iteratorHandle);
  }
  _heresdkNavigationBindingslistofSdkRoutingZonecategoryIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkNavigationBindingslistofSdkRoutingZonecategoryReleaseFfiHandle(Pointer<Void> handle) => _heresdkNavigationBindingslistofSdkRoutingZonecategoryReleaseHandle(handle);

final _heresdkNavigationBindingslistofSdkRoutingZonecategoryCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_ZoneCategory_create_handle_nullable'));
final _heresdkNavigationBindingslistofSdkRoutingZonecategoryReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_ZoneCategory_release_handle_nullable'));
final _heresdkNavigationBindingslistofSdkRoutingZonecategoryGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_routing_ZoneCategory_get_value_nullable'));

Pointer<Void> heresdkNavigationBindingslistofSdkRoutingZonecategoryToFfiNullable(List<ZoneCategory>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkNavigationBindingslistofSdkRoutingZonecategoryToFfi(value);
  final result = _heresdkNavigationBindingslistofSdkRoutingZonecategoryCreateHandleNullable(_handle);
  heresdkNavigationBindingslistofSdkRoutingZonecategoryReleaseFfiHandle(_handle);
  return result;
}

List<ZoneCategory>? heresdkNavigationBindingslistofSdkRoutingZonecategoryFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkNavigationBindingslistofSdkRoutingZonecategoryGetValueNullable(handle);
  final result = heresdkNavigationBindingslistofSdkRoutingZonecategoryFromFfi(_handle);
  heresdkNavigationBindingslistofSdkRoutingZonecategoryReleaseFfiHandle(_handle);
  return result;
}

void heresdkNavigationBindingslistofSdkRoutingZonecategoryReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkNavigationBindingslistofSdkRoutingZonecategoryReleaseHandleNullable(handle);

final _heresdkNavigationBindingslistofSdkTransportHazardousmaterialCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_transport_HazardousMaterial_create_handle'));
final _heresdkNavigationBindingslistofSdkTransportHazardousmaterialReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_transport_HazardousMaterial_release_handle'));
final _heresdkNavigationBindingslistofSdkTransportHazardousmaterialInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_transport_HazardousMaterial_insert'));
final _heresdkNavigationBindingslistofSdkTransportHazardousmaterialIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_transport_HazardousMaterial_iterator'));
final _heresdkNavigationBindingslistofSdkTransportHazardousmaterialIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_transport_HazardousMaterial_iterator_release_handle'));
final _heresdkNavigationBindingslistofSdkTransportHazardousmaterialIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_transport_HazardousMaterial_iterator_is_valid'));
final _heresdkNavigationBindingslistofSdkTransportHazardousmaterialIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_transport_HazardousMaterial_iterator_increment'));
final _heresdkNavigationBindingslistofSdkTransportHazardousmaterialIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsListOf_sdk_transport_HazardousMaterial_iterator_get'));

Pointer<Void> heresdkNavigationBindingslistofSdkTransportHazardousmaterialToFfi(List<HazardousMaterial> value) {
  final _result = _heresdkNavigationBindingslistofSdkTransportHazardousmaterialCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkTransportHazardousmaterialToFfi(element);
    _heresdkNavigationBindingslistofSdkTransportHazardousmaterialInsert(_result, _elementHandle);
    sdkTransportHazardousmaterialReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<HazardousMaterial> heresdkNavigationBindingslistofSdkTransportHazardousmaterialFromFfi(Pointer<Void> handle) {
  final result = List<HazardousMaterial>.empty(growable: true);
  final _iteratorHandle = _heresdkNavigationBindingslistofSdkTransportHazardousmaterialIterator(handle);
  while (_heresdkNavigationBindingslistofSdkTransportHazardousmaterialIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkNavigationBindingslistofSdkTransportHazardousmaterialIteratorGet(_iteratorHandle);
    try {
      result.add(sdkTransportHazardousmaterialFromFfi(_elementHandle));
    } finally {
      sdkTransportHazardousmaterialReleaseFfiHandle(_elementHandle);
    }
    _heresdkNavigationBindingslistofSdkTransportHazardousmaterialIteratorIncrement(_iteratorHandle);
  }
  _heresdkNavigationBindingslistofSdkTransportHazardousmaterialIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkNavigationBindingslistofSdkTransportHazardousmaterialReleaseFfiHandle(Pointer<Void> handle) => _heresdkNavigationBindingslistofSdkTransportHazardousmaterialReleaseHandle(handle);

final _heresdkNavigationBindingslistofSdkTransportHazardousmaterialCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_transport_HazardousMaterial_create_handle_nullable'));
final _heresdkNavigationBindingslistofSdkTransportHazardousmaterialReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_transport_HazardousMaterial_release_handle_nullable'));
final _heresdkNavigationBindingslistofSdkTransportHazardousmaterialGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsListOf_sdk_transport_HazardousMaterial_get_value_nullable'));

Pointer<Void> heresdkNavigationBindingslistofSdkTransportHazardousmaterialToFfiNullable(List<HazardousMaterial>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkNavigationBindingslistofSdkTransportHazardousmaterialToFfi(value);
  final result = _heresdkNavigationBindingslistofSdkTransportHazardousmaterialCreateHandleNullable(_handle);
  heresdkNavigationBindingslistofSdkTransportHazardousmaterialReleaseFfiHandle(_handle);
  return result;
}

List<HazardousMaterial>? heresdkNavigationBindingslistofSdkTransportHazardousmaterialFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkNavigationBindingslistofSdkTransportHazardousmaterialGetValueNullable(handle);
  final result = heresdkNavigationBindingslistofSdkTransportHazardousmaterialFromFfi(_handle);
  heresdkNavigationBindingslistofSdkTransportHazardousmaterialReleaseFfiHandle(_handle);
  return result;
}

void heresdkNavigationBindingslistofSdkTransportHazardousmaterialReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkNavigationBindingslistofSdkTransportHazardousmaterialReleaseHandleNullable(handle);

final _heresdkNavigationBindingsmapofDoubleToDoubleCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_navigation_bindingsMapOf_Double_to_Double_create_handle'));
final _heresdkNavigationBindingsmapofDoubleToDoubleReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsMapOf_Double_to_Double_release_handle'));
final _heresdkNavigationBindingsmapofDoubleToDoublePut = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Double, Double),
    void Function(Pointer<Void>, double, double)
  >('here_sdk_heresdk_navigation_bindingsMapOf_Double_to_Double_put'));
final _heresdkNavigationBindingsmapofDoubleToDoubleIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsMapOf_Double_to_Double_iterator'));
final _heresdkNavigationBindingsmapofDoubleToDoubleIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsMapOf_Double_to_Double_iterator_release_handle'));
final _heresdkNavigationBindingsmapofDoubleToDoubleIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsMapOf_Double_to_Double_iterator_is_valid'));
final _heresdkNavigationBindingsmapofDoubleToDoubleIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsMapOf_Double_to_Double_iterator_increment'));
final _heresdkNavigationBindingsmapofDoubleToDoubleIteratorGetKey = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Double Function(Pointer<Void>),
    double Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsMapOf_Double_to_Double_iterator_get_key'));
final _heresdkNavigationBindingsmapofDoubleToDoubleIteratorGetValue = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Double Function(Pointer<Void>),
    double Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsMapOf_Double_to_Double_iterator_get_value'));

Pointer<Void> heresdkNavigationBindingsmapofDoubleToDoubleToFfi(Map<double, double> value) {
  final _result = _heresdkNavigationBindingsmapofDoubleToDoubleCreateHandle();
  for (final entry in value.entries) {
    final _keyHandle = (entry.key);
    final _valueHandle = (entry.value);
    _heresdkNavigationBindingsmapofDoubleToDoublePut(_result, _keyHandle, _valueHandle);
    
    
  }
  return _result;
}

Map<double, double> heresdkNavigationBindingsmapofDoubleToDoubleFromFfi(Pointer<Void> handle) {
  final result = Map<double, double>();
  final _iteratorHandle = _heresdkNavigationBindingsmapofDoubleToDoubleIterator(handle);
  while (_heresdkNavigationBindingsmapofDoubleToDoubleIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _keyHandle = _heresdkNavigationBindingsmapofDoubleToDoubleIteratorGetKey(_iteratorHandle);
    final _valueHandle = _heresdkNavigationBindingsmapofDoubleToDoubleIteratorGetValue(_iteratorHandle);
    try {
      result[(_keyHandle)] =
        (_valueHandle);
    } finally {
      
      
    }
    _heresdkNavigationBindingsmapofDoubleToDoubleIteratorIncrement(_iteratorHandle);
  }
  _heresdkNavigationBindingsmapofDoubleToDoubleIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkNavigationBindingsmapofDoubleToDoubleReleaseFfiHandle(Pointer<Void> handle) => _heresdkNavigationBindingsmapofDoubleToDoubleReleaseHandle(handle);

final _heresdkNavigationBindingsmapofDoubleToDoubleCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsMapOf_Double_to_Double_create_handle_nullable'));
final _heresdkNavigationBindingsmapofDoubleToDoubleReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsMapOf_Double_to_Double_release_handle_nullable'));
final _heresdkNavigationBindingsmapofDoubleToDoubleGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsMapOf_Double_to_Double_get_value_nullable'));

Pointer<Void> heresdkNavigationBindingsmapofDoubleToDoubleToFfiNullable(Map<double, double>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkNavigationBindingsmapofDoubleToDoubleToFfi(value);
  final result = _heresdkNavigationBindingsmapofDoubleToDoubleCreateHandleNullable(_handle);
  heresdkNavigationBindingsmapofDoubleToDoubleReleaseFfiHandle(_handle);
  return result;
}

Map<double, double>? heresdkNavigationBindingsmapofDoubleToDoubleFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkNavigationBindingsmapofDoubleToDoubleGetValueNullable(handle);
  final result = heresdkNavigationBindingsmapofDoubleToDoubleFromFfi(_handle);
  heresdkNavigationBindingsmapofDoubleToDoubleReleaseFfiHandle(_handle);
  return result;
}

void heresdkNavigationBindingsmapofDoubleToDoubleReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkNavigationBindingsmapofDoubleToDoubleReleaseHandleNullable(handle);

final _heresdkNavigationBindingsmapofIntToDoubleCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_navigation_bindingsMapOf_Int_to_Double_create_handle'));
final _heresdkNavigationBindingsmapofIntToDoubleReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsMapOf_Int_to_Double_release_handle'));
final _heresdkNavigationBindingsmapofIntToDoublePut = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Int32, Double),
    void Function(Pointer<Void>, int, double)
  >('here_sdk_heresdk_navigation_bindingsMapOf_Int_to_Double_put'));
final _heresdkNavigationBindingsmapofIntToDoubleIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsMapOf_Int_to_Double_iterator'));
final _heresdkNavigationBindingsmapofIntToDoubleIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsMapOf_Int_to_Double_iterator_release_handle'));
final _heresdkNavigationBindingsmapofIntToDoubleIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsMapOf_Int_to_Double_iterator_is_valid'));
final _heresdkNavigationBindingsmapofIntToDoubleIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsMapOf_Int_to_Double_iterator_increment'));
final _heresdkNavigationBindingsmapofIntToDoubleIteratorGetKey = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsMapOf_Int_to_Double_iterator_get_key'));
final _heresdkNavigationBindingsmapofIntToDoubleIteratorGetValue = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Double Function(Pointer<Void>),
    double Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsMapOf_Int_to_Double_iterator_get_value'));

Pointer<Void> heresdkNavigationBindingsmapofIntToDoubleToFfi(Map<int, double> value) {
  final _result = _heresdkNavigationBindingsmapofIntToDoubleCreateHandle();
  for (final entry in value.entries) {
    final _keyHandle = (entry.key);
    final _valueHandle = (entry.value);
    _heresdkNavigationBindingsmapofIntToDoublePut(_result, _keyHandle, _valueHandle);
    
    
  }
  return _result;
}

Map<int, double> heresdkNavigationBindingsmapofIntToDoubleFromFfi(Pointer<Void> handle) {
  final result = Map<int, double>();
  final _iteratorHandle = _heresdkNavigationBindingsmapofIntToDoubleIterator(handle);
  while (_heresdkNavigationBindingsmapofIntToDoubleIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _keyHandle = _heresdkNavigationBindingsmapofIntToDoubleIteratorGetKey(_iteratorHandle);
    final _valueHandle = _heresdkNavigationBindingsmapofIntToDoubleIteratorGetValue(_iteratorHandle);
    try {
      result[(_keyHandle)] =
        (_valueHandle);
    } finally {
      
      
    }
    _heresdkNavigationBindingsmapofIntToDoubleIteratorIncrement(_iteratorHandle);
  }
  _heresdkNavigationBindingsmapofIntToDoubleIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkNavigationBindingsmapofIntToDoubleReleaseFfiHandle(Pointer<Void> handle) => _heresdkNavigationBindingsmapofIntToDoubleReleaseHandle(handle);

final _heresdkNavigationBindingsmapofIntToDoubleCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsMapOf_Int_to_Double_create_handle_nullable'));
final _heresdkNavigationBindingsmapofIntToDoubleReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsMapOf_Int_to_Double_release_handle_nullable'));
final _heresdkNavigationBindingsmapofIntToDoubleGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsMapOf_Int_to_Double_get_value_nullable'));

Pointer<Void> heresdkNavigationBindingsmapofIntToDoubleToFfiNullable(Map<int, double>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkNavigationBindingsmapofIntToDoubleToFfi(value);
  final result = _heresdkNavigationBindingsmapofIntToDoubleCreateHandleNullable(_handle);
  heresdkNavigationBindingsmapofIntToDoubleReleaseFfiHandle(_handle);
  return result;
}

Map<int, double>? heresdkNavigationBindingsmapofIntToDoubleFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkNavigationBindingsmapofIntToDoubleGetValueNullable(handle);
  final result = heresdkNavigationBindingsmapofIntToDoubleFromFfi(_handle);
  heresdkNavigationBindingsmapofIntToDoubleReleaseFfiHandle(_handle);
  return result;
}

void heresdkNavigationBindingsmapofIntToDoubleReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkNavigationBindingsmapofIntToDoubleReleaseHandleNullable(handle);

final _heresdkNavigationBindingsmapofSdkCoreEngineEnginebaseurlToStringCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_navigation_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_create_handle'));
final _heresdkNavigationBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_release_handle'));
final _heresdkNavigationBindingsmapofSdkCoreEngineEnginebaseurlToStringPut = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32, Pointer<Void>),
    void Function(Pointer<Void>, int, Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_put'));
final _heresdkNavigationBindingsmapofSdkCoreEngineEnginebaseurlToStringIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_iterator'));
final _heresdkNavigationBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_iterator_release_handle'));
final _heresdkNavigationBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_iterator_is_valid'));
final _heresdkNavigationBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_iterator_increment'));
final _heresdkNavigationBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorGetKey = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_iterator_get_key'));
final _heresdkNavigationBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorGetValue = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_navigation_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_iterator_get_value'));

Pointer<Void> heresdkNavigationBindingsmapofSdkCoreEngineEnginebaseurlToStringToFfi(Map<EngineBaseURL, String> value) {
  final _result = _heresdkNavigationBindingsmapofSdkCoreEngineEnginebaseurlToStringCreateHandle();
  for (final entry in value.entries) {
    final _keyHandle = sdkCoreEngineEnginebaseurlToFfi(entry.key);
    final _valueHandle = stringToFfi(entry.value);
    _heresdkNavigationBindingsmapofSdkCoreEngineEnginebaseurlToStringPut(_result, _keyHandle, _valueHandle);
    sdkCoreEngineEnginebaseurlReleaseFfiHandle(_keyHandle);
    stringReleaseFfiHandle(_valueHandle);
  }
  return _result;
}

Map<EngineBaseURL, String> heresdkNavigationBindingsmapofSdkCoreEngineEnginebaseurlToStringFromFfi(Pointer<Void> handle) {
  final result = Map<EngineBaseURL, String>();
  final _iteratorHandle = _heresdkNavigationBindingsmapofSdkCoreEngineEnginebaseurlToStringIterator(handle);
  while (_heresdkNavigationBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _keyHandle = _heresdkNavigationBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorGetKey(_iteratorHandle);
    final _valueHandle = _heresdkNavigationBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorGetValue(_iteratorHandle);
    try {
      result[sdkCoreEngineEnginebaseurlFromFfi(_keyHandle)] =
        stringFromFfi(_valueHandle);
    } finally {
      sdkCoreEngineEnginebaseurlReleaseFfiHandle(_keyHandle);
      stringReleaseFfiHandle(_valueHandle);
    }
    _heresdkNavigationBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorIncrement(_iteratorHandle);
  }
  _heresdkNavigationBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkNavigationBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseFfiHandle(Pointer<Void> handle) => _heresdkNavigationBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseHandle(handle);

final _heresdkNavigationBindingsmapofSdkCoreEngineEnginebaseurlToStringCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_create_handle_nullable'));
final _heresdkNavigationBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_release_handle_nullable'));
final _heresdkNavigationBindingsmapofSdkCoreEngineEnginebaseurlToStringGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_navigation_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_get_value_nullable'));

Pointer<Void> heresdkNavigationBindingsmapofSdkCoreEngineEnginebaseurlToStringToFfiNullable(Map<EngineBaseURL, String>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkNavigationBindingsmapofSdkCoreEngineEnginebaseurlToStringToFfi(value);
  final result = _heresdkNavigationBindingsmapofSdkCoreEngineEnginebaseurlToStringCreateHandleNullable(_handle);
  heresdkNavigationBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseFfiHandle(_handle);
  return result;
}

Map<EngineBaseURL, String>? heresdkNavigationBindingsmapofSdkCoreEngineEnginebaseurlToStringFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkNavigationBindingsmapofSdkCoreEngineEnginebaseurlToStringGetValueNullable(handle);
  final result = heresdkNavigationBindingsmapofSdkCoreEngineEnginebaseurlToStringFromFfi(_handle);
  heresdkNavigationBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseFfiHandle(_handle);
  return result;
}

void heresdkNavigationBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkNavigationBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseHandleNullable(handle);


// Copyright (c) 2018-2022 HERE Global B.V. and its affiliate(s).
// All rights reserved.
//
// This software and other materials contain proprietary information
// controlled by HERE and are protected by applicable copyright legislation.
// Any use and utilization of this software and other materials and
// disclosure to any third parties is conditional upon having a separate
// agreement with HERE for the access, use, utilization or disclosure of this
// software. In the absence of such agreement, the use of the software is not
// allowed.
//

































final _heresdkPersonalPlacesBindingslistofLocaleCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_personal_places_bindingsListOf_Locale_create_handle'));
final _heresdkPersonalPlacesBindingslistofLocaleReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_personal_places_bindingsListOf_Locale_release_handle'));
final _heresdkPersonalPlacesBindingslistofLocaleInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_personal_places_bindingsListOf_Locale_insert'));
final _heresdkPersonalPlacesBindingslistofLocaleIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_personal_places_bindingsListOf_Locale_iterator'));
final _heresdkPersonalPlacesBindingslistofLocaleIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_personal_places_bindingsListOf_Locale_iterator_release_handle'));
final _heresdkPersonalPlacesBindingslistofLocaleIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_personal_places_bindingsListOf_Locale_iterator_is_valid'));
final _heresdkPersonalPlacesBindingslistofLocaleIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_personal_places_bindingsListOf_Locale_iterator_increment'));
final _heresdkPersonalPlacesBindingslistofLocaleIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_personal_places_bindingsListOf_Locale_iterator_get'));

Pointer<Void> heresdkPersonalPlacesBindingslistofLocaleToFfi(List<Locale> value) {
  final _result = _heresdkPersonalPlacesBindingslistofLocaleCreateHandle();
  for (final element in value) {
    final _elementHandle = localeToFfi(element);
    _heresdkPersonalPlacesBindingslistofLocaleInsert(_result, _elementHandle);
    localeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Locale> heresdkPersonalPlacesBindingslistofLocaleFromFfi(Pointer<Void> handle) {
  final result = List<Locale>.empty(growable: true);
  final _iteratorHandle = _heresdkPersonalPlacesBindingslistofLocaleIterator(handle);
  while (_heresdkPersonalPlacesBindingslistofLocaleIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkPersonalPlacesBindingslistofLocaleIteratorGet(_iteratorHandle);
    try {
      result.add(localeFromFfi(_elementHandle));
    } finally {
      localeReleaseFfiHandle(_elementHandle);
    }
    _heresdkPersonalPlacesBindingslistofLocaleIteratorIncrement(_iteratorHandle);
  }
  _heresdkPersonalPlacesBindingslistofLocaleIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkPersonalPlacesBindingslistofLocaleReleaseFfiHandle(Pointer<Void> handle) => _heresdkPersonalPlacesBindingslistofLocaleReleaseHandle(handle);

final _heresdkPersonalPlacesBindingslistofLocaleCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_personal_places_bindingsListOf_Locale_create_handle_nullable'));
final _heresdkPersonalPlacesBindingslistofLocaleReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_personal_places_bindingsListOf_Locale_release_handle_nullable'));
final _heresdkPersonalPlacesBindingslistofLocaleGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_personal_places_bindingsListOf_Locale_get_value_nullable'));

Pointer<Void> heresdkPersonalPlacesBindingslistofLocaleToFfiNullable(List<Locale>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkPersonalPlacesBindingslistofLocaleToFfi(value);
  final result = _heresdkPersonalPlacesBindingslistofLocaleCreateHandleNullable(_handle);
  heresdkPersonalPlacesBindingslistofLocaleReleaseFfiHandle(_handle);
  return result;
}

List<Locale>? heresdkPersonalPlacesBindingslistofLocaleFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkPersonalPlacesBindingslistofLocaleGetValueNullable(handle);
  final result = heresdkPersonalPlacesBindingslistofLocaleFromFfi(_handle);
  heresdkPersonalPlacesBindingslistofLocaleReleaseFfiHandle(_handle);
  return result;
}

void heresdkPersonalPlacesBindingslistofLocaleReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkPersonalPlacesBindingslistofLocaleReleaseHandleNullable(handle);

final _heresdkPersonalPlacesBindingslistofStringCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_personal_places_bindingsListOf_String_create_handle'));
final _heresdkPersonalPlacesBindingslistofStringReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_personal_places_bindingsListOf_String_release_handle'));
final _heresdkPersonalPlacesBindingslistofStringInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_personal_places_bindingsListOf_String_insert'));
final _heresdkPersonalPlacesBindingslistofStringIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_personal_places_bindingsListOf_String_iterator'));
final _heresdkPersonalPlacesBindingslistofStringIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_personal_places_bindingsListOf_String_iterator_release_handle'));
final _heresdkPersonalPlacesBindingslistofStringIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_personal_places_bindingsListOf_String_iterator_is_valid'));
final _heresdkPersonalPlacesBindingslistofStringIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_personal_places_bindingsListOf_String_iterator_increment'));
final _heresdkPersonalPlacesBindingslistofStringIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_personal_places_bindingsListOf_String_iterator_get'));

Pointer<Void> heresdkPersonalPlacesBindingslistofStringToFfi(List<String> value) {
  final _result = _heresdkPersonalPlacesBindingslistofStringCreateHandle();
  for (final element in value) {
    final _elementHandle = stringToFfi(element);
    _heresdkPersonalPlacesBindingslistofStringInsert(_result, _elementHandle);
    stringReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<String> heresdkPersonalPlacesBindingslistofStringFromFfi(Pointer<Void> handle) {
  final result = List<String>.empty(growable: true);
  final _iteratorHandle = _heresdkPersonalPlacesBindingslistofStringIterator(handle);
  while (_heresdkPersonalPlacesBindingslistofStringIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkPersonalPlacesBindingslistofStringIteratorGet(_iteratorHandle);
    try {
      result.add(stringFromFfi(_elementHandle));
    } finally {
      stringReleaseFfiHandle(_elementHandle);
    }
    _heresdkPersonalPlacesBindingslistofStringIteratorIncrement(_iteratorHandle);
  }
  _heresdkPersonalPlacesBindingslistofStringIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkPersonalPlacesBindingslistofStringReleaseFfiHandle(Pointer<Void> handle) => _heresdkPersonalPlacesBindingslistofStringReleaseHandle(handle);

final _heresdkPersonalPlacesBindingslistofStringCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_personal_places_bindingsListOf_String_create_handle_nullable'));
final _heresdkPersonalPlacesBindingslistofStringReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_personal_places_bindingsListOf_String_release_handle_nullable'));
final _heresdkPersonalPlacesBindingslistofStringGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_personal_places_bindingsListOf_String_get_value_nullable'));

Pointer<Void> heresdkPersonalPlacesBindingslistofStringToFfiNullable(List<String>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkPersonalPlacesBindingslistofStringToFfi(value);
  final result = _heresdkPersonalPlacesBindingslistofStringCreateHandleNullable(_handle);
  heresdkPersonalPlacesBindingslistofStringReleaseFfiHandle(_handle);
  return result;
}

List<String>? heresdkPersonalPlacesBindingslistofStringFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkPersonalPlacesBindingslistofStringGetValueNullable(handle);
  final result = heresdkPersonalPlacesBindingslistofStringFromFfi(_handle);
  heresdkPersonalPlacesBindingslistofStringReleaseFfiHandle(_handle);
  return result;
}

void heresdkPersonalPlacesBindingslistofStringReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkPersonalPlacesBindingslistofStringReleaseHandleNullable(handle);

final _heresdkPersonalPlacesBindingslistofSdkCoreCountrycodeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_personal_places_bindingsListOf_sdk_core_CountryCode_create_handle'));
final _heresdkPersonalPlacesBindingslistofSdkCoreCountrycodeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_personal_places_bindingsListOf_sdk_core_CountryCode_release_handle'));
final _heresdkPersonalPlacesBindingslistofSdkCoreCountrycodeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_personal_places_bindingsListOf_sdk_core_CountryCode_insert'));
final _heresdkPersonalPlacesBindingslistofSdkCoreCountrycodeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_personal_places_bindingsListOf_sdk_core_CountryCode_iterator'));
final _heresdkPersonalPlacesBindingslistofSdkCoreCountrycodeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_personal_places_bindingsListOf_sdk_core_CountryCode_iterator_release_handle'));
final _heresdkPersonalPlacesBindingslistofSdkCoreCountrycodeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_personal_places_bindingsListOf_sdk_core_CountryCode_iterator_is_valid'));
final _heresdkPersonalPlacesBindingslistofSdkCoreCountrycodeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_personal_places_bindingsListOf_sdk_core_CountryCode_iterator_increment'));
final _heresdkPersonalPlacesBindingslistofSdkCoreCountrycodeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_personal_places_bindingsListOf_sdk_core_CountryCode_iterator_get'));

Pointer<Void> heresdkPersonalPlacesBindingslistofSdkCoreCountrycodeToFfi(List<CountryCode> value) {
  final _result = _heresdkPersonalPlacesBindingslistofSdkCoreCountrycodeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreCountrycodeToFfi(element);
    _heresdkPersonalPlacesBindingslistofSdkCoreCountrycodeInsert(_result, _elementHandle);
    sdkCoreCountrycodeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<CountryCode> heresdkPersonalPlacesBindingslistofSdkCoreCountrycodeFromFfi(Pointer<Void> handle) {
  final result = List<CountryCode>.empty(growable: true);
  final _iteratorHandle = _heresdkPersonalPlacesBindingslistofSdkCoreCountrycodeIterator(handle);
  while (_heresdkPersonalPlacesBindingslistofSdkCoreCountrycodeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkPersonalPlacesBindingslistofSdkCoreCountrycodeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreCountrycodeFromFfi(_elementHandle));
    } finally {
      sdkCoreCountrycodeReleaseFfiHandle(_elementHandle);
    }
    _heresdkPersonalPlacesBindingslistofSdkCoreCountrycodeIteratorIncrement(_iteratorHandle);
  }
  _heresdkPersonalPlacesBindingslistofSdkCoreCountrycodeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkPersonalPlacesBindingslistofSdkCoreCountrycodeReleaseFfiHandle(Pointer<Void> handle) => _heresdkPersonalPlacesBindingslistofSdkCoreCountrycodeReleaseHandle(handle);

final _heresdkPersonalPlacesBindingslistofSdkCoreCountrycodeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_personal_places_bindingsListOf_sdk_core_CountryCode_create_handle_nullable'));
final _heresdkPersonalPlacesBindingslistofSdkCoreCountrycodeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_personal_places_bindingsListOf_sdk_core_CountryCode_release_handle_nullable'));
final _heresdkPersonalPlacesBindingslistofSdkCoreCountrycodeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_personal_places_bindingsListOf_sdk_core_CountryCode_get_value_nullable'));

Pointer<Void> heresdkPersonalPlacesBindingslistofSdkCoreCountrycodeToFfiNullable(List<CountryCode>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkPersonalPlacesBindingslistofSdkCoreCountrycodeToFfi(value);
  final result = _heresdkPersonalPlacesBindingslistofSdkCoreCountrycodeCreateHandleNullable(_handle);
  heresdkPersonalPlacesBindingslistofSdkCoreCountrycodeReleaseFfiHandle(_handle);
  return result;
}

List<CountryCode>? heresdkPersonalPlacesBindingslistofSdkCoreCountrycodeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkPersonalPlacesBindingslistofSdkCoreCountrycodeGetValueNullable(handle);
  final result = heresdkPersonalPlacesBindingslistofSdkCoreCountrycodeFromFfi(_handle);
  heresdkPersonalPlacesBindingslistofSdkCoreCountrycodeReleaseFfiHandle(_handle);
  return result;
}

void heresdkPersonalPlacesBindingslistofSdkCoreCountrycodeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkPersonalPlacesBindingslistofSdkCoreCountrycodeReleaseHandleNullable(handle);

final _heresdkPersonalPlacesBindingslistofSdkCoreExternalidCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_personal_places_bindingsListOf_sdk_core_ExternalID_create_handle'));
final _heresdkPersonalPlacesBindingslistofSdkCoreExternalidReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_personal_places_bindingsListOf_sdk_core_ExternalID_release_handle'));
final _heresdkPersonalPlacesBindingslistofSdkCoreExternalidInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_personal_places_bindingsListOf_sdk_core_ExternalID_insert'));
final _heresdkPersonalPlacesBindingslistofSdkCoreExternalidIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_personal_places_bindingsListOf_sdk_core_ExternalID_iterator'));
final _heresdkPersonalPlacesBindingslistofSdkCoreExternalidIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_personal_places_bindingsListOf_sdk_core_ExternalID_iterator_release_handle'));
final _heresdkPersonalPlacesBindingslistofSdkCoreExternalidIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_personal_places_bindingsListOf_sdk_core_ExternalID_iterator_is_valid'));
final _heresdkPersonalPlacesBindingslistofSdkCoreExternalidIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_personal_places_bindingsListOf_sdk_core_ExternalID_iterator_increment'));
final _heresdkPersonalPlacesBindingslistofSdkCoreExternalidIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_personal_places_bindingsListOf_sdk_core_ExternalID_iterator_get'));

Pointer<Void> heresdkPersonalPlacesBindingslistofSdkCoreExternalidToFfi(List<ExternalID> value) {
  final _result = _heresdkPersonalPlacesBindingslistofSdkCoreExternalidCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreExternalidToFfi(element);
    _heresdkPersonalPlacesBindingslistofSdkCoreExternalidInsert(_result, _elementHandle);
    sdkCoreExternalidReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<ExternalID> heresdkPersonalPlacesBindingslistofSdkCoreExternalidFromFfi(Pointer<Void> handle) {
  final result = List<ExternalID>.empty(growable: true);
  final _iteratorHandle = _heresdkPersonalPlacesBindingslistofSdkCoreExternalidIterator(handle);
  while (_heresdkPersonalPlacesBindingslistofSdkCoreExternalidIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkPersonalPlacesBindingslistofSdkCoreExternalidIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreExternalidFromFfi(_elementHandle));
    } finally {
      sdkCoreExternalidReleaseFfiHandle(_elementHandle);
    }
    _heresdkPersonalPlacesBindingslistofSdkCoreExternalidIteratorIncrement(_iteratorHandle);
  }
  _heresdkPersonalPlacesBindingslistofSdkCoreExternalidIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkPersonalPlacesBindingslistofSdkCoreExternalidReleaseFfiHandle(Pointer<Void> handle) => _heresdkPersonalPlacesBindingslistofSdkCoreExternalidReleaseHandle(handle);

final _heresdkPersonalPlacesBindingslistofSdkCoreExternalidCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_personal_places_bindingsListOf_sdk_core_ExternalID_create_handle_nullable'));
final _heresdkPersonalPlacesBindingslistofSdkCoreExternalidReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_personal_places_bindingsListOf_sdk_core_ExternalID_release_handle_nullable'));
final _heresdkPersonalPlacesBindingslistofSdkCoreExternalidGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_personal_places_bindingsListOf_sdk_core_ExternalID_get_value_nullable'));

Pointer<Void> heresdkPersonalPlacesBindingslistofSdkCoreExternalidToFfiNullable(List<ExternalID>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkPersonalPlacesBindingslistofSdkCoreExternalidToFfi(value);
  final result = _heresdkPersonalPlacesBindingslistofSdkCoreExternalidCreateHandleNullable(_handle);
  heresdkPersonalPlacesBindingslistofSdkCoreExternalidReleaseFfiHandle(_handle);
  return result;
}

List<ExternalID>? heresdkPersonalPlacesBindingslistofSdkCoreExternalidFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkPersonalPlacesBindingslistofSdkCoreExternalidGetValueNullable(handle);
  final result = heresdkPersonalPlacesBindingslistofSdkCoreExternalidFromFfi(_handle);
  heresdkPersonalPlacesBindingslistofSdkCoreExternalidReleaseFfiHandle(_handle);
  return result;
}

void heresdkPersonalPlacesBindingslistofSdkCoreExternalidReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkPersonalPlacesBindingslistofSdkCoreExternalidReleaseHandleNullable(handle);

final _heresdkPersonalPlacesBindingslistofSdkCoreGeocoordinatesCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_personal_places_bindingsListOf_sdk_core_GeoCoordinates_create_handle'));
final _heresdkPersonalPlacesBindingslistofSdkCoreGeocoordinatesReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_personal_places_bindingsListOf_sdk_core_GeoCoordinates_release_handle'));
final _heresdkPersonalPlacesBindingslistofSdkCoreGeocoordinatesInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_personal_places_bindingsListOf_sdk_core_GeoCoordinates_insert'));
final _heresdkPersonalPlacesBindingslistofSdkCoreGeocoordinatesIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_personal_places_bindingsListOf_sdk_core_GeoCoordinates_iterator'));
final _heresdkPersonalPlacesBindingslistofSdkCoreGeocoordinatesIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_personal_places_bindingsListOf_sdk_core_GeoCoordinates_iterator_release_handle'));
final _heresdkPersonalPlacesBindingslistofSdkCoreGeocoordinatesIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_personal_places_bindingsListOf_sdk_core_GeoCoordinates_iterator_is_valid'));
final _heresdkPersonalPlacesBindingslistofSdkCoreGeocoordinatesIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_personal_places_bindingsListOf_sdk_core_GeoCoordinates_iterator_increment'));
final _heresdkPersonalPlacesBindingslistofSdkCoreGeocoordinatesIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_personal_places_bindingsListOf_sdk_core_GeoCoordinates_iterator_get'));

Pointer<Void> heresdkPersonalPlacesBindingslistofSdkCoreGeocoordinatesToFfi(List<GeoCoordinates> value) {
  final _result = _heresdkPersonalPlacesBindingslistofSdkCoreGeocoordinatesCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreGeocoordinatesToFfi(element);
    _heresdkPersonalPlacesBindingslistofSdkCoreGeocoordinatesInsert(_result, _elementHandle);
    sdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoCoordinates> heresdkPersonalPlacesBindingslistofSdkCoreGeocoordinatesFromFfi(Pointer<Void> handle) {
  final result = List<GeoCoordinates>.empty(growable: true);
  final _iteratorHandle = _heresdkPersonalPlacesBindingslistofSdkCoreGeocoordinatesIterator(handle);
  while (_heresdkPersonalPlacesBindingslistofSdkCoreGeocoordinatesIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkPersonalPlacesBindingslistofSdkCoreGeocoordinatesIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreGeocoordinatesFromFfi(_elementHandle));
    } finally {
      sdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
    }
    _heresdkPersonalPlacesBindingslistofSdkCoreGeocoordinatesIteratorIncrement(_iteratorHandle);
  }
  _heresdkPersonalPlacesBindingslistofSdkCoreGeocoordinatesIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkPersonalPlacesBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(Pointer<Void> handle) => _heresdkPersonalPlacesBindingslistofSdkCoreGeocoordinatesReleaseHandle(handle);

final _heresdkPersonalPlacesBindingslistofSdkCoreGeocoordinatesCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_personal_places_bindingsListOf_sdk_core_GeoCoordinates_create_handle_nullable'));
final _heresdkPersonalPlacesBindingslistofSdkCoreGeocoordinatesReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_personal_places_bindingsListOf_sdk_core_GeoCoordinates_release_handle_nullable'));
final _heresdkPersonalPlacesBindingslistofSdkCoreGeocoordinatesGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_personal_places_bindingsListOf_sdk_core_GeoCoordinates_get_value_nullable'));

Pointer<Void> heresdkPersonalPlacesBindingslistofSdkCoreGeocoordinatesToFfiNullable(List<GeoCoordinates>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkPersonalPlacesBindingslistofSdkCoreGeocoordinatesToFfi(value);
  final result = _heresdkPersonalPlacesBindingslistofSdkCoreGeocoordinatesCreateHandleNullable(_handle);
  heresdkPersonalPlacesBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

List<GeoCoordinates>? heresdkPersonalPlacesBindingslistofSdkCoreGeocoordinatesFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkPersonalPlacesBindingslistofSdkCoreGeocoordinatesGetValueNullable(handle);
  final result = heresdkPersonalPlacesBindingslistofSdkCoreGeocoordinatesFromFfi(_handle);
  heresdkPersonalPlacesBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

void heresdkPersonalPlacesBindingslistofSdkCoreGeocoordinatesReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkPersonalPlacesBindingslistofSdkCoreGeocoordinatesReleaseHandleNullable(handle);

final _heresdkPersonalPlacesBindingslistofSdkCoreLocalizedtextCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_personal_places_bindingsListOf_sdk_core_LocalizedText_create_handle'));
final _heresdkPersonalPlacesBindingslistofSdkCoreLocalizedtextReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_personal_places_bindingsListOf_sdk_core_LocalizedText_release_handle'));
final _heresdkPersonalPlacesBindingslistofSdkCoreLocalizedtextInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_personal_places_bindingsListOf_sdk_core_LocalizedText_insert'));
final _heresdkPersonalPlacesBindingslistofSdkCoreLocalizedtextIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_personal_places_bindingsListOf_sdk_core_LocalizedText_iterator'));
final _heresdkPersonalPlacesBindingslistofSdkCoreLocalizedtextIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_personal_places_bindingsListOf_sdk_core_LocalizedText_iterator_release_handle'));
final _heresdkPersonalPlacesBindingslistofSdkCoreLocalizedtextIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_personal_places_bindingsListOf_sdk_core_LocalizedText_iterator_is_valid'));
final _heresdkPersonalPlacesBindingslistofSdkCoreLocalizedtextIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_personal_places_bindingsListOf_sdk_core_LocalizedText_iterator_increment'));
final _heresdkPersonalPlacesBindingslistofSdkCoreLocalizedtextIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_personal_places_bindingsListOf_sdk_core_LocalizedText_iterator_get'));

Pointer<Void> heresdkPersonalPlacesBindingslistofSdkCoreLocalizedtextToFfi(List<LocalizedText> value) {
  final _result = _heresdkPersonalPlacesBindingslistofSdkCoreLocalizedtextCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreLocalizedtextToFfi(element);
    _heresdkPersonalPlacesBindingslistofSdkCoreLocalizedtextInsert(_result, _elementHandle);
    sdkCoreLocalizedtextReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<LocalizedText> heresdkPersonalPlacesBindingslistofSdkCoreLocalizedtextFromFfi(Pointer<Void> handle) {
  final result = List<LocalizedText>.empty(growable: true);
  final _iteratorHandle = _heresdkPersonalPlacesBindingslistofSdkCoreLocalizedtextIterator(handle);
  while (_heresdkPersonalPlacesBindingslistofSdkCoreLocalizedtextIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkPersonalPlacesBindingslistofSdkCoreLocalizedtextIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreLocalizedtextFromFfi(_elementHandle));
    } finally {
      sdkCoreLocalizedtextReleaseFfiHandle(_elementHandle);
    }
    _heresdkPersonalPlacesBindingslistofSdkCoreLocalizedtextIteratorIncrement(_iteratorHandle);
  }
  _heresdkPersonalPlacesBindingslistofSdkCoreLocalizedtextIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkPersonalPlacesBindingslistofSdkCoreLocalizedtextReleaseFfiHandle(Pointer<Void> handle) => _heresdkPersonalPlacesBindingslistofSdkCoreLocalizedtextReleaseHandle(handle);

final _heresdkPersonalPlacesBindingslistofSdkCoreLocalizedtextCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_personal_places_bindingsListOf_sdk_core_LocalizedText_create_handle_nullable'));
final _heresdkPersonalPlacesBindingslistofSdkCoreLocalizedtextReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_personal_places_bindingsListOf_sdk_core_LocalizedText_release_handle_nullable'));
final _heresdkPersonalPlacesBindingslistofSdkCoreLocalizedtextGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_personal_places_bindingsListOf_sdk_core_LocalizedText_get_value_nullable'));

Pointer<Void> heresdkPersonalPlacesBindingslistofSdkCoreLocalizedtextToFfiNullable(List<LocalizedText>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkPersonalPlacesBindingslistofSdkCoreLocalizedtextToFfi(value);
  final result = _heresdkPersonalPlacesBindingslistofSdkCoreLocalizedtextCreateHandleNullable(_handle);
  heresdkPersonalPlacesBindingslistofSdkCoreLocalizedtextReleaseFfiHandle(_handle);
  return result;
}

List<LocalizedText>? heresdkPersonalPlacesBindingslistofSdkCoreLocalizedtextFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkPersonalPlacesBindingslistofSdkCoreLocalizedtextGetValueNullable(handle);
  final result = heresdkPersonalPlacesBindingslistofSdkCoreLocalizedtextFromFfi(_handle);
  heresdkPersonalPlacesBindingslistofSdkCoreLocalizedtextReleaseFfiHandle(_handle);
  return result;
}

void heresdkPersonalPlacesBindingslistofSdkCoreLocalizedtextReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkPersonalPlacesBindingslistofSdkCoreLocalizedtextReleaseHandleNullable(handle);

final _heresdkPersonalPlacesBindingslistofSdkCoreEngineLayerconfigurationFeatureCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_personal_places_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_create_handle'));
final _heresdkPersonalPlacesBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_personal_places_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_release_handle'));
final _heresdkPersonalPlacesBindingslistofSdkCoreEngineLayerconfigurationFeatureInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_personal_places_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_insert'));
final _heresdkPersonalPlacesBindingslistofSdkCoreEngineLayerconfigurationFeatureIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_personal_places_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator'));
final _heresdkPersonalPlacesBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_personal_places_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator_release_handle'));
final _heresdkPersonalPlacesBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_personal_places_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator_is_valid'));
final _heresdkPersonalPlacesBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_personal_places_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator_increment'));
final _heresdkPersonalPlacesBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_personal_places_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator_get'));

Pointer<Void> heresdkPersonalPlacesBindingslistofSdkCoreEngineLayerconfigurationFeatureToFfi(List<LayerConfigurationFeature> value) {
  final _result = _heresdkPersonalPlacesBindingslistofSdkCoreEngineLayerconfigurationFeatureCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreEngineLayerconfigurationFeatureToFfi(element);
    _heresdkPersonalPlacesBindingslistofSdkCoreEngineLayerconfigurationFeatureInsert(_result, _elementHandle);
    sdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<LayerConfigurationFeature> heresdkPersonalPlacesBindingslistofSdkCoreEngineLayerconfigurationFeatureFromFfi(Pointer<Void> handle) {
  final result = List<LayerConfigurationFeature>.empty(growable: true);
  final _iteratorHandle = _heresdkPersonalPlacesBindingslistofSdkCoreEngineLayerconfigurationFeatureIterator(handle);
  while (_heresdkPersonalPlacesBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkPersonalPlacesBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreEngineLayerconfigurationFeatureFromFfi(_elementHandle));
    } finally {
      sdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(_elementHandle);
    }
    _heresdkPersonalPlacesBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorIncrement(_iteratorHandle);
  }
  _heresdkPersonalPlacesBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkPersonalPlacesBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(Pointer<Void> handle) => _heresdkPersonalPlacesBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseHandle(handle);

final _heresdkPersonalPlacesBindingslistofSdkCoreEngineLayerconfigurationFeatureCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_personal_places_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_create_handle_nullable'));
final _heresdkPersonalPlacesBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_personal_places_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_release_handle_nullable'));
final _heresdkPersonalPlacesBindingslistofSdkCoreEngineLayerconfigurationFeatureGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_personal_places_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_get_value_nullable'));

Pointer<Void> heresdkPersonalPlacesBindingslistofSdkCoreEngineLayerconfigurationFeatureToFfiNullable(List<LayerConfigurationFeature>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkPersonalPlacesBindingslistofSdkCoreEngineLayerconfigurationFeatureToFfi(value);
  final result = _heresdkPersonalPlacesBindingslistofSdkCoreEngineLayerconfigurationFeatureCreateHandleNullable(_handle);
  heresdkPersonalPlacesBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(_handle);
  return result;
}

List<LayerConfigurationFeature>? heresdkPersonalPlacesBindingslistofSdkCoreEngineLayerconfigurationFeatureFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkPersonalPlacesBindingslistofSdkCoreEngineLayerconfigurationFeatureGetValueNullable(handle);
  final result = heresdkPersonalPlacesBindingslistofSdkCoreEngineLayerconfigurationFeatureFromFfi(_handle);
  heresdkPersonalPlacesBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(_handle);
  return result;
}

void heresdkPersonalPlacesBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkPersonalPlacesBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseHandleNullable(handle);

final _heresdkPersonalPlacesBindingslistofSdkSearchContactCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_Contact_create_handle'));
final _heresdkPersonalPlacesBindingslistofSdkSearchContactReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_Contact_release_handle'));
final _heresdkPersonalPlacesBindingslistofSdkSearchContactInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_Contact_insert'));
final _heresdkPersonalPlacesBindingslistofSdkSearchContactIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_Contact_iterator'));
final _heresdkPersonalPlacesBindingslistofSdkSearchContactIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_Contact_iterator_release_handle'));
final _heresdkPersonalPlacesBindingslistofSdkSearchContactIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_Contact_iterator_is_valid'));
final _heresdkPersonalPlacesBindingslistofSdkSearchContactIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_Contact_iterator_increment'));
final _heresdkPersonalPlacesBindingslistofSdkSearchContactIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_Contact_iterator_get'));

Pointer<Void> heresdkPersonalPlacesBindingslistofSdkSearchContactToFfi(List<Contact> value) {
  final _result = _heresdkPersonalPlacesBindingslistofSdkSearchContactCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchContactToFfi(element);
    _heresdkPersonalPlacesBindingslistofSdkSearchContactInsert(_result, _elementHandle);
    sdkSearchContactReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Contact> heresdkPersonalPlacesBindingslistofSdkSearchContactFromFfi(Pointer<Void> handle) {
  final result = List<Contact>.empty(growable: true);
  final _iteratorHandle = _heresdkPersonalPlacesBindingslistofSdkSearchContactIterator(handle);
  while (_heresdkPersonalPlacesBindingslistofSdkSearchContactIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkPersonalPlacesBindingslistofSdkSearchContactIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchContactFromFfi(_elementHandle));
    } finally {
      sdkSearchContactReleaseFfiHandle(_elementHandle);
    }
    _heresdkPersonalPlacesBindingslistofSdkSearchContactIteratorIncrement(_iteratorHandle);
  }
  _heresdkPersonalPlacesBindingslistofSdkSearchContactIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkPersonalPlacesBindingslistofSdkSearchContactReleaseFfiHandle(Pointer<Void> handle) => _heresdkPersonalPlacesBindingslistofSdkSearchContactReleaseHandle(handle);

final _heresdkPersonalPlacesBindingslistofSdkSearchContactCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_Contact_create_handle_nullable'));
final _heresdkPersonalPlacesBindingslistofSdkSearchContactReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_Contact_release_handle_nullable'));
final _heresdkPersonalPlacesBindingslistofSdkSearchContactGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_Contact_get_value_nullable'));

Pointer<Void> heresdkPersonalPlacesBindingslistofSdkSearchContactToFfiNullable(List<Contact>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkPersonalPlacesBindingslistofSdkSearchContactToFfi(value);
  final result = _heresdkPersonalPlacesBindingslistofSdkSearchContactCreateHandleNullable(_handle);
  heresdkPersonalPlacesBindingslistofSdkSearchContactReleaseFfiHandle(_handle);
  return result;
}

List<Contact>? heresdkPersonalPlacesBindingslistofSdkSearchContactFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkPersonalPlacesBindingslistofSdkSearchContactGetValueNullable(handle);
  final result = heresdkPersonalPlacesBindingslistofSdkSearchContactFromFfi(_handle);
  heresdkPersonalPlacesBindingslistofSdkSearchContactReleaseFfiHandle(_handle);
  return result;
}

void heresdkPersonalPlacesBindingslistofSdkSearchContactReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkPersonalPlacesBindingslistofSdkSearchContactReleaseHandleNullable(handle);

final _heresdkPersonalPlacesBindingslistofSdkSearchEvchargingstationCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_EVChargingStation_create_handle'));
final _heresdkPersonalPlacesBindingslistofSdkSearchEvchargingstationReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_EVChargingStation_release_handle'));
final _heresdkPersonalPlacesBindingslistofSdkSearchEvchargingstationInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_EVChargingStation_insert'));
final _heresdkPersonalPlacesBindingslistofSdkSearchEvchargingstationIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_EVChargingStation_iterator'));
final _heresdkPersonalPlacesBindingslistofSdkSearchEvchargingstationIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_EVChargingStation_iterator_release_handle'));
final _heresdkPersonalPlacesBindingslistofSdkSearchEvchargingstationIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_EVChargingStation_iterator_is_valid'));
final _heresdkPersonalPlacesBindingslistofSdkSearchEvchargingstationIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_EVChargingStation_iterator_increment'));
final _heresdkPersonalPlacesBindingslistofSdkSearchEvchargingstationIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_EVChargingStation_iterator_get'));

Pointer<Void> heresdkPersonalPlacesBindingslistofSdkSearchEvchargingstationToFfi(List<EVChargingStation> value) {
  final _result = _heresdkPersonalPlacesBindingslistofSdkSearchEvchargingstationCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchEvchargingstationToFfi(element);
    _heresdkPersonalPlacesBindingslistofSdkSearchEvchargingstationInsert(_result, _elementHandle);
    sdkSearchEvchargingstationReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<EVChargingStation> heresdkPersonalPlacesBindingslistofSdkSearchEvchargingstationFromFfi(Pointer<Void> handle) {
  final result = List<EVChargingStation>.empty(growable: true);
  final _iteratorHandle = _heresdkPersonalPlacesBindingslistofSdkSearchEvchargingstationIterator(handle);
  while (_heresdkPersonalPlacesBindingslistofSdkSearchEvchargingstationIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkPersonalPlacesBindingslistofSdkSearchEvchargingstationIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchEvchargingstationFromFfi(_elementHandle));
    } finally {
      sdkSearchEvchargingstationReleaseFfiHandle(_elementHandle);
    }
    _heresdkPersonalPlacesBindingslistofSdkSearchEvchargingstationIteratorIncrement(_iteratorHandle);
  }
  _heresdkPersonalPlacesBindingslistofSdkSearchEvchargingstationIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkPersonalPlacesBindingslistofSdkSearchEvchargingstationReleaseFfiHandle(Pointer<Void> handle) => _heresdkPersonalPlacesBindingslistofSdkSearchEvchargingstationReleaseHandle(handle);

final _heresdkPersonalPlacesBindingslistofSdkSearchEvchargingstationCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_EVChargingStation_create_handle_nullable'));
final _heresdkPersonalPlacesBindingslistofSdkSearchEvchargingstationReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_EVChargingStation_release_handle_nullable'));
final _heresdkPersonalPlacesBindingslistofSdkSearchEvchargingstationGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_EVChargingStation_get_value_nullable'));

Pointer<Void> heresdkPersonalPlacesBindingslistofSdkSearchEvchargingstationToFfiNullable(List<EVChargingStation>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkPersonalPlacesBindingslistofSdkSearchEvchargingstationToFfi(value);
  final result = _heresdkPersonalPlacesBindingslistofSdkSearchEvchargingstationCreateHandleNullable(_handle);
  heresdkPersonalPlacesBindingslistofSdkSearchEvchargingstationReleaseFfiHandle(_handle);
  return result;
}

List<EVChargingStation>? heresdkPersonalPlacesBindingslistofSdkSearchEvchargingstationFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkPersonalPlacesBindingslistofSdkSearchEvchargingstationGetValueNullable(handle);
  final result = heresdkPersonalPlacesBindingslistofSdkSearchEvchargingstationFromFfi(_handle);
  heresdkPersonalPlacesBindingslistofSdkSearchEvchargingstationReleaseFfiHandle(_handle);
  return result;
}

void heresdkPersonalPlacesBindingslistofSdkSearchEvchargingstationReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkPersonalPlacesBindingslistofSdkSearchEvchargingstationReleaseHandleNullable(handle);

final _heresdkPersonalPlacesBindingslistofSdkSearchEmailaddressCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_EmailAddress_create_handle'));
final _heresdkPersonalPlacesBindingslistofSdkSearchEmailaddressReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_EmailAddress_release_handle'));
final _heresdkPersonalPlacesBindingslistofSdkSearchEmailaddressInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_EmailAddress_insert'));
final _heresdkPersonalPlacesBindingslistofSdkSearchEmailaddressIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_EmailAddress_iterator'));
final _heresdkPersonalPlacesBindingslistofSdkSearchEmailaddressIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_EmailAddress_iterator_release_handle'));
final _heresdkPersonalPlacesBindingslistofSdkSearchEmailaddressIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_EmailAddress_iterator_is_valid'));
final _heresdkPersonalPlacesBindingslistofSdkSearchEmailaddressIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_EmailAddress_iterator_increment'));
final _heresdkPersonalPlacesBindingslistofSdkSearchEmailaddressIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_EmailAddress_iterator_get'));

Pointer<Void> heresdkPersonalPlacesBindingslistofSdkSearchEmailaddressToFfi(List<EmailAddress> value) {
  final _result = _heresdkPersonalPlacesBindingslistofSdkSearchEmailaddressCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchEmailaddressToFfi(element);
    _heresdkPersonalPlacesBindingslistofSdkSearchEmailaddressInsert(_result, _elementHandle);
    sdkSearchEmailaddressReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<EmailAddress> heresdkPersonalPlacesBindingslistofSdkSearchEmailaddressFromFfi(Pointer<Void> handle) {
  final result = List<EmailAddress>.empty(growable: true);
  final _iteratorHandle = _heresdkPersonalPlacesBindingslistofSdkSearchEmailaddressIterator(handle);
  while (_heresdkPersonalPlacesBindingslistofSdkSearchEmailaddressIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkPersonalPlacesBindingslistofSdkSearchEmailaddressIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchEmailaddressFromFfi(_elementHandle));
    } finally {
      sdkSearchEmailaddressReleaseFfiHandle(_elementHandle);
    }
    _heresdkPersonalPlacesBindingslistofSdkSearchEmailaddressIteratorIncrement(_iteratorHandle);
  }
  _heresdkPersonalPlacesBindingslistofSdkSearchEmailaddressIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkPersonalPlacesBindingslistofSdkSearchEmailaddressReleaseFfiHandle(Pointer<Void> handle) => _heresdkPersonalPlacesBindingslistofSdkSearchEmailaddressReleaseHandle(handle);

final _heresdkPersonalPlacesBindingslistofSdkSearchEmailaddressCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_EmailAddress_create_handle_nullable'));
final _heresdkPersonalPlacesBindingslistofSdkSearchEmailaddressReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_EmailAddress_release_handle_nullable'));
final _heresdkPersonalPlacesBindingslistofSdkSearchEmailaddressGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_EmailAddress_get_value_nullable'));

Pointer<Void> heresdkPersonalPlacesBindingslistofSdkSearchEmailaddressToFfiNullable(List<EmailAddress>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkPersonalPlacesBindingslistofSdkSearchEmailaddressToFfi(value);
  final result = _heresdkPersonalPlacesBindingslistofSdkSearchEmailaddressCreateHandleNullable(_handle);
  heresdkPersonalPlacesBindingslistofSdkSearchEmailaddressReleaseFfiHandle(_handle);
  return result;
}

List<EmailAddress>? heresdkPersonalPlacesBindingslistofSdkSearchEmailaddressFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkPersonalPlacesBindingslistofSdkSearchEmailaddressGetValueNullable(handle);
  final result = heresdkPersonalPlacesBindingslistofSdkSearchEmailaddressFromFfi(_handle);
  heresdkPersonalPlacesBindingslistofSdkSearchEmailaddressReleaseFfiHandle(_handle);
  return result;
}

void heresdkPersonalPlacesBindingslistofSdkSearchEmailaddressReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkPersonalPlacesBindingslistofSdkSearchEmailaddressReleaseHandleNullable(handle);

final _heresdkPersonalPlacesBindingslistofSdkSearchEvconnectorexperimentalCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_EvConnectorExperimental_create_handle'));
final _heresdkPersonalPlacesBindingslistofSdkSearchEvconnectorexperimentalReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_EvConnectorExperimental_release_handle'));
final _heresdkPersonalPlacesBindingslistofSdkSearchEvconnectorexperimentalInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_EvConnectorExperimental_insert'));
final _heresdkPersonalPlacesBindingslistofSdkSearchEvconnectorexperimentalIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_EvConnectorExperimental_iterator'));
final _heresdkPersonalPlacesBindingslistofSdkSearchEvconnectorexperimentalIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_EvConnectorExperimental_iterator_release_handle'));
final _heresdkPersonalPlacesBindingslistofSdkSearchEvconnectorexperimentalIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_EvConnectorExperimental_iterator_is_valid'));
final _heresdkPersonalPlacesBindingslistofSdkSearchEvconnectorexperimentalIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_EvConnectorExperimental_iterator_increment'));
final _heresdkPersonalPlacesBindingslistofSdkSearchEvconnectorexperimentalIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_EvConnectorExperimental_iterator_get'));

Pointer<Void> heresdkPersonalPlacesBindingslistofSdkSearchEvconnectorexperimentalToFfi(List<EvConnectorExperimental> value) {
  final _result = _heresdkPersonalPlacesBindingslistofSdkSearchEvconnectorexperimentalCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchEvconnectorexperimentalToFfi(element);
    _heresdkPersonalPlacesBindingslistofSdkSearchEvconnectorexperimentalInsert(_result, _elementHandle);
    sdkSearchEvconnectorexperimentalReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<EvConnectorExperimental> heresdkPersonalPlacesBindingslistofSdkSearchEvconnectorexperimentalFromFfi(Pointer<Void> handle) {
  final result = List<EvConnectorExperimental>.empty(growable: true);
  final _iteratorHandle = _heresdkPersonalPlacesBindingslistofSdkSearchEvconnectorexperimentalIterator(handle);
  while (_heresdkPersonalPlacesBindingslistofSdkSearchEvconnectorexperimentalIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkPersonalPlacesBindingslistofSdkSearchEvconnectorexperimentalIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchEvconnectorexperimentalFromFfi(_elementHandle));
    } finally {
      sdkSearchEvconnectorexperimentalReleaseFfiHandle(_elementHandle);
    }
    _heresdkPersonalPlacesBindingslistofSdkSearchEvconnectorexperimentalIteratorIncrement(_iteratorHandle);
  }
  _heresdkPersonalPlacesBindingslistofSdkSearchEvconnectorexperimentalIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkPersonalPlacesBindingslistofSdkSearchEvconnectorexperimentalReleaseFfiHandle(Pointer<Void> handle) => _heresdkPersonalPlacesBindingslistofSdkSearchEvconnectorexperimentalReleaseHandle(handle);

final _heresdkPersonalPlacesBindingslistofSdkSearchEvconnectorexperimentalCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_EvConnectorExperimental_create_handle_nullable'));
final _heresdkPersonalPlacesBindingslistofSdkSearchEvconnectorexperimentalReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_EvConnectorExperimental_release_handle_nullable'));
final _heresdkPersonalPlacesBindingslistofSdkSearchEvconnectorexperimentalGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_EvConnectorExperimental_get_value_nullable'));

Pointer<Void> heresdkPersonalPlacesBindingslistofSdkSearchEvconnectorexperimentalToFfiNullable(List<EvConnectorExperimental>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkPersonalPlacesBindingslistofSdkSearchEvconnectorexperimentalToFfi(value);
  final result = _heresdkPersonalPlacesBindingslistofSdkSearchEvconnectorexperimentalCreateHandleNullable(_handle);
  heresdkPersonalPlacesBindingslistofSdkSearchEvconnectorexperimentalReleaseFfiHandle(_handle);
  return result;
}

List<EvConnectorExperimental>? heresdkPersonalPlacesBindingslistofSdkSearchEvconnectorexperimentalFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkPersonalPlacesBindingslistofSdkSearchEvconnectorexperimentalGetValueNullable(handle);
  final result = heresdkPersonalPlacesBindingslistofSdkSearchEvconnectorexperimentalFromFfi(_handle);
  heresdkPersonalPlacesBindingslistofSdkSearchEvconnectorexperimentalReleaseFfiHandle(_handle);
  return result;
}

void heresdkPersonalPlacesBindingslistofSdkSearchEvconnectorexperimentalReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkPersonalPlacesBindingslistofSdkSearchEvconnectorexperimentalReleaseHandleNullable(handle);

final _heresdkPersonalPlacesBindingslistofSdkSearchGeoplaceCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_GeoPlace_create_handle'));
final _heresdkPersonalPlacesBindingslistofSdkSearchGeoplaceReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_GeoPlace_release_handle'));
final _heresdkPersonalPlacesBindingslistofSdkSearchGeoplaceInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_GeoPlace_insert'));
final _heresdkPersonalPlacesBindingslistofSdkSearchGeoplaceIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_GeoPlace_iterator'));
final _heresdkPersonalPlacesBindingslistofSdkSearchGeoplaceIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_GeoPlace_iterator_release_handle'));
final _heresdkPersonalPlacesBindingslistofSdkSearchGeoplaceIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_GeoPlace_iterator_is_valid'));
final _heresdkPersonalPlacesBindingslistofSdkSearchGeoplaceIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_GeoPlace_iterator_increment'));
final _heresdkPersonalPlacesBindingslistofSdkSearchGeoplaceIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_GeoPlace_iterator_get'));

Pointer<Void> heresdkPersonalPlacesBindingslistofSdkSearchGeoplaceToFfi(List<GeoPlace> value) {
  final _result = _heresdkPersonalPlacesBindingslistofSdkSearchGeoplaceCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchGeoplaceToFfi(element);
    _heresdkPersonalPlacesBindingslistofSdkSearchGeoplaceInsert(_result, _elementHandle);
    sdkSearchGeoplaceReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoPlace> heresdkPersonalPlacesBindingslistofSdkSearchGeoplaceFromFfi(Pointer<Void> handle) {
  final result = List<GeoPlace>.empty(growable: true);
  final _iteratorHandle = _heresdkPersonalPlacesBindingslistofSdkSearchGeoplaceIterator(handle);
  while (_heresdkPersonalPlacesBindingslistofSdkSearchGeoplaceIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkPersonalPlacesBindingslistofSdkSearchGeoplaceIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchGeoplaceFromFfi(_elementHandle));
    } finally {
      sdkSearchGeoplaceReleaseFfiHandle(_elementHandle);
    }
    _heresdkPersonalPlacesBindingslistofSdkSearchGeoplaceIteratorIncrement(_iteratorHandle);
  }
  _heresdkPersonalPlacesBindingslistofSdkSearchGeoplaceIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkPersonalPlacesBindingslistofSdkSearchGeoplaceReleaseFfiHandle(Pointer<Void> handle) => _heresdkPersonalPlacesBindingslistofSdkSearchGeoplaceReleaseHandle(handle);

final _heresdkPersonalPlacesBindingslistofSdkSearchGeoplaceCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_GeoPlace_create_handle_nullable'));
final _heresdkPersonalPlacesBindingslistofSdkSearchGeoplaceReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_GeoPlace_release_handle_nullable'));
final _heresdkPersonalPlacesBindingslistofSdkSearchGeoplaceGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_GeoPlace_get_value_nullable'));

Pointer<Void> heresdkPersonalPlacesBindingslistofSdkSearchGeoplaceToFfiNullable(List<GeoPlace>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkPersonalPlacesBindingslistofSdkSearchGeoplaceToFfi(value);
  final result = _heresdkPersonalPlacesBindingslistofSdkSearchGeoplaceCreateHandleNullable(_handle);
  heresdkPersonalPlacesBindingslistofSdkSearchGeoplaceReleaseFfiHandle(_handle);
  return result;
}

List<GeoPlace>? heresdkPersonalPlacesBindingslistofSdkSearchGeoplaceFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkPersonalPlacesBindingslistofSdkSearchGeoplaceGetValueNullable(handle);
  final result = heresdkPersonalPlacesBindingslistofSdkSearchGeoplaceFromFfi(_handle);
  heresdkPersonalPlacesBindingslistofSdkSearchGeoplaceReleaseFfiHandle(_handle);
  return result;
}

void heresdkPersonalPlacesBindingslistofSdkSearchGeoplaceReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkPersonalPlacesBindingslistofSdkSearchGeoplaceReleaseHandleNullable(handle);

final _heresdkPersonalPlacesBindingslistofSdkSearchIndexrangeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_IndexRange_create_handle'));
final _heresdkPersonalPlacesBindingslistofSdkSearchIndexrangeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_IndexRange_release_handle'));
final _heresdkPersonalPlacesBindingslistofSdkSearchIndexrangeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_IndexRange_insert'));
final _heresdkPersonalPlacesBindingslistofSdkSearchIndexrangeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_IndexRange_iterator'));
final _heresdkPersonalPlacesBindingslistofSdkSearchIndexrangeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_IndexRange_iterator_release_handle'));
final _heresdkPersonalPlacesBindingslistofSdkSearchIndexrangeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_IndexRange_iterator_is_valid'));
final _heresdkPersonalPlacesBindingslistofSdkSearchIndexrangeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_IndexRange_iterator_increment'));
final _heresdkPersonalPlacesBindingslistofSdkSearchIndexrangeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_IndexRange_iterator_get'));

Pointer<Void> heresdkPersonalPlacesBindingslistofSdkSearchIndexrangeToFfi(List<IndexRange> value) {
  final _result = _heresdkPersonalPlacesBindingslistofSdkSearchIndexrangeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchIndexrangeToFfi(element);
    _heresdkPersonalPlacesBindingslistofSdkSearchIndexrangeInsert(_result, _elementHandle);
    sdkSearchIndexrangeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<IndexRange> heresdkPersonalPlacesBindingslistofSdkSearchIndexrangeFromFfi(Pointer<Void> handle) {
  final result = List<IndexRange>.empty(growable: true);
  final _iteratorHandle = _heresdkPersonalPlacesBindingslistofSdkSearchIndexrangeIterator(handle);
  while (_heresdkPersonalPlacesBindingslistofSdkSearchIndexrangeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkPersonalPlacesBindingslistofSdkSearchIndexrangeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchIndexrangeFromFfi(_elementHandle));
    } finally {
      sdkSearchIndexrangeReleaseFfiHandle(_elementHandle);
    }
    _heresdkPersonalPlacesBindingslistofSdkSearchIndexrangeIteratorIncrement(_iteratorHandle);
  }
  _heresdkPersonalPlacesBindingslistofSdkSearchIndexrangeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkPersonalPlacesBindingslistofSdkSearchIndexrangeReleaseFfiHandle(Pointer<Void> handle) => _heresdkPersonalPlacesBindingslistofSdkSearchIndexrangeReleaseHandle(handle);

final _heresdkPersonalPlacesBindingslistofSdkSearchIndexrangeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_IndexRange_create_handle_nullable'));
final _heresdkPersonalPlacesBindingslistofSdkSearchIndexrangeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_IndexRange_release_handle_nullable'));
final _heresdkPersonalPlacesBindingslistofSdkSearchIndexrangeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_IndexRange_get_value_nullable'));

Pointer<Void> heresdkPersonalPlacesBindingslistofSdkSearchIndexrangeToFfiNullable(List<IndexRange>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkPersonalPlacesBindingslistofSdkSearchIndexrangeToFfi(value);
  final result = _heresdkPersonalPlacesBindingslistofSdkSearchIndexrangeCreateHandleNullable(_handle);
  heresdkPersonalPlacesBindingslistofSdkSearchIndexrangeReleaseFfiHandle(_handle);
  return result;
}

List<IndexRange>? heresdkPersonalPlacesBindingslistofSdkSearchIndexrangeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkPersonalPlacesBindingslistofSdkSearchIndexrangeGetValueNullable(handle);
  final result = heresdkPersonalPlacesBindingslistofSdkSearchIndexrangeFromFfi(_handle);
  heresdkPersonalPlacesBindingslistofSdkSearchIndexrangeReleaseFfiHandle(_handle);
  return result;
}

void heresdkPersonalPlacesBindingslistofSdkSearchIndexrangeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkPersonalPlacesBindingslistofSdkSearchIndexrangeReleaseHandleNullable(handle);

final _heresdkPersonalPlacesBindingslistofSdkSearchLandlinephoneCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_LandlinePhone_create_handle'));
final _heresdkPersonalPlacesBindingslistofSdkSearchLandlinephoneReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_LandlinePhone_release_handle'));
final _heresdkPersonalPlacesBindingslistofSdkSearchLandlinephoneInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_LandlinePhone_insert'));
final _heresdkPersonalPlacesBindingslistofSdkSearchLandlinephoneIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_LandlinePhone_iterator'));
final _heresdkPersonalPlacesBindingslistofSdkSearchLandlinephoneIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_LandlinePhone_iterator_release_handle'));
final _heresdkPersonalPlacesBindingslistofSdkSearchLandlinephoneIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_LandlinePhone_iterator_is_valid'));
final _heresdkPersonalPlacesBindingslistofSdkSearchLandlinephoneIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_LandlinePhone_iterator_increment'));
final _heresdkPersonalPlacesBindingslistofSdkSearchLandlinephoneIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_LandlinePhone_iterator_get'));

Pointer<Void> heresdkPersonalPlacesBindingslistofSdkSearchLandlinephoneToFfi(List<LandlinePhone> value) {
  final _result = _heresdkPersonalPlacesBindingslistofSdkSearchLandlinephoneCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchLandlinephoneToFfi(element);
    _heresdkPersonalPlacesBindingslistofSdkSearchLandlinephoneInsert(_result, _elementHandle);
    sdkSearchLandlinephoneReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<LandlinePhone> heresdkPersonalPlacesBindingslistofSdkSearchLandlinephoneFromFfi(Pointer<Void> handle) {
  final result = List<LandlinePhone>.empty(growable: true);
  final _iteratorHandle = _heresdkPersonalPlacesBindingslistofSdkSearchLandlinephoneIterator(handle);
  while (_heresdkPersonalPlacesBindingslistofSdkSearchLandlinephoneIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkPersonalPlacesBindingslistofSdkSearchLandlinephoneIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchLandlinephoneFromFfi(_elementHandle));
    } finally {
      sdkSearchLandlinephoneReleaseFfiHandle(_elementHandle);
    }
    _heresdkPersonalPlacesBindingslistofSdkSearchLandlinephoneIteratorIncrement(_iteratorHandle);
  }
  _heresdkPersonalPlacesBindingslistofSdkSearchLandlinephoneIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkPersonalPlacesBindingslistofSdkSearchLandlinephoneReleaseFfiHandle(Pointer<Void> handle) => _heresdkPersonalPlacesBindingslistofSdkSearchLandlinephoneReleaseHandle(handle);

final _heresdkPersonalPlacesBindingslistofSdkSearchLandlinephoneCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_LandlinePhone_create_handle_nullable'));
final _heresdkPersonalPlacesBindingslistofSdkSearchLandlinephoneReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_LandlinePhone_release_handle_nullable'));
final _heresdkPersonalPlacesBindingslistofSdkSearchLandlinephoneGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_LandlinePhone_get_value_nullable'));

Pointer<Void> heresdkPersonalPlacesBindingslistofSdkSearchLandlinephoneToFfiNullable(List<LandlinePhone>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkPersonalPlacesBindingslistofSdkSearchLandlinephoneToFfi(value);
  final result = _heresdkPersonalPlacesBindingslistofSdkSearchLandlinephoneCreateHandleNullable(_handle);
  heresdkPersonalPlacesBindingslistofSdkSearchLandlinephoneReleaseFfiHandle(_handle);
  return result;
}

List<LandlinePhone>? heresdkPersonalPlacesBindingslistofSdkSearchLandlinephoneFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkPersonalPlacesBindingslistofSdkSearchLandlinephoneGetValueNullable(handle);
  final result = heresdkPersonalPlacesBindingslistofSdkSearchLandlinephoneFromFfi(_handle);
  heresdkPersonalPlacesBindingslistofSdkSearchLandlinephoneReleaseFfiHandle(_handle);
  return result;
}

void heresdkPersonalPlacesBindingslistofSdkSearchLandlinephoneReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkPersonalPlacesBindingslistofSdkSearchLandlinephoneReleaseHandleNullable(handle);

final _heresdkPersonalPlacesBindingslistofSdkSearchMobilephoneCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_MobilePhone_create_handle'));
final _heresdkPersonalPlacesBindingslistofSdkSearchMobilephoneReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_MobilePhone_release_handle'));
final _heresdkPersonalPlacesBindingslistofSdkSearchMobilephoneInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_MobilePhone_insert'));
final _heresdkPersonalPlacesBindingslistofSdkSearchMobilephoneIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_MobilePhone_iterator'));
final _heresdkPersonalPlacesBindingslistofSdkSearchMobilephoneIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_MobilePhone_iterator_release_handle'));
final _heresdkPersonalPlacesBindingslistofSdkSearchMobilephoneIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_MobilePhone_iterator_is_valid'));
final _heresdkPersonalPlacesBindingslistofSdkSearchMobilephoneIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_MobilePhone_iterator_increment'));
final _heresdkPersonalPlacesBindingslistofSdkSearchMobilephoneIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_MobilePhone_iterator_get'));

Pointer<Void> heresdkPersonalPlacesBindingslistofSdkSearchMobilephoneToFfi(List<MobilePhone> value) {
  final _result = _heresdkPersonalPlacesBindingslistofSdkSearchMobilephoneCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchMobilephoneToFfi(element);
    _heresdkPersonalPlacesBindingslistofSdkSearchMobilephoneInsert(_result, _elementHandle);
    sdkSearchMobilephoneReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<MobilePhone> heresdkPersonalPlacesBindingslistofSdkSearchMobilephoneFromFfi(Pointer<Void> handle) {
  final result = List<MobilePhone>.empty(growable: true);
  final _iteratorHandle = _heresdkPersonalPlacesBindingslistofSdkSearchMobilephoneIterator(handle);
  while (_heresdkPersonalPlacesBindingslistofSdkSearchMobilephoneIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkPersonalPlacesBindingslistofSdkSearchMobilephoneIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchMobilephoneFromFfi(_elementHandle));
    } finally {
      sdkSearchMobilephoneReleaseFfiHandle(_elementHandle);
    }
    _heresdkPersonalPlacesBindingslistofSdkSearchMobilephoneIteratorIncrement(_iteratorHandle);
  }
  _heresdkPersonalPlacesBindingslistofSdkSearchMobilephoneIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkPersonalPlacesBindingslistofSdkSearchMobilephoneReleaseFfiHandle(Pointer<Void> handle) => _heresdkPersonalPlacesBindingslistofSdkSearchMobilephoneReleaseHandle(handle);

final _heresdkPersonalPlacesBindingslistofSdkSearchMobilephoneCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_MobilePhone_create_handle_nullable'));
final _heresdkPersonalPlacesBindingslistofSdkSearchMobilephoneReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_MobilePhone_release_handle_nullable'));
final _heresdkPersonalPlacesBindingslistofSdkSearchMobilephoneGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_MobilePhone_get_value_nullable'));

Pointer<Void> heresdkPersonalPlacesBindingslistofSdkSearchMobilephoneToFfiNullable(List<MobilePhone>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkPersonalPlacesBindingslistofSdkSearchMobilephoneToFfi(value);
  final result = _heresdkPersonalPlacesBindingslistofSdkSearchMobilephoneCreateHandleNullable(_handle);
  heresdkPersonalPlacesBindingslistofSdkSearchMobilephoneReleaseFfiHandle(_handle);
  return result;
}

List<MobilePhone>? heresdkPersonalPlacesBindingslistofSdkSearchMobilephoneFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkPersonalPlacesBindingslistofSdkSearchMobilephoneGetValueNullable(handle);
  final result = heresdkPersonalPlacesBindingslistofSdkSearchMobilephoneFromFfi(_handle);
  heresdkPersonalPlacesBindingslistofSdkSearchMobilephoneReleaseFfiHandle(_handle);
  return result;
}

void heresdkPersonalPlacesBindingslistofSdkSearchMobilephoneReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkPersonalPlacesBindingslistofSdkSearchMobilephoneReleaseHandleNullable(handle);

final _heresdkPersonalPlacesBindingslistofSdkSearchOpeninghoursCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_OpeningHours_create_handle'));
final _heresdkPersonalPlacesBindingslistofSdkSearchOpeninghoursReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_OpeningHours_release_handle'));
final _heresdkPersonalPlacesBindingslistofSdkSearchOpeninghoursInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_OpeningHours_insert'));
final _heresdkPersonalPlacesBindingslistofSdkSearchOpeninghoursIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_OpeningHours_iterator'));
final _heresdkPersonalPlacesBindingslistofSdkSearchOpeninghoursIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_OpeningHours_iterator_release_handle'));
final _heresdkPersonalPlacesBindingslistofSdkSearchOpeninghoursIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_OpeningHours_iterator_is_valid'));
final _heresdkPersonalPlacesBindingslistofSdkSearchOpeninghoursIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_OpeningHours_iterator_increment'));
final _heresdkPersonalPlacesBindingslistofSdkSearchOpeninghoursIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_OpeningHours_iterator_get'));

Pointer<Void> heresdkPersonalPlacesBindingslistofSdkSearchOpeninghoursToFfi(List<OpeningHours> value) {
  final _result = _heresdkPersonalPlacesBindingslistofSdkSearchOpeninghoursCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchOpeninghoursToFfi(element);
    _heresdkPersonalPlacesBindingslistofSdkSearchOpeninghoursInsert(_result, _elementHandle);
    sdkSearchOpeninghoursReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<OpeningHours> heresdkPersonalPlacesBindingslistofSdkSearchOpeninghoursFromFfi(Pointer<Void> handle) {
  final result = List<OpeningHours>.empty(growable: true);
  final _iteratorHandle = _heresdkPersonalPlacesBindingslistofSdkSearchOpeninghoursIterator(handle);
  while (_heresdkPersonalPlacesBindingslistofSdkSearchOpeninghoursIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkPersonalPlacesBindingslistofSdkSearchOpeninghoursIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchOpeninghoursFromFfi(_elementHandle));
    } finally {
      sdkSearchOpeninghoursReleaseFfiHandle(_elementHandle);
    }
    _heresdkPersonalPlacesBindingslistofSdkSearchOpeninghoursIteratorIncrement(_iteratorHandle);
  }
  _heresdkPersonalPlacesBindingslistofSdkSearchOpeninghoursIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkPersonalPlacesBindingslistofSdkSearchOpeninghoursReleaseFfiHandle(Pointer<Void> handle) => _heresdkPersonalPlacesBindingslistofSdkSearchOpeninghoursReleaseHandle(handle);

final _heresdkPersonalPlacesBindingslistofSdkSearchOpeninghoursCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_OpeningHours_create_handle_nullable'));
final _heresdkPersonalPlacesBindingslistofSdkSearchOpeninghoursReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_OpeningHours_release_handle_nullable'));
final _heresdkPersonalPlacesBindingslistofSdkSearchOpeninghoursGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_OpeningHours_get_value_nullable'));

Pointer<Void> heresdkPersonalPlacesBindingslistofSdkSearchOpeninghoursToFfiNullable(List<OpeningHours>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkPersonalPlacesBindingslistofSdkSearchOpeninghoursToFfi(value);
  final result = _heresdkPersonalPlacesBindingslistofSdkSearchOpeninghoursCreateHandleNullable(_handle);
  heresdkPersonalPlacesBindingslistofSdkSearchOpeninghoursReleaseFfiHandle(_handle);
  return result;
}

List<OpeningHours>? heresdkPersonalPlacesBindingslistofSdkSearchOpeninghoursFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkPersonalPlacesBindingslistofSdkSearchOpeninghoursGetValueNullable(handle);
  final result = heresdkPersonalPlacesBindingslistofSdkSearchOpeninghoursFromFfi(_handle);
  heresdkPersonalPlacesBindingslistofSdkSearchOpeninghoursReleaseFfiHandle(_handle);
  return result;
}

void heresdkPersonalPlacesBindingslistofSdkSearchOpeninghoursReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkPersonalPlacesBindingslistofSdkSearchOpeninghoursReleaseHandleNullable(handle);

final _heresdkPersonalPlacesBindingslistofSdkSearchPlaceCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_Place_create_handle'));
final _heresdkPersonalPlacesBindingslistofSdkSearchPlaceReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_Place_release_handle'));
final _heresdkPersonalPlacesBindingslistofSdkSearchPlaceInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_Place_insert'));
final _heresdkPersonalPlacesBindingslistofSdkSearchPlaceIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_Place_iterator'));
final _heresdkPersonalPlacesBindingslistofSdkSearchPlaceIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_Place_iterator_release_handle'));
final _heresdkPersonalPlacesBindingslistofSdkSearchPlaceIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_Place_iterator_is_valid'));
final _heresdkPersonalPlacesBindingslistofSdkSearchPlaceIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_Place_iterator_increment'));
final _heresdkPersonalPlacesBindingslistofSdkSearchPlaceIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_Place_iterator_get'));

Pointer<Void> heresdkPersonalPlacesBindingslistofSdkSearchPlaceToFfi(List<Place> value) {
  final _result = _heresdkPersonalPlacesBindingslistofSdkSearchPlaceCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchPlaceToFfi(element);
    _heresdkPersonalPlacesBindingslistofSdkSearchPlaceInsert(_result, _elementHandle);
    sdkSearchPlaceReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Place> heresdkPersonalPlacesBindingslistofSdkSearchPlaceFromFfi(Pointer<Void> handle) {
  final result = List<Place>.empty(growable: true);
  final _iteratorHandle = _heresdkPersonalPlacesBindingslistofSdkSearchPlaceIterator(handle);
  while (_heresdkPersonalPlacesBindingslistofSdkSearchPlaceIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkPersonalPlacesBindingslistofSdkSearchPlaceIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchPlaceFromFfi(_elementHandle));
    } finally {
      sdkSearchPlaceReleaseFfiHandle(_elementHandle);
    }
    _heresdkPersonalPlacesBindingslistofSdkSearchPlaceIteratorIncrement(_iteratorHandle);
  }
  _heresdkPersonalPlacesBindingslistofSdkSearchPlaceIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkPersonalPlacesBindingslistofSdkSearchPlaceReleaseFfiHandle(Pointer<Void> handle) => _heresdkPersonalPlacesBindingslistofSdkSearchPlaceReleaseHandle(handle);

final _heresdkPersonalPlacesBindingslistofSdkSearchPlaceCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_Place_create_handle_nullable'));
final _heresdkPersonalPlacesBindingslistofSdkSearchPlaceReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_Place_release_handle_nullable'));
final _heresdkPersonalPlacesBindingslistofSdkSearchPlaceGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_Place_get_value_nullable'));

Pointer<Void> heresdkPersonalPlacesBindingslistofSdkSearchPlaceToFfiNullable(List<Place>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkPersonalPlacesBindingslistofSdkSearchPlaceToFfi(value);
  final result = _heresdkPersonalPlacesBindingslistofSdkSearchPlaceCreateHandleNullable(_handle);
  heresdkPersonalPlacesBindingslistofSdkSearchPlaceReleaseFfiHandle(_handle);
  return result;
}

List<Place>? heresdkPersonalPlacesBindingslistofSdkSearchPlaceFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkPersonalPlacesBindingslistofSdkSearchPlaceGetValueNullable(handle);
  final result = heresdkPersonalPlacesBindingslistofSdkSearchPlaceFromFfi(_handle);
  heresdkPersonalPlacesBindingslistofSdkSearchPlaceReleaseFfiHandle(_handle);
  return result;
}

void heresdkPersonalPlacesBindingslistofSdkSearchPlaceReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkPersonalPlacesBindingslistofSdkSearchPlaceReleaseHandleNullable(handle);

final _heresdkPersonalPlacesBindingslistofSdkSearchPlacecategoryCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_PlaceCategory_create_handle'));
final _heresdkPersonalPlacesBindingslistofSdkSearchPlacecategoryReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_PlaceCategory_release_handle'));
final _heresdkPersonalPlacesBindingslistofSdkSearchPlacecategoryInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_PlaceCategory_insert'));
final _heresdkPersonalPlacesBindingslistofSdkSearchPlacecategoryIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_PlaceCategory_iterator'));
final _heresdkPersonalPlacesBindingslistofSdkSearchPlacecategoryIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_PlaceCategory_iterator_release_handle'));
final _heresdkPersonalPlacesBindingslistofSdkSearchPlacecategoryIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_PlaceCategory_iterator_is_valid'));
final _heresdkPersonalPlacesBindingslistofSdkSearchPlacecategoryIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_PlaceCategory_iterator_increment'));
final _heresdkPersonalPlacesBindingslistofSdkSearchPlacecategoryIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_PlaceCategory_iterator_get'));

Pointer<Void> heresdkPersonalPlacesBindingslistofSdkSearchPlacecategoryToFfi(List<PlaceCategory> value) {
  final _result = _heresdkPersonalPlacesBindingslistofSdkSearchPlacecategoryCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchPlacecategoryToFfi(element);
    _heresdkPersonalPlacesBindingslistofSdkSearchPlacecategoryInsert(_result, _elementHandle);
    sdkSearchPlacecategoryReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<PlaceCategory> heresdkPersonalPlacesBindingslistofSdkSearchPlacecategoryFromFfi(Pointer<Void> handle) {
  final result = List<PlaceCategory>.empty(growable: true);
  final _iteratorHandle = _heresdkPersonalPlacesBindingslistofSdkSearchPlacecategoryIterator(handle);
  while (_heresdkPersonalPlacesBindingslistofSdkSearchPlacecategoryIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkPersonalPlacesBindingslistofSdkSearchPlacecategoryIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchPlacecategoryFromFfi(_elementHandle));
    } finally {
      sdkSearchPlacecategoryReleaseFfiHandle(_elementHandle);
    }
    _heresdkPersonalPlacesBindingslistofSdkSearchPlacecategoryIteratorIncrement(_iteratorHandle);
  }
  _heresdkPersonalPlacesBindingslistofSdkSearchPlacecategoryIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkPersonalPlacesBindingslistofSdkSearchPlacecategoryReleaseFfiHandle(Pointer<Void> handle) => _heresdkPersonalPlacesBindingslistofSdkSearchPlacecategoryReleaseHandle(handle);

final _heresdkPersonalPlacesBindingslistofSdkSearchPlacecategoryCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_PlaceCategory_create_handle_nullable'));
final _heresdkPersonalPlacesBindingslistofSdkSearchPlacecategoryReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_PlaceCategory_release_handle_nullable'));
final _heresdkPersonalPlacesBindingslistofSdkSearchPlacecategoryGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_PlaceCategory_get_value_nullable'));

Pointer<Void> heresdkPersonalPlacesBindingslistofSdkSearchPlacecategoryToFfiNullable(List<PlaceCategory>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkPersonalPlacesBindingslistofSdkSearchPlacecategoryToFfi(value);
  final result = _heresdkPersonalPlacesBindingslistofSdkSearchPlacecategoryCreateHandleNullable(_handle);
  heresdkPersonalPlacesBindingslistofSdkSearchPlacecategoryReleaseFfiHandle(_handle);
  return result;
}

List<PlaceCategory>? heresdkPersonalPlacesBindingslistofSdkSearchPlacecategoryFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkPersonalPlacesBindingslistofSdkSearchPlacecategoryGetValueNullable(handle);
  final result = heresdkPersonalPlacesBindingslistofSdkSearchPlacecategoryFromFfi(_handle);
  heresdkPersonalPlacesBindingslistofSdkSearchPlacecategoryReleaseFfiHandle(_handle);
  return result;
}

void heresdkPersonalPlacesBindingslistofSdkSearchPlacecategoryReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkPersonalPlacesBindingslistofSdkSearchPlacecategoryReleaseHandleNullable(handle);

final _heresdkPersonalPlacesBindingslistofSdkSearchScheduledetailsCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_ScheduleDetails_create_handle'));
final _heresdkPersonalPlacesBindingslistofSdkSearchScheduledetailsReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_ScheduleDetails_release_handle'));
final _heresdkPersonalPlacesBindingslistofSdkSearchScheduledetailsInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_ScheduleDetails_insert'));
final _heresdkPersonalPlacesBindingslistofSdkSearchScheduledetailsIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_ScheduleDetails_iterator'));
final _heresdkPersonalPlacesBindingslistofSdkSearchScheduledetailsIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_ScheduleDetails_iterator_release_handle'));
final _heresdkPersonalPlacesBindingslistofSdkSearchScheduledetailsIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_ScheduleDetails_iterator_is_valid'));
final _heresdkPersonalPlacesBindingslistofSdkSearchScheduledetailsIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_ScheduleDetails_iterator_increment'));
final _heresdkPersonalPlacesBindingslistofSdkSearchScheduledetailsIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_ScheduleDetails_iterator_get'));

Pointer<Void> heresdkPersonalPlacesBindingslistofSdkSearchScheduledetailsToFfi(List<ScheduleDetails> value) {
  final _result = _heresdkPersonalPlacesBindingslistofSdkSearchScheduledetailsCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchScheduledetailsToFfi(element);
    _heresdkPersonalPlacesBindingslistofSdkSearchScheduledetailsInsert(_result, _elementHandle);
    sdkSearchScheduledetailsReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<ScheduleDetails> heresdkPersonalPlacesBindingslistofSdkSearchScheduledetailsFromFfi(Pointer<Void> handle) {
  final result = List<ScheduleDetails>.empty(growable: true);
  final _iteratorHandle = _heresdkPersonalPlacesBindingslistofSdkSearchScheduledetailsIterator(handle);
  while (_heresdkPersonalPlacesBindingslistofSdkSearchScheduledetailsIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkPersonalPlacesBindingslistofSdkSearchScheduledetailsIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchScheduledetailsFromFfi(_elementHandle));
    } finally {
      sdkSearchScheduledetailsReleaseFfiHandle(_elementHandle);
    }
    _heresdkPersonalPlacesBindingslistofSdkSearchScheduledetailsIteratorIncrement(_iteratorHandle);
  }
  _heresdkPersonalPlacesBindingslistofSdkSearchScheduledetailsIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkPersonalPlacesBindingslistofSdkSearchScheduledetailsReleaseFfiHandle(Pointer<Void> handle) => _heresdkPersonalPlacesBindingslistofSdkSearchScheduledetailsReleaseHandle(handle);

final _heresdkPersonalPlacesBindingslistofSdkSearchScheduledetailsCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_ScheduleDetails_create_handle_nullable'));
final _heresdkPersonalPlacesBindingslistofSdkSearchScheduledetailsReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_ScheduleDetails_release_handle_nullable'));
final _heresdkPersonalPlacesBindingslistofSdkSearchScheduledetailsGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_ScheduleDetails_get_value_nullable'));

Pointer<Void> heresdkPersonalPlacesBindingslistofSdkSearchScheduledetailsToFfiNullable(List<ScheduleDetails>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkPersonalPlacesBindingslistofSdkSearchScheduledetailsToFfi(value);
  final result = _heresdkPersonalPlacesBindingslistofSdkSearchScheduledetailsCreateHandleNullable(_handle);
  heresdkPersonalPlacesBindingslistofSdkSearchScheduledetailsReleaseFfiHandle(_handle);
  return result;
}

List<ScheduleDetails>? heresdkPersonalPlacesBindingslistofSdkSearchScheduledetailsFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkPersonalPlacesBindingslistofSdkSearchScheduledetailsGetValueNullable(handle);
  final result = heresdkPersonalPlacesBindingslistofSdkSearchScheduledetailsFromFfi(_handle);
  heresdkPersonalPlacesBindingslistofSdkSearchScheduledetailsReleaseFfiHandle(_handle);
  return result;
}

void heresdkPersonalPlacesBindingslistofSdkSearchScheduledetailsReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkPersonalPlacesBindingslistofSdkSearchScheduledetailsReleaseHandleNullable(handle);

final _heresdkPersonalPlacesBindingslistofSdkSearchSuggestionCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_Suggestion_create_handle'));
final _heresdkPersonalPlacesBindingslistofSdkSearchSuggestionReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_Suggestion_release_handle'));
final _heresdkPersonalPlacesBindingslistofSdkSearchSuggestionInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_Suggestion_insert'));
final _heresdkPersonalPlacesBindingslistofSdkSearchSuggestionIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_Suggestion_iterator'));
final _heresdkPersonalPlacesBindingslistofSdkSearchSuggestionIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_Suggestion_iterator_release_handle'));
final _heresdkPersonalPlacesBindingslistofSdkSearchSuggestionIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_Suggestion_iterator_is_valid'));
final _heresdkPersonalPlacesBindingslistofSdkSearchSuggestionIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_Suggestion_iterator_increment'));
final _heresdkPersonalPlacesBindingslistofSdkSearchSuggestionIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_Suggestion_iterator_get'));

Pointer<Void> heresdkPersonalPlacesBindingslistofSdkSearchSuggestionToFfi(List<Suggestion> value) {
  final _result = _heresdkPersonalPlacesBindingslistofSdkSearchSuggestionCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchSuggestionToFfi(element);
    _heresdkPersonalPlacesBindingslistofSdkSearchSuggestionInsert(_result, _elementHandle);
    sdkSearchSuggestionReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Suggestion> heresdkPersonalPlacesBindingslistofSdkSearchSuggestionFromFfi(Pointer<Void> handle) {
  final result = List<Suggestion>.empty(growable: true);
  final _iteratorHandle = _heresdkPersonalPlacesBindingslistofSdkSearchSuggestionIterator(handle);
  while (_heresdkPersonalPlacesBindingslistofSdkSearchSuggestionIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkPersonalPlacesBindingslistofSdkSearchSuggestionIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchSuggestionFromFfi(_elementHandle));
    } finally {
      sdkSearchSuggestionReleaseFfiHandle(_elementHandle);
    }
    _heresdkPersonalPlacesBindingslistofSdkSearchSuggestionIteratorIncrement(_iteratorHandle);
  }
  _heresdkPersonalPlacesBindingslistofSdkSearchSuggestionIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkPersonalPlacesBindingslistofSdkSearchSuggestionReleaseFfiHandle(Pointer<Void> handle) => _heresdkPersonalPlacesBindingslistofSdkSearchSuggestionReleaseHandle(handle);

final _heresdkPersonalPlacesBindingslistofSdkSearchSuggestionCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_Suggestion_create_handle_nullable'));
final _heresdkPersonalPlacesBindingslistofSdkSearchSuggestionReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_Suggestion_release_handle_nullable'));
final _heresdkPersonalPlacesBindingslistofSdkSearchSuggestionGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_Suggestion_get_value_nullable'));

Pointer<Void> heresdkPersonalPlacesBindingslistofSdkSearchSuggestionToFfiNullable(List<Suggestion>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkPersonalPlacesBindingslistofSdkSearchSuggestionToFfi(value);
  final result = _heresdkPersonalPlacesBindingslistofSdkSearchSuggestionCreateHandleNullable(_handle);
  heresdkPersonalPlacesBindingslistofSdkSearchSuggestionReleaseFfiHandle(_handle);
  return result;
}

List<Suggestion>? heresdkPersonalPlacesBindingslistofSdkSearchSuggestionFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkPersonalPlacesBindingslistofSdkSearchSuggestionGetValueNullable(handle);
  final result = heresdkPersonalPlacesBindingslistofSdkSearchSuggestionFromFfi(_handle);
  heresdkPersonalPlacesBindingslistofSdkSearchSuggestionReleaseFfiHandle(_handle);
  return result;
}

void heresdkPersonalPlacesBindingslistofSdkSearchSuggestionReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkPersonalPlacesBindingslistofSdkSearchSuggestionReleaseHandleNullable(handle);

final _heresdkPersonalPlacesBindingslistofSdkSearchSupplierreferenceCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_SupplierReference_create_handle'));
final _heresdkPersonalPlacesBindingslistofSdkSearchSupplierreferenceReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_SupplierReference_release_handle'));
final _heresdkPersonalPlacesBindingslistofSdkSearchSupplierreferenceInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_SupplierReference_insert'));
final _heresdkPersonalPlacesBindingslistofSdkSearchSupplierreferenceIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_SupplierReference_iterator'));
final _heresdkPersonalPlacesBindingslistofSdkSearchSupplierreferenceIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_SupplierReference_iterator_release_handle'));
final _heresdkPersonalPlacesBindingslistofSdkSearchSupplierreferenceIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_SupplierReference_iterator_is_valid'));
final _heresdkPersonalPlacesBindingslistofSdkSearchSupplierreferenceIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_SupplierReference_iterator_increment'));
final _heresdkPersonalPlacesBindingslistofSdkSearchSupplierreferenceIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_SupplierReference_iterator_get'));

Pointer<Void> heresdkPersonalPlacesBindingslistofSdkSearchSupplierreferenceToFfi(List<SupplierReference> value) {
  final _result = _heresdkPersonalPlacesBindingslistofSdkSearchSupplierreferenceCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchSupplierreferenceToFfi(element);
    _heresdkPersonalPlacesBindingslistofSdkSearchSupplierreferenceInsert(_result, _elementHandle);
    sdkSearchSupplierreferenceReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<SupplierReference> heresdkPersonalPlacesBindingslistofSdkSearchSupplierreferenceFromFfi(Pointer<Void> handle) {
  final result = List<SupplierReference>.empty(growable: true);
  final _iteratorHandle = _heresdkPersonalPlacesBindingslistofSdkSearchSupplierreferenceIterator(handle);
  while (_heresdkPersonalPlacesBindingslistofSdkSearchSupplierreferenceIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkPersonalPlacesBindingslistofSdkSearchSupplierreferenceIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchSupplierreferenceFromFfi(_elementHandle));
    } finally {
      sdkSearchSupplierreferenceReleaseFfiHandle(_elementHandle);
    }
    _heresdkPersonalPlacesBindingslistofSdkSearchSupplierreferenceIteratorIncrement(_iteratorHandle);
  }
  _heresdkPersonalPlacesBindingslistofSdkSearchSupplierreferenceIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkPersonalPlacesBindingslistofSdkSearchSupplierreferenceReleaseFfiHandle(Pointer<Void> handle) => _heresdkPersonalPlacesBindingslistofSdkSearchSupplierreferenceReleaseHandle(handle);

final _heresdkPersonalPlacesBindingslistofSdkSearchSupplierreferenceCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_SupplierReference_create_handle_nullable'));
final _heresdkPersonalPlacesBindingslistofSdkSearchSupplierreferenceReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_SupplierReference_release_handle_nullable'));
final _heresdkPersonalPlacesBindingslistofSdkSearchSupplierreferenceGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_SupplierReference_get_value_nullable'));

Pointer<Void> heresdkPersonalPlacesBindingslistofSdkSearchSupplierreferenceToFfiNullable(List<SupplierReference>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkPersonalPlacesBindingslistofSdkSearchSupplierreferenceToFfi(value);
  final result = _heresdkPersonalPlacesBindingslistofSdkSearchSupplierreferenceCreateHandleNullable(_handle);
  heresdkPersonalPlacesBindingslistofSdkSearchSupplierreferenceReleaseFfiHandle(_handle);
  return result;
}

List<SupplierReference>? heresdkPersonalPlacesBindingslistofSdkSearchSupplierreferenceFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkPersonalPlacesBindingslistofSdkSearchSupplierreferenceGetValueNullable(handle);
  final result = heresdkPersonalPlacesBindingslistofSdkSearchSupplierreferenceFromFfi(_handle);
  heresdkPersonalPlacesBindingslistofSdkSearchSupplierreferenceReleaseFfiHandle(_handle);
  return result;
}

void heresdkPersonalPlacesBindingslistofSdkSearchSupplierreferenceReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkPersonalPlacesBindingslistofSdkSearchSupplierreferenceReleaseHandleNullable(handle);

final _heresdkPersonalPlacesBindingslistofSdkSearchWebeditorialCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_WebEditorial_create_handle'));
final _heresdkPersonalPlacesBindingslistofSdkSearchWebeditorialReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_WebEditorial_release_handle'));
final _heresdkPersonalPlacesBindingslistofSdkSearchWebeditorialInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_WebEditorial_insert'));
final _heresdkPersonalPlacesBindingslistofSdkSearchWebeditorialIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_WebEditorial_iterator'));
final _heresdkPersonalPlacesBindingslistofSdkSearchWebeditorialIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_WebEditorial_iterator_release_handle'));
final _heresdkPersonalPlacesBindingslistofSdkSearchWebeditorialIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_WebEditorial_iterator_is_valid'));
final _heresdkPersonalPlacesBindingslistofSdkSearchWebeditorialIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_WebEditorial_iterator_increment'));
final _heresdkPersonalPlacesBindingslistofSdkSearchWebeditorialIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_WebEditorial_iterator_get'));

Pointer<Void> heresdkPersonalPlacesBindingslistofSdkSearchWebeditorialToFfi(List<WebEditorial> value) {
  final _result = _heresdkPersonalPlacesBindingslistofSdkSearchWebeditorialCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchWebeditorialToFfi(element);
    _heresdkPersonalPlacesBindingslistofSdkSearchWebeditorialInsert(_result, _elementHandle);
    sdkSearchWebeditorialReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<WebEditorial> heresdkPersonalPlacesBindingslistofSdkSearchWebeditorialFromFfi(Pointer<Void> handle) {
  final result = List<WebEditorial>.empty(growable: true);
  final _iteratorHandle = _heresdkPersonalPlacesBindingslistofSdkSearchWebeditorialIterator(handle);
  while (_heresdkPersonalPlacesBindingslistofSdkSearchWebeditorialIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkPersonalPlacesBindingslistofSdkSearchWebeditorialIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchWebeditorialFromFfi(_elementHandle));
    } finally {
      sdkSearchWebeditorialReleaseFfiHandle(_elementHandle);
    }
    _heresdkPersonalPlacesBindingslistofSdkSearchWebeditorialIteratorIncrement(_iteratorHandle);
  }
  _heresdkPersonalPlacesBindingslistofSdkSearchWebeditorialIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkPersonalPlacesBindingslistofSdkSearchWebeditorialReleaseFfiHandle(Pointer<Void> handle) => _heresdkPersonalPlacesBindingslistofSdkSearchWebeditorialReleaseHandle(handle);

final _heresdkPersonalPlacesBindingslistofSdkSearchWebeditorialCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_WebEditorial_create_handle_nullable'));
final _heresdkPersonalPlacesBindingslistofSdkSearchWebeditorialReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_WebEditorial_release_handle_nullable'));
final _heresdkPersonalPlacesBindingslistofSdkSearchWebeditorialGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_WebEditorial_get_value_nullable'));

Pointer<Void> heresdkPersonalPlacesBindingslistofSdkSearchWebeditorialToFfiNullable(List<WebEditorial>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkPersonalPlacesBindingslistofSdkSearchWebeditorialToFfi(value);
  final result = _heresdkPersonalPlacesBindingslistofSdkSearchWebeditorialCreateHandleNullable(_handle);
  heresdkPersonalPlacesBindingslistofSdkSearchWebeditorialReleaseFfiHandle(_handle);
  return result;
}

List<WebEditorial>? heresdkPersonalPlacesBindingslistofSdkSearchWebeditorialFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkPersonalPlacesBindingslistofSdkSearchWebeditorialGetValueNullable(handle);
  final result = heresdkPersonalPlacesBindingslistofSdkSearchWebeditorialFromFfi(_handle);
  heresdkPersonalPlacesBindingslistofSdkSearchWebeditorialReleaseFfiHandle(_handle);
  return result;
}

void heresdkPersonalPlacesBindingslistofSdkSearchWebeditorialReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkPersonalPlacesBindingslistofSdkSearchWebeditorialReleaseHandleNullable(handle);

final _heresdkPersonalPlacesBindingslistofSdkSearchWebimageCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_WebImage_create_handle'));
final _heresdkPersonalPlacesBindingslistofSdkSearchWebimageReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_WebImage_release_handle'));
final _heresdkPersonalPlacesBindingslistofSdkSearchWebimageInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_WebImage_insert'));
final _heresdkPersonalPlacesBindingslistofSdkSearchWebimageIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_WebImage_iterator'));
final _heresdkPersonalPlacesBindingslistofSdkSearchWebimageIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_WebImage_iterator_release_handle'));
final _heresdkPersonalPlacesBindingslistofSdkSearchWebimageIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_WebImage_iterator_is_valid'));
final _heresdkPersonalPlacesBindingslistofSdkSearchWebimageIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_WebImage_iterator_increment'));
final _heresdkPersonalPlacesBindingslistofSdkSearchWebimageIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_WebImage_iterator_get'));

Pointer<Void> heresdkPersonalPlacesBindingslistofSdkSearchWebimageToFfi(List<WebImage> value) {
  final _result = _heresdkPersonalPlacesBindingslistofSdkSearchWebimageCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchWebimageToFfi(element);
    _heresdkPersonalPlacesBindingslistofSdkSearchWebimageInsert(_result, _elementHandle);
    sdkSearchWebimageReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<WebImage> heresdkPersonalPlacesBindingslistofSdkSearchWebimageFromFfi(Pointer<Void> handle) {
  final result = List<WebImage>.empty(growable: true);
  final _iteratorHandle = _heresdkPersonalPlacesBindingslistofSdkSearchWebimageIterator(handle);
  while (_heresdkPersonalPlacesBindingslistofSdkSearchWebimageIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkPersonalPlacesBindingslistofSdkSearchWebimageIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchWebimageFromFfi(_elementHandle));
    } finally {
      sdkSearchWebimageReleaseFfiHandle(_elementHandle);
    }
    _heresdkPersonalPlacesBindingslistofSdkSearchWebimageIteratorIncrement(_iteratorHandle);
  }
  _heresdkPersonalPlacesBindingslistofSdkSearchWebimageIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkPersonalPlacesBindingslistofSdkSearchWebimageReleaseFfiHandle(Pointer<Void> handle) => _heresdkPersonalPlacesBindingslistofSdkSearchWebimageReleaseHandle(handle);

final _heresdkPersonalPlacesBindingslistofSdkSearchWebimageCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_WebImage_create_handle_nullable'));
final _heresdkPersonalPlacesBindingslistofSdkSearchWebimageReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_WebImage_release_handle_nullable'));
final _heresdkPersonalPlacesBindingslistofSdkSearchWebimageGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_WebImage_get_value_nullable'));

Pointer<Void> heresdkPersonalPlacesBindingslistofSdkSearchWebimageToFfiNullable(List<WebImage>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkPersonalPlacesBindingslistofSdkSearchWebimageToFfi(value);
  final result = _heresdkPersonalPlacesBindingslistofSdkSearchWebimageCreateHandleNullable(_handle);
  heresdkPersonalPlacesBindingslistofSdkSearchWebimageReleaseFfiHandle(_handle);
  return result;
}

List<WebImage>? heresdkPersonalPlacesBindingslistofSdkSearchWebimageFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkPersonalPlacesBindingslistofSdkSearchWebimageGetValueNullable(handle);
  final result = heresdkPersonalPlacesBindingslistofSdkSearchWebimageFromFfi(_handle);
  heresdkPersonalPlacesBindingslistofSdkSearchWebimageReleaseFfiHandle(_handle);
  return result;
}

void heresdkPersonalPlacesBindingslistofSdkSearchWebimageReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkPersonalPlacesBindingslistofSdkSearchWebimageReleaseHandleNullable(handle);

final _heresdkPersonalPlacesBindingslistofSdkSearchWebratingCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_WebRating_create_handle'));
final _heresdkPersonalPlacesBindingslistofSdkSearchWebratingReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_WebRating_release_handle'));
final _heresdkPersonalPlacesBindingslistofSdkSearchWebratingInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_WebRating_insert'));
final _heresdkPersonalPlacesBindingslistofSdkSearchWebratingIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_WebRating_iterator'));
final _heresdkPersonalPlacesBindingslistofSdkSearchWebratingIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_WebRating_iterator_release_handle'));
final _heresdkPersonalPlacesBindingslistofSdkSearchWebratingIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_WebRating_iterator_is_valid'));
final _heresdkPersonalPlacesBindingslistofSdkSearchWebratingIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_WebRating_iterator_increment'));
final _heresdkPersonalPlacesBindingslistofSdkSearchWebratingIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_WebRating_iterator_get'));

Pointer<Void> heresdkPersonalPlacesBindingslistofSdkSearchWebratingToFfi(List<WebRating> value) {
  final _result = _heresdkPersonalPlacesBindingslistofSdkSearchWebratingCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchWebratingToFfi(element);
    _heresdkPersonalPlacesBindingslistofSdkSearchWebratingInsert(_result, _elementHandle);
    sdkSearchWebratingReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<WebRating> heresdkPersonalPlacesBindingslistofSdkSearchWebratingFromFfi(Pointer<Void> handle) {
  final result = List<WebRating>.empty(growable: true);
  final _iteratorHandle = _heresdkPersonalPlacesBindingslistofSdkSearchWebratingIterator(handle);
  while (_heresdkPersonalPlacesBindingslistofSdkSearchWebratingIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkPersonalPlacesBindingslistofSdkSearchWebratingIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchWebratingFromFfi(_elementHandle));
    } finally {
      sdkSearchWebratingReleaseFfiHandle(_elementHandle);
    }
    _heresdkPersonalPlacesBindingslistofSdkSearchWebratingIteratorIncrement(_iteratorHandle);
  }
  _heresdkPersonalPlacesBindingslistofSdkSearchWebratingIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkPersonalPlacesBindingslistofSdkSearchWebratingReleaseFfiHandle(Pointer<Void> handle) => _heresdkPersonalPlacesBindingslistofSdkSearchWebratingReleaseHandle(handle);

final _heresdkPersonalPlacesBindingslistofSdkSearchWebratingCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_WebRating_create_handle_nullable'));
final _heresdkPersonalPlacesBindingslistofSdkSearchWebratingReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_WebRating_release_handle_nullable'));
final _heresdkPersonalPlacesBindingslistofSdkSearchWebratingGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_WebRating_get_value_nullable'));

Pointer<Void> heresdkPersonalPlacesBindingslistofSdkSearchWebratingToFfiNullable(List<WebRating>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkPersonalPlacesBindingslistofSdkSearchWebratingToFfi(value);
  final result = _heresdkPersonalPlacesBindingslistofSdkSearchWebratingCreateHandleNullable(_handle);
  heresdkPersonalPlacesBindingslistofSdkSearchWebratingReleaseFfiHandle(_handle);
  return result;
}

List<WebRating>? heresdkPersonalPlacesBindingslistofSdkSearchWebratingFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkPersonalPlacesBindingslistofSdkSearchWebratingGetValueNullable(handle);
  final result = heresdkPersonalPlacesBindingslistofSdkSearchWebratingFromFfi(_handle);
  heresdkPersonalPlacesBindingslistofSdkSearchWebratingReleaseFfiHandle(_handle);
  return result;
}

void heresdkPersonalPlacesBindingslistofSdkSearchWebratingReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkPersonalPlacesBindingslistofSdkSearchWebratingReleaseHandleNullable(handle);

final _heresdkPersonalPlacesBindingslistofSdkSearchWebsiteaddressCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_WebsiteAddress_create_handle'));
final _heresdkPersonalPlacesBindingslistofSdkSearchWebsiteaddressReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_WebsiteAddress_release_handle'));
final _heresdkPersonalPlacesBindingslistofSdkSearchWebsiteaddressInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_WebsiteAddress_insert'));
final _heresdkPersonalPlacesBindingslistofSdkSearchWebsiteaddressIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_WebsiteAddress_iterator'));
final _heresdkPersonalPlacesBindingslistofSdkSearchWebsiteaddressIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_WebsiteAddress_iterator_release_handle'));
final _heresdkPersonalPlacesBindingslistofSdkSearchWebsiteaddressIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_WebsiteAddress_iterator_is_valid'));
final _heresdkPersonalPlacesBindingslistofSdkSearchWebsiteaddressIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_WebsiteAddress_iterator_increment'));
final _heresdkPersonalPlacesBindingslistofSdkSearchWebsiteaddressIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_WebsiteAddress_iterator_get'));

Pointer<Void> heresdkPersonalPlacesBindingslistofSdkSearchWebsiteaddressToFfi(List<WebsiteAddress> value) {
  final _result = _heresdkPersonalPlacesBindingslistofSdkSearchWebsiteaddressCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchWebsiteaddressToFfi(element);
    _heresdkPersonalPlacesBindingslistofSdkSearchWebsiteaddressInsert(_result, _elementHandle);
    sdkSearchWebsiteaddressReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<WebsiteAddress> heresdkPersonalPlacesBindingslistofSdkSearchWebsiteaddressFromFfi(Pointer<Void> handle) {
  final result = List<WebsiteAddress>.empty(growable: true);
  final _iteratorHandle = _heresdkPersonalPlacesBindingslistofSdkSearchWebsiteaddressIterator(handle);
  while (_heresdkPersonalPlacesBindingslistofSdkSearchWebsiteaddressIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkPersonalPlacesBindingslistofSdkSearchWebsiteaddressIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchWebsiteaddressFromFfi(_elementHandle));
    } finally {
      sdkSearchWebsiteaddressReleaseFfiHandle(_elementHandle);
    }
    _heresdkPersonalPlacesBindingslistofSdkSearchWebsiteaddressIteratorIncrement(_iteratorHandle);
  }
  _heresdkPersonalPlacesBindingslistofSdkSearchWebsiteaddressIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkPersonalPlacesBindingslistofSdkSearchWebsiteaddressReleaseFfiHandle(Pointer<Void> handle) => _heresdkPersonalPlacesBindingslistofSdkSearchWebsiteaddressReleaseHandle(handle);

final _heresdkPersonalPlacesBindingslistofSdkSearchWebsiteaddressCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_WebsiteAddress_create_handle_nullable'));
final _heresdkPersonalPlacesBindingslistofSdkSearchWebsiteaddressReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_WebsiteAddress_release_handle_nullable'));
final _heresdkPersonalPlacesBindingslistofSdkSearchWebsiteaddressGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_personal_places_bindingsListOf_sdk_search_WebsiteAddress_get_value_nullable'));

Pointer<Void> heresdkPersonalPlacesBindingslistofSdkSearchWebsiteaddressToFfiNullable(List<WebsiteAddress>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkPersonalPlacesBindingslistofSdkSearchWebsiteaddressToFfi(value);
  final result = _heresdkPersonalPlacesBindingslistofSdkSearchWebsiteaddressCreateHandleNullable(_handle);
  heresdkPersonalPlacesBindingslistofSdkSearchWebsiteaddressReleaseFfiHandle(_handle);
  return result;
}

List<WebsiteAddress>? heresdkPersonalPlacesBindingslistofSdkSearchWebsiteaddressFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkPersonalPlacesBindingslistofSdkSearchWebsiteaddressGetValueNullable(handle);
  final result = heresdkPersonalPlacesBindingslistofSdkSearchWebsiteaddressFromFfi(_handle);
  heresdkPersonalPlacesBindingslistofSdkSearchWebsiteaddressReleaseFfiHandle(_handle);
  return result;
}

void heresdkPersonalPlacesBindingslistofSdkSearchWebsiteaddressReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkPersonalPlacesBindingslistofSdkSearchWebsiteaddressReleaseHandleNullable(handle);

final _heresdkPersonalPlacesBindingsmapofSdkCoreEngineEnginebaseurlToStringCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_personal_places_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_create_handle'));
final _heresdkPersonalPlacesBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_personal_places_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_release_handle'));
final _heresdkPersonalPlacesBindingsmapofSdkCoreEngineEnginebaseurlToStringPut = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32, Pointer<Void>),
    void Function(Pointer<Void>, int, Pointer<Void>)
  >('here_sdk_heresdk_personal_places_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_put'));
final _heresdkPersonalPlacesBindingsmapofSdkCoreEngineEnginebaseurlToStringIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_personal_places_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_iterator'));
final _heresdkPersonalPlacesBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_personal_places_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_iterator_release_handle'));
final _heresdkPersonalPlacesBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_personal_places_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_iterator_is_valid'));
final _heresdkPersonalPlacesBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_personal_places_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_iterator_increment'));
final _heresdkPersonalPlacesBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorGetKey = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_personal_places_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_iterator_get_key'));
final _heresdkPersonalPlacesBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorGetValue = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_personal_places_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_iterator_get_value'));

Pointer<Void> heresdkPersonalPlacesBindingsmapofSdkCoreEngineEnginebaseurlToStringToFfi(Map<EngineBaseURL, String> value) {
  final _result = _heresdkPersonalPlacesBindingsmapofSdkCoreEngineEnginebaseurlToStringCreateHandle();
  for (final entry in value.entries) {
    final _keyHandle = sdkCoreEngineEnginebaseurlToFfi(entry.key);
    final _valueHandle = stringToFfi(entry.value);
    _heresdkPersonalPlacesBindingsmapofSdkCoreEngineEnginebaseurlToStringPut(_result, _keyHandle, _valueHandle);
    sdkCoreEngineEnginebaseurlReleaseFfiHandle(_keyHandle);
    stringReleaseFfiHandle(_valueHandle);
  }
  return _result;
}

Map<EngineBaseURL, String> heresdkPersonalPlacesBindingsmapofSdkCoreEngineEnginebaseurlToStringFromFfi(Pointer<Void> handle) {
  final result = Map<EngineBaseURL, String>();
  final _iteratorHandle = _heresdkPersonalPlacesBindingsmapofSdkCoreEngineEnginebaseurlToStringIterator(handle);
  while (_heresdkPersonalPlacesBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _keyHandle = _heresdkPersonalPlacesBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorGetKey(_iteratorHandle);
    final _valueHandle = _heresdkPersonalPlacesBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorGetValue(_iteratorHandle);
    try {
      result[sdkCoreEngineEnginebaseurlFromFfi(_keyHandle)] =
        stringFromFfi(_valueHandle);
    } finally {
      sdkCoreEngineEnginebaseurlReleaseFfiHandle(_keyHandle);
      stringReleaseFfiHandle(_valueHandle);
    }
    _heresdkPersonalPlacesBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorIncrement(_iteratorHandle);
  }
  _heresdkPersonalPlacesBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkPersonalPlacesBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseFfiHandle(Pointer<Void> handle) => _heresdkPersonalPlacesBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseHandle(handle);

final _heresdkPersonalPlacesBindingsmapofSdkCoreEngineEnginebaseurlToStringCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_personal_places_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_create_handle_nullable'));
final _heresdkPersonalPlacesBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_personal_places_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_release_handle_nullable'));
final _heresdkPersonalPlacesBindingsmapofSdkCoreEngineEnginebaseurlToStringGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_personal_places_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_get_value_nullable'));

Pointer<Void> heresdkPersonalPlacesBindingsmapofSdkCoreEngineEnginebaseurlToStringToFfiNullable(Map<EngineBaseURL, String>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkPersonalPlacesBindingsmapofSdkCoreEngineEnginebaseurlToStringToFfi(value);
  final result = _heresdkPersonalPlacesBindingsmapofSdkCoreEngineEnginebaseurlToStringCreateHandleNullable(_handle);
  heresdkPersonalPlacesBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseFfiHandle(_handle);
  return result;
}

Map<EngineBaseURL, String>? heresdkPersonalPlacesBindingsmapofSdkCoreEngineEnginebaseurlToStringFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkPersonalPlacesBindingsmapofSdkCoreEngineEnginebaseurlToStringGetValueNullable(handle);
  final result = heresdkPersonalPlacesBindingsmapofSdkCoreEngineEnginebaseurlToStringFromFfi(_handle);
  heresdkPersonalPlacesBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseFfiHandle(_handle);
  return result;
}

void heresdkPersonalPlacesBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkPersonalPlacesBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseHandleNullable(handle);

final _heresdkPersonalPlacesBindingsmapofSdkSearchHighlighttypeToHeresdkPersonalPlacesBindingslistofSdkSearchIndexrangeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_personal_places_bindingsMapOf_sdk_search_HighlightType_to_heresdk_personal_places_bindingsListOf_sdk_search_IndexRange_create_handle'));
final _heresdkPersonalPlacesBindingsmapofSdkSearchHighlighttypeToHeresdkPersonalPlacesBindingslistofSdkSearchIndexrangeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_personal_places_bindingsMapOf_sdk_search_HighlightType_to_heresdk_personal_places_bindingsListOf_sdk_search_IndexRange_release_handle'));
final _heresdkPersonalPlacesBindingsmapofSdkSearchHighlighttypeToHeresdkPersonalPlacesBindingslistofSdkSearchIndexrangePut = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32, Pointer<Void>),
    void Function(Pointer<Void>, int, Pointer<Void>)
  >('here_sdk_heresdk_personal_places_bindingsMapOf_sdk_search_HighlightType_to_heresdk_personal_places_bindingsListOf_sdk_search_IndexRange_put'));
final _heresdkPersonalPlacesBindingsmapofSdkSearchHighlighttypeToHeresdkPersonalPlacesBindingslistofSdkSearchIndexrangeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_personal_places_bindingsMapOf_sdk_search_HighlightType_to_heresdk_personal_places_bindingsListOf_sdk_search_IndexRange_iterator'));
final _heresdkPersonalPlacesBindingsmapofSdkSearchHighlighttypeToHeresdkPersonalPlacesBindingslistofSdkSearchIndexrangeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_personal_places_bindingsMapOf_sdk_search_HighlightType_to_heresdk_personal_places_bindingsListOf_sdk_search_IndexRange_iterator_release_handle'));
final _heresdkPersonalPlacesBindingsmapofSdkSearchHighlighttypeToHeresdkPersonalPlacesBindingslistofSdkSearchIndexrangeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_personal_places_bindingsMapOf_sdk_search_HighlightType_to_heresdk_personal_places_bindingsListOf_sdk_search_IndexRange_iterator_is_valid'));
final _heresdkPersonalPlacesBindingsmapofSdkSearchHighlighttypeToHeresdkPersonalPlacesBindingslistofSdkSearchIndexrangeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_personal_places_bindingsMapOf_sdk_search_HighlightType_to_heresdk_personal_places_bindingsListOf_sdk_search_IndexRange_iterator_increment'));
final _heresdkPersonalPlacesBindingsmapofSdkSearchHighlighttypeToHeresdkPersonalPlacesBindingslistofSdkSearchIndexrangeIteratorGetKey = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_personal_places_bindingsMapOf_sdk_search_HighlightType_to_heresdk_personal_places_bindingsListOf_sdk_search_IndexRange_iterator_get_key'));
final _heresdkPersonalPlacesBindingsmapofSdkSearchHighlighttypeToHeresdkPersonalPlacesBindingslistofSdkSearchIndexrangeIteratorGetValue = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_personal_places_bindingsMapOf_sdk_search_HighlightType_to_heresdk_personal_places_bindingsListOf_sdk_search_IndexRange_iterator_get_value'));

Pointer<Void> heresdkPersonalPlacesBindingsmapofSdkSearchHighlighttypeToHeresdkPersonalPlacesBindingslistofSdkSearchIndexrangeToFfi(Map<HighlightType, List<IndexRange>> value) {
  final _result = _heresdkPersonalPlacesBindingsmapofSdkSearchHighlighttypeToHeresdkPersonalPlacesBindingslistofSdkSearchIndexrangeCreateHandle();
  for (final entry in value.entries) {
    final _keyHandle = sdkSearchHighlighttypeToFfi(entry.key);
    final _valueHandle = heresdkPersonalPlacesBindingslistofSdkSearchIndexrangeToFfi(entry.value);
    _heresdkPersonalPlacesBindingsmapofSdkSearchHighlighttypeToHeresdkPersonalPlacesBindingslistofSdkSearchIndexrangePut(_result, _keyHandle, _valueHandle);
    sdkSearchHighlighttypeReleaseFfiHandle(_keyHandle);
    heresdkPersonalPlacesBindingslistofSdkSearchIndexrangeReleaseFfiHandle(_valueHandle);
  }
  return _result;
}

Map<HighlightType, List<IndexRange>> heresdkPersonalPlacesBindingsmapofSdkSearchHighlighttypeToHeresdkPersonalPlacesBindingslistofSdkSearchIndexrangeFromFfi(Pointer<Void> handle) {
  final result = Map<HighlightType, List<IndexRange>>();
  final _iteratorHandle = _heresdkPersonalPlacesBindingsmapofSdkSearchHighlighttypeToHeresdkPersonalPlacesBindingslistofSdkSearchIndexrangeIterator(handle);
  while (_heresdkPersonalPlacesBindingsmapofSdkSearchHighlighttypeToHeresdkPersonalPlacesBindingslistofSdkSearchIndexrangeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _keyHandle = _heresdkPersonalPlacesBindingsmapofSdkSearchHighlighttypeToHeresdkPersonalPlacesBindingslistofSdkSearchIndexrangeIteratorGetKey(_iteratorHandle);
    final _valueHandle = _heresdkPersonalPlacesBindingsmapofSdkSearchHighlighttypeToHeresdkPersonalPlacesBindingslistofSdkSearchIndexrangeIteratorGetValue(_iteratorHandle);
    try {
      result[sdkSearchHighlighttypeFromFfi(_keyHandle)] =
        heresdkPersonalPlacesBindingslistofSdkSearchIndexrangeFromFfi(_valueHandle);
    } finally {
      sdkSearchHighlighttypeReleaseFfiHandle(_keyHandle);
      heresdkPersonalPlacesBindingslistofSdkSearchIndexrangeReleaseFfiHandle(_valueHandle);
    }
    _heresdkPersonalPlacesBindingsmapofSdkSearchHighlighttypeToHeresdkPersonalPlacesBindingslistofSdkSearchIndexrangeIteratorIncrement(_iteratorHandle);
  }
  _heresdkPersonalPlacesBindingsmapofSdkSearchHighlighttypeToHeresdkPersonalPlacesBindingslistofSdkSearchIndexrangeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkPersonalPlacesBindingsmapofSdkSearchHighlighttypeToHeresdkPersonalPlacesBindingslistofSdkSearchIndexrangeReleaseFfiHandle(Pointer<Void> handle) => _heresdkPersonalPlacesBindingsmapofSdkSearchHighlighttypeToHeresdkPersonalPlacesBindingslistofSdkSearchIndexrangeReleaseHandle(handle);

final _heresdkPersonalPlacesBindingsmapofSdkSearchHighlighttypeToHeresdkPersonalPlacesBindingslistofSdkSearchIndexrangeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_personal_places_bindingsMapOf_sdk_search_HighlightType_to_heresdk_personal_places_bindingsListOf_sdk_search_IndexRange_create_handle_nullable'));
final _heresdkPersonalPlacesBindingsmapofSdkSearchHighlighttypeToHeresdkPersonalPlacesBindingslistofSdkSearchIndexrangeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_personal_places_bindingsMapOf_sdk_search_HighlightType_to_heresdk_personal_places_bindingsListOf_sdk_search_IndexRange_release_handle_nullable'));
final _heresdkPersonalPlacesBindingsmapofSdkSearchHighlighttypeToHeresdkPersonalPlacesBindingslistofSdkSearchIndexrangeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_personal_places_bindingsMapOf_sdk_search_HighlightType_to_heresdk_personal_places_bindingsListOf_sdk_search_IndexRange_get_value_nullable'));

Pointer<Void> heresdkPersonalPlacesBindingsmapofSdkSearchHighlighttypeToHeresdkPersonalPlacesBindingslistofSdkSearchIndexrangeToFfiNullable(Map<HighlightType, List<IndexRange>>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkPersonalPlacesBindingsmapofSdkSearchHighlighttypeToHeresdkPersonalPlacesBindingslistofSdkSearchIndexrangeToFfi(value);
  final result = _heresdkPersonalPlacesBindingsmapofSdkSearchHighlighttypeToHeresdkPersonalPlacesBindingslistofSdkSearchIndexrangeCreateHandleNullable(_handle);
  heresdkPersonalPlacesBindingsmapofSdkSearchHighlighttypeToHeresdkPersonalPlacesBindingslistofSdkSearchIndexrangeReleaseFfiHandle(_handle);
  return result;
}

Map<HighlightType, List<IndexRange>>? heresdkPersonalPlacesBindingsmapofSdkSearchHighlighttypeToHeresdkPersonalPlacesBindingslistofSdkSearchIndexrangeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkPersonalPlacesBindingsmapofSdkSearchHighlighttypeToHeresdkPersonalPlacesBindingslistofSdkSearchIndexrangeGetValueNullable(handle);
  final result = heresdkPersonalPlacesBindingsmapofSdkSearchHighlighttypeToHeresdkPersonalPlacesBindingslistofSdkSearchIndexrangeFromFfi(_handle);
  heresdkPersonalPlacesBindingsmapofSdkSearchHighlighttypeToHeresdkPersonalPlacesBindingslistofSdkSearchIndexrangeReleaseFfiHandle(_handle);
  return result;
}

void heresdkPersonalPlacesBindingsmapofSdkSearchHighlighttypeToHeresdkPersonalPlacesBindingslistofSdkSearchIndexrangeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkPersonalPlacesBindingsmapofSdkSearchHighlighttypeToHeresdkPersonalPlacesBindingslistofSdkSearchIndexrangeReleaseHandleNullable(handle);


// Copyright (c) 2018-2022 HERE Global B.V. and its affiliate(s).
// All rights reserved.
//
// This software and other materials contain proprietary information
// controlled by HERE and are protected by applicable copyright legislation.
// Any use and utilization of this software and other materials and
// disclosure to any third parties is conditional upon having a separate
// agreement with HERE for the access, use, utilization or disclosure of this
// software. In the absence of such agreement, the use of the software is not
// allowed.
//













final _heresdkPositioningBindingslistofLocaleCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_positioning_bindingsListOf_Locale_create_handle'));
final _heresdkPositioningBindingslistofLocaleReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_positioning_bindingsListOf_Locale_release_handle'));
final _heresdkPositioningBindingslistofLocaleInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_positioning_bindingsListOf_Locale_insert'));
final _heresdkPositioningBindingslistofLocaleIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_positioning_bindingsListOf_Locale_iterator'));
final _heresdkPositioningBindingslistofLocaleIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_positioning_bindingsListOf_Locale_iterator_release_handle'));
final _heresdkPositioningBindingslistofLocaleIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_positioning_bindingsListOf_Locale_iterator_is_valid'));
final _heresdkPositioningBindingslistofLocaleIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_positioning_bindingsListOf_Locale_iterator_increment'));
final _heresdkPositioningBindingslistofLocaleIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_positioning_bindingsListOf_Locale_iterator_get'));

Pointer<Void> heresdkPositioningBindingslistofLocaleToFfi(List<Locale> value) {
  final _result = _heresdkPositioningBindingslistofLocaleCreateHandle();
  for (final element in value) {
    final _elementHandle = localeToFfi(element);
    _heresdkPositioningBindingslistofLocaleInsert(_result, _elementHandle);
    localeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Locale> heresdkPositioningBindingslistofLocaleFromFfi(Pointer<Void> handle) {
  final result = List<Locale>.empty(growable: true);
  final _iteratorHandle = _heresdkPositioningBindingslistofLocaleIterator(handle);
  while (_heresdkPositioningBindingslistofLocaleIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkPositioningBindingslistofLocaleIteratorGet(_iteratorHandle);
    try {
      result.add(localeFromFfi(_elementHandle));
    } finally {
      localeReleaseFfiHandle(_elementHandle);
    }
    _heresdkPositioningBindingslistofLocaleIteratorIncrement(_iteratorHandle);
  }
  _heresdkPositioningBindingslistofLocaleIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkPositioningBindingslistofLocaleReleaseFfiHandle(Pointer<Void> handle) => _heresdkPositioningBindingslistofLocaleReleaseHandle(handle);

final _heresdkPositioningBindingslistofLocaleCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_positioning_bindingsListOf_Locale_create_handle_nullable'));
final _heresdkPositioningBindingslistofLocaleReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_positioning_bindingsListOf_Locale_release_handle_nullable'));
final _heresdkPositioningBindingslistofLocaleGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_positioning_bindingsListOf_Locale_get_value_nullable'));

Pointer<Void> heresdkPositioningBindingslistofLocaleToFfiNullable(List<Locale>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkPositioningBindingslistofLocaleToFfi(value);
  final result = _heresdkPositioningBindingslistofLocaleCreateHandleNullable(_handle);
  heresdkPositioningBindingslistofLocaleReleaseFfiHandle(_handle);
  return result;
}

List<Locale>? heresdkPositioningBindingslistofLocaleFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkPositioningBindingslistofLocaleGetValueNullable(handle);
  final result = heresdkPositioningBindingslistofLocaleFromFfi(_handle);
  heresdkPositioningBindingslistofLocaleReleaseFfiHandle(_handle);
  return result;
}

void heresdkPositioningBindingslistofLocaleReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkPositioningBindingslistofLocaleReleaseHandleNullable(handle);

final _heresdkPositioningBindingslistofSdkCoreGeocoordinatesCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_positioning_bindingsListOf_sdk_core_GeoCoordinates_create_handle'));
final _heresdkPositioningBindingslistofSdkCoreGeocoordinatesReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_positioning_bindingsListOf_sdk_core_GeoCoordinates_release_handle'));
final _heresdkPositioningBindingslistofSdkCoreGeocoordinatesInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_positioning_bindingsListOf_sdk_core_GeoCoordinates_insert'));
final _heresdkPositioningBindingslistofSdkCoreGeocoordinatesIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_positioning_bindingsListOf_sdk_core_GeoCoordinates_iterator'));
final _heresdkPositioningBindingslistofSdkCoreGeocoordinatesIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_positioning_bindingsListOf_sdk_core_GeoCoordinates_iterator_release_handle'));
final _heresdkPositioningBindingslistofSdkCoreGeocoordinatesIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_positioning_bindingsListOf_sdk_core_GeoCoordinates_iterator_is_valid'));
final _heresdkPositioningBindingslistofSdkCoreGeocoordinatesIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_positioning_bindingsListOf_sdk_core_GeoCoordinates_iterator_increment'));
final _heresdkPositioningBindingslistofSdkCoreGeocoordinatesIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_positioning_bindingsListOf_sdk_core_GeoCoordinates_iterator_get'));

Pointer<Void> heresdkPositioningBindingslistofSdkCoreGeocoordinatesToFfi(List<GeoCoordinates> value) {
  final _result = _heresdkPositioningBindingslistofSdkCoreGeocoordinatesCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreGeocoordinatesToFfi(element);
    _heresdkPositioningBindingslistofSdkCoreGeocoordinatesInsert(_result, _elementHandle);
    sdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoCoordinates> heresdkPositioningBindingslistofSdkCoreGeocoordinatesFromFfi(Pointer<Void> handle) {
  final result = List<GeoCoordinates>.empty(growable: true);
  final _iteratorHandle = _heresdkPositioningBindingslistofSdkCoreGeocoordinatesIterator(handle);
  while (_heresdkPositioningBindingslistofSdkCoreGeocoordinatesIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkPositioningBindingslistofSdkCoreGeocoordinatesIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreGeocoordinatesFromFfi(_elementHandle));
    } finally {
      sdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
    }
    _heresdkPositioningBindingslistofSdkCoreGeocoordinatesIteratorIncrement(_iteratorHandle);
  }
  _heresdkPositioningBindingslistofSdkCoreGeocoordinatesIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkPositioningBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(Pointer<Void> handle) => _heresdkPositioningBindingslistofSdkCoreGeocoordinatesReleaseHandle(handle);

final _heresdkPositioningBindingslistofSdkCoreGeocoordinatesCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_positioning_bindingsListOf_sdk_core_GeoCoordinates_create_handle_nullable'));
final _heresdkPositioningBindingslistofSdkCoreGeocoordinatesReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_positioning_bindingsListOf_sdk_core_GeoCoordinates_release_handle_nullable'));
final _heresdkPositioningBindingslistofSdkCoreGeocoordinatesGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_positioning_bindingsListOf_sdk_core_GeoCoordinates_get_value_nullable'));

Pointer<Void> heresdkPositioningBindingslistofSdkCoreGeocoordinatesToFfiNullable(List<GeoCoordinates>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkPositioningBindingslistofSdkCoreGeocoordinatesToFfi(value);
  final result = _heresdkPositioningBindingslistofSdkCoreGeocoordinatesCreateHandleNullable(_handle);
  heresdkPositioningBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

List<GeoCoordinates>? heresdkPositioningBindingslistofSdkCoreGeocoordinatesFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkPositioningBindingslistofSdkCoreGeocoordinatesGetValueNullable(handle);
  final result = heresdkPositioningBindingslistofSdkCoreGeocoordinatesFromFfi(_handle);
  heresdkPositioningBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

void heresdkPositioningBindingslistofSdkCoreGeocoordinatesReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkPositioningBindingslistofSdkCoreGeocoordinatesReleaseHandleNullable(handle);

final _heresdkPositioningBindingslistofSdkCoreLocalizedtextCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_positioning_bindingsListOf_sdk_core_LocalizedText_create_handle'));
final _heresdkPositioningBindingslistofSdkCoreLocalizedtextReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_positioning_bindingsListOf_sdk_core_LocalizedText_release_handle'));
final _heresdkPositioningBindingslistofSdkCoreLocalizedtextInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_positioning_bindingsListOf_sdk_core_LocalizedText_insert'));
final _heresdkPositioningBindingslistofSdkCoreLocalizedtextIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_positioning_bindingsListOf_sdk_core_LocalizedText_iterator'));
final _heresdkPositioningBindingslistofSdkCoreLocalizedtextIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_positioning_bindingsListOf_sdk_core_LocalizedText_iterator_release_handle'));
final _heresdkPositioningBindingslistofSdkCoreLocalizedtextIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_positioning_bindingsListOf_sdk_core_LocalizedText_iterator_is_valid'));
final _heresdkPositioningBindingslistofSdkCoreLocalizedtextIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_positioning_bindingsListOf_sdk_core_LocalizedText_iterator_increment'));
final _heresdkPositioningBindingslistofSdkCoreLocalizedtextIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_positioning_bindingsListOf_sdk_core_LocalizedText_iterator_get'));

Pointer<Void> heresdkPositioningBindingslistofSdkCoreLocalizedtextToFfi(List<LocalizedText> value) {
  final _result = _heresdkPositioningBindingslistofSdkCoreLocalizedtextCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreLocalizedtextToFfi(element);
    _heresdkPositioningBindingslistofSdkCoreLocalizedtextInsert(_result, _elementHandle);
    sdkCoreLocalizedtextReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<LocalizedText> heresdkPositioningBindingslistofSdkCoreLocalizedtextFromFfi(Pointer<Void> handle) {
  final result = List<LocalizedText>.empty(growable: true);
  final _iteratorHandle = _heresdkPositioningBindingslistofSdkCoreLocalizedtextIterator(handle);
  while (_heresdkPositioningBindingslistofSdkCoreLocalizedtextIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkPositioningBindingslistofSdkCoreLocalizedtextIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreLocalizedtextFromFfi(_elementHandle));
    } finally {
      sdkCoreLocalizedtextReleaseFfiHandle(_elementHandle);
    }
    _heresdkPositioningBindingslistofSdkCoreLocalizedtextIteratorIncrement(_iteratorHandle);
  }
  _heresdkPositioningBindingslistofSdkCoreLocalizedtextIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkPositioningBindingslistofSdkCoreLocalizedtextReleaseFfiHandle(Pointer<Void> handle) => _heresdkPositioningBindingslistofSdkCoreLocalizedtextReleaseHandle(handle);

final _heresdkPositioningBindingslistofSdkCoreLocalizedtextCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_positioning_bindingsListOf_sdk_core_LocalizedText_create_handle_nullable'));
final _heresdkPositioningBindingslistofSdkCoreLocalizedtextReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_positioning_bindingsListOf_sdk_core_LocalizedText_release_handle_nullable'));
final _heresdkPositioningBindingslistofSdkCoreLocalizedtextGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_positioning_bindingsListOf_sdk_core_LocalizedText_get_value_nullable'));

Pointer<Void> heresdkPositioningBindingslistofSdkCoreLocalizedtextToFfiNullable(List<LocalizedText>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkPositioningBindingslistofSdkCoreLocalizedtextToFfi(value);
  final result = _heresdkPositioningBindingslistofSdkCoreLocalizedtextCreateHandleNullable(_handle);
  heresdkPositioningBindingslistofSdkCoreLocalizedtextReleaseFfiHandle(_handle);
  return result;
}

List<LocalizedText>? heresdkPositioningBindingslistofSdkCoreLocalizedtextFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkPositioningBindingslistofSdkCoreLocalizedtextGetValueNullable(handle);
  final result = heresdkPositioningBindingslistofSdkCoreLocalizedtextFromFfi(_handle);
  heresdkPositioningBindingslistofSdkCoreLocalizedtextReleaseFfiHandle(_handle);
  return result;
}

void heresdkPositioningBindingslistofSdkCoreLocalizedtextReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkPositioningBindingslistofSdkCoreLocalizedtextReleaseHandleNullable(handle);

final _heresdkPositioningBindingslistofSdkCoreEngineLayerconfigurationFeatureCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_positioning_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_create_handle'));
final _heresdkPositioningBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_positioning_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_release_handle'));
final _heresdkPositioningBindingslistofSdkCoreEngineLayerconfigurationFeatureInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_positioning_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_insert'));
final _heresdkPositioningBindingslistofSdkCoreEngineLayerconfigurationFeatureIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_positioning_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator'));
final _heresdkPositioningBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_positioning_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator_release_handle'));
final _heresdkPositioningBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_positioning_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator_is_valid'));
final _heresdkPositioningBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_positioning_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator_increment'));
final _heresdkPositioningBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_positioning_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator_get'));

Pointer<Void> heresdkPositioningBindingslistofSdkCoreEngineLayerconfigurationFeatureToFfi(List<LayerConfigurationFeature> value) {
  final _result = _heresdkPositioningBindingslistofSdkCoreEngineLayerconfigurationFeatureCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreEngineLayerconfigurationFeatureToFfi(element);
    _heresdkPositioningBindingslistofSdkCoreEngineLayerconfigurationFeatureInsert(_result, _elementHandle);
    sdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<LayerConfigurationFeature> heresdkPositioningBindingslistofSdkCoreEngineLayerconfigurationFeatureFromFfi(Pointer<Void> handle) {
  final result = List<LayerConfigurationFeature>.empty(growable: true);
  final _iteratorHandle = _heresdkPositioningBindingslistofSdkCoreEngineLayerconfigurationFeatureIterator(handle);
  while (_heresdkPositioningBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkPositioningBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreEngineLayerconfigurationFeatureFromFfi(_elementHandle));
    } finally {
      sdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(_elementHandle);
    }
    _heresdkPositioningBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorIncrement(_iteratorHandle);
  }
  _heresdkPositioningBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkPositioningBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(Pointer<Void> handle) => _heresdkPositioningBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseHandle(handle);

final _heresdkPositioningBindingslistofSdkCoreEngineLayerconfigurationFeatureCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_positioning_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_create_handle_nullable'));
final _heresdkPositioningBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_positioning_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_release_handle_nullable'));
final _heresdkPositioningBindingslistofSdkCoreEngineLayerconfigurationFeatureGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_positioning_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_get_value_nullable'));

Pointer<Void> heresdkPositioningBindingslistofSdkCoreEngineLayerconfigurationFeatureToFfiNullable(List<LayerConfigurationFeature>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkPositioningBindingslistofSdkCoreEngineLayerconfigurationFeatureToFfi(value);
  final result = _heresdkPositioningBindingslistofSdkCoreEngineLayerconfigurationFeatureCreateHandleNullable(_handle);
  heresdkPositioningBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(_handle);
  return result;
}

List<LayerConfigurationFeature>? heresdkPositioningBindingslistofSdkCoreEngineLayerconfigurationFeatureFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkPositioningBindingslistofSdkCoreEngineLayerconfigurationFeatureGetValueNullable(handle);
  final result = heresdkPositioningBindingslistofSdkCoreEngineLayerconfigurationFeatureFromFfi(_handle);
  heresdkPositioningBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(_handle);
  return result;
}

void heresdkPositioningBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkPositioningBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseHandleNullable(handle);

final _heresdkPositioningBindingslistofSdkLocationLocationfeatureCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_positioning_bindingsListOf_sdk_location_LocationFeature_create_handle'));
final _heresdkPositioningBindingslistofSdkLocationLocationfeatureReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_positioning_bindingsListOf_sdk_location_LocationFeature_release_handle'));
final _heresdkPositioningBindingslistofSdkLocationLocationfeatureInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_positioning_bindingsListOf_sdk_location_LocationFeature_insert'));
final _heresdkPositioningBindingslistofSdkLocationLocationfeatureIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_positioning_bindingsListOf_sdk_location_LocationFeature_iterator'));
final _heresdkPositioningBindingslistofSdkLocationLocationfeatureIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_positioning_bindingsListOf_sdk_location_LocationFeature_iterator_release_handle'));
final _heresdkPositioningBindingslistofSdkLocationLocationfeatureIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_positioning_bindingsListOf_sdk_location_LocationFeature_iterator_is_valid'));
final _heresdkPositioningBindingslistofSdkLocationLocationfeatureIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_positioning_bindingsListOf_sdk_location_LocationFeature_iterator_increment'));
final _heresdkPositioningBindingslistofSdkLocationLocationfeatureIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_positioning_bindingsListOf_sdk_location_LocationFeature_iterator_get'));

Pointer<Void> heresdkPositioningBindingslistofSdkLocationLocationfeatureToFfi(List<LocationFeature> value) {
  final _result = _heresdkPositioningBindingslistofSdkLocationLocationfeatureCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkLocationLocationfeatureToFfi(element);
    _heresdkPositioningBindingslistofSdkLocationLocationfeatureInsert(_result, _elementHandle);
    sdkLocationLocationfeatureReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<LocationFeature> heresdkPositioningBindingslistofSdkLocationLocationfeatureFromFfi(Pointer<Void> handle) {
  final result = List<LocationFeature>.empty(growable: true);
  final _iteratorHandle = _heresdkPositioningBindingslistofSdkLocationLocationfeatureIterator(handle);
  while (_heresdkPositioningBindingslistofSdkLocationLocationfeatureIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkPositioningBindingslistofSdkLocationLocationfeatureIteratorGet(_iteratorHandle);
    try {
      result.add(sdkLocationLocationfeatureFromFfi(_elementHandle));
    } finally {
      sdkLocationLocationfeatureReleaseFfiHandle(_elementHandle);
    }
    _heresdkPositioningBindingslistofSdkLocationLocationfeatureIteratorIncrement(_iteratorHandle);
  }
  _heresdkPositioningBindingslistofSdkLocationLocationfeatureIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkPositioningBindingslistofSdkLocationLocationfeatureReleaseFfiHandle(Pointer<Void> handle) => _heresdkPositioningBindingslistofSdkLocationLocationfeatureReleaseHandle(handle);

final _heresdkPositioningBindingslistofSdkLocationLocationfeatureCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_positioning_bindingsListOf_sdk_location_LocationFeature_create_handle_nullable'));
final _heresdkPositioningBindingslistofSdkLocationLocationfeatureReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_positioning_bindingsListOf_sdk_location_LocationFeature_release_handle_nullable'));
final _heresdkPositioningBindingslistofSdkLocationLocationfeatureGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_positioning_bindingsListOf_sdk_location_LocationFeature_get_value_nullable'));

Pointer<Void> heresdkPositioningBindingslistofSdkLocationLocationfeatureToFfiNullable(List<LocationFeature>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkPositioningBindingslistofSdkLocationLocationfeatureToFfi(value);
  final result = _heresdkPositioningBindingslistofSdkLocationLocationfeatureCreateHandleNullable(_handle);
  heresdkPositioningBindingslistofSdkLocationLocationfeatureReleaseFfiHandle(_handle);
  return result;
}

List<LocationFeature>? heresdkPositioningBindingslistofSdkLocationLocationfeatureFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkPositioningBindingslistofSdkLocationLocationfeatureGetValueNullable(handle);
  final result = heresdkPositioningBindingslistofSdkLocationLocationfeatureFromFfi(_handle);
  heresdkPositioningBindingslistofSdkLocationLocationfeatureReleaseFfiHandle(_handle);
  return result;
}

void heresdkPositioningBindingslistofSdkLocationLocationfeatureReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkPositioningBindingslistofSdkLocationLocationfeatureReleaseHandleNullable(handle);

final _heresdkPositioningBindingsmapofSdkCoreEngineEnginebaseurlToStringCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_positioning_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_create_handle'));
final _heresdkPositioningBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_positioning_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_release_handle'));
final _heresdkPositioningBindingsmapofSdkCoreEngineEnginebaseurlToStringPut = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32, Pointer<Void>),
    void Function(Pointer<Void>, int, Pointer<Void>)
  >('here_sdk_heresdk_positioning_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_put'));
final _heresdkPositioningBindingsmapofSdkCoreEngineEnginebaseurlToStringIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_positioning_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_iterator'));
final _heresdkPositioningBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_positioning_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_iterator_release_handle'));
final _heresdkPositioningBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_positioning_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_iterator_is_valid'));
final _heresdkPositioningBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_positioning_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_iterator_increment'));
final _heresdkPositioningBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorGetKey = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_positioning_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_iterator_get_key'));
final _heresdkPositioningBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorGetValue = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_positioning_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_iterator_get_value'));

Pointer<Void> heresdkPositioningBindingsmapofSdkCoreEngineEnginebaseurlToStringToFfi(Map<EngineBaseURL, String> value) {
  final _result = _heresdkPositioningBindingsmapofSdkCoreEngineEnginebaseurlToStringCreateHandle();
  for (final entry in value.entries) {
    final _keyHandle = sdkCoreEngineEnginebaseurlToFfi(entry.key);
    final _valueHandle = stringToFfi(entry.value);
    _heresdkPositioningBindingsmapofSdkCoreEngineEnginebaseurlToStringPut(_result, _keyHandle, _valueHandle);
    sdkCoreEngineEnginebaseurlReleaseFfiHandle(_keyHandle);
    stringReleaseFfiHandle(_valueHandle);
  }
  return _result;
}

Map<EngineBaseURL, String> heresdkPositioningBindingsmapofSdkCoreEngineEnginebaseurlToStringFromFfi(Pointer<Void> handle) {
  final result = Map<EngineBaseURL, String>();
  final _iteratorHandle = _heresdkPositioningBindingsmapofSdkCoreEngineEnginebaseurlToStringIterator(handle);
  while (_heresdkPositioningBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _keyHandle = _heresdkPositioningBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorGetKey(_iteratorHandle);
    final _valueHandle = _heresdkPositioningBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorGetValue(_iteratorHandle);
    try {
      result[sdkCoreEngineEnginebaseurlFromFfi(_keyHandle)] =
        stringFromFfi(_valueHandle);
    } finally {
      sdkCoreEngineEnginebaseurlReleaseFfiHandle(_keyHandle);
      stringReleaseFfiHandle(_valueHandle);
    }
    _heresdkPositioningBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorIncrement(_iteratorHandle);
  }
  _heresdkPositioningBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkPositioningBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseFfiHandle(Pointer<Void> handle) => _heresdkPositioningBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseHandle(handle);

final _heresdkPositioningBindingsmapofSdkCoreEngineEnginebaseurlToStringCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_positioning_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_create_handle_nullable'));
final _heresdkPositioningBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_positioning_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_release_handle_nullable'));
final _heresdkPositioningBindingsmapofSdkCoreEngineEnginebaseurlToStringGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_positioning_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_get_value_nullable'));

Pointer<Void> heresdkPositioningBindingsmapofSdkCoreEngineEnginebaseurlToStringToFfiNullable(Map<EngineBaseURL, String>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkPositioningBindingsmapofSdkCoreEngineEnginebaseurlToStringToFfi(value);
  final result = _heresdkPositioningBindingsmapofSdkCoreEngineEnginebaseurlToStringCreateHandleNullable(_handle);
  heresdkPositioningBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseFfiHandle(_handle);
  return result;
}

Map<EngineBaseURL, String>? heresdkPositioningBindingsmapofSdkCoreEngineEnginebaseurlToStringFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkPositioningBindingsmapofSdkCoreEngineEnginebaseurlToStringGetValueNullable(handle);
  final result = heresdkPositioningBindingsmapofSdkCoreEngineEnginebaseurlToStringFromFfi(_handle);
  heresdkPositioningBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseFfiHandle(_handle);
  return result;
}

void heresdkPositioningBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkPositioningBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseHandleNullable(handle);


// Copyright (c) 2018-2022 HERE Global B.V. and its affiliate(s).
// All rights reserved.
//
// This software and other materials contain proprietary information
// controlled by HERE and are protected by applicable copyright legislation.
// Any use and utilization of this software and other materials and
// disclosure to any third parties is conditional upon having a separate
// agreement with HERE for the access, use, utilization or disclosure of this
// software. In the absence of such agreement, the use of the software is not
// allowed.
//




















































final _heresdkRouteCorridorPrefetcherBindingslistofIntCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_Int_create_handle'));
final _heresdkRouteCorridorPrefetcherBindingslistofIntReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_Int_release_handle'));
final _heresdkRouteCorridorPrefetcherBindingslistofIntInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Int32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_Int_insert'));
final _heresdkRouteCorridorPrefetcherBindingslistofIntIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_Int_iterator'));
final _heresdkRouteCorridorPrefetcherBindingslistofIntIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_Int_iterator_release_handle'));
final _heresdkRouteCorridorPrefetcherBindingslistofIntIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_Int_iterator_is_valid'));
final _heresdkRouteCorridorPrefetcherBindingslistofIntIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_Int_iterator_increment'));
final _heresdkRouteCorridorPrefetcherBindingslistofIntIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_Int_iterator_get'));

Pointer<Void> heresdkRouteCorridorPrefetcherBindingslistofIntToFfi(List<int> value) {
  final _result = _heresdkRouteCorridorPrefetcherBindingslistofIntCreateHandle();
  for (final element in value) {
    final _elementHandle = (element);
    _heresdkRouteCorridorPrefetcherBindingslistofIntInsert(_result, _elementHandle);
    
  }
  return _result;
}

List<int> heresdkRouteCorridorPrefetcherBindingslistofIntFromFfi(Pointer<Void> handle) {
  final result = List<int>.empty(growable: true);
  final _iteratorHandle = _heresdkRouteCorridorPrefetcherBindingslistofIntIterator(handle);
  while (_heresdkRouteCorridorPrefetcherBindingslistofIntIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRouteCorridorPrefetcherBindingslistofIntIteratorGet(_iteratorHandle);
    try {
      result.add((_elementHandle));
    } finally {
      
    }
    _heresdkRouteCorridorPrefetcherBindingslistofIntIteratorIncrement(_iteratorHandle);
  }
  _heresdkRouteCorridorPrefetcherBindingslistofIntIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRouteCorridorPrefetcherBindingslistofIntReleaseFfiHandle(Pointer<Void> handle) => _heresdkRouteCorridorPrefetcherBindingslistofIntReleaseHandle(handle);

final _heresdkRouteCorridorPrefetcherBindingslistofIntCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_Int_create_handle_nullable'));
final _heresdkRouteCorridorPrefetcherBindingslistofIntReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_Int_release_handle_nullable'));
final _heresdkRouteCorridorPrefetcherBindingslistofIntGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_Int_get_value_nullable'));

Pointer<Void> heresdkRouteCorridorPrefetcherBindingslistofIntToFfiNullable(List<int>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRouteCorridorPrefetcherBindingslistofIntToFfi(value);
  final result = _heresdkRouteCorridorPrefetcherBindingslistofIntCreateHandleNullable(_handle);
  heresdkRouteCorridorPrefetcherBindingslistofIntReleaseFfiHandle(_handle);
  return result;
}

List<int>? heresdkRouteCorridorPrefetcherBindingslistofIntFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRouteCorridorPrefetcherBindingslistofIntGetValueNullable(handle);
  final result = heresdkRouteCorridorPrefetcherBindingslistofIntFromFfi(_handle);
  heresdkRouteCorridorPrefetcherBindingslistofIntReleaseFfiHandle(_handle);
  return result;
}

void heresdkRouteCorridorPrefetcherBindingslistofIntReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRouteCorridorPrefetcherBindingslistofIntReleaseHandleNullable(handle);

final _heresdkRouteCorridorPrefetcherBindingslistofLocaleCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_Locale_create_handle'));
final _heresdkRouteCorridorPrefetcherBindingslistofLocaleReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_Locale_release_handle'));
final _heresdkRouteCorridorPrefetcherBindingslistofLocaleInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_Locale_insert'));
final _heresdkRouteCorridorPrefetcherBindingslistofLocaleIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_Locale_iterator'));
final _heresdkRouteCorridorPrefetcherBindingslistofLocaleIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_Locale_iterator_release_handle'));
final _heresdkRouteCorridorPrefetcherBindingslistofLocaleIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_Locale_iterator_is_valid'));
final _heresdkRouteCorridorPrefetcherBindingslistofLocaleIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_Locale_iterator_increment'));
final _heresdkRouteCorridorPrefetcherBindingslistofLocaleIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_Locale_iterator_get'));

Pointer<Void> heresdkRouteCorridorPrefetcherBindingslistofLocaleToFfi(List<Locale> value) {
  final _result = _heresdkRouteCorridorPrefetcherBindingslistofLocaleCreateHandle();
  for (final element in value) {
    final _elementHandle = localeToFfi(element);
    _heresdkRouteCorridorPrefetcherBindingslistofLocaleInsert(_result, _elementHandle);
    localeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Locale> heresdkRouteCorridorPrefetcherBindingslistofLocaleFromFfi(Pointer<Void> handle) {
  final result = List<Locale>.empty(growable: true);
  final _iteratorHandle = _heresdkRouteCorridorPrefetcherBindingslistofLocaleIterator(handle);
  while (_heresdkRouteCorridorPrefetcherBindingslistofLocaleIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRouteCorridorPrefetcherBindingslistofLocaleIteratorGet(_iteratorHandle);
    try {
      result.add(localeFromFfi(_elementHandle));
    } finally {
      localeReleaseFfiHandle(_elementHandle);
    }
    _heresdkRouteCorridorPrefetcherBindingslistofLocaleIteratorIncrement(_iteratorHandle);
  }
  _heresdkRouteCorridorPrefetcherBindingslistofLocaleIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRouteCorridorPrefetcherBindingslistofLocaleReleaseFfiHandle(Pointer<Void> handle) => _heresdkRouteCorridorPrefetcherBindingslistofLocaleReleaseHandle(handle);

final _heresdkRouteCorridorPrefetcherBindingslistofLocaleCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_Locale_create_handle_nullable'));
final _heresdkRouteCorridorPrefetcherBindingslistofLocaleReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_Locale_release_handle_nullable'));
final _heresdkRouteCorridorPrefetcherBindingslistofLocaleGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_Locale_get_value_nullable'));

Pointer<Void> heresdkRouteCorridorPrefetcherBindingslistofLocaleToFfiNullable(List<Locale>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRouteCorridorPrefetcherBindingslistofLocaleToFfi(value);
  final result = _heresdkRouteCorridorPrefetcherBindingslistofLocaleCreateHandleNullable(_handle);
  heresdkRouteCorridorPrefetcherBindingslistofLocaleReleaseFfiHandle(_handle);
  return result;
}

List<Locale>? heresdkRouteCorridorPrefetcherBindingslistofLocaleFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRouteCorridorPrefetcherBindingslistofLocaleGetValueNullable(handle);
  final result = heresdkRouteCorridorPrefetcherBindingslistofLocaleFromFfi(_handle);
  heresdkRouteCorridorPrefetcherBindingslistofLocaleReleaseFfiHandle(_handle);
  return result;
}

void heresdkRouteCorridorPrefetcherBindingslistofLocaleReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRouteCorridorPrefetcherBindingslistofLocaleReleaseHandleNullable(handle);

final _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreCountrycodeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_core_CountryCode_create_handle'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreCountrycodeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_core_CountryCode_release_handle'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreCountrycodeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_core_CountryCode_insert'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreCountrycodeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_core_CountryCode_iterator'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreCountrycodeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_core_CountryCode_iterator_release_handle'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreCountrycodeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_core_CountryCode_iterator_is_valid'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreCountrycodeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_core_CountryCode_iterator_increment'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreCountrycodeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_core_CountryCode_iterator_get'));

Pointer<Void> heresdkRouteCorridorPrefetcherBindingslistofSdkCoreCountrycodeToFfi(List<CountryCode> value) {
  final _result = _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreCountrycodeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreCountrycodeToFfi(element);
    _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreCountrycodeInsert(_result, _elementHandle);
    sdkCoreCountrycodeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<CountryCode> heresdkRouteCorridorPrefetcherBindingslistofSdkCoreCountrycodeFromFfi(Pointer<Void> handle) {
  final result = List<CountryCode>.empty(growable: true);
  final _iteratorHandle = _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreCountrycodeIterator(handle);
  while (_heresdkRouteCorridorPrefetcherBindingslistofSdkCoreCountrycodeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreCountrycodeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreCountrycodeFromFfi(_elementHandle));
    } finally {
      sdkCoreCountrycodeReleaseFfiHandle(_elementHandle);
    }
    _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreCountrycodeIteratorIncrement(_iteratorHandle);
  }
  _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreCountrycodeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRouteCorridorPrefetcherBindingslistofSdkCoreCountrycodeReleaseFfiHandle(Pointer<Void> handle) => _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreCountrycodeReleaseHandle(handle);

final _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreCountrycodeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_core_CountryCode_create_handle_nullable'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreCountrycodeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_core_CountryCode_release_handle_nullable'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreCountrycodeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_core_CountryCode_get_value_nullable'));

Pointer<Void> heresdkRouteCorridorPrefetcherBindingslistofSdkCoreCountrycodeToFfiNullable(List<CountryCode>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRouteCorridorPrefetcherBindingslistofSdkCoreCountrycodeToFfi(value);
  final result = _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreCountrycodeCreateHandleNullable(_handle);
  heresdkRouteCorridorPrefetcherBindingslistofSdkCoreCountrycodeReleaseFfiHandle(_handle);
  return result;
}

List<CountryCode>? heresdkRouteCorridorPrefetcherBindingslistofSdkCoreCountrycodeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreCountrycodeGetValueNullable(handle);
  final result = heresdkRouteCorridorPrefetcherBindingslistofSdkCoreCountrycodeFromFfi(_handle);
  heresdkRouteCorridorPrefetcherBindingslistofSdkCoreCountrycodeReleaseFfiHandle(_handle);
  return result;
}

void heresdkRouteCorridorPrefetcherBindingslistofSdkCoreCountrycodeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreCountrycodeReleaseHandleNullable(handle);

final _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreGeoboxCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_core_GeoBox_create_handle'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreGeoboxReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_core_GeoBox_release_handle'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreGeoboxInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_core_GeoBox_insert'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreGeoboxIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_core_GeoBox_iterator'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreGeoboxIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_core_GeoBox_iterator_release_handle'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreGeoboxIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_core_GeoBox_iterator_is_valid'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreGeoboxIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_core_GeoBox_iterator_increment'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreGeoboxIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_core_GeoBox_iterator_get'));

Pointer<Void> heresdkRouteCorridorPrefetcherBindingslistofSdkCoreGeoboxToFfi(List<GeoBox> value) {
  final _result = _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreGeoboxCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreGeoboxToFfi(element);
    _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreGeoboxInsert(_result, _elementHandle);
    sdkCoreGeoboxReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoBox> heresdkRouteCorridorPrefetcherBindingslistofSdkCoreGeoboxFromFfi(Pointer<Void> handle) {
  final result = List<GeoBox>.empty(growable: true);
  final _iteratorHandle = _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreGeoboxIterator(handle);
  while (_heresdkRouteCorridorPrefetcherBindingslistofSdkCoreGeoboxIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreGeoboxIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreGeoboxFromFfi(_elementHandle));
    } finally {
      sdkCoreGeoboxReleaseFfiHandle(_elementHandle);
    }
    _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreGeoboxIteratorIncrement(_iteratorHandle);
  }
  _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreGeoboxIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRouteCorridorPrefetcherBindingslistofSdkCoreGeoboxReleaseFfiHandle(Pointer<Void> handle) => _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreGeoboxReleaseHandle(handle);

final _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreGeoboxCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_core_GeoBox_create_handle_nullable'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreGeoboxReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_core_GeoBox_release_handle_nullable'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreGeoboxGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_core_GeoBox_get_value_nullable'));

Pointer<Void> heresdkRouteCorridorPrefetcherBindingslistofSdkCoreGeoboxToFfiNullable(List<GeoBox>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRouteCorridorPrefetcherBindingslistofSdkCoreGeoboxToFfi(value);
  final result = _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreGeoboxCreateHandleNullable(_handle);
  heresdkRouteCorridorPrefetcherBindingslistofSdkCoreGeoboxReleaseFfiHandle(_handle);
  return result;
}

List<GeoBox>? heresdkRouteCorridorPrefetcherBindingslistofSdkCoreGeoboxFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreGeoboxGetValueNullable(handle);
  final result = heresdkRouteCorridorPrefetcherBindingslistofSdkCoreGeoboxFromFfi(_handle);
  heresdkRouteCorridorPrefetcherBindingslistofSdkCoreGeoboxReleaseFfiHandle(_handle);
  return result;
}

void heresdkRouteCorridorPrefetcherBindingslistofSdkCoreGeoboxReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreGeoboxReleaseHandleNullable(handle);

final _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreGeocoordinatesCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_core_GeoCoordinates_create_handle'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreGeocoordinatesReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_core_GeoCoordinates_release_handle'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreGeocoordinatesInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_core_GeoCoordinates_insert'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreGeocoordinatesIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_core_GeoCoordinates_iterator'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreGeocoordinatesIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_core_GeoCoordinates_iterator_release_handle'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreGeocoordinatesIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_core_GeoCoordinates_iterator_is_valid'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreGeocoordinatesIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_core_GeoCoordinates_iterator_increment'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreGeocoordinatesIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_core_GeoCoordinates_iterator_get'));

Pointer<Void> heresdkRouteCorridorPrefetcherBindingslistofSdkCoreGeocoordinatesToFfi(List<GeoCoordinates> value) {
  final _result = _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreGeocoordinatesCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreGeocoordinatesToFfi(element);
    _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreGeocoordinatesInsert(_result, _elementHandle);
    sdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoCoordinates> heresdkRouteCorridorPrefetcherBindingslistofSdkCoreGeocoordinatesFromFfi(Pointer<Void> handle) {
  final result = List<GeoCoordinates>.empty(growable: true);
  final _iteratorHandle = _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreGeocoordinatesIterator(handle);
  while (_heresdkRouteCorridorPrefetcherBindingslistofSdkCoreGeocoordinatesIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreGeocoordinatesIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreGeocoordinatesFromFfi(_elementHandle));
    } finally {
      sdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
    }
    _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreGeocoordinatesIteratorIncrement(_iteratorHandle);
  }
  _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreGeocoordinatesIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRouteCorridorPrefetcherBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(Pointer<Void> handle) => _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreGeocoordinatesReleaseHandle(handle);

final _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreGeocoordinatesCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_core_GeoCoordinates_create_handle_nullable'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreGeocoordinatesReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_core_GeoCoordinates_release_handle_nullable'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreGeocoordinatesGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_core_GeoCoordinates_get_value_nullable'));

Pointer<Void> heresdkRouteCorridorPrefetcherBindingslistofSdkCoreGeocoordinatesToFfiNullable(List<GeoCoordinates>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRouteCorridorPrefetcherBindingslistofSdkCoreGeocoordinatesToFfi(value);
  final result = _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreGeocoordinatesCreateHandleNullable(_handle);
  heresdkRouteCorridorPrefetcherBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

List<GeoCoordinates>? heresdkRouteCorridorPrefetcherBindingslistofSdkCoreGeocoordinatesFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreGeocoordinatesGetValueNullable(handle);
  final result = heresdkRouteCorridorPrefetcherBindingslistofSdkCoreGeocoordinatesFromFfi(_handle);
  heresdkRouteCorridorPrefetcherBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

void heresdkRouteCorridorPrefetcherBindingslistofSdkCoreGeocoordinatesReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreGeocoordinatesReleaseHandleNullable(handle);

final _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreGeopolygonCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_core_GeoPolygon_create_handle'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreGeopolygonReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_core_GeoPolygon_release_handle'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreGeopolygonInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_core_GeoPolygon_insert'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreGeopolygonIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_core_GeoPolygon_iterator'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreGeopolygonIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_core_GeoPolygon_iterator_release_handle'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreGeopolygonIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_core_GeoPolygon_iterator_is_valid'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreGeopolygonIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_core_GeoPolygon_iterator_increment'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreGeopolygonIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_core_GeoPolygon_iterator_get'));

Pointer<Void> heresdkRouteCorridorPrefetcherBindingslistofSdkCoreGeopolygonToFfi(List<GeoPolygon> value) {
  final _result = _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreGeopolygonCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreGeopolygonToFfi(element);
    _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreGeopolygonInsert(_result, _elementHandle);
    sdkCoreGeopolygonReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoPolygon> heresdkRouteCorridorPrefetcherBindingslistofSdkCoreGeopolygonFromFfi(Pointer<Void> handle) {
  final result = List<GeoPolygon>.empty(growable: true);
  final _iteratorHandle = _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreGeopolygonIterator(handle);
  while (_heresdkRouteCorridorPrefetcherBindingslistofSdkCoreGeopolygonIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreGeopolygonIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreGeopolygonFromFfi(_elementHandle));
    } finally {
      sdkCoreGeopolygonReleaseFfiHandle(_elementHandle);
    }
    _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreGeopolygonIteratorIncrement(_iteratorHandle);
  }
  _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreGeopolygonIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRouteCorridorPrefetcherBindingslistofSdkCoreGeopolygonReleaseFfiHandle(Pointer<Void> handle) => _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreGeopolygonReleaseHandle(handle);

final _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreGeopolygonCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_core_GeoPolygon_create_handle_nullable'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreGeopolygonReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_core_GeoPolygon_release_handle_nullable'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreGeopolygonGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_core_GeoPolygon_get_value_nullable'));

Pointer<Void> heresdkRouteCorridorPrefetcherBindingslistofSdkCoreGeopolygonToFfiNullable(List<GeoPolygon>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRouteCorridorPrefetcherBindingslistofSdkCoreGeopolygonToFfi(value);
  final result = _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreGeopolygonCreateHandleNullable(_handle);
  heresdkRouteCorridorPrefetcherBindingslistofSdkCoreGeopolygonReleaseFfiHandle(_handle);
  return result;
}

List<GeoPolygon>? heresdkRouteCorridorPrefetcherBindingslistofSdkCoreGeopolygonFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreGeopolygonGetValueNullable(handle);
  final result = heresdkRouteCorridorPrefetcherBindingslistofSdkCoreGeopolygonFromFfi(_handle);
  heresdkRouteCorridorPrefetcherBindingslistofSdkCoreGeopolygonReleaseFfiHandle(_handle);
  return result;
}

void heresdkRouteCorridorPrefetcherBindingslistofSdkCoreGeopolygonReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreGeopolygonReleaseHandleNullable(handle);

final _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreLanguagecodeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_core_LanguageCode_create_handle'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreLanguagecodeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_core_LanguageCode_release_handle'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreLanguagecodeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_core_LanguageCode_insert'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreLanguagecodeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_core_LanguageCode_iterator'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreLanguagecodeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_core_LanguageCode_iterator_release_handle'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreLanguagecodeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_core_LanguageCode_iterator_is_valid'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreLanguagecodeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_core_LanguageCode_iterator_increment'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreLanguagecodeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_core_LanguageCode_iterator_get'));

Pointer<Void> heresdkRouteCorridorPrefetcherBindingslistofSdkCoreLanguagecodeToFfi(List<LanguageCode> value) {
  final _result = _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreLanguagecodeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreLanguagecodeToFfi(element);
    _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreLanguagecodeInsert(_result, _elementHandle);
    sdkCoreLanguagecodeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<LanguageCode> heresdkRouteCorridorPrefetcherBindingslistofSdkCoreLanguagecodeFromFfi(Pointer<Void> handle) {
  final result = List<LanguageCode>.empty(growable: true);
  final _iteratorHandle = _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreLanguagecodeIterator(handle);
  while (_heresdkRouteCorridorPrefetcherBindingslistofSdkCoreLanguagecodeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreLanguagecodeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreLanguagecodeFromFfi(_elementHandle));
    } finally {
      sdkCoreLanguagecodeReleaseFfiHandle(_elementHandle);
    }
    _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreLanguagecodeIteratorIncrement(_iteratorHandle);
  }
  _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreLanguagecodeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRouteCorridorPrefetcherBindingslistofSdkCoreLanguagecodeReleaseFfiHandle(Pointer<Void> handle) => _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreLanguagecodeReleaseHandle(handle);

final _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreLanguagecodeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_core_LanguageCode_create_handle_nullable'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreLanguagecodeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_core_LanguageCode_release_handle_nullable'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreLanguagecodeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_core_LanguageCode_get_value_nullable'));

Pointer<Void> heresdkRouteCorridorPrefetcherBindingslistofSdkCoreLanguagecodeToFfiNullable(List<LanguageCode>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRouteCorridorPrefetcherBindingslistofSdkCoreLanguagecodeToFfi(value);
  final result = _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreLanguagecodeCreateHandleNullable(_handle);
  heresdkRouteCorridorPrefetcherBindingslistofSdkCoreLanguagecodeReleaseFfiHandle(_handle);
  return result;
}

List<LanguageCode>? heresdkRouteCorridorPrefetcherBindingslistofSdkCoreLanguagecodeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreLanguagecodeGetValueNullable(handle);
  final result = heresdkRouteCorridorPrefetcherBindingslistofSdkCoreLanguagecodeFromFfi(_handle);
  heresdkRouteCorridorPrefetcherBindingslistofSdkCoreLanguagecodeReleaseFfiHandle(_handle);
  return result;
}

void heresdkRouteCorridorPrefetcherBindingslistofSdkCoreLanguagecodeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreLanguagecodeReleaseHandleNullable(handle);

final _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreLocalizedtextCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_core_LocalizedText_create_handle'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreLocalizedtextReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_core_LocalizedText_release_handle'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreLocalizedtextInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_core_LocalizedText_insert'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreLocalizedtextIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_core_LocalizedText_iterator'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreLocalizedtextIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_core_LocalizedText_iterator_release_handle'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreLocalizedtextIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_core_LocalizedText_iterator_is_valid'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreLocalizedtextIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_core_LocalizedText_iterator_increment'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreLocalizedtextIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_core_LocalizedText_iterator_get'));

Pointer<Void> heresdkRouteCorridorPrefetcherBindingslistofSdkCoreLocalizedtextToFfi(List<LocalizedText> value) {
  final _result = _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreLocalizedtextCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreLocalizedtextToFfi(element);
    _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreLocalizedtextInsert(_result, _elementHandle);
    sdkCoreLocalizedtextReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<LocalizedText> heresdkRouteCorridorPrefetcherBindingslistofSdkCoreLocalizedtextFromFfi(Pointer<Void> handle) {
  final result = List<LocalizedText>.empty(growable: true);
  final _iteratorHandle = _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreLocalizedtextIterator(handle);
  while (_heresdkRouteCorridorPrefetcherBindingslistofSdkCoreLocalizedtextIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreLocalizedtextIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreLocalizedtextFromFfi(_elementHandle));
    } finally {
      sdkCoreLocalizedtextReleaseFfiHandle(_elementHandle);
    }
    _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreLocalizedtextIteratorIncrement(_iteratorHandle);
  }
  _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreLocalizedtextIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRouteCorridorPrefetcherBindingslistofSdkCoreLocalizedtextReleaseFfiHandle(Pointer<Void> handle) => _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreLocalizedtextReleaseHandle(handle);

final _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreLocalizedtextCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_core_LocalizedText_create_handle_nullable'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreLocalizedtextReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_core_LocalizedText_release_handle_nullable'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreLocalizedtextGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_core_LocalizedText_get_value_nullable'));

Pointer<Void> heresdkRouteCorridorPrefetcherBindingslistofSdkCoreLocalizedtextToFfiNullable(List<LocalizedText>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRouteCorridorPrefetcherBindingslistofSdkCoreLocalizedtextToFfi(value);
  final result = _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreLocalizedtextCreateHandleNullable(_handle);
  heresdkRouteCorridorPrefetcherBindingslistofSdkCoreLocalizedtextReleaseFfiHandle(_handle);
  return result;
}

List<LocalizedText>? heresdkRouteCorridorPrefetcherBindingslistofSdkCoreLocalizedtextFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreLocalizedtextGetValueNullable(handle);
  final result = heresdkRouteCorridorPrefetcherBindingslistofSdkCoreLocalizedtextFromFfi(_handle);
  heresdkRouteCorridorPrefetcherBindingslistofSdkCoreLocalizedtextReleaseFfiHandle(_handle);
  return result;
}

void heresdkRouteCorridorPrefetcherBindingslistofSdkCoreLocalizedtextReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreLocalizedtextReleaseHandleNullable(handle);

final _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreLocationCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_core_Location_create_handle'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreLocationReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_core_Location_release_handle'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreLocationInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_core_Location_insert'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreLocationIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_core_Location_iterator'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreLocationIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_core_Location_iterator_release_handle'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreLocationIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_core_Location_iterator_is_valid'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreLocationIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_core_Location_iterator_increment'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreLocationIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_core_Location_iterator_get'));

Pointer<Void> heresdkRouteCorridorPrefetcherBindingslistofSdkCoreLocationToFfi(List<location_impl.Location> value) {
  final _result = _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreLocationCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreLocationToFfi(element);
    _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreLocationInsert(_result, _elementHandle);
    sdkCoreLocationReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<location_impl.Location> heresdkRouteCorridorPrefetcherBindingslistofSdkCoreLocationFromFfi(Pointer<Void> handle) {
  final result = List<location_impl.Location>.empty(growable: true);
  final _iteratorHandle = _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreLocationIterator(handle);
  while (_heresdkRouteCorridorPrefetcherBindingslistofSdkCoreLocationIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreLocationIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreLocationFromFfi(_elementHandle));
    } finally {
      sdkCoreLocationReleaseFfiHandle(_elementHandle);
    }
    _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreLocationIteratorIncrement(_iteratorHandle);
  }
  _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreLocationIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRouteCorridorPrefetcherBindingslistofSdkCoreLocationReleaseFfiHandle(Pointer<Void> handle) => _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreLocationReleaseHandle(handle);

final _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreLocationCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_core_Location_create_handle_nullable'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreLocationReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_core_Location_release_handle_nullable'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreLocationGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_core_Location_get_value_nullable'));

Pointer<Void> heresdkRouteCorridorPrefetcherBindingslistofSdkCoreLocationToFfiNullable(List<location_impl.Location>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRouteCorridorPrefetcherBindingslistofSdkCoreLocationToFfi(value);
  final result = _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreLocationCreateHandleNullable(_handle);
  heresdkRouteCorridorPrefetcherBindingslistofSdkCoreLocationReleaseFfiHandle(_handle);
  return result;
}

List<location_impl.Location>? heresdkRouteCorridorPrefetcherBindingslistofSdkCoreLocationFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreLocationGetValueNullable(handle);
  final result = heresdkRouteCorridorPrefetcherBindingslistofSdkCoreLocationFromFfi(_handle);
  heresdkRouteCorridorPrefetcherBindingslistofSdkCoreLocationReleaseFfiHandle(_handle);
  return result;
}

void heresdkRouteCorridorPrefetcherBindingslistofSdkCoreLocationReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreLocationReleaseHandleNullable(handle);

final _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreEngineLayerconfigurationFeatureCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_create_handle'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_release_handle'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreEngineLayerconfigurationFeatureInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_insert'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreEngineLayerconfigurationFeatureIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator_release_handle'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator_is_valid'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator_increment'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator_get'));

Pointer<Void> heresdkRouteCorridorPrefetcherBindingslistofSdkCoreEngineLayerconfigurationFeatureToFfi(List<LayerConfigurationFeature> value) {
  final _result = _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreEngineLayerconfigurationFeatureCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreEngineLayerconfigurationFeatureToFfi(element);
    _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreEngineLayerconfigurationFeatureInsert(_result, _elementHandle);
    sdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<LayerConfigurationFeature> heresdkRouteCorridorPrefetcherBindingslistofSdkCoreEngineLayerconfigurationFeatureFromFfi(Pointer<Void> handle) {
  final result = List<LayerConfigurationFeature>.empty(growable: true);
  final _iteratorHandle = _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreEngineLayerconfigurationFeatureIterator(handle);
  while (_heresdkRouteCorridorPrefetcherBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreEngineLayerconfigurationFeatureFromFfi(_elementHandle));
    } finally {
      sdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(_elementHandle);
    }
    _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorIncrement(_iteratorHandle);
  }
  _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRouteCorridorPrefetcherBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(Pointer<Void> handle) => _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseHandle(handle);

final _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreEngineLayerconfigurationFeatureCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_create_handle_nullable'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_release_handle_nullable'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreEngineLayerconfigurationFeatureGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_get_value_nullable'));

Pointer<Void> heresdkRouteCorridorPrefetcherBindingslistofSdkCoreEngineLayerconfigurationFeatureToFfiNullable(List<LayerConfigurationFeature>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRouteCorridorPrefetcherBindingslistofSdkCoreEngineLayerconfigurationFeatureToFfi(value);
  final result = _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreEngineLayerconfigurationFeatureCreateHandleNullable(_handle);
  heresdkRouteCorridorPrefetcherBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(_handle);
  return result;
}

List<LayerConfigurationFeature>? heresdkRouteCorridorPrefetcherBindingslistofSdkCoreEngineLayerconfigurationFeatureFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreEngineLayerconfigurationFeatureGetValueNullable(handle);
  final result = heresdkRouteCorridorPrefetcherBindingslistofSdkCoreEngineLayerconfigurationFeatureFromFfi(_handle);
  heresdkRouteCorridorPrefetcherBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(_handle);
  return result;
}

void heresdkRouteCorridorPrefetcherBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRouteCorridorPrefetcherBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseHandleNullable(handle);

final _heresdkRouteCorridorPrefetcherBindingslistofSdkMaploaderInstalledregionCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_maploader_InstalledRegion_create_handle'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkMaploaderInstalledregionReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_maploader_InstalledRegion_release_handle'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkMaploaderInstalledregionInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_maploader_InstalledRegion_insert'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkMaploaderInstalledregionIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_maploader_InstalledRegion_iterator'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkMaploaderInstalledregionIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_maploader_InstalledRegion_iterator_release_handle'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkMaploaderInstalledregionIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_maploader_InstalledRegion_iterator_is_valid'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkMaploaderInstalledregionIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_maploader_InstalledRegion_iterator_increment'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkMaploaderInstalledregionIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_maploader_InstalledRegion_iterator_get'));

Pointer<Void> heresdkRouteCorridorPrefetcherBindingslistofSdkMaploaderInstalledregionToFfi(List<InstalledRegion> value) {
  final _result = _heresdkRouteCorridorPrefetcherBindingslistofSdkMaploaderInstalledregionCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkMaploaderInstalledregionToFfi(element);
    _heresdkRouteCorridorPrefetcherBindingslistofSdkMaploaderInstalledregionInsert(_result, _elementHandle);
    sdkMaploaderInstalledregionReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<InstalledRegion> heresdkRouteCorridorPrefetcherBindingslistofSdkMaploaderInstalledregionFromFfi(Pointer<Void> handle) {
  final result = List<InstalledRegion>.empty(growable: true);
  final _iteratorHandle = _heresdkRouteCorridorPrefetcherBindingslistofSdkMaploaderInstalledregionIterator(handle);
  while (_heresdkRouteCorridorPrefetcherBindingslistofSdkMaploaderInstalledregionIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRouteCorridorPrefetcherBindingslistofSdkMaploaderInstalledregionIteratorGet(_iteratorHandle);
    try {
      result.add(sdkMaploaderInstalledregionFromFfi(_elementHandle));
    } finally {
      sdkMaploaderInstalledregionReleaseFfiHandle(_elementHandle);
    }
    _heresdkRouteCorridorPrefetcherBindingslistofSdkMaploaderInstalledregionIteratorIncrement(_iteratorHandle);
  }
  _heresdkRouteCorridorPrefetcherBindingslistofSdkMaploaderInstalledregionIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRouteCorridorPrefetcherBindingslistofSdkMaploaderInstalledregionReleaseFfiHandle(Pointer<Void> handle) => _heresdkRouteCorridorPrefetcherBindingslistofSdkMaploaderInstalledregionReleaseHandle(handle);

final _heresdkRouteCorridorPrefetcherBindingslistofSdkMaploaderInstalledregionCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_maploader_InstalledRegion_create_handle_nullable'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkMaploaderInstalledregionReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_maploader_InstalledRegion_release_handle_nullable'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkMaploaderInstalledregionGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_maploader_InstalledRegion_get_value_nullable'));

Pointer<Void> heresdkRouteCorridorPrefetcherBindingslistofSdkMaploaderInstalledregionToFfiNullable(List<InstalledRegion>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRouteCorridorPrefetcherBindingslistofSdkMaploaderInstalledregionToFfi(value);
  final result = _heresdkRouteCorridorPrefetcherBindingslistofSdkMaploaderInstalledregionCreateHandleNullable(_handle);
  heresdkRouteCorridorPrefetcherBindingslistofSdkMaploaderInstalledregionReleaseFfiHandle(_handle);
  return result;
}

List<InstalledRegion>? heresdkRouteCorridorPrefetcherBindingslistofSdkMaploaderInstalledregionFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRouteCorridorPrefetcherBindingslistofSdkMaploaderInstalledregionGetValueNullable(handle);
  final result = heresdkRouteCorridorPrefetcherBindingslistofSdkMaploaderInstalledregionFromFfi(_handle);
  heresdkRouteCorridorPrefetcherBindingslistofSdkMaploaderInstalledregionReleaseFfiHandle(_handle);
  return result;
}

void heresdkRouteCorridorPrefetcherBindingslistofSdkMaploaderInstalledregionReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRouteCorridorPrefetcherBindingslistofSdkMaploaderInstalledregionReleaseHandleNullable(handle);

final _heresdkRouteCorridorPrefetcherBindingslistofSdkMaploaderRegionCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_maploader_Region_create_handle'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkMaploaderRegionReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_maploader_Region_release_handle'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkMaploaderRegionInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_maploader_Region_insert'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkMaploaderRegionIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_maploader_Region_iterator'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkMaploaderRegionIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_maploader_Region_iterator_release_handle'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkMaploaderRegionIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_maploader_Region_iterator_is_valid'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkMaploaderRegionIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_maploader_Region_iterator_increment'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkMaploaderRegionIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_maploader_Region_iterator_get'));

Pointer<Void> heresdkRouteCorridorPrefetcherBindingslistofSdkMaploaderRegionToFfi(List<Region> value) {
  final _result = _heresdkRouteCorridorPrefetcherBindingslistofSdkMaploaderRegionCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkMaploaderRegionToFfi(element);
    _heresdkRouteCorridorPrefetcherBindingslistofSdkMaploaderRegionInsert(_result, _elementHandle);
    sdkMaploaderRegionReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Region> heresdkRouteCorridorPrefetcherBindingslistofSdkMaploaderRegionFromFfi(Pointer<Void> handle) {
  final result = List<Region>.empty(growable: true);
  final _iteratorHandle = _heresdkRouteCorridorPrefetcherBindingslistofSdkMaploaderRegionIterator(handle);
  while (_heresdkRouteCorridorPrefetcherBindingslistofSdkMaploaderRegionIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRouteCorridorPrefetcherBindingslistofSdkMaploaderRegionIteratorGet(_iteratorHandle);
    try {
      result.add(sdkMaploaderRegionFromFfi(_elementHandle));
    } finally {
      sdkMaploaderRegionReleaseFfiHandle(_elementHandle);
    }
    _heresdkRouteCorridorPrefetcherBindingslistofSdkMaploaderRegionIteratorIncrement(_iteratorHandle);
  }
  _heresdkRouteCorridorPrefetcherBindingslistofSdkMaploaderRegionIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRouteCorridorPrefetcherBindingslistofSdkMaploaderRegionReleaseFfiHandle(Pointer<Void> handle) => _heresdkRouteCorridorPrefetcherBindingslistofSdkMaploaderRegionReleaseHandle(handle);

final _heresdkRouteCorridorPrefetcherBindingslistofSdkMaploaderRegionCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_maploader_Region_create_handle_nullable'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkMaploaderRegionReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_maploader_Region_release_handle_nullable'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkMaploaderRegionGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_maploader_Region_get_value_nullable'));

Pointer<Void> heresdkRouteCorridorPrefetcherBindingslistofSdkMaploaderRegionToFfiNullable(List<Region>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRouteCorridorPrefetcherBindingslistofSdkMaploaderRegionToFfi(value);
  final result = _heresdkRouteCorridorPrefetcherBindingslistofSdkMaploaderRegionCreateHandleNullable(_handle);
  heresdkRouteCorridorPrefetcherBindingslistofSdkMaploaderRegionReleaseFfiHandle(_handle);
  return result;
}

List<Region>? heresdkRouteCorridorPrefetcherBindingslistofSdkMaploaderRegionFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRouteCorridorPrefetcherBindingslistofSdkMaploaderRegionGetValueNullable(handle);
  final result = heresdkRouteCorridorPrefetcherBindingslistofSdkMaploaderRegionFromFfi(_handle);
  heresdkRouteCorridorPrefetcherBindingslistofSdkMaploaderRegionReleaseFfiHandle(_handle);
  return result;
}

void heresdkRouteCorridorPrefetcherBindingslistofSdkMaploaderRegionReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRouteCorridorPrefetcherBindingslistofSdkMaploaderRegionReleaseHandleNullable(handle);

final _heresdkRouteCorridorPrefetcherBindingslistofSdkMaploaderRegionidCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_maploader_RegionId_create_handle'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkMaploaderRegionidReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_maploader_RegionId_release_handle'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkMaploaderRegionidInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_maploader_RegionId_insert'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkMaploaderRegionidIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_maploader_RegionId_iterator'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkMaploaderRegionidIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_maploader_RegionId_iterator_release_handle'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkMaploaderRegionidIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_maploader_RegionId_iterator_is_valid'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkMaploaderRegionidIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_maploader_RegionId_iterator_increment'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkMaploaderRegionidIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_maploader_RegionId_iterator_get'));

Pointer<Void> heresdkRouteCorridorPrefetcherBindingslistofSdkMaploaderRegionidToFfi(List<RegionId> value) {
  final _result = _heresdkRouteCorridorPrefetcherBindingslistofSdkMaploaderRegionidCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkMaploaderRegionidToFfi(element);
    _heresdkRouteCorridorPrefetcherBindingslistofSdkMaploaderRegionidInsert(_result, _elementHandle);
    sdkMaploaderRegionidReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<RegionId> heresdkRouteCorridorPrefetcherBindingslistofSdkMaploaderRegionidFromFfi(Pointer<Void> handle) {
  final result = List<RegionId>.empty(growable: true);
  final _iteratorHandle = _heresdkRouteCorridorPrefetcherBindingslistofSdkMaploaderRegionidIterator(handle);
  while (_heresdkRouteCorridorPrefetcherBindingslistofSdkMaploaderRegionidIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRouteCorridorPrefetcherBindingslistofSdkMaploaderRegionidIteratorGet(_iteratorHandle);
    try {
      result.add(sdkMaploaderRegionidFromFfi(_elementHandle));
    } finally {
      sdkMaploaderRegionidReleaseFfiHandle(_elementHandle);
    }
    _heresdkRouteCorridorPrefetcherBindingslistofSdkMaploaderRegionidIteratorIncrement(_iteratorHandle);
  }
  _heresdkRouteCorridorPrefetcherBindingslistofSdkMaploaderRegionidIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRouteCorridorPrefetcherBindingslistofSdkMaploaderRegionidReleaseFfiHandle(Pointer<Void> handle) => _heresdkRouteCorridorPrefetcherBindingslistofSdkMaploaderRegionidReleaseHandle(handle);

final _heresdkRouteCorridorPrefetcherBindingslistofSdkMaploaderRegionidCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_maploader_RegionId_create_handle_nullable'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkMaploaderRegionidReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_maploader_RegionId_release_handle_nullable'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkMaploaderRegionidGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_maploader_RegionId_get_value_nullable'));

Pointer<Void> heresdkRouteCorridorPrefetcherBindingslistofSdkMaploaderRegionidToFfiNullable(List<RegionId>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRouteCorridorPrefetcherBindingslistofSdkMaploaderRegionidToFfi(value);
  final result = _heresdkRouteCorridorPrefetcherBindingslistofSdkMaploaderRegionidCreateHandleNullable(_handle);
  heresdkRouteCorridorPrefetcherBindingslistofSdkMaploaderRegionidReleaseFfiHandle(_handle);
  return result;
}

List<RegionId>? heresdkRouteCorridorPrefetcherBindingslistofSdkMaploaderRegionidFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRouteCorridorPrefetcherBindingslistofSdkMaploaderRegionidGetValueNullable(handle);
  final result = heresdkRouteCorridorPrefetcherBindingslistofSdkMaploaderRegionidFromFfi(_handle);
  heresdkRouteCorridorPrefetcherBindingslistofSdkMaploaderRegionidReleaseFfiHandle(_handle);
  return result;
}

void heresdkRouteCorridorPrefetcherBindingslistofSdkMaploaderRegionidReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRouteCorridorPrefetcherBindingslistofSdkMaploaderRegionidReleaseHandleNullable(handle);

final _heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationGpxtrackCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_navigation_GPXTrack_create_handle'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationGpxtrackReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_navigation_GPXTrack_release_handle'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationGpxtrackInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_navigation_GPXTrack_insert'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationGpxtrackIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_navigation_GPXTrack_iterator'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationGpxtrackIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_navigation_GPXTrack_iterator_release_handle'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationGpxtrackIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_navigation_GPXTrack_iterator_is_valid'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationGpxtrackIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_navigation_GPXTrack_iterator_increment'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationGpxtrackIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_navigation_GPXTrack_iterator_get'));

Pointer<Void> heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationGpxtrackToFfi(List<GPXTrack> value) {
  final _result = _heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationGpxtrackCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkNavigationGpxtrackToFfi(element);
    _heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationGpxtrackInsert(_result, _elementHandle);
    sdkNavigationGpxtrackReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GPXTrack> heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationGpxtrackFromFfi(Pointer<Void> handle) {
  final result = List<GPXTrack>.empty(growable: true);
  final _iteratorHandle = _heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationGpxtrackIterator(handle);
  while (_heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationGpxtrackIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationGpxtrackIteratorGet(_iteratorHandle);
    try {
      result.add(sdkNavigationGpxtrackFromFfi(_elementHandle));
    } finally {
      sdkNavigationGpxtrackReleaseFfiHandle(_elementHandle);
    }
    _heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationGpxtrackIteratorIncrement(_iteratorHandle);
  }
  _heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationGpxtrackIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationGpxtrackReleaseFfiHandle(Pointer<Void> handle) => _heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationGpxtrackReleaseHandle(handle);

final _heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationGpxtrackCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_navigation_GPXTrack_create_handle_nullable'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationGpxtrackReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_navigation_GPXTrack_release_handle_nullable'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationGpxtrackGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_navigation_GPXTrack_get_value_nullable'));

Pointer<Void> heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationGpxtrackToFfiNullable(List<GPXTrack>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationGpxtrackToFfi(value);
  final result = _heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationGpxtrackCreateHandleNullable(_handle);
  heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationGpxtrackReleaseFfiHandle(_handle);
  return result;
}

List<GPXTrack>? heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationGpxtrackFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationGpxtrackGetValueNullable(handle);
  final result = heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationGpxtrackFromFfi(_handle);
  heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationGpxtrackReleaseFfiHandle(_handle);
  return result;
}

void heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationGpxtrackReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationGpxtrackReleaseHandleNullable(handle);

final _heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationLaneCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_navigation_Lane_create_handle'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationLaneReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_navigation_Lane_release_handle'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationLaneInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_navigation_Lane_insert'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationLaneIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_navigation_Lane_iterator'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationLaneIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_navigation_Lane_iterator_release_handle'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationLaneIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_navigation_Lane_iterator_is_valid'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationLaneIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_navigation_Lane_iterator_increment'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationLaneIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_navigation_Lane_iterator_get'));

Pointer<Void> heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationLaneToFfi(List<Lane> value) {
  final _result = _heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationLaneCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkNavigationLaneToFfi(element);
    _heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationLaneInsert(_result, _elementHandle);
    sdkNavigationLaneReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Lane> heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationLaneFromFfi(Pointer<Void> handle) {
  final result = List<Lane>.empty(growable: true);
  final _iteratorHandle = _heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationLaneIterator(handle);
  while (_heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationLaneIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationLaneIteratorGet(_iteratorHandle);
    try {
      result.add(sdkNavigationLaneFromFfi(_elementHandle));
    } finally {
      sdkNavigationLaneReleaseFfiHandle(_elementHandle);
    }
    _heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationLaneIteratorIncrement(_iteratorHandle);
  }
  _heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationLaneIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationLaneReleaseFfiHandle(Pointer<Void> handle) => _heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationLaneReleaseHandle(handle);

final _heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationLaneCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_navigation_Lane_create_handle_nullable'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationLaneReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_navigation_Lane_release_handle_nullable'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationLaneGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_navigation_Lane_get_value_nullable'));

Pointer<Void> heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationLaneToFfiNullable(List<Lane>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationLaneToFfi(value);
  final result = _heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationLaneCreateHandleNullable(_handle);
  heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationLaneReleaseFfiHandle(_handle);
  return result;
}

List<Lane>? heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationLaneFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationLaneGetValueNullable(handle);
  final result = heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationLaneFromFfi(_handle);
  heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationLaneReleaseFfiHandle(_handle);
  return result;
}

void heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationLaneReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationLaneReleaseHandleNullable(handle);

final _heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationManeuvernotificationtypeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_navigation_ManeuverNotificationType_create_handle'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationManeuvernotificationtypeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_navigation_ManeuverNotificationType_release_handle'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationManeuvernotificationtypeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_navigation_ManeuverNotificationType_insert'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationManeuvernotificationtypeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_navigation_ManeuverNotificationType_iterator'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationManeuvernotificationtypeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_navigation_ManeuverNotificationType_iterator_release_handle'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationManeuvernotificationtypeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_navigation_ManeuverNotificationType_iterator_is_valid'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationManeuvernotificationtypeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_navigation_ManeuverNotificationType_iterator_increment'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationManeuvernotificationtypeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_navigation_ManeuverNotificationType_iterator_get'));

Pointer<Void> heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationManeuvernotificationtypeToFfi(List<ManeuverNotificationType> value) {
  final _result = _heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationManeuvernotificationtypeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkNavigationManeuvernotificationtypeToFfi(element);
    _heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationManeuvernotificationtypeInsert(_result, _elementHandle);
    sdkNavigationManeuvernotificationtypeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<ManeuverNotificationType> heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationManeuvernotificationtypeFromFfi(Pointer<Void> handle) {
  final result = List<ManeuverNotificationType>.empty(growable: true);
  final _iteratorHandle = _heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationManeuvernotificationtypeIterator(handle);
  while (_heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationManeuvernotificationtypeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationManeuvernotificationtypeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkNavigationManeuvernotificationtypeFromFfi(_elementHandle));
    } finally {
      sdkNavigationManeuvernotificationtypeReleaseFfiHandle(_elementHandle);
    }
    _heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationManeuvernotificationtypeIteratorIncrement(_iteratorHandle);
  }
  _heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationManeuvernotificationtypeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationManeuvernotificationtypeReleaseFfiHandle(Pointer<Void> handle) => _heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationManeuvernotificationtypeReleaseHandle(handle);

final _heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationManeuvernotificationtypeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_navigation_ManeuverNotificationType_create_handle_nullable'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationManeuvernotificationtypeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_navigation_ManeuverNotificationType_release_handle_nullable'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationManeuvernotificationtypeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_navigation_ManeuverNotificationType_get_value_nullable'));

Pointer<Void> heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationManeuvernotificationtypeToFfiNullable(List<ManeuverNotificationType>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationManeuvernotificationtypeToFfi(value);
  final result = _heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationManeuvernotificationtypeCreateHandleNullable(_handle);
  heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationManeuvernotificationtypeReleaseFfiHandle(_handle);
  return result;
}

List<ManeuverNotificationType>? heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationManeuvernotificationtypeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationManeuvernotificationtypeGetValueNullable(handle);
  final result = heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationManeuvernotificationtypeFromFfi(_handle);
  heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationManeuvernotificationtypeReleaseFfiHandle(_handle);
  return result;
}

void heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationManeuvernotificationtypeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationManeuvernotificationtypeReleaseHandleNullable(handle);

final _heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationManeuverprogressCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_navigation_ManeuverProgress_create_handle'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationManeuverprogressReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_navigation_ManeuverProgress_release_handle'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationManeuverprogressInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_navigation_ManeuverProgress_insert'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationManeuverprogressIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_navigation_ManeuverProgress_iterator'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationManeuverprogressIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_navigation_ManeuverProgress_iterator_release_handle'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationManeuverprogressIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_navigation_ManeuverProgress_iterator_is_valid'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationManeuverprogressIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_navigation_ManeuverProgress_iterator_increment'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationManeuverprogressIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_navigation_ManeuverProgress_iterator_get'));

Pointer<Void> heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationManeuverprogressToFfi(List<ManeuverProgress> value) {
  final _result = _heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationManeuverprogressCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkNavigationManeuverprogressToFfi(element);
    _heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationManeuverprogressInsert(_result, _elementHandle);
    sdkNavigationManeuverprogressReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<ManeuverProgress> heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationManeuverprogressFromFfi(Pointer<Void> handle) {
  final result = List<ManeuverProgress>.empty(growable: true);
  final _iteratorHandle = _heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationManeuverprogressIterator(handle);
  while (_heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationManeuverprogressIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationManeuverprogressIteratorGet(_iteratorHandle);
    try {
      result.add(sdkNavigationManeuverprogressFromFfi(_elementHandle));
    } finally {
      sdkNavigationManeuverprogressReleaseFfiHandle(_elementHandle);
    }
    _heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationManeuverprogressIteratorIncrement(_iteratorHandle);
  }
  _heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationManeuverprogressIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationManeuverprogressReleaseFfiHandle(Pointer<Void> handle) => _heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationManeuverprogressReleaseHandle(handle);

final _heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationManeuverprogressCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_navigation_ManeuverProgress_create_handle_nullable'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationManeuverprogressReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_navigation_ManeuverProgress_release_handle_nullable'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationManeuverprogressGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_navigation_ManeuverProgress_get_value_nullable'));

Pointer<Void> heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationManeuverprogressToFfiNullable(List<ManeuverProgress>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationManeuverprogressToFfi(value);
  final result = _heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationManeuverprogressCreateHandleNullable(_handle);
  heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationManeuverprogressReleaseFfiHandle(_handle);
  return result;
}

List<ManeuverProgress>? heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationManeuverprogressFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationManeuverprogressGetValueNullable(handle);
  final result = heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationManeuverprogressFromFfi(_handle);
  heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationManeuverprogressReleaseFfiHandle(_handle);
  return result;
}

void heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationManeuverprogressReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationManeuverprogressReleaseHandleNullable(handle);

final _heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationSectionprogressCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_navigation_SectionProgress_create_handle'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationSectionprogressReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_navigation_SectionProgress_release_handle'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationSectionprogressInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_navigation_SectionProgress_insert'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationSectionprogressIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_navigation_SectionProgress_iterator'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationSectionprogressIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_navigation_SectionProgress_iterator_release_handle'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationSectionprogressIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_navigation_SectionProgress_iterator_is_valid'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationSectionprogressIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_navigation_SectionProgress_iterator_increment'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationSectionprogressIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_navigation_SectionProgress_iterator_get'));

Pointer<Void> heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationSectionprogressToFfi(List<SectionProgress> value) {
  final _result = _heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationSectionprogressCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkNavigationSectionprogressToFfi(element);
    _heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationSectionprogressInsert(_result, _elementHandle);
    sdkNavigationSectionprogressReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<SectionProgress> heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationSectionprogressFromFfi(Pointer<Void> handle) {
  final result = List<SectionProgress>.empty(growable: true);
  final _iteratorHandle = _heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationSectionprogressIterator(handle);
  while (_heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationSectionprogressIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationSectionprogressIteratorGet(_iteratorHandle);
    try {
      result.add(sdkNavigationSectionprogressFromFfi(_elementHandle));
    } finally {
      sdkNavigationSectionprogressReleaseFfiHandle(_elementHandle);
    }
    _heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationSectionprogressIteratorIncrement(_iteratorHandle);
  }
  _heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationSectionprogressIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationSectionprogressReleaseFfiHandle(Pointer<Void> handle) => _heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationSectionprogressReleaseHandle(handle);

final _heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationSectionprogressCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_navigation_SectionProgress_create_handle_nullable'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationSectionprogressReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_navigation_SectionProgress_release_handle_nullable'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationSectionprogressGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_navigation_SectionProgress_get_value_nullable'));

Pointer<Void> heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationSectionprogressToFfiNullable(List<SectionProgress>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationSectionprogressToFfi(value);
  final result = _heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationSectionprogressCreateHandleNullable(_handle);
  heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationSectionprogressReleaseFfiHandle(_handle);
  return result;
}

List<SectionProgress>? heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationSectionprogressFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationSectionprogressGetValueNullable(handle);
  final result = heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationSectionprogressFromFfi(_handle);
  heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationSectionprogressReleaseFfiHandle(_handle);
  return result;
}

void heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationSectionprogressReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationSectionprogressReleaseHandleNullable(handle);

final _heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationTruckrestrictionwarningCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_navigation_TruckRestrictionWarning_create_handle'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationTruckrestrictionwarningReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_navigation_TruckRestrictionWarning_release_handle'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationTruckrestrictionwarningInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_navigation_TruckRestrictionWarning_insert'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationTruckrestrictionwarningIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_navigation_TruckRestrictionWarning_iterator'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationTruckrestrictionwarningIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_navigation_TruckRestrictionWarning_iterator_release_handle'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationTruckrestrictionwarningIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_navigation_TruckRestrictionWarning_iterator_is_valid'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationTruckrestrictionwarningIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_navigation_TruckRestrictionWarning_iterator_increment'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationTruckrestrictionwarningIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_navigation_TruckRestrictionWarning_iterator_get'));

Pointer<Void> heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationTruckrestrictionwarningToFfi(List<TruckRestrictionWarning> value) {
  final _result = _heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationTruckrestrictionwarningCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkNavigationTruckrestrictionwarningToFfi(element);
    _heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationTruckrestrictionwarningInsert(_result, _elementHandle);
    sdkNavigationTruckrestrictionwarningReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<TruckRestrictionWarning> heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationTruckrestrictionwarningFromFfi(Pointer<Void> handle) {
  final result = List<TruckRestrictionWarning>.empty(growable: true);
  final _iteratorHandle = _heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationTruckrestrictionwarningIterator(handle);
  while (_heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationTruckrestrictionwarningIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationTruckrestrictionwarningIteratorGet(_iteratorHandle);
    try {
      result.add(sdkNavigationTruckrestrictionwarningFromFfi(_elementHandle));
    } finally {
      sdkNavigationTruckrestrictionwarningReleaseFfiHandle(_elementHandle);
    }
    _heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationTruckrestrictionwarningIteratorIncrement(_iteratorHandle);
  }
  _heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationTruckrestrictionwarningIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationTruckrestrictionwarningReleaseFfiHandle(Pointer<Void> handle) => _heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationTruckrestrictionwarningReleaseHandle(handle);

final _heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationTruckrestrictionwarningCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_navigation_TruckRestrictionWarning_create_handle_nullable'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationTruckrestrictionwarningReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_navigation_TruckRestrictionWarning_release_handle_nullable'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationTruckrestrictionwarningGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_navigation_TruckRestrictionWarning_get_value_nullable'));

Pointer<Void> heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationTruckrestrictionwarningToFfiNullable(List<TruckRestrictionWarning>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationTruckrestrictionwarningToFfi(value);
  final result = _heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationTruckrestrictionwarningCreateHandleNullable(_handle);
  heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationTruckrestrictionwarningReleaseFfiHandle(_handle);
  return result;
}

List<TruckRestrictionWarning>? heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationTruckrestrictionwarningFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationTruckrestrictionwarningGetValueNullable(handle);
  final result = heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationTruckrestrictionwarningFromFfi(_handle);
  heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationTruckrestrictionwarningReleaseFfiHandle(_handle);
  return result;
}

void heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationTruckrestrictionwarningReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRouteCorridorPrefetcherBindingslistofSdkNavigationTruckrestrictionwarningReleaseHandleNullable(handle);

final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingAttributionCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_Attribution_create_handle'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingAttributionReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_Attribution_release_handle'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingAttributionInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_Attribution_insert'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingAttributionIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_Attribution_iterator'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingAttributionIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_Attribution_iterator_release_handle'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingAttributionIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_Attribution_iterator_is_valid'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingAttributionIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_Attribution_iterator_increment'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingAttributionIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_Attribution_iterator_get'));

Pointer<Void> heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingAttributionToFfi(List<Attribution> value) {
  final _result = _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingAttributionCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingAttributionToFfi(element);
    _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingAttributionInsert(_result, _elementHandle);
    sdkRoutingAttributionReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Attribution> heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingAttributionFromFfi(Pointer<Void> handle) {
  final result = List<Attribution>.empty(growable: true);
  final _iteratorHandle = _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingAttributionIterator(handle);
  while (_heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingAttributionIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingAttributionIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingAttributionFromFfi(_elementHandle));
    } finally {
      sdkRoutingAttributionReleaseFfiHandle(_elementHandle);
    }
    _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingAttributionIteratorIncrement(_iteratorHandle);
  }
  _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingAttributionIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingAttributionReleaseFfiHandle(Pointer<Void> handle) => _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingAttributionReleaseHandle(handle);

final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingAttributionCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_Attribution_create_handle_nullable'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingAttributionReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_Attribution_release_handle_nullable'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingAttributionGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_Attribution_get_value_nullable'));

Pointer<Void> heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingAttributionToFfiNullable(List<Attribution>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingAttributionToFfi(value);
  final result = _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingAttributionCreateHandleNullable(_handle);
  heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingAttributionReleaseFfiHandle(_handle);
  return result;
}

List<Attribution>? heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingAttributionFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingAttributionGetValueNullable(handle);
  final result = heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingAttributionFromFfi(_handle);
  heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingAttributionReleaseFfiHandle(_handle);
  return result;
}

void heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingAttributionReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingAttributionReleaseHandleNullable(handle);

final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingChargingconnectortypeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_ChargingConnectorType_create_handle'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingChargingconnectortypeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_ChargingConnectorType_release_handle'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingChargingconnectortypeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_ChargingConnectorType_insert'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingChargingconnectortypeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_ChargingConnectorType_iterator'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingChargingconnectortypeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_ChargingConnectorType_iterator_release_handle'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingChargingconnectortypeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_ChargingConnectorType_iterator_is_valid'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingChargingconnectortypeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_ChargingConnectorType_iterator_increment'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingChargingconnectortypeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_ChargingConnectorType_iterator_get'));

Pointer<Void> heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingChargingconnectortypeToFfi(List<ChargingConnectorType> value) {
  final _result = _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingChargingconnectortypeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingChargingconnectortypeToFfi(element);
    _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingChargingconnectortypeInsert(_result, _elementHandle);
    sdkRoutingChargingconnectortypeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<ChargingConnectorType> heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingChargingconnectortypeFromFfi(Pointer<Void> handle) {
  final result = List<ChargingConnectorType>.empty(growable: true);
  final _iteratorHandle = _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingChargingconnectortypeIterator(handle);
  while (_heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingChargingconnectortypeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingChargingconnectortypeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingChargingconnectortypeFromFfi(_elementHandle));
    } finally {
      sdkRoutingChargingconnectortypeReleaseFfiHandle(_elementHandle);
    }
    _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingChargingconnectortypeIteratorIncrement(_iteratorHandle);
  }
  _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingChargingconnectortypeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingChargingconnectortypeReleaseFfiHandle(Pointer<Void> handle) => _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingChargingconnectortypeReleaseHandle(handle);

final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingChargingconnectortypeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_ChargingConnectorType_create_handle_nullable'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingChargingconnectortypeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_ChargingConnectorType_release_handle_nullable'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingChargingconnectortypeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_ChargingConnectorType_get_value_nullable'));

Pointer<Void> heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingChargingconnectortypeToFfiNullable(List<ChargingConnectorType>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingChargingconnectortypeToFfi(value);
  final result = _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingChargingconnectortypeCreateHandleNullable(_handle);
  heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingChargingconnectortypeReleaseFfiHandle(_handle);
  return result;
}

List<ChargingConnectorType>? heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingChargingconnectortypeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingChargingconnectortypeGetValueNullable(handle);
  final result = heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingChargingconnectortypeFromFfi(_handle);
  heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingChargingconnectortypeReleaseFfiHandle(_handle);
  return result;
}

void heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingChargingconnectortypeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingChargingconnectortypeReleaseHandleNullable(handle);

final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingFareCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_Fare_create_handle'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingFareReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_Fare_release_handle'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingFareInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_Fare_insert'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingFareIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_Fare_iterator'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingFareIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_Fare_iterator_release_handle'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingFareIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_Fare_iterator_is_valid'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingFareIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_Fare_iterator_increment'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingFareIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_Fare_iterator_get'));

Pointer<Void> heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingFareToFfi(List<Fare> value) {
  final _result = _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingFareCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingFareToFfi(element);
    _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingFareInsert(_result, _elementHandle);
    sdkRoutingFareReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Fare> heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingFareFromFfi(Pointer<Void> handle) {
  final result = List<Fare>.empty(growable: true);
  final _iteratorHandle = _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingFareIterator(handle);
  while (_heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingFareIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingFareIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingFareFromFfi(_elementHandle));
    } finally {
      sdkRoutingFareReleaseFfiHandle(_elementHandle);
    }
    _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingFareIteratorIncrement(_iteratorHandle);
  }
  _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingFareIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingFareReleaseFfiHandle(Pointer<Void> handle) => _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingFareReleaseHandle(handle);

final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingFareCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_Fare_create_handle_nullable'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingFareReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_Fare_release_handle_nullable'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingFareGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_Fare_get_value_nullable'));

Pointer<Void> heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingFareToFfiNullable(List<Fare>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingFareToFfi(value);
  final result = _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingFareCreateHandleNullable(_handle);
  heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingFareReleaseFfiHandle(_handle);
  return result;
}

List<Fare>? heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingFareFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingFareGetValueNullable(handle);
  final result = heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingFareFromFfi(_handle);
  heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingFareReleaseFfiHandle(_handle);
  return result;
}

void heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingFareReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingFareReleaseHandleNullable(handle);

final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingHazardousgoodCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_HazardousGood_create_handle'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingHazardousgoodReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_HazardousGood_release_handle'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingHazardousgoodInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_HazardousGood_insert'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingHazardousgoodIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_HazardousGood_iterator'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingHazardousgoodIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_HazardousGood_iterator_release_handle'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingHazardousgoodIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_HazardousGood_iterator_is_valid'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingHazardousgoodIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_HazardousGood_iterator_increment'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingHazardousgoodIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_HazardousGood_iterator_get'));

Pointer<Void> heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingHazardousgoodToFfi(List<HazardousGood> value) {
  final _result = _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingHazardousgoodCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingHazardousgoodToFfi(element);
    _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingHazardousgoodInsert(_result, _elementHandle);
    sdkRoutingHazardousgoodReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<HazardousGood> heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingHazardousgoodFromFfi(Pointer<Void> handle) {
  final result = List<HazardousGood>.empty(growable: true);
  final _iteratorHandle = _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingHazardousgoodIterator(handle);
  while (_heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingHazardousgoodIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingHazardousgoodIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingHazardousgoodFromFfi(_elementHandle));
    } finally {
      sdkRoutingHazardousgoodReleaseFfiHandle(_elementHandle);
    }
    _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingHazardousgoodIteratorIncrement(_iteratorHandle);
  }
  _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingHazardousgoodIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingHazardousgoodReleaseFfiHandle(Pointer<Void> handle) => _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingHazardousgoodReleaseHandle(handle);

final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingHazardousgoodCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_HazardousGood_create_handle_nullable'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingHazardousgoodReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_HazardousGood_release_handle_nullable'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingHazardousgoodGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_HazardousGood_get_value_nullable'));

Pointer<Void> heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingHazardousgoodToFfiNullable(List<HazardousGood>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingHazardousgoodToFfi(value);
  final result = _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingHazardousgoodCreateHandleNullable(_handle);
  heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingHazardousgoodReleaseFfiHandle(_handle);
  return result;
}

List<HazardousGood>? heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingHazardousgoodFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingHazardousgoodGetValueNullable(handle);
  final result = heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingHazardousgoodFromFfi(_handle);
  heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingHazardousgoodReleaseFfiHandle(_handle);
  return result;
}

void heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingHazardousgoodReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingHazardousgoodReleaseHandleNullable(handle);

final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingIsolineCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_Isoline_create_handle'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingIsolineReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_Isoline_release_handle'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingIsolineInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_Isoline_insert'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingIsolineIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_Isoline_iterator'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingIsolineIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_Isoline_iterator_release_handle'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingIsolineIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_Isoline_iterator_is_valid'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingIsolineIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_Isoline_iterator_increment'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingIsolineIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_Isoline_iterator_get'));

Pointer<Void> heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingIsolineToFfi(List<Isoline> value) {
  final _result = _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingIsolineCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingIsolineToFfi(element);
    _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingIsolineInsert(_result, _elementHandle);
    sdkRoutingIsolineReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Isoline> heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingIsolineFromFfi(Pointer<Void> handle) {
  final result = List<Isoline>.empty(growable: true);
  final _iteratorHandle = _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingIsolineIterator(handle);
  while (_heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingIsolineIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingIsolineIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingIsolineFromFfi(_elementHandle));
    } finally {
      sdkRoutingIsolineReleaseFfiHandle(_elementHandle);
    }
    _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingIsolineIteratorIncrement(_iteratorHandle);
  }
  _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingIsolineIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingIsolineReleaseFfiHandle(Pointer<Void> handle) => _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingIsolineReleaseHandle(handle);

final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingIsolineCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_Isoline_create_handle_nullable'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingIsolineReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_Isoline_release_handle_nullable'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingIsolineGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_Isoline_get_value_nullable'));

Pointer<Void> heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingIsolineToFfiNullable(List<Isoline>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingIsolineToFfi(value);
  final result = _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingIsolineCreateHandleNullable(_handle);
  heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingIsolineReleaseFfiHandle(_handle);
  return result;
}

List<Isoline>? heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingIsolineFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingIsolineGetValueNullable(handle);
  final result = heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingIsolineFromFfi(_handle);
  heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingIsolineReleaseFfiHandle(_handle);
  return result;
}

void heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingIsolineReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingIsolineReleaseHandleNullable(handle);

final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingManeuverCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_Maneuver_create_handle'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingManeuverReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_Maneuver_release_handle'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingManeuverInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_Maneuver_insert'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingManeuverIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_Maneuver_iterator'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingManeuverIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_Maneuver_iterator_release_handle'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingManeuverIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_Maneuver_iterator_is_valid'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingManeuverIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_Maneuver_iterator_increment'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingManeuverIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_Maneuver_iterator_get'));

Pointer<Void> heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingManeuverToFfi(List<Maneuver> value) {
  final _result = _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingManeuverCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingManeuverToFfi(element);
    _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingManeuverInsert(_result, _elementHandle);
    sdkRoutingManeuverReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Maneuver> heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingManeuverFromFfi(Pointer<Void> handle) {
  final result = List<Maneuver>.empty(growable: true);
  final _iteratorHandle = _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingManeuverIterator(handle);
  while (_heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingManeuverIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingManeuverIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingManeuverFromFfi(_elementHandle));
    } finally {
      sdkRoutingManeuverReleaseFfiHandle(_elementHandle);
    }
    _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingManeuverIteratorIncrement(_iteratorHandle);
  }
  _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingManeuverIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingManeuverReleaseFfiHandle(Pointer<Void> handle) => _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingManeuverReleaseHandle(handle);

final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingManeuverCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_Maneuver_create_handle_nullable'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingManeuverReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_Maneuver_release_handle_nullable'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingManeuverGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_Maneuver_get_value_nullable'));

Pointer<Void> heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingManeuverToFfiNullable(List<Maneuver>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingManeuverToFfi(value);
  final result = _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingManeuverCreateHandleNullable(_handle);
  heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingManeuverReleaseFfiHandle(_handle);
  return result;
}

List<Maneuver>? heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingManeuverFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingManeuverGetValueNullable(handle);
  final result = heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingManeuverFromFfi(_handle);
  heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingManeuverReleaseFfiHandle(_handle);
  return result;
}

void heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingManeuverReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingManeuverReleaseHandleNullable(handle);

final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingPaymentmethodCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_PaymentMethod_create_handle'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingPaymentmethodReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_PaymentMethod_release_handle'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingPaymentmethodInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_PaymentMethod_insert'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingPaymentmethodIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_PaymentMethod_iterator'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingPaymentmethodIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_PaymentMethod_iterator_release_handle'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingPaymentmethodIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_PaymentMethod_iterator_is_valid'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingPaymentmethodIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_PaymentMethod_iterator_increment'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingPaymentmethodIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_PaymentMethod_iterator_get'));

Pointer<Void> heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingPaymentmethodToFfi(List<PaymentMethod> value) {
  final _result = _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingPaymentmethodCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingPaymentmethodToFfi(element);
    _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingPaymentmethodInsert(_result, _elementHandle);
    sdkRoutingPaymentmethodReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<PaymentMethod> heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingPaymentmethodFromFfi(Pointer<Void> handle) {
  final result = List<PaymentMethod>.empty(growable: true);
  final _iteratorHandle = _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingPaymentmethodIterator(handle);
  while (_heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingPaymentmethodIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingPaymentmethodIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingPaymentmethodFromFfi(_elementHandle));
    } finally {
      sdkRoutingPaymentmethodReleaseFfiHandle(_elementHandle);
    }
    _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingPaymentmethodIteratorIncrement(_iteratorHandle);
  }
  _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingPaymentmethodIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingPaymentmethodReleaseFfiHandle(Pointer<Void> handle) => _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingPaymentmethodReleaseHandle(handle);

final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingPaymentmethodCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_PaymentMethod_create_handle_nullable'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingPaymentmethodReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_PaymentMethod_release_handle_nullable'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingPaymentmethodGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_PaymentMethod_get_value_nullable'));

Pointer<Void> heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingPaymentmethodToFfiNullable(List<PaymentMethod>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingPaymentmethodToFfi(value);
  final result = _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingPaymentmethodCreateHandleNullable(_handle);
  heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingPaymentmethodReleaseFfiHandle(_handle);
  return result;
}

List<PaymentMethod>? heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingPaymentmethodFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingPaymentmethodGetValueNullable(handle);
  final result = heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingPaymentmethodFromFfi(_handle);
  heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingPaymentmethodReleaseFfiHandle(_handle);
  return result;
}

void heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingPaymentmethodReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingPaymentmethodReleaseHandleNullable(handle);

final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingPostactionCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_PostAction_create_handle'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingPostactionReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_PostAction_release_handle'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingPostactionInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_PostAction_insert'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingPostactionIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_PostAction_iterator'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingPostactionIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_PostAction_iterator_release_handle'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingPostactionIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_PostAction_iterator_is_valid'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingPostactionIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_PostAction_iterator_increment'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingPostactionIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_PostAction_iterator_get'));

Pointer<Void> heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingPostactionToFfi(List<PostAction> value) {
  final _result = _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingPostactionCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingPostactionToFfi(element);
    _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingPostactionInsert(_result, _elementHandle);
    sdkRoutingPostactionReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<PostAction> heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingPostactionFromFfi(Pointer<Void> handle) {
  final result = List<PostAction>.empty(growable: true);
  final _iteratorHandle = _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingPostactionIterator(handle);
  while (_heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingPostactionIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingPostactionIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingPostactionFromFfi(_elementHandle));
    } finally {
      sdkRoutingPostactionReleaseFfiHandle(_elementHandle);
    }
    _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingPostactionIteratorIncrement(_iteratorHandle);
  }
  _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingPostactionIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingPostactionReleaseFfiHandle(Pointer<Void> handle) => _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingPostactionReleaseHandle(handle);

final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingPostactionCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_PostAction_create_handle_nullable'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingPostactionReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_PostAction_release_handle_nullable'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingPostactionGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_PostAction_get_value_nullable'));

Pointer<Void> heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingPostactionToFfiNullable(List<PostAction>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingPostactionToFfi(value);
  final result = _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingPostactionCreateHandleNullable(_handle);
  heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingPostactionReleaseFfiHandle(_handle);
  return result;
}

List<PostAction>? heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingPostactionFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingPostactionGetValueNullable(handle);
  final result = heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingPostactionFromFfi(_handle);
  heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingPostactionReleaseFfiHandle(_handle);
  return result;
}

void heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingPostactionReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingPostactionReleaseHandleNullable(handle);

final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingPreactionCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_PreAction_create_handle'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingPreactionReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_PreAction_release_handle'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingPreactionInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_PreAction_insert'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingPreactionIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_PreAction_iterator'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingPreactionIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_PreAction_iterator_release_handle'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingPreactionIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_PreAction_iterator_is_valid'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingPreactionIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_PreAction_iterator_increment'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingPreactionIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_PreAction_iterator_get'));

Pointer<Void> heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingPreactionToFfi(List<PreAction> value) {
  final _result = _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingPreactionCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingPreactionToFfi(element);
    _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingPreactionInsert(_result, _elementHandle);
    sdkRoutingPreactionReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<PreAction> heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingPreactionFromFfi(Pointer<Void> handle) {
  final result = List<PreAction>.empty(growable: true);
  final _iteratorHandle = _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingPreactionIterator(handle);
  while (_heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingPreactionIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingPreactionIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingPreactionFromFfi(_elementHandle));
    } finally {
      sdkRoutingPreactionReleaseFfiHandle(_elementHandle);
    }
    _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingPreactionIteratorIncrement(_iteratorHandle);
  }
  _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingPreactionIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingPreactionReleaseFfiHandle(Pointer<Void> handle) => _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingPreactionReleaseHandle(handle);

final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingPreactionCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_PreAction_create_handle_nullable'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingPreactionReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_PreAction_release_handle_nullable'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingPreactionGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_PreAction_get_value_nullable'));

Pointer<Void> heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingPreactionToFfiNullable(List<PreAction>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingPreactionToFfi(value);
  final result = _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingPreactionCreateHandleNullable(_handle);
  heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingPreactionReleaseFfiHandle(_handle);
  return result;
}

List<PreAction>? heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingPreactionFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingPreactionGetValueNullable(handle);
  final result = heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingPreactionFromFfi(_handle);
  heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingPreactionReleaseFfiHandle(_handle);
  return result;
}

void heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingPreactionReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingPreactionReleaseHandleNullable(handle);

final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingRoadfeaturesCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_RoadFeatures_create_handle'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingRoadfeaturesReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_RoadFeatures_release_handle'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingRoadfeaturesInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_RoadFeatures_insert'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingRoadfeaturesIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_RoadFeatures_iterator'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingRoadfeaturesIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_RoadFeatures_iterator_release_handle'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingRoadfeaturesIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_RoadFeatures_iterator_is_valid'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingRoadfeaturesIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_RoadFeatures_iterator_increment'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingRoadfeaturesIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_RoadFeatures_iterator_get'));

Pointer<Void> heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingRoadfeaturesToFfi(List<RoadFeatures> value) {
  final _result = _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingRoadfeaturesCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingRoadfeaturesToFfi(element);
    _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingRoadfeaturesInsert(_result, _elementHandle);
    sdkRoutingRoadfeaturesReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<RoadFeatures> heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingRoadfeaturesFromFfi(Pointer<Void> handle) {
  final result = List<RoadFeatures>.empty(growable: true);
  final _iteratorHandle = _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingRoadfeaturesIterator(handle);
  while (_heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingRoadfeaturesIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingRoadfeaturesIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingRoadfeaturesFromFfi(_elementHandle));
    } finally {
      sdkRoutingRoadfeaturesReleaseFfiHandle(_elementHandle);
    }
    _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingRoadfeaturesIteratorIncrement(_iteratorHandle);
  }
  _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingRoadfeaturesIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingRoadfeaturesReleaseFfiHandle(Pointer<Void> handle) => _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingRoadfeaturesReleaseHandle(handle);

final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingRoadfeaturesCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_RoadFeatures_create_handle_nullable'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingRoadfeaturesReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_RoadFeatures_release_handle_nullable'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingRoadfeaturesGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_RoadFeatures_get_value_nullable'));

Pointer<Void> heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingRoadfeaturesToFfiNullable(List<RoadFeatures>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingRoadfeaturesToFfi(value);
  final result = _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingRoadfeaturesCreateHandleNullable(_handle);
  heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingRoadfeaturesReleaseFfiHandle(_handle);
  return result;
}

List<RoadFeatures>? heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingRoadfeaturesFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingRoadfeaturesGetValueNullable(handle);
  final result = heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingRoadfeaturesFromFfi(_handle);
  heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingRoadfeaturesReleaseFfiHandle(_handle);
  return result;
}

void heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingRoadfeaturesReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingRoadfeaturesReleaseHandleNullable(handle);

final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingRouteCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_Route_create_handle'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingRouteReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_Route_release_handle'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingRouteInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_Route_insert'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingRouteIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_Route_iterator'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingRouteIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_Route_iterator_release_handle'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingRouteIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_Route_iterator_is_valid'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingRouteIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_Route_iterator_increment'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingRouteIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_Route_iterator_get'));

Pointer<Void> heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingRouteToFfi(List<Route> value) {
  final _result = _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingRouteCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingRouteToFfi(element);
    _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingRouteInsert(_result, _elementHandle);
    sdkRoutingRouteReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Route> heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingRouteFromFfi(Pointer<Void> handle) {
  final result = List<Route>.empty(growable: true);
  final _iteratorHandle = _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingRouteIterator(handle);
  while (_heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingRouteIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingRouteIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingRouteFromFfi(_elementHandle));
    } finally {
      sdkRoutingRouteReleaseFfiHandle(_elementHandle);
    }
    _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingRouteIteratorIncrement(_iteratorHandle);
  }
  _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingRouteIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingRouteReleaseFfiHandle(Pointer<Void> handle) => _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingRouteReleaseHandle(handle);

final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingRouteCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_Route_create_handle_nullable'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingRouteReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_Route_release_handle_nullable'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingRouteGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_Route_get_value_nullable'));

Pointer<Void> heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingRouteToFfiNullable(List<Route>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingRouteToFfi(value);
  final result = _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingRouteCreateHandleNullable(_handle);
  heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingRouteReleaseFfiHandle(_handle);
  return result;
}

List<Route>? heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingRouteFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingRouteGetValueNullable(handle);
  final result = heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingRouteFromFfi(_handle);
  heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingRouteReleaseFfiHandle(_handle);
  return result;
}

void heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingRouteReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingRouteReleaseHandleNullable(handle);

final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingSectionCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_Section_create_handle'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingSectionReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_Section_release_handle'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingSectionInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_Section_insert'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingSectionIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_Section_iterator'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingSectionIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_Section_iterator_release_handle'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingSectionIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_Section_iterator_is_valid'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingSectionIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_Section_iterator_increment'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingSectionIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_Section_iterator_get'));

Pointer<Void> heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingSectionToFfi(List<Section> value) {
  final _result = _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingSectionCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingSectionToFfi(element);
    _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingSectionInsert(_result, _elementHandle);
    sdkRoutingSectionReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Section> heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingSectionFromFfi(Pointer<Void> handle) {
  final result = List<Section>.empty(growable: true);
  final _iteratorHandle = _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingSectionIterator(handle);
  while (_heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingSectionIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingSectionIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingSectionFromFfi(_elementHandle));
    } finally {
      sdkRoutingSectionReleaseFfiHandle(_elementHandle);
    }
    _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingSectionIteratorIncrement(_iteratorHandle);
  }
  _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingSectionIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingSectionReleaseFfiHandle(Pointer<Void> handle) => _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingSectionReleaseHandle(handle);

final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingSectionCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_Section_create_handle_nullable'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingSectionReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_Section_release_handle_nullable'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingSectionGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_Section_get_value_nullable'));

Pointer<Void> heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingSectionToFfiNullable(List<Section>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingSectionToFfi(value);
  final result = _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingSectionCreateHandleNullable(_handle);
  heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingSectionReleaseFfiHandle(_handle);
  return result;
}

List<Section>? heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingSectionFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingSectionGetValueNullable(handle);
  final result = heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingSectionFromFfi(_handle);
  heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingSectionReleaseFfiHandle(_handle);
  return result;
}

void heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingSectionReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingSectionReleaseHandleNullable(handle);

final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingSectionnoticeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_SectionNotice_create_handle'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingSectionnoticeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_SectionNotice_release_handle'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingSectionnoticeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_SectionNotice_insert'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingSectionnoticeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_SectionNotice_iterator'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingSectionnoticeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_SectionNotice_iterator_release_handle'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingSectionnoticeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_SectionNotice_iterator_is_valid'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingSectionnoticeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_SectionNotice_iterator_increment'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingSectionnoticeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_SectionNotice_iterator_get'));

Pointer<Void> heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingSectionnoticeToFfi(List<SectionNotice> value) {
  final _result = _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingSectionnoticeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingSectionnoticeToFfi(element);
    _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingSectionnoticeInsert(_result, _elementHandle);
    sdkRoutingSectionnoticeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<SectionNotice> heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingSectionnoticeFromFfi(Pointer<Void> handle) {
  final result = List<SectionNotice>.empty(growable: true);
  final _iteratorHandle = _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingSectionnoticeIterator(handle);
  while (_heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingSectionnoticeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingSectionnoticeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingSectionnoticeFromFfi(_elementHandle));
    } finally {
      sdkRoutingSectionnoticeReleaseFfiHandle(_elementHandle);
    }
    _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingSectionnoticeIteratorIncrement(_iteratorHandle);
  }
  _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingSectionnoticeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingSectionnoticeReleaseFfiHandle(Pointer<Void> handle) => _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingSectionnoticeReleaseHandle(handle);

final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingSectionnoticeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_SectionNotice_create_handle_nullable'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingSectionnoticeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_SectionNotice_release_handle_nullable'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingSectionnoticeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_SectionNotice_get_value_nullable'));

Pointer<Void> heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingSectionnoticeToFfiNullable(List<SectionNotice>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingSectionnoticeToFfi(value);
  final result = _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingSectionnoticeCreateHandleNullable(_handle);
  heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingSectionnoticeReleaseFfiHandle(_handle);
  return result;
}

List<SectionNotice>? heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingSectionnoticeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingSectionnoticeGetValueNullable(handle);
  final result = heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingSectionnoticeFromFfi(_handle);
  heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingSectionnoticeReleaseFfiHandle(_handle);
  return result;
}

void heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingSectionnoticeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingSectionnoticeReleaseHandleNullable(handle);

final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingSegmentreferenceCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_SegmentReference_create_handle'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingSegmentreferenceReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_SegmentReference_release_handle'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingSegmentreferenceInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_SegmentReference_insert'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingSegmentreferenceIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_SegmentReference_iterator'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingSegmentreferenceIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_SegmentReference_iterator_release_handle'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingSegmentreferenceIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_SegmentReference_iterator_is_valid'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingSegmentreferenceIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_SegmentReference_iterator_increment'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingSegmentreferenceIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_SegmentReference_iterator_get'));

Pointer<Void> heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingSegmentreferenceToFfi(List<SegmentReference> value) {
  final _result = _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingSegmentreferenceCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingSegmentreferenceToFfi(element);
    _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingSegmentreferenceInsert(_result, _elementHandle);
    sdkRoutingSegmentreferenceReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<SegmentReference> heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingSegmentreferenceFromFfi(Pointer<Void> handle) {
  final result = List<SegmentReference>.empty(growable: true);
  final _iteratorHandle = _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingSegmentreferenceIterator(handle);
  while (_heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingSegmentreferenceIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingSegmentreferenceIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingSegmentreferenceFromFfi(_elementHandle));
    } finally {
      sdkRoutingSegmentreferenceReleaseFfiHandle(_elementHandle);
    }
    _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingSegmentreferenceIteratorIncrement(_iteratorHandle);
  }
  _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingSegmentreferenceIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingSegmentreferenceReleaseFfiHandle(Pointer<Void> handle) => _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingSegmentreferenceReleaseHandle(handle);

final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingSegmentreferenceCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_SegmentReference_create_handle_nullable'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingSegmentreferenceReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_SegmentReference_release_handle_nullable'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingSegmentreferenceGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_SegmentReference_get_value_nullable'));

Pointer<Void> heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingSegmentreferenceToFfiNullable(List<SegmentReference>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingSegmentreferenceToFfi(value);
  final result = _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingSegmentreferenceCreateHandleNullable(_handle);
  heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingSegmentreferenceReleaseFfiHandle(_handle);
  return result;
}

List<SegmentReference>? heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingSegmentreferenceFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingSegmentreferenceGetValueNullable(handle);
  final result = heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingSegmentreferenceFromFfi(_handle);
  heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingSegmentreferenceReleaseFfiHandle(_handle);
  return result;
}

void heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingSegmentreferenceReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingSegmentreferenceReleaseHandleNullable(handle);

final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingSpanCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_Span_create_handle'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingSpanReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_Span_release_handle'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingSpanInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_Span_insert'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingSpanIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_Span_iterator'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingSpanIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_Span_iterator_release_handle'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingSpanIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_Span_iterator_is_valid'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingSpanIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_Span_iterator_increment'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingSpanIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_Span_iterator_get'));

Pointer<Void> heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingSpanToFfi(List<Span> value) {
  final _result = _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingSpanCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingSpanToFfi(element);
    _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingSpanInsert(_result, _elementHandle);
    sdkRoutingSpanReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Span> heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingSpanFromFfi(Pointer<Void> handle) {
  final result = List<Span>.empty(growable: true);
  final _iteratorHandle = _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingSpanIterator(handle);
  while (_heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingSpanIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingSpanIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingSpanFromFfi(_elementHandle));
    } finally {
      sdkRoutingSpanReleaseFfiHandle(_elementHandle);
    }
    _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingSpanIteratorIncrement(_iteratorHandle);
  }
  _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingSpanIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingSpanReleaseFfiHandle(Pointer<Void> handle) => _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingSpanReleaseHandle(handle);

final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingSpanCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_Span_create_handle_nullable'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingSpanReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_Span_release_handle_nullable'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingSpanGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_Span_get_value_nullable'));

Pointer<Void> heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingSpanToFfiNullable(List<Span>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingSpanToFfi(value);
  final result = _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingSpanCreateHandleNullable(_handle);
  heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingSpanReleaseFfiHandle(_handle);
  return result;
}

List<Span>? heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingSpanFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingSpanGetValueNullable(handle);
  final result = heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingSpanFromFfi(_handle);
  heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingSpanReleaseFfiHandle(_handle);
  return result;
}

void heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingSpanReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingSpanReleaseHandleNullable(handle);

final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTollCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_Toll_create_handle'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTollReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_Toll_release_handle'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTollInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_Toll_insert'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTollIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_Toll_iterator'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTollIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_Toll_iterator_release_handle'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTollIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_Toll_iterator_is_valid'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTollIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_Toll_iterator_increment'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTollIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_Toll_iterator_get'));

Pointer<Void> heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTollToFfi(List<Toll> value) {
  final _result = _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTollCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingTollToFfi(element);
    _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTollInsert(_result, _elementHandle);
    sdkRoutingTollReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Toll> heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTollFromFfi(Pointer<Void> handle) {
  final result = List<Toll>.empty(growable: true);
  final _iteratorHandle = _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTollIterator(handle);
  while (_heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTollIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTollIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingTollFromFfi(_elementHandle));
    } finally {
      sdkRoutingTollReleaseFfiHandle(_elementHandle);
    }
    _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTollIteratorIncrement(_iteratorHandle);
  }
  _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTollIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTollReleaseFfiHandle(Pointer<Void> handle) => _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTollReleaseHandle(handle);

final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTollCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_Toll_create_handle_nullable'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTollReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_Toll_release_handle_nullable'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTollGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_Toll_get_value_nullable'));

Pointer<Void> heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTollToFfiNullable(List<Toll>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTollToFfi(value);
  final result = _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTollCreateHandleNullable(_handle);
  heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTollReleaseFfiHandle(_handle);
  return result;
}

List<Toll>? heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTollFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTollGetValueNullable(handle);
  final result = heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTollFromFfi(_handle);
  heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTollReleaseFfiHandle(_handle);
  return result;
}

void heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTollReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTollReleaseHandleNullable(handle);

final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTollfareCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_TollFare_create_handle'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTollfareReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_TollFare_release_handle'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTollfareInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_TollFare_insert'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTollfareIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_TollFare_iterator'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTollfareIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_TollFare_iterator_release_handle'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTollfareIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_TollFare_iterator_is_valid'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTollfareIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_TollFare_iterator_increment'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTollfareIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_TollFare_iterator_get'));

Pointer<Void> heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTollfareToFfi(List<TollFare> value) {
  final _result = _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTollfareCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingTollfareToFfi(element);
    _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTollfareInsert(_result, _elementHandle);
    sdkRoutingTollfareReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<TollFare> heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTollfareFromFfi(Pointer<Void> handle) {
  final result = List<TollFare>.empty(growable: true);
  final _iteratorHandle = _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTollfareIterator(handle);
  while (_heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTollfareIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTollfareIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingTollfareFromFfi(_elementHandle));
    } finally {
      sdkRoutingTollfareReleaseFfiHandle(_elementHandle);
    }
    _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTollfareIteratorIncrement(_iteratorHandle);
  }
  _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTollfareIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTollfareReleaseFfiHandle(Pointer<Void> handle) => _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTollfareReleaseHandle(handle);

final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTollfareCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_TollFare_create_handle_nullable'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTollfareReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_TollFare_release_handle_nullable'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTollfareGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_TollFare_get_value_nullable'));

Pointer<Void> heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTollfareToFfiNullable(List<TollFare>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTollfareToFfi(value);
  final result = _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTollfareCreateHandleNullable(_handle);
  heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTollfareReleaseFfiHandle(_handle);
  return result;
}

List<TollFare>? heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTollfareFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTollfareGetValueNullable(handle);
  final result = heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTollfareFromFfi(_handle);
  heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTollfareReleaseFfiHandle(_handle);
  return result;
}

void heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTollfareReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTollfareReleaseHandleNullable(handle);

final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTrafficincidentonrouteCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_TrafficIncidentOnRoute_create_handle'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTrafficincidentonrouteReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_TrafficIncidentOnRoute_release_handle'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTrafficincidentonrouteInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_TrafficIncidentOnRoute_insert'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTrafficincidentonrouteIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_TrafficIncidentOnRoute_iterator'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTrafficincidentonrouteIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_TrafficIncidentOnRoute_iterator_release_handle'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTrafficincidentonrouteIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_TrafficIncidentOnRoute_iterator_is_valid'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTrafficincidentonrouteIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_TrafficIncidentOnRoute_iterator_increment'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTrafficincidentonrouteIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_TrafficIncidentOnRoute_iterator_get'));

Pointer<Void> heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTrafficincidentonrouteToFfi(List<TrafficIncidentOnRoute> value) {
  final _result = _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTrafficincidentonrouteCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingTrafficincidentonrouteToFfi(element);
    _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTrafficincidentonrouteInsert(_result, _elementHandle);
    sdkRoutingTrafficincidentonrouteReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<TrafficIncidentOnRoute> heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTrafficincidentonrouteFromFfi(Pointer<Void> handle) {
  final result = List<TrafficIncidentOnRoute>.empty(growable: true);
  final _iteratorHandle = _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTrafficincidentonrouteIterator(handle);
  while (_heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTrafficincidentonrouteIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTrafficincidentonrouteIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingTrafficincidentonrouteFromFfi(_elementHandle));
    } finally {
      sdkRoutingTrafficincidentonrouteReleaseFfiHandle(_elementHandle);
    }
    _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTrafficincidentonrouteIteratorIncrement(_iteratorHandle);
  }
  _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTrafficincidentonrouteIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTrafficincidentonrouteReleaseFfiHandle(Pointer<Void> handle) => _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTrafficincidentonrouteReleaseHandle(handle);

final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTrafficincidentonrouteCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_TrafficIncidentOnRoute_create_handle_nullable'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTrafficincidentonrouteReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_TrafficIncidentOnRoute_release_handle_nullable'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTrafficincidentonrouteGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_TrafficIncidentOnRoute_get_value_nullable'));

Pointer<Void> heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTrafficincidentonrouteToFfiNullable(List<TrafficIncidentOnRoute>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTrafficincidentonrouteToFfi(value);
  final result = _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTrafficincidentonrouteCreateHandleNullable(_handle);
  heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTrafficincidentonrouteReleaseFfiHandle(_handle);
  return result;
}

List<TrafficIncidentOnRoute>? heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTrafficincidentonrouteFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTrafficincidentonrouteGetValueNullable(handle);
  final result = heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTrafficincidentonrouteFromFfi(_handle);
  heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTrafficincidentonrouteReleaseFfiHandle(_handle);
  return result;
}

void heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTrafficincidentonrouteReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTrafficincidentonrouteReleaseHandleNullable(handle);

final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTrafficspeedCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_TrafficSpeed_create_handle'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTrafficspeedReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_TrafficSpeed_release_handle'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTrafficspeedInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_TrafficSpeed_insert'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTrafficspeedIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_TrafficSpeed_iterator'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTrafficspeedIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_TrafficSpeed_iterator_release_handle'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTrafficspeedIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_TrafficSpeed_iterator_is_valid'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTrafficspeedIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_TrafficSpeed_iterator_increment'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTrafficspeedIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_TrafficSpeed_iterator_get'));

Pointer<Void> heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTrafficspeedToFfi(List<TrafficSpeed> value) {
  final _result = _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTrafficspeedCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingTrafficspeedToFfi(element);
    _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTrafficspeedInsert(_result, _elementHandle);
    sdkRoutingTrafficspeedReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<TrafficSpeed> heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTrafficspeedFromFfi(Pointer<Void> handle) {
  final result = List<TrafficSpeed>.empty(growable: true);
  final _iteratorHandle = _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTrafficspeedIterator(handle);
  while (_heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTrafficspeedIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTrafficspeedIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingTrafficspeedFromFfi(_elementHandle));
    } finally {
      sdkRoutingTrafficspeedReleaseFfiHandle(_elementHandle);
    }
    _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTrafficspeedIteratorIncrement(_iteratorHandle);
  }
  _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTrafficspeedIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTrafficspeedReleaseFfiHandle(Pointer<Void> handle) => _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTrafficspeedReleaseHandle(handle);

final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTrafficspeedCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_TrafficSpeed_create_handle_nullable'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTrafficspeedReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_TrafficSpeed_release_handle_nullable'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTrafficspeedGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_TrafficSpeed_get_value_nullable'));

Pointer<Void> heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTrafficspeedToFfiNullable(List<TrafficSpeed>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTrafficspeedToFfi(value);
  final result = _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTrafficspeedCreateHandleNullable(_handle);
  heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTrafficspeedReleaseFfiHandle(_handle);
  return result;
}

List<TrafficSpeed>? heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTrafficspeedFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTrafficspeedGetValueNullable(handle);
  final result = heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTrafficspeedFromFfi(_handle);
  heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTrafficspeedReleaseFfiHandle(_handle);
  return result;
}

void heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTrafficspeedReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTrafficspeedReleaseHandleNullable(handle);

final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTransitincidentCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_TransitIncident_create_handle'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTransitincidentReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_TransitIncident_release_handle'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTransitincidentInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_TransitIncident_insert'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTransitincidentIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_TransitIncident_iterator'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTransitincidentIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_TransitIncident_iterator_release_handle'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTransitincidentIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_TransitIncident_iterator_is_valid'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTransitincidentIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_TransitIncident_iterator_increment'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTransitincidentIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_TransitIncident_iterator_get'));

Pointer<Void> heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTransitincidentToFfi(List<TransitIncident> value) {
  final _result = _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTransitincidentCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingTransitincidentToFfi(element);
    _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTransitincidentInsert(_result, _elementHandle);
    sdkRoutingTransitincidentReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<TransitIncident> heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTransitincidentFromFfi(Pointer<Void> handle) {
  final result = List<TransitIncident>.empty(growable: true);
  final _iteratorHandle = _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTransitincidentIterator(handle);
  while (_heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTransitincidentIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTransitincidentIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingTransitincidentFromFfi(_elementHandle));
    } finally {
      sdkRoutingTransitincidentReleaseFfiHandle(_elementHandle);
    }
    _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTransitincidentIteratorIncrement(_iteratorHandle);
  }
  _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTransitincidentIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTransitincidentReleaseFfiHandle(Pointer<Void> handle) => _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTransitincidentReleaseHandle(handle);

final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTransitincidentCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_TransitIncident_create_handle_nullable'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTransitincidentReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_TransitIncident_release_handle_nullable'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTransitincidentGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_TransitIncident_get_value_nullable'));

Pointer<Void> heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTransitincidentToFfiNullable(List<TransitIncident>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTransitincidentToFfi(value);
  final result = _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTransitincidentCreateHandleNullable(_handle);
  heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTransitincidentReleaseFfiHandle(_handle);
  return result;
}

List<TransitIncident>? heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTransitincidentFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTransitincidentGetValueNullable(handle);
  final result = heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTransitincidentFromFfi(_handle);
  heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTransitincidentReleaseFfiHandle(_handle);
  return result;
}

void heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTransitincidentReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTransitincidentReleaseHandleNullable(handle);

final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTransitmodeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_TransitMode_create_handle'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTransitmodeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_TransitMode_release_handle'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTransitmodeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_TransitMode_insert'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTransitmodeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_TransitMode_iterator'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTransitmodeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_TransitMode_iterator_release_handle'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTransitmodeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_TransitMode_iterator_is_valid'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTransitmodeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_TransitMode_iterator_increment'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTransitmodeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_TransitMode_iterator_get'));

Pointer<Void> heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTransitmodeToFfi(List<TransitMode> value) {
  final _result = _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTransitmodeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingTransitmodeToFfi(element);
    _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTransitmodeInsert(_result, _elementHandle);
    sdkRoutingTransitmodeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<TransitMode> heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTransitmodeFromFfi(Pointer<Void> handle) {
  final result = List<TransitMode>.empty(growable: true);
  final _iteratorHandle = _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTransitmodeIterator(handle);
  while (_heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTransitmodeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTransitmodeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingTransitmodeFromFfi(_elementHandle));
    } finally {
      sdkRoutingTransitmodeReleaseFfiHandle(_elementHandle);
    }
    _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTransitmodeIteratorIncrement(_iteratorHandle);
  }
  _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTransitmodeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTransitmodeReleaseFfiHandle(Pointer<Void> handle) => _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTransitmodeReleaseHandle(handle);

final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTransitmodeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_TransitMode_create_handle_nullable'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTransitmodeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_TransitMode_release_handle_nullable'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTransitmodeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_TransitMode_get_value_nullable'));

Pointer<Void> heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTransitmodeToFfiNullable(List<TransitMode>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTransitmodeToFfi(value);
  final result = _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTransitmodeCreateHandleNullable(_handle);
  heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTransitmodeReleaseFfiHandle(_handle);
  return result;
}

List<TransitMode>? heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTransitmodeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTransitmodeGetValueNullable(handle);
  final result = heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTransitmodeFromFfi(_handle);
  heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTransitmodeReleaseFfiHandle(_handle);
  return result;
}

void heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTransitmodeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTransitmodeReleaseHandleNullable(handle);

final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTransitstopCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_TransitStop_create_handle'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTransitstopReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_TransitStop_release_handle'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTransitstopInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_TransitStop_insert'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTransitstopIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_TransitStop_iterator'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTransitstopIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_TransitStop_iterator_release_handle'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTransitstopIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_TransitStop_iterator_is_valid'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTransitstopIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_TransitStop_iterator_increment'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTransitstopIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_TransitStop_iterator_get'));

Pointer<Void> heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTransitstopToFfi(List<TransitStop> value) {
  final _result = _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTransitstopCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingTransitstopToFfi(element);
    _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTransitstopInsert(_result, _elementHandle);
    sdkRoutingTransitstopReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<TransitStop> heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTransitstopFromFfi(Pointer<Void> handle) {
  final result = List<TransitStop>.empty(growable: true);
  final _iteratorHandle = _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTransitstopIterator(handle);
  while (_heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTransitstopIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTransitstopIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingTransitstopFromFfi(_elementHandle));
    } finally {
      sdkRoutingTransitstopReleaseFfiHandle(_elementHandle);
    }
    _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTransitstopIteratorIncrement(_iteratorHandle);
  }
  _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTransitstopIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTransitstopReleaseFfiHandle(Pointer<Void> handle) => _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTransitstopReleaseHandle(handle);

final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTransitstopCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_TransitStop_create_handle_nullable'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTransitstopReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_TransitStop_release_handle_nullable'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTransitstopGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_TransitStop_get_value_nullable'));

Pointer<Void> heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTransitstopToFfiNullable(List<TransitStop>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTransitstopToFfi(value);
  final result = _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTransitstopCreateHandleNullable(_handle);
  heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTransitstopReleaseFfiHandle(_handle);
  return result;
}

List<TransitStop>? heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTransitstopFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTransitstopGetValueNullable(handle);
  final result = heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTransitstopFromFfi(_handle);
  heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTransitstopReleaseFfiHandle(_handle);
  return result;
}

void heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTransitstopReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingTransitstopReleaseHandleNullable(handle);

final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingWaypointCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_Waypoint_create_handle'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingWaypointReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_Waypoint_release_handle'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingWaypointInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_Waypoint_insert'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingWaypointIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_Waypoint_iterator'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingWaypointIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_Waypoint_iterator_release_handle'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingWaypointIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_Waypoint_iterator_is_valid'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingWaypointIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_Waypoint_iterator_increment'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingWaypointIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_Waypoint_iterator_get'));

Pointer<Void> heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingWaypointToFfi(List<Waypoint> value) {
  final _result = _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingWaypointCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingWaypointToFfi(element);
    _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingWaypointInsert(_result, _elementHandle);
    sdkRoutingWaypointReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Waypoint> heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingWaypointFromFfi(Pointer<Void> handle) {
  final result = List<Waypoint>.empty(growable: true);
  final _iteratorHandle = _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingWaypointIterator(handle);
  while (_heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingWaypointIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingWaypointIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingWaypointFromFfi(_elementHandle));
    } finally {
      sdkRoutingWaypointReleaseFfiHandle(_elementHandle);
    }
    _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingWaypointIteratorIncrement(_iteratorHandle);
  }
  _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingWaypointIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingWaypointReleaseFfiHandle(Pointer<Void> handle) => _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingWaypointReleaseHandle(handle);

final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingWaypointCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_Waypoint_create_handle_nullable'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingWaypointReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_Waypoint_release_handle_nullable'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingWaypointGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_Waypoint_get_value_nullable'));

Pointer<Void> heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingWaypointToFfiNullable(List<Waypoint>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingWaypointToFfi(value);
  final result = _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingWaypointCreateHandleNullable(_handle);
  heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingWaypointReleaseFfiHandle(_handle);
  return result;
}

List<Waypoint>? heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingWaypointFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingWaypointGetValueNullable(handle);
  final result = heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingWaypointFromFfi(_handle);
  heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingWaypointReleaseFfiHandle(_handle);
  return result;
}

void heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingWaypointReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingWaypointReleaseHandleNullable(handle);

final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingZonecategoryCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_ZoneCategory_create_handle'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingZonecategoryReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_ZoneCategory_release_handle'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingZonecategoryInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_ZoneCategory_insert'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingZonecategoryIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_ZoneCategory_iterator'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingZonecategoryIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_ZoneCategory_iterator_release_handle'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingZonecategoryIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_ZoneCategory_iterator_is_valid'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingZonecategoryIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_ZoneCategory_iterator_increment'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingZonecategoryIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_ZoneCategory_iterator_get'));

Pointer<Void> heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingZonecategoryToFfi(List<ZoneCategory> value) {
  final _result = _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingZonecategoryCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingZonecategoryToFfi(element);
    _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingZonecategoryInsert(_result, _elementHandle);
    sdkRoutingZonecategoryReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<ZoneCategory> heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingZonecategoryFromFfi(Pointer<Void> handle) {
  final result = List<ZoneCategory>.empty(growable: true);
  final _iteratorHandle = _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingZonecategoryIterator(handle);
  while (_heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingZonecategoryIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingZonecategoryIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingZonecategoryFromFfi(_elementHandle));
    } finally {
      sdkRoutingZonecategoryReleaseFfiHandle(_elementHandle);
    }
    _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingZonecategoryIteratorIncrement(_iteratorHandle);
  }
  _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingZonecategoryIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingZonecategoryReleaseFfiHandle(Pointer<Void> handle) => _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingZonecategoryReleaseHandle(handle);

final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingZonecategoryCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_ZoneCategory_create_handle_nullable'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingZonecategoryReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_ZoneCategory_release_handle_nullable'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingZonecategoryGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_routing_ZoneCategory_get_value_nullable'));

Pointer<Void> heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingZonecategoryToFfiNullable(List<ZoneCategory>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingZonecategoryToFfi(value);
  final result = _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingZonecategoryCreateHandleNullable(_handle);
  heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingZonecategoryReleaseFfiHandle(_handle);
  return result;
}

List<ZoneCategory>? heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingZonecategoryFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingZonecategoryGetValueNullable(handle);
  final result = heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingZonecategoryFromFfi(_handle);
  heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingZonecategoryReleaseFfiHandle(_handle);
  return result;
}

void heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingZonecategoryReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRouteCorridorPrefetcherBindingslistofSdkRoutingZonecategoryReleaseHandleNullable(handle);

final _heresdkRouteCorridorPrefetcherBindingslistofSdkTransportHazardousmaterialCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_transport_HazardousMaterial_create_handle'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkTransportHazardousmaterialReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_transport_HazardousMaterial_release_handle'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkTransportHazardousmaterialInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_transport_HazardousMaterial_insert'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkTransportHazardousmaterialIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_transport_HazardousMaterial_iterator'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkTransportHazardousmaterialIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_transport_HazardousMaterial_iterator_release_handle'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkTransportHazardousmaterialIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_transport_HazardousMaterial_iterator_is_valid'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkTransportHazardousmaterialIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_transport_HazardousMaterial_iterator_increment'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkTransportHazardousmaterialIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_transport_HazardousMaterial_iterator_get'));

Pointer<Void> heresdkRouteCorridorPrefetcherBindingslistofSdkTransportHazardousmaterialToFfi(List<HazardousMaterial> value) {
  final _result = _heresdkRouteCorridorPrefetcherBindingslistofSdkTransportHazardousmaterialCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkTransportHazardousmaterialToFfi(element);
    _heresdkRouteCorridorPrefetcherBindingslistofSdkTransportHazardousmaterialInsert(_result, _elementHandle);
    sdkTransportHazardousmaterialReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<HazardousMaterial> heresdkRouteCorridorPrefetcherBindingslistofSdkTransportHazardousmaterialFromFfi(Pointer<Void> handle) {
  final result = List<HazardousMaterial>.empty(growable: true);
  final _iteratorHandle = _heresdkRouteCorridorPrefetcherBindingslistofSdkTransportHazardousmaterialIterator(handle);
  while (_heresdkRouteCorridorPrefetcherBindingslistofSdkTransportHazardousmaterialIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRouteCorridorPrefetcherBindingslistofSdkTransportHazardousmaterialIteratorGet(_iteratorHandle);
    try {
      result.add(sdkTransportHazardousmaterialFromFfi(_elementHandle));
    } finally {
      sdkTransportHazardousmaterialReleaseFfiHandle(_elementHandle);
    }
    _heresdkRouteCorridorPrefetcherBindingslistofSdkTransportHazardousmaterialIteratorIncrement(_iteratorHandle);
  }
  _heresdkRouteCorridorPrefetcherBindingslistofSdkTransportHazardousmaterialIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRouteCorridorPrefetcherBindingslistofSdkTransportHazardousmaterialReleaseFfiHandle(Pointer<Void> handle) => _heresdkRouteCorridorPrefetcherBindingslistofSdkTransportHazardousmaterialReleaseHandle(handle);

final _heresdkRouteCorridorPrefetcherBindingslistofSdkTransportHazardousmaterialCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_transport_HazardousMaterial_create_handle_nullable'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkTransportHazardousmaterialReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_transport_HazardousMaterial_release_handle_nullable'));
final _heresdkRouteCorridorPrefetcherBindingslistofSdkTransportHazardousmaterialGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsListOf_sdk_transport_HazardousMaterial_get_value_nullable'));

Pointer<Void> heresdkRouteCorridorPrefetcherBindingslistofSdkTransportHazardousmaterialToFfiNullable(List<HazardousMaterial>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRouteCorridorPrefetcherBindingslistofSdkTransportHazardousmaterialToFfi(value);
  final result = _heresdkRouteCorridorPrefetcherBindingslistofSdkTransportHazardousmaterialCreateHandleNullable(_handle);
  heresdkRouteCorridorPrefetcherBindingslistofSdkTransportHazardousmaterialReleaseFfiHandle(_handle);
  return result;
}

List<HazardousMaterial>? heresdkRouteCorridorPrefetcherBindingslistofSdkTransportHazardousmaterialFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRouteCorridorPrefetcherBindingslistofSdkTransportHazardousmaterialGetValueNullable(handle);
  final result = heresdkRouteCorridorPrefetcherBindingslistofSdkTransportHazardousmaterialFromFfi(_handle);
  heresdkRouteCorridorPrefetcherBindingslistofSdkTransportHazardousmaterialReleaseFfiHandle(_handle);
  return result;
}

void heresdkRouteCorridorPrefetcherBindingslistofSdkTransportHazardousmaterialReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRouteCorridorPrefetcherBindingslistofSdkTransportHazardousmaterialReleaseHandleNullable(handle);

final _heresdkRouteCorridorPrefetcherBindingsmapofDoubleToDoubleCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsMapOf_Double_to_Double_create_handle'));
final _heresdkRouteCorridorPrefetcherBindingsmapofDoubleToDoubleReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsMapOf_Double_to_Double_release_handle'));
final _heresdkRouteCorridorPrefetcherBindingsmapofDoubleToDoublePut = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Double, Double),
    void Function(Pointer<Void>, double, double)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsMapOf_Double_to_Double_put'));
final _heresdkRouteCorridorPrefetcherBindingsmapofDoubleToDoubleIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsMapOf_Double_to_Double_iterator'));
final _heresdkRouteCorridorPrefetcherBindingsmapofDoubleToDoubleIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsMapOf_Double_to_Double_iterator_release_handle'));
final _heresdkRouteCorridorPrefetcherBindingsmapofDoubleToDoubleIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsMapOf_Double_to_Double_iterator_is_valid'));
final _heresdkRouteCorridorPrefetcherBindingsmapofDoubleToDoubleIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsMapOf_Double_to_Double_iterator_increment'));
final _heresdkRouteCorridorPrefetcherBindingsmapofDoubleToDoubleIteratorGetKey = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Double Function(Pointer<Void>),
    double Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsMapOf_Double_to_Double_iterator_get_key'));
final _heresdkRouteCorridorPrefetcherBindingsmapofDoubleToDoubleIteratorGetValue = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Double Function(Pointer<Void>),
    double Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsMapOf_Double_to_Double_iterator_get_value'));

Pointer<Void> heresdkRouteCorridorPrefetcherBindingsmapofDoubleToDoubleToFfi(Map<double, double> value) {
  final _result = _heresdkRouteCorridorPrefetcherBindingsmapofDoubleToDoubleCreateHandle();
  for (final entry in value.entries) {
    final _keyHandle = (entry.key);
    final _valueHandle = (entry.value);
    _heresdkRouteCorridorPrefetcherBindingsmapofDoubleToDoublePut(_result, _keyHandle, _valueHandle);
    
    
  }
  return _result;
}

Map<double, double> heresdkRouteCorridorPrefetcherBindingsmapofDoubleToDoubleFromFfi(Pointer<Void> handle) {
  final result = Map<double, double>();
  final _iteratorHandle = _heresdkRouteCorridorPrefetcherBindingsmapofDoubleToDoubleIterator(handle);
  while (_heresdkRouteCorridorPrefetcherBindingsmapofDoubleToDoubleIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _keyHandle = _heresdkRouteCorridorPrefetcherBindingsmapofDoubleToDoubleIteratorGetKey(_iteratorHandle);
    final _valueHandle = _heresdkRouteCorridorPrefetcherBindingsmapofDoubleToDoubleIteratorGetValue(_iteratorHandle);
    try {
      result[(_keyHandle)] =
        (_valueHandle);
    } finally {
      
      
    }
    _heresdkRouteCorridorPrefetcherBindingsmapofDoubleToDoubleIteratorIncrement(_iteratorHandle);
  }
  _heresdkRouteCorridorPrefetcherBindingsmapofDoubleToDoubleIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRouteCorridorPrefetcherBindingsmapofDoubleToDoubleReleaseFfiHandle(Pointer<Void> handle) => _heresdkRouteCorridorPrefetcherBindingsmapofDoubleToDoubleReleaseHandle(handle);

final _heresdkRouteCorridorPrefetcherBindingsmapofDoubleToDoubleCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsMapOf_Double_to_Double_create_handle_nullable'));
final _heresdkRouteCorridorPrefetcherBindingsmapofDoubleToDoubleReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsMapOf_Double_to_Double_release_handle_nullable'));
final _heresdkRouteCorridorPrefetcherBindingsmapofDoubleToDoubleGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsMapOf_Double_to_Double_get_value_nullable'));

Pointer<Void> heresdkRouteCorridorPrefetcherBindingsmapofDoubleToDoubleToFfiNullable(Map<double, double>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRouteCorridorPrefetcherBindingsmapofDoubleToDoubleToFfi(value);
  final result = _heresdkRouteCorridorPrefetcherBindingsmapofDoubleToDoubleCreateHandleNullable(_handle);
  heresdkRouteCorridorPrefetcherBindingsmapofDoubleToDoubleReleaseFfiHandle(_handle);
  return result;
}

Map<double, double>? heresdkRouteCorridorPrefetcherBindingsmapofDoubleToDoubleFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRouteCorridorPrefetcherBindingsmapofDoubleToDoubleGetValueNullable(handle);
  final result = heresdkRouteCorridorPrefetcherBindingsmapofDoubleToDoubleFromFfi(_handle);
  heresdkRouteCorridorPrefetcherBindingsmapofDoubleToDoubleReleaseFfiHandle(_handle);
  return result;
}

void heresdkRouteCorridorPrefetcherBindingsmapofDoubleToDoubleReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRouteCorridorPrefetcherBindingsmapofDoubleToDoubleReleaseHandleNullable(handle);

final _heresdkRouteCorridorPrefetcherBindingsmapofIntToDoubleCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsMapOf_Int_to_Double_create_handle'));
final _heresdkRouteCorridorPrefetcherBindingsmapofIntToDoubleReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsMapOf_Int_to_Double_release_handle'));
final _heresdkRouteCorridorPrefetcherBindingsmapofIntToDoublePut = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Int32, Double),
    void Function(Pointer<Void>, int, double)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsMapOf_Int_to_Double_put'));
final _heresdkRouteCorridorPrefetcherBindingsmapofIntToDoubleIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsMapOf_Int_to_Double_iterator'));
final _heresdkRouteCorridorPrefetcherBindingsmapofIntToDoubleIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsMapOf_Int_to_Double_iterator_release_handle'));
final _heresdkRouteCorridorPrefetcherBindingsmapofIntToDoubleIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsMapOf_Int_to_Double_iterator_is_valid'));
final _heresdkRouteCorridorPrefetcherBindingsmapofIntToDoubleIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsMapOf_Int_to_Double_iterator_increment'));
final _heresdkRouteCorridorPrefetcherBindingsmapofIntToDoubleIteratorGetKey = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsMapOf_Int_to_Double_iterator_get_key'));
final _heresdkRouteCorridorPrefetcherBindingsmapofIntToDoubleIteratorGetValue = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Double Function(Pointer<Void>),
    double Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsMapOf_Int_to_Double_iterator_get_value'));

Pointer<Void> heresdkRouteCorridorPrefetcherBindingsmapofIntToDoubleToFfi(Map<int, double> value) {
  final _result = _heresdkRouteCorridorPrefetcherBindingsmapofIntToDoubleCreateHandle();
  for (final entry in value.entries) {
    final _keyHandle = (entry.key);
    final _valueHandle = (entry.value);
    _heresdkRouteCorridorPrefetcherBindingsmapofIntToDoublePut(_result, _keyHandle, _valueHandle);
    
    
  }
  return _result;
}

Map<int, double> heresdkRouteCorridorPrefetcherBindingsmapofIntToDoubleFromFfi(Pointer<Void> handle) {
  final result = Map<int, double>();
  final _iteratorHandle = _heresdkRouteCorridorPrefetcherBindingsmapofIntToDoubleIterator(handle);
  while (_heresdkRouteCorridorPrefetcherBindingsmapofIntToDoubleIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _keyHandle = _heresdkRouteCorridorPrefetcherBindingsmapofIntToDoubleIteratorGetKey(_iteratorHandle);
    final _valueHandle = _heresdkRouteCorridorPrefetcherBindingsmapofIntToDoubleIteratorGetValue(_iteratorHandle);
    try {
      result[(_keyHandle)] =
        (_valueHandle);
    } finally {
      
      
    }
    _heresdkRouteCorridorPrefetcherBindingsmapofIntToDoubleIteratorIncrement(_iteratorHandle);
  }
  _heresdkRouteCorridorPrefetcherBindingsmapofIntToDoubleIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRouteCorridorPrefetcherBindingsmapofIntToDoubleReleaseFfiHandle(Pointer<Void> handle) => _heresdkRouteCorridorPrefetcherBindingsmapofIntToDoubleReleaseHandle(handle);

final _heresdkRouteCorridorPrefetcherBindingsmapofIntToDoubleCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsMapOf_Int_to_Double_create_handle_nullable'));
final _heresdkRouteCorridorPrefetcherBindingsmapofIntToDoubleReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsMapOf_Int_to_Double_release_handle_nullable'));
final _heresdkRouteCorridorPrefetcherBindingsmapofIntToDoubleGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsMapOf_Int_to_Double_get_value_nullable'));

Pointer<Void> heresdkRouteCorridorPrefetcherBindingsmapofIntToDoubleToFfiNullable(Map<int, double>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRouteCorridorPrefetcherBindingsmapofIntToDoubleToFfi(value);
  final result = _heresdkRouteCorridorPrefetcherBindingsmapofIntToDoubleCreateHandleNullable(_handle);
  heresdkRouteCorridorPrefetcherBindingsmapofIntToDoubleReleaseFfiHandle(_handle);
  return result;
}

Map<int, double>? heresdkRouteCorridorPrefetcherBindingsmapofIntToDoubleFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRouteCorridorPrefetcherBindingsmapofIntToDoubleGetValueNullable(handle);
  final result = heresdkRouteCorridorPrefetcherBindingsmapofIntToDoubleFromFfi(_handle);
  heresdkRouteCorridorPrefetcherBindingsmapofIntToDoubleReleaseFfiHandle(_handle);
  return result;
}

void heresdkRouteCorridorPrefetcherBindingsmapofIntToDoubleReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRouteCorridorPrefetcherBindingsmapofIntToDoubleReleaseHandleNullable(handle);

final _heresdkRouteCorridorPrefetcherBindingsmapofSdkCoreEngineEnginebaseurlToStringCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_create_handle'));
final _heresdkRouteCorridorPrefetcherBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_release_handle'));
final _heresdkRouteCorridorPrefetcherBindingsmapofSdkCoreEngineEnginebaseurlToStringPut = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32, Pointer<Void>),
    void Function(Pointer<Void>, int, Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_put'));
final _heresdkRouteCorridorPrefetcherBindingsmapofSdkCoreEngineEnginebaseurlToStringIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_iterator'));
final _heresdkRouteCorridorPrefetcherBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_iterator_release_handle'));
final _heresdkRouteCorridorPrefetcherBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_iterator_is_valid'));
final _heresdkRouteCorridorPrefetcherBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_iterator_increment'));
final _heresdkRouteCorridorPrefetcherBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorGetKey = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_iterator_get_key'));
final _heresdkRouteCorridorPrefetcherBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorGetValue = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_route_corridor_prefetcher_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_iterator_get_value'));

Pointer<Void> heresdkRouteCorridorPrefetcherBindingsmapofSdkCoreEngineEnginebaseurlToStringToFfi(Map<EngineBaseURL, String> value) {
  final _result = _heresdkRouteCorridorPrefetcherBindingsmapofSdkCoreEngineEnginebaseurlToStringCreateHandle();
  for (final entry in value.entries) {
    final _keyHandle = sdkCoreEngineEnginebaseurlToFfi(entry.key);
    final _valueHandle = stringToFfi(entry.value);
    _heresdkRouteCorridorPrefetcherBindingsmapofSdkCoreEngineEnginebaseurlToStringPut(_result, _keyHandle, _valueHandle);
    sdkCoreEngineEnginebaseurlReleaseFfiHandle(_keyHandle);
    stringReleaseFfiHandle(_valueHandle);
  }
  return _result;
}

Map<EngineBaseURL, String> heresdkRouteCorridorPrefetcherBindingsmapofSdkCoreEngineEnginebaseurlToStringFromFfi(Pointer<Void> handle) {
  final result = Map<EngineBaseURL, String>();
  final _iteratorHandle = _heresdkRouteCorridorPrefetcherBindingsmapofSdkCoreEngineEnginebaseurlToStringIterator(handle);
  while (_heresdkRouteCorridorPrefetcherBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _keyHandle = _heresdkRouteCorridorPrefetcherBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorGetKey(_iteratorHandle);
    final _valueHandle = _heresdkRouteCorridorPrefetcherBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorGetValue(_iteratorHandle);
    try {
      result[sdkCoreEngineEnginebaseurlFromFfi(_keyHandle)] =
        stringFromFfi(_valueHandle);
    } finally {
      sdkCoreEngineEnginebaseurlReleaseFfiHandle(_keyHandle);
      stringReleaseFfiHandle(_valueHandle);
    }
    _heresdkRouteCorridorPrefetcherBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorIncrement(_iteratorHandle);
  }
  _heresdkRouteCorridorPrefetcherBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRouteCorridorPrefetcherBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseFfiHandle(Pointer<Void> handle) => _heresdkRouteCorridorPrefetcherBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseHandle(handle);

final _heresdkRouteCorridorPrefetcherBindingsmapofSdkCoreEngineEnginebaseurlToStringCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_create_handle_nullable'));
final _heresdkRouteCorridorPrefetcherBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_release_handle_nullable'));
final _heresdkRouteCorridorPrefetcherBindingsmapofSdkCoreEngineEnginebaseurlToStringGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_route_corridor_prefetcher_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_get_value_nullable'));

Pointer<Void> heresdkRouteCorridorPrefetcherBindingsmapofSdkCoreEngineEnginebaseurlToStringToFfiNullable(Map<EngineBaseURL, String>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRouteCorridorPrefetcherBindingsmapofSdkCoreEngineEnginebaseurlToStringToFfi(value);
  final result = _heresdkRouteCorridorPrefetcherBindingsmapofSdkCoreEngineEnginebaseurlToStringCreateHandleNullable(_handle);
  heresdkRouteCorridorPrefetcherBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseFfiHandle(_handle);
  return result;
}

Map<EngineBaseURL, String>? heresdkRouteCorridorPrefetcherBindingsmapofSdkCoreEngineEnginebaseurlToStringFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRouteCorridorPrefetcherBindingsmapofSdkCoreEngineEnginebaseurlToStringGetValueNullable(handle);
  final result = heresdkRouteCorridorPrefetcherBindingsmapofSdkCoreEngineEnginebaseurlToStringFromFfi(_handle);
  heresdkRouteCorridorPrefetcherBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseFfiHandle(_handle);
  return result;
}

void heresdkRouteCorridorPrefetcherBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRouteCorridorPrefetcherBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseHandleNullable(handle);


// Copyright (c) 2018-2022 HERE Global B.V. and its affiliate(s).
// All rights reserved.
//
// This software and other materials contain proprietary information
// controlled by HERE and are protected by applicable copyright legislation.
// Any use and utilization of this software and other materials and
// disclosure to any third parties is conditional upon having a separate
// agreement with HERE for the access, use, utilization or disclosure of this
// software. In the absence of such agreement, the use of the software is not
// allowed.
//










































final _heresdkRoutingBindingslistofIntCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindingsListOf_Int_create_handle'));
final _heresdkRoutingBindingslistofIntReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_Int_release_handle'));
final _heresdkRoutingBindingslistofIntInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Int32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_bindingsListOf_Int_insert'));
final _heresdkRoutingBindingslistofIntIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_Int_iterator'));
final _heresdkRoutingBindingslistofIntIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_Int_iterator_release_handle'));
final _heresdkRoutingBindingslistofIntIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_Int_iterator_is_valid'));
final _heresdkRoutingBindingslistofIntIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_Int_iterator_increment'));
final _heresdkRoutingBindingslistofIntIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_Int_iterator_get'));

Pointer<Void> heresdkRoutingBindingslistofIntToFfi(List<int> value) {
  final _result = _heresdkRoutingBindingslistofIntCreateHandle();
  for (final element in value) {
    final _elementHandle = (element);
    _heresdkRoutingBindingslistofIntInsert(_result, _elementHandle);
    
  }
  return _result;
}

List<int> heresdkRoutingBindingslistofIntFromFfi(Pointer<Void> handle) {
  final result = List<int>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingslistofIntIterator(handle);
  while (_heresdkRoutingBindingslistofIntIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingslistofIntIteratorGet(_iteratorHandle);
    try {
      result.add((_elementHandle));
    } finally {
      
    }
    _heresdkRoutingBindingslistofIntIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingslistofIntIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingslistofIntReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingslistofIntReleaseHandle(handle);

final _heresdkRoutingBindingslistofIntCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_Int_create_handle_nullable'));
final _heresdkRoutingBindingslistofIntReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_Int_release_handle_nullable'));
final _heresdkRoutingBindingslistofIntGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_Int_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingslistofIntToFfiNullable(List<int>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingslistofIntToFfi(value);
  final result = _heresdkRoutingBindingslistofIntCreateHandleNullable(_handle);
  heresdkRoutingBindingslistofIntReleaseFfiHandle(_handle);
  return result;
}

List<int>? heresdkRoutingBindingslistofIntFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingBindingslistofIntGetValueNullable(handle);
  final result = heresdkRoutingBindingslistofIntFromFfi(_handle);
  heresdkRoutingBindingslistofIntReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingslistofIntReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingslistofIntReleaseHandleNullable(handle);

final _heresdkRoutingBindingslistofLocaleCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindingsListOf_Locale_create_handle'));
final _heresdkRoutingBindingslistofLocaleReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_Locale_release_handle'));
final _heresdkRoutingBindingslistofLocaleInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_Locale_insert'));
final _heresdkRoutingBindingslistofLocaleIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_Locale_iterator'));
final _heresdkRoutingBindingslistofLocaleIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_Locale_iterator_release_handle'));
final _heresdkRoutingBindingslistofLocaleIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_Locale_iterator_is_valid'));
final _heresdkRoutingBindingslistofLocaleIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_Locale_iterator_increment'));
final _heresdkRoutingBindingslistofLocaleIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_Locale_iterator_get'));

Pointer<Void> heresdkRoutingBindingslistofLocaleToFfi(List<Locale> value) {
  final _result = _heresdkRoutingBindingslistofLocaleCreateHandle();
  for (final element in value) {
    final _elementHandle = localeToFfi(element);
    _heresdkRoutingBindingslistofLocaleInsert(_result, _elementHandle);
    localeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Locale> heresdkRoutingBindingslistofLocaleFromFfi(Pointer<Void> handle) {
  final result = List<Locale>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingslistofLocaleIterator(handle);
  while (_heresdkRoutingBindingslistofLocaleIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingslistofLocaleIteratorGet(_iteratorHandle);
    try {
      result.add(localeFromFfi(_elementHandle));
    } finally {
      localeReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingBindingslistofLocaleIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingslistofLocaleIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingslistofLocaleReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingslistofLocaleReleaseHandle(handle);

final _heresdkRoutingBindingslistofLocaleCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_Locale_create_handle_nullable'));
final _heresdkRoutingBindingslistofLocaleReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_Locale_release_handle_nullable'));
final _heresdkRoutingBindingslistofLocaleGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_Locale_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingslistofLocaleToFfiNullable(List<Locale>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingslistofLocaleToFfi(value);
  final result = _heresdkRoutingBindingslistofLocaleCreateHandleNullable(_handle);
  heresdkRoutingBindingslistofLocaleReleaseFfiHandle(_handle);
  return result;
}

List<Locale>? heresdkRoutingBindingslistofLocaleFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingBindingslistofLocaleGetValueNullable(handle);
  final result = heresdkRoutingBindingslistofLocaleFromFfi(_handle);
  heresdkRoutingBindingslistofLocaleReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingslistofLocaleReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingslistofLocaleReleaseHandleNullable(handle);

final _heresdkRoutingBindingslistofSdkCoreCountrycodeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_CountryCode_create_handle'));
final _heresdkRoutingBindingslistofSdkCoreCountrycodeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_CountryCode_release_handle'));
final _heresdkRoutingBindingslistofSdkCoreCountrycodeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_CountryCode_insert'));
final _heresdkRoutingBindingslistofSdkCoreCountrycodeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_core_CountryCode_iterator'));
final _heresdkRoutingBindingslistofSdkCoreCountrycodeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_core_CountryCode_iterator_release_handle'));
final _heresdkRoutingBindingslistofSdkCoreCountrycodeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_core_CountryCode_iterator_is_valid'));
final _heresdkRoutingBindingslistofSdkCoreCountrycodeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_core_CountryCode_iterator_increment'));
final _heresdkRoutingBindingslistofSdkCoreCountrycodeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_core_CountryCode_iterator_get'));

Pointer<Void> heresdkRoutingBindingslistofSdkCoreCountrycodeToFfi(List<CountryCode> value) {
  final _result = _heresdkRoutingBindingslistofSdkCoreCountrycodeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreCountrycodeToFfi(element);
    _heresdkRoutingBindingslistofSdkCoreCountrycodeInsert(_result, _elementHandle);
    sdkCoreCountrycodeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<CountryCode> heresdkRoutingBindingslistofSdkCoreCountrycodeFromFfi(Pointer<Void> handle) {
  final result = List<CountryCode>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingslistofSdkCoreCountrycodeIterator(handle);
  while (_heresdkRoutingBindingslistofSdkCoreCountrycodeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingslistofSdkCoreCountrycodeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreCountrycodeFromFfi(_elementHandle));
    } finally {
      sdkCoreCountrycodeReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingBindingslistofSdkCoreCountrycodeIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingslistofSdkCoreCountrycodeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingslistofSdkCoreCountrycodeReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingslistofSdkCoreCountrycodeReleaseHandle(handle);

final _heresdkRoutingBindingslistofSdkCoreCountrycodeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_CountryCode_create_handle_nullable'));
final _heresdkRoutingBindingslistofSdkCoreCountrycodeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_CountryCode_release_handle_nullable'));
final _heresdkRoutingBindingslistofSdkCoreCountrycodeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_CountryCode_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingslistofSdkCoreCountrycodeToFfiNullable(List<CountryCode>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingslistofSdkCoreCountrycodeToFfi(value);
  final result = _heresdkRoutingBindingslistofSdkCoreCountrycodeCreateHandleNullable(_handle);
  heresdkRoutingBindingslistofSdkCoreCountrycodeReleaseFfiHandle(_handle);
  return result;
}

List<CountryCode>? heresdkRoutingBindingslistofSdkCoreCountrycodeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingBindingslistofSdkCoreCountrycodeGetValueNullable(handle);
  final result = heresdkRoutingBindingslistofSdkCoreCountrycodeFromFfi(_handle);
  heresdkRoutingBindingslistofSdkCoreCountrycodeReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingslistofSdkCoreCountrycodeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingslistofSdkCoreCountrycodeReleaseHandleNullable(handle);

final _heresdkRoutingBindingslistofSdkCoreGeoboxCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_GeoBox_create_handle'));
final _heresdkRoutingBindingslistofSdkCoreGeoboxReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_GeoBox_release_handle'));
final _heresdkRoutingBindingslistofSdkCoreGeoboxInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_GeoBox_insert'));
final _heresdkRoutingBindingslistofSdkCoreGeoboxIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_core_GeoBox_iterator'));
final _heresdkRoutingBindingslistofSdkCoreGeoboxIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_core_GeoBox_iterator_release_handle'));
final _heresdkRoutingBindingslistofSdkCoreGeoboxIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_core_GeoBox_iterator_is_valid'));
final _heresdkRoutingBindingslistofSdkCoreGeoboxIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_core_GeoBox_iterator_increment'));
final _heresdkRoutingBindingslistofSdkCoreGeoboxIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_core_GeoBox_iterator_get'));

Pointer<Void> heresdkRoutingBindingslistofSdkCoreGeoboxToFfi(List<GeoBox> value) {
  final _result = _heresdkRoutingBindingslistofSdkCoreGeoboxCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreGeoboxToFfi(element);
    _heresdkRoutingBindingslistofSdkCoreGeoboxInsert(_result, _elementHandle);
    sdkCoreGeoboxReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoBox> heresdkRoutingBindingslistofSdkCoreGeoboxFromFfi(Pointer<Void> handle) {
  final result = List<GeoBox>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingslistofSdkCoreGeoboxIterator(handle);
  while (_heresdkRoutingBindingslistofSdkCoreGeoboxIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingslistofSdkCoreGeoboxIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreGeoboxFromFfi(_elementHandle));
    } finally {
      sdkCoreGeoboxReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingBindingslistofSdkCoreGeoboxIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingslistofSdkCoreGeoboxIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingslistofSdkCoreGeoboxReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingslistofSdkCoreGeoboxReleaseHandle(handle);

final _heresdkRoutingBindingslistofSdkCoreGeoboxCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_GeoBox_create_handle_nullable'));
final _heresdkRoutingBindingslistofSdkCoreGeoboxReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_GeoBox_release_handle_nullable'));
final _heresdkRoutingBindingslistofSdkCoreGeoboxGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_GeoBox_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingslistofSdkCoreGeoboxToFfiNullable(List<GeoBox>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingslistofSdkCoreGeoboxToFfi(value);
  final result = _heresdkRoutingBindingslistofSdkCoreGeoboxCreateHandleNullable(_handle);
  heresdkRoutingBindingslistofSdkCoreGeoboxReleaseFfiHandle(_handle);
  return result;
}

List<GeoBox>? heresdkRoutingBindingslistofSdkCoreGeoboxFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingBindingslistofSdkCoreGeoboxGetValueNullable(handle);
  final result = heresdkRoutingBindingslistofSdkCoreGeoboxFromFfi(_handle);
  heresdkRoutingBindingslistofSdkCoreGeoboxReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingslistofSdkCoreGeoboxReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingslistofSdkCoreGeoboxReleaseHandleNullable(handle);

final _heresdkRoutingBindingslistofSdkCoreGeocoordinatesCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_GeoCoordinates_create_handle'));
final _heresdkRoutingBindingslistofSdkCoreGeocoordinatesReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_GeoCoordinates_release_handle'));
final _heresdkRoutingBindingslistofSdkCoreGeocoordinatesInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_GeoCoordinates_insert'));
final _heresdkRoutingBindingslistofSdkCoreGeocoordinatesIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_core_GeoCoordinates_iterator'));
final _heresdkRoutingBindingslistofSdkCoreGeocoordinatesIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_core_GeoCoordinates_iterator_release_handle'));
final _heresdkRoutingBindingslistofSdkCoreGeocoordinatesIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_core_GeoCoordinates_iterator_is_valid'));
final _heresdkRoutingBindingslistofSdkCoreGeocoordinatesIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_core_GeoCoordinates_iterator_increment'));
final _heresdkRoutingBindingslistofSdkCoreGeocoordinatesIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_core_GeoCoordinates_iterator_get'));

Pointer<Void> heresdkRoutingBindingslistofSdkCoreGeocoordinatesToFfi(List<GeoCoordinates> value) {
  final _result = _heresdkRoutingBindingslistofSdkCoreGeocoordinatesCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreGeocoordinatesToFfi(element);
    _heresdkRoutingBindingslistofSdkCoreGeocoordinatesInsert(_result, _elementHandle);
    sdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoCoordinates> heresdkRoutingBindingslistofSdkCoreGeocoordinatesFromFfi(Pointer<Void> handle) {
  final result = List<GeoCoordinates>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingslistofSdkCoreGeocoordinatesIterator(handle);
  while (_heresdkRoutingBindingslistofSdkCoreGeocoordinatesIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingslistofSdkCoreGeocoordinatesIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreGeocoordinatesFromFfi(_elementHandle));
    } finally {
      sdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingBindingslistofSdkCoreGeocoordinatesIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingslistofSdkCoreGeocoordinatesIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingslistofSdkCoreGeocoordinatesReleaseHandle(handle);

final _heresdkRoutingBindingslistofSdkCoreGeocoordinatesCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_GeoCoordinates_create_handle_nullable'));
final _heresdkRoutingBindingslistofSdkCoreGeocoordinatesReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_GeoCoordinates_release_handle_nullable'));
final _heresdkRoutingBindingslistofSdkCoreGeocoordinatesGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_GeoCoordinates_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingslistofSdkCoreGeocoordinatesToFfiNullable(List<GeoCoordinates>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingslistofSdkCoreGeocoordinatesToFfi(value);
  final result = _heresdkRoutingBindingslistofSdkCoreGeocoordinatesCreateHandleNullable(_handle);
  heresdkRoutingBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

List<GeoCoordinates>? heresdkRoutingBindingslistofSdkCoreGeocoordinatesFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingBindingslistofSdkCoreGeocoordinatesGetValueNullable(handle);
  final result = heresdkRoutingBindingslistofSdkCoreGeocoordinatesFromFfi(_handle);
  heresdkRoutingBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingslistofSdkCoreGeocoordinatesReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingslistofSdkCoreGeocoordinatesReleaseHandleNullable(handle);

final _heresdkRoutingBindingslistofSdkCoreGeopolygonCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_GeoPolygon_create_handle'));
final _heresdkRoutingBindingslistofSdkCoreGeopolygonReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_GeoPolygon_release_handle'));
final _heresdkRoutingBindingslistofSdkCoreGeopolygonInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_GeoPolygon_insert'));
final _heresdkRoutingBindingslistofSdkCoreGeopolygonIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_core_GeoPolygon_iterator'));
final _heresdkRoutingBindingslistofSdkCoreGeopolygonIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_core_GeoPolygon_iterator_release_handle'));
final _heresdkRoutingBindingslistofSdkCoreGeopolygonIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_core_GeoPolygon_iterator_is_valid'));
final _heresdkRoutingBindingslistofSdkCoreGeopolygonIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_core_GeoPolygon_iterator_increment'));
final _heresdkRoutingBindingslistofSdkCoreGeopolygonIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_core_GeoPolygon_iterator_get'));

Pointer<Void> heresdkRoutingBindingslistofSdkCoreGeopolygonToFfi(List<GeoPolygon> value) {
  final _result = _heresdkRoutingBindingslistofSdkCoreGeopolygonCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreGeopolygonToFfi(element);
    _heresdkRoutingBindingslistofSdkCoreGeopolygonInsert(_result, _elementHandle);
    sdkCoreGeopolygonReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoPolygon> heresdkRoutingBindingslistofSdkCoreGeopolygonFromFfi(Pointer<Void> handle) {
  final result = List<GeoPolygon>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingslistofSdkCoreGeopolygonIterator(handle);
  while (_heresdkRoutingBindingslistofSdkCoreGeopolygonIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingslistofSdkCoreGeopolygonIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreGeopolygonFromFfi(_elementHandle));
    } finally {
      sdkCoreGeopolygonReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingBindingslistofSdkCoreGeopolygonIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingslistofSdkCoreGeopolygonIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingslistofSdkCoreGeopolygonReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingslistofSdkCoreGeopolygonReleaseHandle(handle);

final _heresdkRoutingBindingslistofSdkCoreGeopolygonCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_GeoPolygon_create_handle_nullable'));
final _heresdkRoutingBindingslistofSdkCoreGeopolygonReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_GeoPolygon_release_handle_nullable'));
final _heresdkRoutingBindingslistofSdkCoreGeopolygonGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_GeoPolygon_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingslistofSdkCoreGeopolygonToFfiNullable(List<GeoPolygon>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingslistofSdkCoreGeopolygonToFfi(value);
  final result = _heresdkRoutingBindingslistofSdkCoreGeopolygonCreateHandleNullable(_handle);
  heresdkRoutingBindingslistofSdkCoreGeopolygonReleaseFfiHandle(_handle);
  return result;
}

List<GeoPolygon>? heresdkRoutingBindingslistofSdkCoreGeopolygonFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingBindingslistofSdkCoreGeopolygonGetValueNullable(handle);
  final result = heresdkRoutingBindingslistofSdkCoreGeopolygonFromFfi(_handle);
  heresdkRoutingBindingslistofSdkCoreGeopolygonReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingslistofSdkCoreGeopolygonReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingslistofSdkCoreGeopolygonReleaseHandleNullable(handle);

final _heresdkRoutingBindingslistofSdkCoreLocalizedtextCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_LocalizedText_create_handle'));
final _heresdkRoutingBindingslistofSdkCoreLocalizedtextReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_LocalizedText_release_handle'));
final _heresdkRoutingBindingslistofSdkCoreLocalizedtextInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_LocalizedText_insert'));
final _heresdkRoutingBindingslistofSdkCoreLocalizedtextIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_core_LocalizedText_iterator'));
final _heresdkRoutingBindingslistofSdkCoreLocalizedtextIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_core_LocalizedText_iterator_release_handle'));
final _heresdkRoutingBindingslistofSdkCoreLocalizedtextIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_core_LocalizedText_iterator_is_valid'));
final _heresdkRoutingBindingslistofSdkCoreLocalizedtextIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_core_LocalizedText_iterator_increment'));
final _heresdkRoutingBindingslistofSdkCoreLocalizedtextIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_core_LocalizedText_iterator_get'));

Pointer<Void> heresdkRoutingBindingslistofSdkCoreLocalizedtextToFfi(List<LocalizedText> value) {
  final _result = _heresdkRoutingBindingslistofSdkCoreLocalizedtextCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreLocalizedtextToFfi(element);
    _heresdkRoutingBindingslistofSdkCoreLocalizedtextInsert(_result, _elementHandle);
    sdkCoreLocalizedtextReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<LocalizedText> heresdkRoutingBindingslistofSdkCoreLocalizedtextFromFfi(Pointer<Void> handle) {
  final result = List<LocalizedText>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingslistofSdkCoreLocalizedtextIterator(handle);
  while (_heresdkRoutingBindingslistofSdkCoreLocalizedtextIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingslistofSdkCoreLocalizedtextIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreLocalizedtextFromFfi(_elementHandle));
    } finally {
      sdkCoreLocalizedtextReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingBindingslistofSdkCoreLocalizedtextIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingslistofSdkCoreLocalizedtextIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingslistofSdkCoreLocalizedtextReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingslistofSdkCoreLocalizedtextReleaseHandle(handle);

final _heresdkRoutingBindingslistofSdkCoreLocalizedtextCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_LocalizedText_create_handle_nullable'));
final _heresdkRoutingBindingslistofSdkCoreLocalizedtextReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_LocalizedText_release_handle_nullable'));
final _heresdkRoutingBindingslistofSdkCoreLocalizedtextGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_LocalizedText_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingslistofSdkCoreLocalizedtextToFfiNullable(List<LocalizedText>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingslistofSdkCoreLocalizedtextToFfi(value);
  final result = _heresdkRoutingBindingslistofSdkCoreLocalizedtextCreateHandleNullable(_handle);
  heresdkRoutingBindingslistofSdkCoreLocalizedtextReleaseFfiHandle(_handle);
  return result;
}

List<LocalizedText>? heresdkRoutingBindingslistofSdkCoreLocalizedtextFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingBindingslistofSdkCoreLocalizedtextGetValueNullable(handle);
  final result = heresdkRoutingBindingslistofSdkCoreLocalizedtextFromFfi(_handle);
  heresdkRoutingBindingslistofSdkCoreLocalizedtextReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingslistofSdkCoreLocalizedtextReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingslistofSdkCoreLocalizedtextReleaseHandleNullable(handle);

final _heresdkRoutingBindingslistofSdkCoreLocationCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_Location_create_handle'));
final _heresdkRoutingBindingslistofSdkCoreLocationReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_Location_release_handle'));
final _heresdkRoutingBindingslistofSdkCoreLocationInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_Location_insert'));
final _heresdkRoutingBindingslistofSdkCoreLocationIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_core_Location_iterator'));
final _heresdkRoutingBindingslistofSdkCoreLocationIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_core_Location_iterator_release_handle'));
final _heresdkRoutingBindingslistofSdkCoreLocationIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_core_Location_iterator_is_valid'));
final _heresdkRoutingBindingslistofSdkCoreLocationIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_core_Location_iterator_increment'));
final _heresdkRoutingBindingslistofSdkCoreLocationIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_core_Location_iterator_get'));

Pointer<Void> heresdkRoutingBindingslistofSdkCoreLocationToFfi(List<location_impl.Location> value) {
  final _result = _heresdkRoutingBindingslistofSdkCoreLocationCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreLocationToFfi(element);
    _heresdkRoutingBindingslistofSdkCoreLocationInsert(_result, _elementHandle);
    sdkCoreLocationReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<location_impl.Location> heresdkRoutingBindingslistofSdkCoreLocationFromFfi(Pointer<Void> handle) {
  final result = List<location_impl.Location>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingslistofSdkCoreLocationIterator(handle);
  while (_heresdkRoutingBindingslistofSdkCoreLocationIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingslistofSdkCoreLocationIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreLocationFromFfi(_elementHandle));
    } finally {
      sdkCoreLocationReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingBindingslistofSdkCoreLocationIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingslistofSdkCoreLocationIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingslistofSdkCoreLocationReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingslistofSdkCoreLocationReleaseHandle(handle);

final _heresdkRoutingBindingslistofSdkCoreLocationCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_Location_create_handle_nullable'));
final _heresdkRoutingBindingslistofSdkCoreLocationReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_Location_release_handle_nullable'));
final _heresdkRoutingBindingslistofSdkCoreLocationGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_Location_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingslistofSdkCoreLocationToFfiNullable(List<location_impl.Location>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingslistofSdkCoreLocationToFfi(value);
  final result = _heresdkRoutingBindingslistofSdkCoreLocationCreateHandleNullable(_handle);
  heresdkRoutingBindingslistofSdkCoreLocationReleaseFfiHandle(_handle);
  return result;
}

List<location_impl.Location>? heresdkRoutingBindingslistofSdkCoreLocationFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingBindingslistofSdkCoreLocationGetValueNullable(handle);
  final result = heresdkRoutingBindingslistofSdkCoreLocationFromFfi(_handle);
  heresdkRoutingBindingslistofSdkCoreLocationReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingslistofSdkCoreLocationReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingslistofSdkCoreLocationReleaseHandleNullable(handle);

final _heresdkRoutingBindingslistofSdkCoreEngineLayerconfigurationFeatureCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_create_handle'));
final _heresdkRoutingBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_release_handle'));
final _heresdkRoutingBindingslistofSdkCoreEngineLayerconfigurationFeatureInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_insert'));
final _heresdkRoutingBindingslistofSdkCoreEngineLayerconfigurationFeatureIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator'));
final _heresdkRoutingBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator_release_handle'));
final _heresdkRoutingBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator_is_valid'));
final _heresdkRoutingBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator_increment'));
final _heresdkRoutingBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator_get'));

Pointer<Void> heresdkRoutingBindingslistofSdkCoreEngineLayerconfigurationFeatureToFfi(List<LayerConfigurationFeature> value) {
  final _result = _heresdkRoutingBindingslistofSdkCoreEngineLayerconfigurationFeatureCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreEngineLayerconfigurationFeatureToFfi(element);
    _heresdkRoutingBindingslistofSdkCoreEngineLayerconfigurationFeatureInsert(_result, _elementHandle);
    sdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<LayerConfigurationFeature> heresdkRoutingBindingslistofSdkCoreEngineLayerconfigurationFeatureFromFfi(Pointer<Void> handle) {
  final result = List<LayerConfigurationFeature>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingslistofSdkCoreEngineLayerconfigurationFeatureIterator(handle);
  while (_heresdkRoutingBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreEngineLayerconfigurationFeatureFromFfi(_elementHandle));
    } finally {
      sdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseHandle(handle);

final _heresdkRoutingBindingslistofSdkCoreEngineLayerconfigurationFeatureCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_create_handle_nullable'));
final _heresdkRoutingBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_release_handle_nullable'));
final _heresdkRoutingBindingslistofSdkCoreEngineLayerconfigurationFeatureGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingslistofSdkCoreEngineLayerconfigurationFeatureToFfiNullable(List<LayerConfigurationFeature>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingslistofSdkCoreEngineLayerconfigurationFeatureToFfi(value);
  final result = _heresdkRoutingBindingslistofSdkCoreEngineLayerconfigurationFeatureCreateHandleNullable(_handle);
  heresdkRoutingBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(_handle);
  return result;
}

List<LayerConfigurationFeature>? heresdkRoutingBindingslistofSdkCoreEngineLayerconfigurationFeatureFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingBindingslistofSdkCoreEngineLayerconfigurationFeatureGetValueNullable(handle);
  final result = heresdkRoutingBindingslistofSdkCoreEngineLayerconfigurationFeatureFromFfi(_handle);
  heresdkRoutingBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseHandleNullable(handle);

final _heresdkRoutingBindingslistofSdkRoutingAttributionCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Attribution_create_handle'));
final _heresdkRoutingBindingslistofSdkRoutingAttributionReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Attribution_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingAttributionInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Attribution_insert'));
final _heresdkRoutingBindingslistofSdkRoutingAttributionIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Attribution_iterator'));
final _heresdkRoutingBindingslistofSdkRoutingAttributionIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Attribution_iterator_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingAttributionIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Attribution_iterator_is_valid'));
final _heresdkRoutingBindingslistofSdkRoutingAttributionIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Attribution_iterator_increment'));
final _heresdkRoutingBindingslistofSdkRoutingAttributionIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Attribution_iterator_get'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingAttributionToFfi(List<Attribution> value) {
  final _result = _heresdkRoutingBindingslistofSdkRoutingAttributionCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingAttributionToFfi(element);
    _heresdkRoutingBindingslistofSdkRoutingAttributionInsert(_result, _elementHandle);
    sdkRoutingAttributionReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Attribution> heresdkRoutingBindingslistofSdkRoutingAttributionFromFfi(Pointer<Void> handle) {
  final result = List<Attribution>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingslistofSdkRoutingAttributionIterator(handle);
  while (_heresdkRoutingBindingslistofSdkRoutingAttributionIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingslistofSdkRoutingAttributionIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingAttributionFromFfi(_elementHandle));
    } finally {
      sdkRoutingAttributionReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingBindingslistofSdkRoutingAttributionIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingslistofSdkRoutingAttributionIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingAttributionReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingslistofSdkRoutingAttributionReleaseHandle(handle);

final _heresdkRoutingBindingslistofSdkRoutingAttributionCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Attribution_create_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingAttributionReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Attribution_release_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingAttributionGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Attribution_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingAttributionToFfiNullable(List<Attribution>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingslistofSdkRoutingAttributionToFfi(value);
  final result = _heresdkRoutingBindingslistofSdkRoutingAttributionCreateHandleNullable(_handle);
  heresdkRoutingBindingslistofSdkRoutingAttributionReleaseFfiHandle(_handle);
  return result;
}

List<Attribution>? heresdkRoutingBindingslistofSdkRoutingAttributionFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingBindingslistofSdkRoutingAttributionGetValueNullable(handle);
  final result = heresdkRoutingBindingslistofSdkRoutingAttributionFromFfi(_handle);
  heresdkRoutingBindingslistofSdkRoutingAttributionReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingAttributionReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingslistofSdkRoutingAttributionReleaseHandleNullable(handle);

final _heresdkRoutingBindingslistofSdkRoutingChargingconnectortypeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_ChargingConnectorType_create_handle'));
final _heresdkRoutingBindingslistofSdkRoutingChargingconnectortypeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_ChargingConnectorType_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingChargingconnectortypeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_ChargingConnectorType_insert'));
final _heresdkRoutingBindingslistofSdkRoutingChargingconnectortypeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_ChargingConnectorType_iterator'));
final _heresdkRoutingBindingslistofSdkRoutingChargingconnectortypeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_ChargingConnectorType_iterator_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingChargingconnectortypeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_ChargingConnectorType_iterator_is_valid'));
final _heresdkRoutingBindingslistofSdkRoutingChargingconnectortypeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_ChargingConnectorType_iterator_increment'));
final _heresdkRoutingBindingslistofSdkRoutingChargingconnectortypeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_ChargingConnectorType_iterator_get'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingChargingconnectortypeToFfi(List<ChargingConnectorType> value) {
  final _result = _heresdkRoutingBindingslistofSdkRoutingChargingconnectortypeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingChargingconnectortypeToFfi(element);
    _heresdkRoutingBindingslistofSdkRoutingChargingconnectortypeInsert(_result, _elementHandle);
    sdkRoutingChargingconnectortypeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<ChargingConnectorType> heresdkRoutingBindingslistofSdkRoutingChargingconnectortypeFromFfi(Pointer<Void> handle) {
  final result = List<ChargingConnectorType>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingslistofSdkRoutingChargingconnectortypeIterator(handle);
  while (_heresdkRoutingBindingslistofSdkRoutingChargingconnectortypeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingslistofSdkRoutingChargingconnectortypeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingChargingconnectortypeFromFfi(_elementHandle));
    } finally {
      sdkRoutingChargingconnectortypeReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingBindingslistofSdkRoutingChargingconnectortypeIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingslistofSdkRoutingChargingconnectortypeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingChargingconnectortypeReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingslistofSdkRoutingChargingconnectortypeReleaseHandle(handle);

final _heresdkRoutingBindingslistofSdkRoutingChargingconnectortypeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_ChargingConnectorType_create_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingChargingconnectortypeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_ChargingConnectorType_release_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingChargingconnectortypeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_ChargingConnectorType_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingChargingconnectortypeToFfiNullable(List<ChargingConnectorType>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingslistofSdkRoutingChargingconnectortypeToFfi(value);
  final result = _heresdkRoutingBindingslistofSdkRoutingChargingconnectortypeCreateHandleNullable(_handle);
  heresdkRoutingBindingslistofSdkRoutingChargingconnectortypeReleaseFfiHandle(_handle);
  return result;
}

List<ChargingConnectorType>? heresdkRoutingBindingslistofSdkRoutingChargingconnectortypeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingBindingslistofSdkRoutingChargingconnectortypeGetValueNullable(handle);
  final result = heresdkRoutingBindingslistofSdkRoutingChargingconnectortypeFromFfi(_handle);
  heresdkRoutingBindingslistofSdkRoutingChargingconnectortypeReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingChargingconnectortypeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingslistofSdkRoutingChargingconnectortypeReleaseHandleNullable(handle);

final _heresdkRoutingBindingslistofSdkRoutingFareCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Fare_create_handle'));
final _heresdkRoutingBindingslistofSdkRoutingFareReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Fare_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingFareInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Fare_insert'));
final _heresdkRoutingBindingslistofSdkRoutingFareIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Fare_iterator'));
final _heresdkRoutingBindingslistofSdkRoutingFareIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Fare_iterator_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingFareIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Fare_iterator_is_valid'));
final _heresdkRoutingBindingslistofSdkRoutingFareIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Fare_iterator_increment'));
final _heresdkRoutingBindingslistofSdkRoutingFareIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Fare_iterator_get'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingFareToFfi(List<Fare> value) {
  final _result = _heresdkRoutingBindingslistofSdkRoutingFareCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingFareToFfi(element);
    _heresdkRoutingBindingslistofSdkRoutingFareInsert(_result, _elementHandle);
    sdkRoutingFareReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Fare> heresdkRoutingBindingslistofSdkRoutingFareFromFfi(Pointer<Void> handle) {
  final result = List<Fare>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingslistofSdkRoutingFareIterator(handle);
  while (_heresdkRoutingBindingslistofSdkRoutingFareIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingslistofSdkRoutingFareIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingFareFromFfi(_elementHandle));
    } finally {
      sdkRoutingFareReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingBindingslistofSdkRoutingFareIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingslistofSdkRoutingFareIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingFareReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingslistofSdkRoutingFareReleaseHandle(handle);

final _heresdkRoutingBindingslistofSdkRoutingFareCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Fare_create_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingFareReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Fare_release_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingFareGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Fare_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingFareToFfiNullable(List<Fare>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingslistofSdkRoutingFareToFfi(value);
  final result = _heresdkRoutingBindingslistofSdkRoutingFareCreateHandleNullable(_handle);
  heresdkRoutingBindingslistofSdkRoutingFareReleaseFfiHandle(_handle);
  return result;
}

List<Fare>? heresdkRoutingBindingslistofSdkRoutingFareFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingBindingslistofSdkRoutingFareGetValueNullable(handle);
  final result = heresdkRoutingBindingslistofSdkRoutingFareFromFfi(_handle);
  heresdkRoutingBindingslistofSdkRoutingFareReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingFareReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingslistofSdkRoutingFareReleaseHandleNullable(handle);

final _heresdkRoutingBindingslistofSdkRoutingHazardousgoodCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_HazardousGood_create_handle'));
final _heresdkRoutingBindingslistofSdkRoutingHazardousgoodReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_HazardousGood_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingHazardousgoodInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_HazardousGood_insert'));
final _heresdkRoutingBindingslistofSdkRoutingHazardousgoodIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_HazardousGood_iterator'));
final _heresdkRoutingBindingslistofSdkRoutingHazardousgoodIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_HazardousGood_iterator_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingHazardousgoodIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_HazardousGood_iterator_is_valid'));
final _heresdkRoutingBindingslistofSdkRoutingHazardousgoodIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_HazardousGood_iterator_increment'));
final _heresdkRoutingBindingslistofSdkRoutingHazardousgoodIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_HazardousGood_iterator_get'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingHazardousgoodToFfi(List<HazardousGood> value) {
  final _result = _heresdkRoutingBindingslistofSdkRoutingHazardousgoodCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingHazardousgoodToFfi(element);
    _heresdkRoutingBindingslistofSdkRoutingHazardousgoodInsert(_result, _elementHandle);
    sdkRoutingHazardousgoodReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<HazardousGood> heresdkRoutingBindingslistofSdkRoutingHazardousgoodFromFfi(Pointer<Void> handle) {
  final result = List<HazardousGood>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingslistofSdkRoutingHazardousgoodIterator(handle);
  while (_heresdkRoutingBindingslistofSdkRoutingHazardousgoodIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingslistofSdkRoutingHazardousgoodIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingHazardousgoodFromFfi(_elementHandle));
    } finally {
      sdkRoutingHazardousgoodReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingBindingslistofSdkRoutingHazardousgoodIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingslistofSdkRoutingHazardousgoodIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingHazardousgoodReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingslistofSdkRoutingHazardousgoodReleaseHandle(handle);

final _heresdkRoutingBindingslistofSdkRoutingHazardousgoodCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_HazardousGood_create_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingHazardousgoodReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_HazardousGood_release_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingHazardousgoodGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_HazardousGood_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingHazardousgoodToFfiNullable(List<HazardousGood>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingslistofSdkRoutingHazardousgoodToFfi(value);
  final result = _heresdkRoutingBindingslistofSdkRoutingHazardousgoodCreateHandleNullable(_handle);
  heresdkRoutingBindingslistofSdkRoutingHazardousgoodReleaseFfiHandle(_handle);
  return result;
}

List<HazardousGood>? heresdkRoutingBindingslistofSdkRoutingHazardousgoodFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingBindingslistofSdkRoutingHazardousgoodGetValueNullable(handle);
  final result = heresdkRoutingBindingslistofSdkRoutingHazardousgoodFromFfi(_handle);
  heresdkRoutingBindingslistofSdkRoutingHazardousgoodReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingHazardousgoodReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingslistofSdkRoutingHazardousgoodReleaseHandleNullable(handle);

final _heresdkRoutingBindingslistofSdkRoutingIsolineCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Isoline_create_handle'));
final _heresdkRoutingBindingslistofSdkRoutingIsolineReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Isoline_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingIsolineInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Isoline_insert'));
final _heresdkRoutingBindingslistofSdkRoutingIsolineIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Isoline_iterator'));
final _heresdkRoutingBindingslistofSdkRoutingIsolineIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Isoline_iterator_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingIsolineIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Isoline_iterator_is_valid'));
final _heresdkRoutingBindingslistofSdkRoutingIsolineIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Isoline_iterator_increment'));
final _heresdkRoutingBindingslistofSdkRoutingIsolineIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Isoline_iterator_get'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingIsolineToFfi(List<Isoline> value) {
  final _result = _heresdkRoutingBindingslistofSdkRoutingIsolineCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingIsolineToFfi(element);
    _heresdkRoutingBindingslistofSdkRoutingIsolineInsert(_result, _elementHandle);
    sdkRoutingIsolineReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Isoline> heresdkRoutingBindingslistofSdkRoutingIsolineFromFfi(Pointer<Void> handle) {
  final result = List<Isoline>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingslistofSdkRoutingIsolineIterator(handle);
  while (_heresdkRoutingBindingslistofSdkRoutingIsolineIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingslistofSdkRoutingIsolineIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingIsolineFromFfi(_elementHandle));
    } finally {
      sdkRoutingIsolineReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingBindingslistofSdkRoutingIsolineIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingslistofSdkRoutingIsolineIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingIsolineReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingslistofSdkRoutingIsolineReleaseHandle(handle);

final _heresdkRoutingBindingslistofSdkRoutingIsolineCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Isoline_create_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingIsolineReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Isoline_release_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingIsolineGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Isoline_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingIsolineToFfiNullable(List<Isoline>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingslistofSdkRoutingIsolineToFfi(value);
  final result = _heresdkRoutingBindingslistofSdkRoutingIsolineCreateHandleNullable(_handle);
  heresdkRoutingBindingslistofSdkRoutingIsolineReleaseFfiHandle(_handle);
  return result;
}

List<Isoline>? heresdkRoutingBindingslistofSdkRoutingIsolineFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingBindingslistofSdkRoutingIsolineGetValueNullable(handle);
  final result = heresdkRoutingBindingslistofSdkRoutingIsolineFromFfi(_handle);
  heresdkRoutingBindingslistofSdkRoutingIsolineReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingIsolineReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingslistofSdkRoutingIsolineReleaseHandleNullable(handle);

final _heresdkRoutingBindingslistofSdkRoutingManeuverCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Maneuver_create_handle'));
final _heresdkRoutingBindingslistofSdkRoutingManeuverReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Maneuver_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingManeuverInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Maneuver_insert'));
final _heresdkRoutingBindingslistofSdkRoutingManeuverIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Maneuver_iterator'));
final _heresdkRoutingBindingslistofSdkRoutingManeuverIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Maneuver_iterator_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingManeuverIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Maneuver_iterator_is_valid'));
final _heresdkRoutingBindingslistofSdkRoutingManeuverIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Maneuver_iterator_increment'));
final _heresdkRoutingBindingslistofSdkRoutingManeuverIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Maneuver_iterator_get'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingManeuverToFfi(List<Maneuver> value) {
  final _result = _heresdkRoutingBindingslistofSdkRoutingManeuverCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingManeuverToFfi(element);
    _heresdkRoutingBindingslistofSdkRoutingManeuverInsert(_result, _elementHandle);
    sdkRoutingManeuverReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Maneuver> heresdkRoutingBindingslistofSdkRoutingManeuverFromFfi(Pointer<Void> handle) {
  final result = List<Maneuver>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingslistofSdkRoutingManeuverIterator(handle);
  while (_heresdkRoutingBindingslistofSdkRoutingManeuverIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingslistofSdkRoutingManeuverIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingManeuverFromFfi(_elementHandle));
    } finally {
      sdkRoutingManeuverReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingBindingslistofSdkRoutingManeuverIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingslistofSdkRoutingManeuverIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingManeuverReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingslistofSdkRoutingManeuverReleaseHandle(handle);

final _heresdkRoutingBindingslistofSdkRoutingManeuverCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Maneuver_create_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingManeuverReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Maneuver_release_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingManeuverGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Maneuver_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingManeuverToFfiNullable(List<Maneuver>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingslistofSdkRoutingManeuverToFfi(value);
  final result = _heresdkRoutingBindingslistofSdkRoutingManeuverCreateHandleNullable(_handle);
  heresdkRoutingBindingslistofSdkRoutingManeuverReleaseFfiHandle(_handle);
  return result;
}

List<Maneuver>? heresdkRoutingBindingslistofSdkRoutingManeuverFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingBindingslistofSdkRoutingManeuverGetValueNullable(handle);
  final result = heresdkRoutingBindingslistofSdkRoutingManeuverFromFfi(_handle);
  heresdkRoutingBindingslistofSdkRoutingManeuverReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingManeuverReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingslistofSdkRoutingManeuverReleaseHandleNullable(handle);

final _heresdkRoutingBindingslistofSdkRoutingPaymentmethodCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_PaymentMethod_create_handle'));
final _heresdkRoutingBindingslistofSdkRoutingPaymentmethodReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_PaymentMethod_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingPaymentmethodInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_PaymentMethod_insert'));
final _heresdkRoutingBindingslistofSdkRoutingPaymentmethodIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_PaymentMethod_iterator'));
final _heresdkRoutingBindingslistofSdkRoutingPaymentmethodIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_PaymentMethod_iterator_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingPaymentmethodIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_PaymentMethod_iterator_is_valid'));
final _heresdkRoutingBindingslistofSdkRoutingPaymentmethodIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_PaymentMethod_iterator_increment'));
final _heresdkRoutingBindingslistofSdkRoutingPaymentmethodIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_PaymentMethod_iterator_get'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingPaymentmethodToFfi(List<PaymentMethod> value) {
  final _result = _heresdkRoutingBindingslistofSdkRoutingPaymentmethodCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingPaymentmethodToFfi(element);
    _heresdkRoutingBindingslistofSdkRoutingPaymentmethodInsert(_result, _elementHandle);
    sdkRoutingPaymentmethodReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<PaymentMethod> heresdkRoutingBindingslistofSdkRoutingPaymentmethodFromFfi(Pointer<Void> handle) {
  final result = List<PaymentMethod>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingslistofSdkRoutingPaymentmethodIterator(handle);
  while (_heresdkRoutingBindingslistofSdkRoutingPaymentmethodIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingslistofSdkRoutingPaymentmethodIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingPaymentmethodFromFfi(_elementHandle));
    } finally {
      sdkRoutingPaymentmethodReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingBindingslistofSdkRoutingPaymentmethodIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingslistofSdkRoutingPaymentmethodIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingPaymentmethodReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingslistofSdkRoutingPaymentmethodReleaseHandle(handle);

final _heresdkRoutingBindingslistofSdkRoutingPaymentmethodCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_PaymentMethod_create_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingPaymentmethodReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_PaymentMethod_release_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingPaymentmethodGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_PaymentMethod_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingPaymentmethodToFfiNullable(List<PaymentMethod>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingslistofSdkRoutingPaymentmethodToFfi(value);
  final result = _heresdkRoutingBindingslistofSdkRoutingPaymentmethodCreateHandleNullable(_handle);
  heresdkRoutingBindingslistofSdkRoutingPaymentmethodReleaseFfiHandle(_handle);
  return result;
}

List<PaymentMethod>? heresdkRoutingBindingslistofSdkRoutingPaymentmethodFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingBindingslistofSdkRoutingPaymentmethodGetValueNullable(handle);
  final result = heresdkRoutingBindingslistofSdkRoutingPaymentmethodFromFfi(_handle);
  heresdkRoutingBindingslistofSdkRoutingPaymentmethodReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingPaymentmethodReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingslistofSdkRoutingPaymentmethodReleaseHandleNullable(handle);

final _heresdkRoutingBindingslistofSdkRoutingPostactionCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_PostAction_create_handle'));
final _heresdkRoutingBindingslistofSdkRoutingPostactionReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_PostAction_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingPostactionInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_PostAction_insert'));
final _heresdkRoutingBindingslistofSdkRoutingPostactionIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_PostAction_iterator'));
final _heresdkRoutingBindingslistofSdkRoutingPostactionIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_PostAction_iterator_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingPostactionIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_PostAction_iterator_is_valid'));
final _heresdkRoutingBindingslistofSdkRoutingPostactionIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_PostAction_iterator_increment'));
final _heresdkRoutingBindingslistofSdkRoutingPostactionIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_PostAction_iterator_get'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingPostactionToFfi(List<PostAction> value) {
  final _result = _heresdkRoutingBindingslistofSdkRoutingPostactionCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingPostactionToFfi(element);
    _heresdkRoutingBindingslistofSdkRoutingPostactionInsert(_result, _elementHandle);
    sdkRoutingPostactionReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<PostAction> heresdkRoutingBindingslistofSdkRoutingPostactionFromFfi(Pointer<Void> handle) {
  final result = List<PostAction>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingslistofSdkRoutingPostactionIterator(handle);
  while (_heresdkRoutingBindingslistofSdkRoutingPostactionIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingslistofSdkRoutingPostactionIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingPostactionFromFfi(_elementHandle));
    } finally {
      sdkRoutingPostactionReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingBindingslistofSdkRoutingPostactionIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingslistofSdkRoutingPostactionIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingPostactionReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingslistofSdkRoutingPostactionReleaseHandle(handle);

final _heresdkRoutingBindingslistofSdkRoutingPostactionCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_PostAction_create_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingPostactionReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_PostAction_release_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingPostactionGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_PostAction_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingPostactionToFfiNullable(List<PostAction>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingslistofSdkRoutingPostactionToFfi(value);
  final result = _heresdkRoutingBindingslistofSdkRoutingPostactionCreateHandleNullable(_handle);
  heresdkRoutingBindingslistofSdkRoutingPostactionReleaseFfiHandle(_handle);
  return result;
}

List<PostAction>? heresdkRoutingBindingslistofSdkRoutingPostactionFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingBindingslistofSdkRoutingPostactionGetValueNullable(handle);
  final result = heresdkRoutingBindingslistofSdkRoutingPostactionFromFfi(_handle);
  heresdkRoutingBindingslistofSdkRoutingPostactionReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingPostactionReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingslistofSdkRoutingPostactionReleaseHandleNullable(handle);

final _heresdkRoutingBindingslistofSdkRoutingPreactionCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_PreAction_create_handle'));
final _heresdkRoutingBindingslistofSdkRoutingPreactionReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_PreAction_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingPreactionInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_PreAction_insert'));
final _heresdkRoutingBindingslistofSdkRoutingPreactionIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_PreAction_iterator'));
final _heresdkRoutingBindingslistofSdkRoutingPreactionIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_PreAction_iterator_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingPreactionIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_PreAction_iterator_is_valid'));
final _heresdkRoutingBindingslistofSdkRoutingPreactionIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_PreAction_iterator_increment'));
final _heresdkRoutingBindingslistofSdkRoutingPreactionIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_PreAction_iterator_get'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingPreactionToFfi(List<PreAction> value) {
  final _result = _heresdkRoutingBindingslistofSdkRoutingPreactionCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingPreactionToFfi(element);
    _heresdkRoutingBindingslistofSdkRoutingPreactionInsert(_result, _elementHandle);
    sdkRoutingPreactionReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<PreAction> heresdkRoutingBindingslistofSdkRoutingPreactionFromFfi(Pointer<Void> handle) {
  final result = List<PreAction>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingslistofSdkRoutingPreactionIterator(handle);
  while (_heresdkRoutingBindingslistofSdkRoutingPreactionIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingslistofSdkRoutingPreactionIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingPreactionFromFfi(_elementHandle));
    } finally {
      sdkRoutingPreactionReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingBindingslistofSdkRoutingPreactionIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingslistofSdkRoutingPreactionIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingPreactionReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingslistofSdkRoutingPreactionReleaseHandle(handle);

final _heresdkRoutingBindingslistofSdkRoutingPreactionCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_PreAction_create_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingPreactionReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_PreAction_release_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingPreactionGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_PreAction_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingPreactionToFfiNullable(List<PreAction>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingslistofSdkRoutingPreactionToFfi(value);
  final result = _heresdkRoutingBindingslistofSdkRoutingPreactionCreateHandleNullable(_handle);
  heresdkRoutingBindingslistofSdkRoutingPreactionReleaseFfiHandle(_handle);
  return result;
}

List<PreAction>? heresdkRoutingBindingslistofSdkRoutingPreactionFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingBindingslistofSdkRoutingPreactionGetValueNullable(handle);
  final result = heresdkRoutingBindingslistofSdkRoutingPreactionFromFfi(_handle);
  heresdkRoutingBindingslistofSdkRoutingPreactionReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingPreactionReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingslistofSdkRoutingPreactionReleaseHandleNullable(handle);

final _heresdkRoutingBindingslistofSdkRoutingRoadfeaturesCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_RoadFeatures_create_handle'));
final _heresdkRoutingBindingslistofSdkRoutingRoadfeaturesReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_RoadFeatures_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingRoadfeaturesInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_RoadFeatures_insert'));
final _heresdkRoutingBindingslistofSdkRoutingRoadfeaturesIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_RoadFeatures_iterator'));
final _heresdkRoutingBindingslistofSdkRoutingRoadfeaturesIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_RoadFeatures_iterator_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingRoadfeaturesIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_RoadFeatures_iterator_is_valid'));
final _heresdkRoutingBindingslistofSdkRoutingRoadfeaturesIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_RoadFeatures_iterator_increment'));
final _heresdkRoutingBindingslistofSdkRoutingRoadfeaturesIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_RoadFeatures_iterator_get'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingRoadfeaturesToFfi(List<RoadFeatures> value) {
  final _result = _heresdkRoutingBindingslistofSdkRoutingRoadfeaturesCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingRoadfeaturesToFfi(element);
    _heresdkRoutingBindingslistofSdkRoutingRoadfeaturesInsert(_result, _elementHandle);
    sdkRoutingRoadfeaturesReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<RoadFeatures> heresdkRoutingBindingslistofSdkRoutingRoadfeaturesFromFfi(Pointer<Void> handle) {
  final result = List<RoadFeatures>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingslistofSdkRoutingRoadfeaturesIterator(handle);
  while (_heresdkRoutingBindingslistofSdkRoutingRoadfeaturesIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingslistofSdkRoutingRoadfeaturesIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingRoadfeaturesFromFfi(_elementHandle));
    } finally {
      sdkRoutingRoadfeaturesReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingBindingslistofSdkRoutingRoadfeaturesIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingslistofSdkRoutingRoadfeaturesIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingRoadfeaturesReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingslistofSdkRoutingRoadfeaturesReleaseHandle(handle);

final _heresdkRoutingBindingslistofSdkRoutingRoadfeaturesCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_RoadFeatures_create_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingRoadfeaturesReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_RoadFeatures_release_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingRoadfeaturesGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_RoadFeatures_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingRoadfeaturesToFfiNullable(List<RoadFeatures>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingslistofSdkRoutingRoadfeaturesToFfi(value);
  final result = _heresdkRoutingBindingslistofSdkRoutingRoadfeaturesCreateHandleNullable(_handle);
  heresdkRoutingBindingslistofSdkRoutingRoadfeaturesReleaseFfiHandle(_handle);
  return result;
}

List<RoadFeatures>? heresdkRoutingBindingslistofSdkRoutingRoadfeaturesFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingBindingslistofSdkRoutingRoadfeaturesGetValueNullable(handle);
  final result = heresdkRoutingBindingslistofSdkRoutingRoadfeaturesFromFfi(_handle);
  heresdkRoutingBindingslistofSdkRoutingRoadfeaturesReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingRoadfeaturesReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingslistofSdkRoutingRoadfeaturesReleaseHandleNullable(handle);

final _heresdkRoutingBindingslistofSdkRoutingRouteCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Route_create_handle'));
final _heresdkRoutingBindingslistofSdkRoutingRouteReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Route_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingRouteInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Route_insert'));
final _heresdkRoutingBindingslistofSdkRoutingRouteIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Route_iterator'));
final _heresdkRoutingBindingslistofSdkRoutingRouteIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Route_iterator_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingRouteIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Route_iterator_is_valid'));
final _heresdkRoutingBindingslistofSdkRoutingRouteIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Route_iterator_increment'));
final _heresdkRoutingBindingslistofSdkRoutingRouteIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Route_iterator_get'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingRouteToFfi(List<Route> value) {
  final _result = _heresdkRoutingBindingslistofSdkRoutingRouteCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingRouteToFfi(element);
    _heresdkRoutingBindingslistofSdkRoutingRouteInsert(_result, _elementHandle);
    sdkRoutingRouteReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Route> heresdkRoutingBindingslistofSdkRoutingRouteFromFfi(Pointer<Void> handle) {
  final result = List<Route>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingslistofSdkRoutingRouteIterator(handle);
  while (_heresdkRoutingBindingslistofSdkRoutingRouteIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingslistofSdkRoutingRouteIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingRouteFromFfi(_elementHandle));
    } finally {
      sdkRoutingRouteReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingBindingslistofSdkRoutingRouteIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingslistofSdkRoutingRouteIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingRouteReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingslistofSdkRoutingRouteReleaseHandle(handle);

final _heresdkRoutingBindingslistofSdkRoutingRouteCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Route_create_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingRouteReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Route_release_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingRouteGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Route_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingRouteToFfiNullable(List<Route>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingslistofSdkRoutingRouteToFfi(value);
  final result = _heresdkRoutingBindingslistofSdkRoutingRouteCreateHandleNullable(_handle);
  heresdkRoutingBindingslistofSdkRoutingRouteReleaseFfiHandle(_handle);
  return result;
}

List<Route>? heresdkRoutingBindingslistofSdkRoutingRouteFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingBindingslistofSdkRoutingRouteGetValueNullable(handle);
  final result = heresdkRoutingBindingslistofSdkRoutingRouteFromFfi(_handle);
  heresdkRoutingBindingslistofSdkRoutingRouteReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingRouteReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingslistofSdkRoutingRouteReleaseHandleNullable(handle);

final _heresdkRoutingBindingslistofSdkRoutingSectionCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Section_create_handle'));
final _heresdkRoutingBindingslistofSdkRoutingSectionReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Section_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingSectionInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Section_insert'));
final _heresdkRoutingBindingslistofSdkRoutingSectionIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Section_iterator'));
final _heresdkRoutingBindingslistofSdkRoutingSectionIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Section_iterator_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingSectionIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Section_iterator_is_valid'));
final _heresdkRoutingBindingslistofSdkRoutingSectionIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Section_iterator_increment'));
final _heresdkRoutingBindingslistofSdkRoutingSectionIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Section_iterator_get'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingSectionToFfi(List<Section> value) {
  final _result = _heresdkRoutingBindingslistofSdkRoutingSectionCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingSectionToFfi(element);
    _heresdkRoutingBindingslistofSdkRoutingSectionInsert(_result, _elementHandle);
    sdkRoutingSectionReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Section> heresdkRoutingBindingslistofSdkRoutingSectionFromFfi(Pointer<Void> handle) {
  final result = List<Section>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingslistofSdkRoutingSectionIterator(handle);
  while (_heresdkRoutingBindingslistofSdkRoutingSectionIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingslistofSdkRoutingSectionIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingSectionFromFfi(_elementHandle));
    } finally {
      sdkRoutingSectionReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingBindingslistofSdkRoutingSectionIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingslistofSdkRoutingSectionIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingSectionReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingslistofSdkRoutingSectionReleaseHandle(handle);

final _heresdkRoutingBindingslistofSdkRoutingSectionCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Section_create_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingSectionReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Section_release_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingSectionGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Section_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingSectionToFfiNullable(List<Section>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingslistofSdkRoutingSectionToFfi(value);
  final result = _heresdkRoutingBindingslistofSdkRoutingSectionCreateHandleNullable(_handle);
  heresdkRoutingBindingslistofSdkRoutingSectionReleaseFfiHandle(_handle);
  return result;
}

List<Section>? heresdkRoutingBindingslistofSdkRoutingSectionFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingBindingslistofSdkRoutingSectionGetValueNullable(handle);
  final result = heresdkRoutingBindingslistofSdkRoutingSectionFromFfi(_handle);
  heresdkRoutingBindingslistofSdkRoutingSectionReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingSectionReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingslistofSdkRoutingSectionReleaseHandleNullable(handle);

final _heresdkRoutingBindingslistofSdkRoutingSectionnoticeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_SectionNotice_create_handle'));
final _heresdkRoutingBindingslistofSdkRoutingSectionnoticeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_SectionNotice_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingSectionnoticeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_SectionNotice_insert'));
final _heresdkRoutingBindingslistofSdkRoutingSectionnoticeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_SectionNotice_iterator'));
final _heresdkRoutingBindingslistofSdkRoutingSectionnoticeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_SectionNotice_iterator_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingSectionnoticeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_SectionNotice_iterator_is_valid'));
final _heresdkRoutingBindingslistofSdkRoutingSectionnoticeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_SectionNotice_iterator_increment'));
final _heresdkRoutingBindingslistofSdkRoutingSectionnoticeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_SectionNotice_iterator_get'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingSectionnoticeToFfi(List<SectionNotice> value) {
  final _result = _heresdkRoutingBindingslistofSdkRoutingSectionnoticeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingSectionnoticeToFfi(element);
    _heresdkRoutingBindingslistofSdkRoutingSectionnoticeInsert(_result, _elementHandle);
    sdkRoutingSectionnoticeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<SectionNotice> heresdkRoutingBindingslistofSdkRoutingSectionnoticeFromFfi(Pointer<Void> handle) {
  final result = List<SectionNotice>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingslistofSdkRoutingSectionnoticeIterator(handle);
  while (_heresdkRoutingBindingslistofSdkRoutingSectionnoticeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingslistofSdkRoutingSectionnoticeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingSectionnoticeFromFfi(_elementHandle));
    } finally {
      sdkRoutingSectionnoticeReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingBindingslistofSdkRoutingSectionnoticeIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingslistofSdkRoutingSectionnoticeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingSectionnoticeReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingslistofSdkRoutingSectionnoticeReleaseHandle(handle);

final _heresdkRoutingBindingslistofSdkRoutingSectionnoticeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_SectionNotice_create_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingSectionnoticeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_SectionNotice_release_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingSectionnoticeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_SectionNotice_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingSectionnoticeToFfiNullable(List<SectionNotice>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingslistofSdkRoutingSectionnoticeToFfi(value);
  final result = _heresdkRoutingBindingslistofSdkRoutingSectionnoticeCreateHandleNullable(_handle);
  heresdkRoutingBindingslistofSdkRoutingSectionnoticeReleaseFfiHandle(_handle);
  return result;
}

List<SectionNotice>? heresdkRoutingBindingslistofSdkRoutingSectionnoticeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingBindingslistofSdkRoutingSectionnoticeGetValueNullable(handle);
  final result = heresdkRoutingBindingslistofSdkRoutingSectionnoticeFromFfi(_handle);
  heresdkRoutingBindingslistofSdkRoutingSectionnoticeReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingSectionnoticeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingslistofSdkRoutingSectionnoticeReleaseHandleNullable(handle);

final _heresdkRoutingBindingslistofSdkRoutingSegmentreferenceCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_SegmentReference_create_handle'));
final _heresdkRoutingBindingslistofSdkRoutingSegmentreferenceReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_SegmentReference_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingSegmentreferenceInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_SegmentReference_insert'));
final _heresdkRoutingBindingslistofSdkRoutingSegmentreferenceIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_SegmentReference_iterator'));
final _heresdkRoutingBindingslistofSdkRoutingSegmentreferenceIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_SegmentReference_iterator_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingSegmentreferenceIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_SegmentReference_iterator_is_valid'));
final _heresdkRoutingBindingslistofSdkRoutingSegmentreferenceIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_SegmentReference_iterator_increment'));
final _heresdkRoutingBindingslistofSdkRoutingSegmentreferenceIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_SegmentReference_iterator_get'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingSegmentreferenceToFfi(List<SegmentReference> value) {
  final _result = _heresdkRoutingBindingslistofSdkRoutingSegmentreferenceCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingSegmentreferenceToFfi(element);
    _heresdkRoutingBindingslistofSdkRoutingSegmentreferenceInsert(_result, _elementHandle);
    sdkRoutingSegmentreferenceReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<SegmentReference> heresdkRoutingBindingslistofSdkRoutingSegmentreferenceFromFfi(Pointer<Void> handle) {
  final result = List<SegmentReference>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingslistofSdkRoutingSegmentreferenceIterator(handle);
  while (_heresdkRoutingBindingslistofSdkRoutingSegmentreferenceIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingslistofSdkRoutingSegmentreferenceIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingSegmentreferenceFromFfi(_elementHandle));
    } finally {
      sdkRoutingSegmentreferenceReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingBindingslistofSdkRoutingSegmentreferenceIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingslistofSdkRoutingSegmentreferenceIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingSegmentreferenceReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingslistofSdkRoutingSegmentreferenceReleaseHandle(handle);

final _heresdkRoutingBindingslistofSdkRoutingSegmentreferenceCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_SegmentReference_create_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingSegmentreferenceReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_SegmentReference_release_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingSegmentreferenceGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_SegmentReference_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingSegmentreferenceToFfiNullable(List<SegmentReference>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingslistofSdkRoutingSegmentreferenceToFfi(value);
  final result = _heresdkRoutingBindingslistofSdkRoutingSegmentreferenceCreateHandleNullable(_handle);
  heresdkRoutingBindingslistofSdkRoutingSegmentreferenceReleaseFfiHandle(_handle);
  return result;
}

List<SegmentReference>? heresdkRoutingBindingslistofSdkRoutingSegmentreferenceFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingBindingslistofSdkRoutingSegmentreferenceGetValueNullable(handle);
  final result = heresdkRoutingBindingslistofSdkRoutingSegmentreferenceFromFfi(_handle);
  heresdkRoutingBindingslistofSdkRoutingSegmentreferenceReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingSegmentreferenceReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingslistofSdkRoutingSegmentreferenceReleaseHandleNullable(handle);

final _heresdkRoutingBindingslistofSdkRoutingSpanCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Span_create_handle'));
final _heresdkRoutingBindingslistofSdkRoutingSpanReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Span_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingSpanInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Span_insert'));
final _heresdkRoutingBindingslistofSdkRoutingSpanIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Span_iterator'));
final _heresdkRoutingBindingslistofSdkRoutingSpanIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Span_iterator_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingSpanIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Span_iterator_is_valid'));
final _heresdkRoutingBindingslistofSdkRoutingSpanIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Span_iterator_increment'));
final _heresdkRoutingBindingslistofSdkRoutingSpanIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Span_iterator_get'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingSpanToFfi(List<Span> value) {
  final _result = _heresdkRoutingBindingslistofSdkRoutingSpanCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingSpanToFfi(element);
    _heresdkRoutingBindingslistofSdkRoutingSpanInsert(_result, _elementHandle);
    sdkRoutingSpanReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Span> heresdkRoutingBindingslistofSdkRoutingSpanFromFfi(Pointer<Void> handle) {
  final result = List<Span>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingslistofSdkRoutingSpanIterator(handle);
  while (_heresdkRoutingBindingslistofSdkRoutingSpanIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingslistofSdkRoutingSpanIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingSpanFromFfi(_elementHandle));
    } finally {
      sdkRoutingSpanReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingBindingslistofSdkRoutingSpanIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingslistofSdkRoutingSpanIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingSpanReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingslistofSdkRoutingSpanReleaseHandle(handle);

final _heresdkRoutingBindingslistofSdkRoutingSpanCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Span_create_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingSpanReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Span_release_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingSpanGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Span_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingSpanToFfiNullable(List<Span>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingslistofSdkRoutingSpanToFfi(value);
  final result = _heresdkRoutingBindingslistofSdkRoutingSpanCreateHandleNullable(_handle);
  heresdkRoutingBindingslistofSdkRoutingSpanReleaseFfiHandle(_handle);
  return result;
}

List<Span>? heresdkRoutingBindingslistofSdkRoutingSpanFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingBindingslistofSdkRoutingSpanGetValueNullable(handle);
  final result = heresdkRoutingBindingslistofSdkRoutingSpanFromFfi(_handle);
  heresdkRoutingBindingslistofSdkRoutingSpanReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingSpanReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingslistofSdkRoutingSpanReleaseHandleNullable(handle);

final _heresdkRoutingBindingslistofSdkRoutingTollCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Toll_create_handle'));
final _heresdkRoutingBindingslistofSdkRoutingTollReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Toll_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingTollInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Toll_insert'));
final _heresdkRoutingBindingslistofSdkRoutingTollIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Toll_iterator'));
final _heresdkRoutingBindingslistofSdkRoutingTollIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Toll_iterator_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingTollIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Toll_iterator_is_valid'));
final _heresdkRoutingBindingslistofSdkRoutingTollIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Toll_iterator_increment'));
final _heresdkRoutingBindingslistofSdkRoutingTollIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Toll_iterator_get'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingTollToFfi(List<Toll> value) {
  final _result = _heresdkRoutingBindingslistofSdkRoutingTollCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingTollToFfi(element);
    _heresdkRoutingBindingslistofSdkRoutingTollInsert(_result, _elementHandle);
    sdkRoutingTollReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Toll> heresdkRoutingBindingslistofSdkRoutingTollFromFfi(Pointer<Void> handle) {
  final result = List<Toll>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingslistofSdkRoutingTollIterator(handle);
  while (_heresdkRoutingBindingslistofSdkRoutingTollIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingslistofSdkRoutingTollIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingTollFromFfi(_elementHandle));
    } finally {
      sdkRoutingTollReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingBindingslistofSdkRoutingTollIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingslistofSdkRoutingTollIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingTollReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingslistofSdkRoutingTollReleaseHandle(handle);

final _heresdkRoutingBindingslistofSdkRoutingTollCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Toll_create_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingTollReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Toll_release_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingTollGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Toll_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingTollToFfiNullable(List<Toll>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingslistofSdkRoutingTollToFfi(value);
  final result = _heresdkRoutingBindingslistofSdkRoutingTollCreateHandleNullable(_handle);
  heresdkRoutingBindingslistofSdkRoutingTollReleaseFfiHandle(_handle);
  return result;
}

List<Toll>? heresdkRoutingBindingslistofSdkRoutingTollFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingBindingslistofSdkRoutingTollGetValueNullable(handle);
  final result = heresdkRoutingBindingslistofSdkRoutingTollFromFfi(_handle);
  heresdkRoutingBindingslistofSdkRoutingTollReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingTollReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingslistofSdkRoutingTollReleaseHandleNullable(handle);

final _heresdkRoutingBindingslistofSdkRoutingTollfareCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TollFare_create_handle'));
final _heresdkRoutingBindingslistofSdkRoutingTollfareReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TollFare_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingTollfareInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TollFare_insert'));
final _heresdkRoutingBindingslistofSdkRoutingTollfareIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TollFare_iterator'));
final _heresdkRoutingBindingslistofSdkRoutingTollfareIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TollFare_iterator_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingTollfareIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TollFare_iterator_is_valid'));
final _heresdkRoutingBindingslistofSdkRoutingTollfareIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TollFare_iterator_increment'));
final _heresdkRoutingBindingslistofSdkRoutingTollfareIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TollFare_iterator_get'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingTollfareToFfi(List<TollFare> value) {
  final _result = _heresdkRoutingBindingslistofSdkRoutingTollfareCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingTollfareToFfi(element);
    _heresdkRoutingBindingslistofSdkRoutingTollfareInsert(_result, _elementHandle);
    sdkRoutingTollfareReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<TollFare> heresdkRoutingBindingslistofSdkRoutingTollfareFromFfi(Pointer<Void> handle) {
  final result = List<TollFare>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingslistofSdkRoutingTollfareIterator(handle);
  while (_heresdkRoutingBindingslistofSdkRoutingTollfareIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingslistofSdkRoutingTollfareIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingTollfareFromFfi(_elementHandle));
    } finally {
      sdkRoutingTollfareReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingBindingslistofSdkRoutingTollfareIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingslistofSdkRoutingTollfareIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingTollfareReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingslistofSdkRoutingTollfareReleaseHandle(handle);

final _heresdkRoutingBindingslistofSdkRoutingTollfareCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TollFare_create_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingTollfareReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TollFare_release_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingTollfareGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TollFare_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingTollfareToFfiNullable(List<TollFare>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingslistofSdkRoutingTollfareToFfi(value);
  final result = _heresdkRoutingBindingslistofSdkRoutingTollfareCreateHandleNullable(_handle);
  heresdkRoutingBindingslistofSdkRoutingTollfareReleaseFfiHandle(_handle);
  return result;
}

List<TollFare>? heresdkRoutingBindingslistofSdkRoutingTollfareFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingBindingslistofSdkRoutingTollfareGetValueNullable(handle);
  final result = heresdkRoutingBindingslistofSdkRoutingTollfareFromFfi(_handle);
  heresdkRoutingBindingslistofSdkRoutingTollfareReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingTollfareReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingslistofSdkRoutingTollfareReleaseHandleNullable(handle);

final _heresdkRoutingBindingslistofSdkRoutingTrafficincidentonrouteCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TrafficIncidentOnRoute_create_handle'));
final _heresdkRoutingBindingslistofSdkRoutingTrafficincidentonrouteReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TrafficIncidentOnRoute_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingTrafficincidentonrouteInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TrafficIncidentOnRoute_insert'));
final _heresdkRoutingBindingslistofSdkRoutingTrafficincidentonrouteIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TrafficIncidentOnRoute_iterator'));
final _heresdkRoutingBindingslistofSdkRoutingTrafficincidentonrouteIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TrafficIncidentOnRoute_iterator_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingTrafficincidentonrouteIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TrafficIncidentOnRoute_iterator_is_valid'));
final _heresdkRoutingBindingslistofSdkRoutingTrafficincidentonrouteIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TrafficIncidentOnRoute_iterator_increment'));
final _heresdkRoutingBindingslistofSdkRoutingTrafficincidentonrouteIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TrafficIncidentOnRoute_iterator_get'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingTrafficincidentonrouteToFfi(List<TrafficIncidentOnRoute> value) {
  final _result = _heresdkRoutingBindingslistofSdkRoutingTrafficincidentonrouteCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingTrafficincidentonrouteToFfi(element);
    _heresdkRoutingBindingslistofSdkRoutingTrafficincidentonrouteInsert(_result, _elementHandle);
    sdkRoutingTrafficincidentonrouteReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<TrafficIncidentOnRoute> heresdkRoutingBindingslistofSdkRoutingTrafficincidentonrouteFromFfi(Pointer<Void> handle) {
  final result = List<TrafficIncidentOnRoute>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingslistofSdkRoutingTrafficincidentonrouteIterator(handle);
  while (_heresdkRoutingBindingslistofSdkRoutingTrafficincidentonrouteIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingslistofSdkRoutingTrafficincidentonrouteIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingTrafficincidentonrouteFromFfi(_elementHandle));
    } finally {
      sdkRoutingTrafficincidentonrouteReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingBindingslistofSdkRoutingTrafficincidentonrouteIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingslistofSdkRoutingTrafficincidentonrouteIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingTrafficincidentonrouteReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingslistofSdkRoutingTrafficincidentonrouteReleaseHandle(handle);

final _heresdkRoutingBindingslistofSdkRoutingTrafficincidentonrouteCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TrafficIncidentOnRoute_create_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingTrafficincidentonrouteReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TrafficIncidentOnRoute_release_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingTrafficincidentonrouteGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TrafficIncidentOnRoute_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingTrafficincidentonrouteToFfiNullable(List<TrafficIncidentOnRoute>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingslistofSdkRoutingTrafficincidentonrouteToFfi(value);
  final result = _heresdkRoutingBindingslistofSdkRoutingTrafficincidentonrouteCreateHandleNullable(_handle);
  heresdkRoutingBindingslistofSdkRoutingTrafficincidentonrouteReleaseFfiHandle(_handle);
  return result;
}

List<TrafficIncidentOnRoute>? heresdkRoutingBindingslistofSdkRoutingTrafficincidentonrouteFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingBindingslistofSdkRoutingTrafficincidentonrouteGetValueNullable(handle);
  final result = heresdkRoutingBindingslistofSdkRoutingTrafficincidentonrouteFromFfi(_handle);
  heresdkRoutingBindingslistofSdkRoutingTrafficincidentonrouteReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingTrafficincidentonrouteReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingslistofSdkRoutingTrafficincidentonrouteReleaseHandleNullable(handle);

final _heresdkRoutingBindingslistofSdkRoutingTrafficspeedCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TrafficSpeed_create_handle'));
final _heresdkRoutingBindingslistofSdkRoutingTrafficspeedReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TrafficSpeed_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingTrafficspeedInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TrafficSpeed_insert'));
final _heresdkRoutingBindingslistofSdkRoutingTrafficspeedIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TrafficSpeed_iterator'));
final _heresdkRoutingBindingslistofSdkRoutingTrafficspeedIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TrafficSpeed_iterator_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingTrafficspeedIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TrafficSpeed_iterator_is_valid'));
final _heresdkRoutingBindingslistofSdkRoutingTrafficspeedIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TrafficSpeed_iterator_increment'));
final _heresdkRoutingBindingslistofSdkRoutingTrafficspeedIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TrafficSpeed_iterator_get'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingTrafficspeedToFfi(List<TrafficSpeed> value) {
  final _result = _heresdkRoutingBindingslistofSdkRoutingTrafficspeedCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingTrafficspeedToFfi(element);
    _heresdkRoutingBindingslistofSdkRoutingTrafficspeedInsert(_result, _elementHandle);
    sdkRoutingTrafficspeedReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<TrafficSpeed> heresdkRoutingBindingslistofSdkRoutingTrafficspeedFromFfi(Pointer<Void> handle) {
  final result = List<TrafficSpeed>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingslistofSdkRoutingTrafficspeedIterator(handle);
  while (_heresdkRoutingBindingslistofSdkRoutingTrafficspeedIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingslistofSdkRoutingTrafficspeedIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingTrafficspeedFromFfi(_elementHandle));
    } finally {
      sdkRoutingTrafficspeedReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingBindingslistofSdkRoutingTrafficspeedIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingslistofSdkRoutingTrafficspeedIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingTrafficspeedReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingslistofSdkRoutingTrafficspeedReleaseHandle(handle);

final _heresdkRoutingBindingslistofSdkRoutingTrafficspeedCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TrafficSpeed_create_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingTrafficspeedReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TrafficSpeed_release_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingTrafficspeedGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TrafficSpeed_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingTrafficspeedToFfiNullable(List<TrafficSpeed>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingslistofSdkRoutingTrafficspeedToFfi(value);
  final result = _heresdkRoutingBindingslistofSdkRoutingTrafficspeedCreateHandleNullable(_handle);
  heresdkRoutingBindingslistofSdkRoutingTrafficspeedReleaseFfiHandle(_handle);
  return result;
}

List<TrafficSpeed>? heresdkRoutingBindingslistofSdkRoutingTrafficspeedFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingBindingslistofSdkRoutingTrafficspeedGetValueNullable(handle);
  final result = heresdkRoutingBindingslistofSdkRoutingTrafficspeedFromFfi(_handle);
  heresdkRoutingBindingslistofSdkRoutingTrafficspeedReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingTrafficspeedReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingslistofSdkRoutingTrafficspeedReleaseHandleNullable(handle);

final _heresdkRoutingBindingslistofSdkRoutingTransitincidentCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TransitIncident_create_handle'));
final _heresdkRoutingBindingslistofSdkRoutingTransitincidentReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TransitIncident_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingTransitincidentInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TransitIncident_insert'));
final _heresdkRoutingBindingslistofSdkRoutingTransitincidentIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TransitIncident_iterator'));
final _heresdkRoutingBindingslistofSdkRoutingTransitincidentIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TransitIncident_iterator_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingTransitincidentIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TransitIncident_iterator_is_valid'));
final _heresdkRoutingBindingslistofSdkRoutingTransitincidentIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TransitIncident_iterator_increment'));
final _heresdkRoutingBindingslistofSdkRoutingTransitincidentIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TransitIncident_iterator_get'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingTransitincidentToFfi(List<TransitIncident> value) {
  final _result = _heresdkRoutingBindingslistofSdkRoutingTransitincidentCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingTransitincidentToFfi(element);
    _heresdkRoutingBindingslistofSdkRoutingTransitincidentInsert(_result, _elementHandle);
    sdkRoutingTransitincidentReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<TransitIncident> heresdkRoutingBindingslistofSdkRoutingTransitincidentFromFfi(Pointer<Void> handle) {
  final result = List<TransitIncident>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingslistofSdkRoutingTransitincidentIterator(handle);
  while (_heresdkRoutingBindingslistofSdkRoutingTransitincidentIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingslistofSdkRoutingTransitincidentIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingTransitincidentFromFfi(_elementHandle));
    } finally {
      sdkRoutingTransitincidentReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingBindingslistofSdkRoutingTransitincidentIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingslistofSdkRoutingTransitincidentIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingTransitincidentReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingslistofSdkRoutingTransitincidentReleaseHandle(handle);

final _heresdkRoutingBindingslistofSdkRoutingTransitincidentCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TransitIncident_create_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingTransitincidentReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TransitIncident_release_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingTransitincidentGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TransitIncident_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingTransitincidentToFfiNullable(List<TransitIncident>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingslistofSdkRoutingTransitincidentToFfi(value);
  final result = _heresdkRoutingBindingslistofSdkRoutingTransitincidentCreateHandleNullable(_handle);
  heresdkRoutingBindingslistofSdkRoutingTransitincidentReleaseFfiHandle(_handle);
  return result;
}

List<TransitIncident>? heresdkRoutingBindingslistofSdkRoutingTransitincidentFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingBindingslistofSdkRoutingTransitincidentGetValueNullable(handle);
  final result = heresdkRoutingBindingslistofSdkRoutingTransitincidentFromFfi(_handle);
  heresdkRoutingBindingslistofSdkRoutingTransitincidentReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingTransitincidentReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingslistofSdkRoutingTransitincidentReleaseHandleNullable(handle);

final _heresdkRoutingBindingslistofSdkRoutingTransitmodeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TransitMode_create_handle'));
final _heresdkRoutingBindingslistofSdkRoutingTransitmodeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TransitMode_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingTransitmodeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TransitMode_insert'));
final _heresdkRoutingBindingslistofSdkRoutingTransitmodeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TransitMode_iterator'));
final _heresdkRoutingBindingslistofSdkRoutingTransitmodeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TransitMode_iterator_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingTransitmodeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TransitMode_iterator_is_valid'));
final _heresdkRoutingBindingslistofSdkRoutingTransitmodeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TransitMode_iterator_increment'));
final _heresdkRoutingBindingslistofSdkRoutingTransitmodeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TransitMode_iterator_get'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingTransitmodeToFfi(List<TransitMode> value) {
  final _result = _heresdkRoutingBindingslistofSdkRoutingTransitmodeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingTransitmodeToFfi(element);
    _heresdkRoutingBindingslistofSdkRoutingTransitmodeInsert(_result, _elementHandle);
    sdkRoutingTransitmodeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<TransitMode> heresdkRoutingBindingslistofSdkRoutingTransitmodeFromFfi(Pointer<Void> handle) {
  final result = List<TransitMode>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingslistofSdkRoutingTransitmodeIterator(handle);
  while (_heresdkRoutingBindingslistofSdkRoutingTransitmodeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingslistofSdkRoutingTransitmodeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingTransitmodeFromFfi(_elementHandle));
    } finally {
      sdkRoutingTransitmodeReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingBindingslistofSdkRoutingTransitmodeIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingslistofSdkRoutingTransitmodeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingTransitmodeReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingslistofSdkRoutingTransitmodeReleaseHandle(handle);

final _heresdkRoutingBindingslistofSdkRoutingTransitmodeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TransitMode_create_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingTransitmodeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TransitMode_release_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingTransitmodeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TransitMode_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingTransitmodeToFfiNullable(List<TransitMode>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingslistofSdkRoutingTransitmodeToFfi(value);
  final result = _heresdkRoutingBindingslistofSdkRoutingTransitmodeCreateHandleNullable(_handle);
  heresdkRoutingBindingslistofSdkRoutingTransitmodeReleaseFfiHandle(_handle);
  return result;
}

List<TransitMode>? heresdkRoutingBindingslistofSdkRoutingTransitmodeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingBindingslistofSdkRoutingTransitmodeGetValueNullable(handle);
  final result = heresdkRoutingBindingslistofSdkRoutingTransitmodeFromFfi(_handle);
  heresdkRoutingBindingslistofSdkRoutingTransitmodeReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingTransitmodeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingslistofSdkRoutingTransitmodeReleaseHandleNullable(handle);

final _heresdkRoutingBindingslistofSdkRoutingTransitstopCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TransitStop_create_handle'));
final _heresdkRoutingBindingslistofSdkRoutingTransitstopReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TransitStop_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingTransitstopInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TransitStop_insert'));
final _heresdkRoutingBindingslistofSdkRoutingTransitstopIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TransitStop_iterator'));
final _heresdkRoutingBindingslistofSdkRoutingTransitstopIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TransitStop_iterator_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingTransitstopIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TransitStop_iterator_is_valid'));
final _heresdkRoutingBindingslistofSdkRoutingTransitstopIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TransitStop_iterator_increment'));
final _heresdkRoutingBindingslistofSdkRoutingTransitstopIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TransitStop_iterator_get'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingTransitstopToFfi(List<TransitStop> value) {
  final _result = _heresdkRoutingBindingslistofSdkRoutingTransitstopCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingTransitstopToFfi(element);
    _heresdkRoutingBindingslistofSdkRoutingTransitstopInsert(_result, _elementHandle);
    sdkRoutingTransitstopReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<TransitStop> heresdkRoutingBindingslistofSdkRoutingTransitstopFromFfi(Pointer<Void> handle) {
  final result = List<TransitStop>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingslistofSdkRoutingTransitstopIterator(handle);
  while (_heresdkRoutingBindingslistofSdkRoutingTransitstopIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingslistofSdkRoutingTransitstopIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingTransitstopFromFfi(_elementHandle));
    } finally {
      sdkRoutingTransitstopReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingBindingslistofSdkRoutingTransitstopIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingslistofSdkRoutingTransitstopIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingTransitstopReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingslistofSdkRoutingTransitstopReleaseHandle(handle);

final _heresdkRoutingBindingslistofSdkRoutingTransitstopCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TransitStop_create_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingTransitstopReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TransitStop_release_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingTransitstopGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_TransitStop_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingTransitstopToFfiNullable(List<TransitStop>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingslistofSdkRoutingTransitstopToFfi(value);
  final result = _heresdkRoutingBindingslistofSdkRoutingTransitstopCreateHandleNullable(_handle);
  heresdkRoutingBindingslistofSdkRoutingTransitstopReleaseFfiHandle(_handle);
  return result;
}

List<TransitStop>? heresdkRoutingBindingslistofSdkRoutingTransitstopFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingBindingslistofSdkRoutingTransitstopGetValueNullable(handle);
  final result = heresdkRoutingBindingslistofSdkRoutingTransitstopFromFfi(_handle);
  heresdkRoutingBindingslistofSdkRoutingTransitstopReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingTransitstopReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingslistofSdkRoutingTransitstopReleaseHandleNullable(handle);

final _heresdkRoutingBindingslistofSdkRoutingWaypointCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Waypoint_create_handle'));
final _heresdkRoutingBindingslistofSdkRoutingWaypointReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Waypoint_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingWaypointInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Waypoint_insert'));
final _heresdkRoutingBindingslistofSdkRoutingWaypointIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Waypoint_iterator'));
final _heresdkRoutingBindingslistofSdkRoutingWaypointIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Waypoint_iterator_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingWaypointIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Waypoint_iterator_is_valid'));
final _heresdkRoutingBindingslistofSdkRoutingWaypointIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Waypoint_iterator_increment'));
final _heresdkRoutingBindingslistofSdkRoutingWaypointIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Waypoint_iterator_get'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingWaypointToFfi(List<Waypoint> value) {
  final _result = _heresdkRoutingBindingslistofSdkRoutingWaypointCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingWaypointToFfi(element);
    _heresdkRoutingBindingslistofSdkRoutingWaypointInsert(_result, _elementHandle);
    sdkRoutingWaypointReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Waypoint> heresdkRoutingBindingslistofSdkRoutingWaypointFromFfi(Pointer<Void> handle) {
  final result = List<Waypoint>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingslistofSdkRoutingWaypointIterator(handle);
  while (_heresdkRoutingBindingslistofSdkRoutingWaypointIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingslistofSdkRoutingWaypointIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingWaypointFromFfi(_elementHandle));
    } finally {
      sdkRoutingWaypointReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingBindingslistofSdkRoutingWaypointIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingslistofSdkRoutingWaypointIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingWaypointReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingslistofSdkRoutingWaypointReleaseHandle(handle);

final _heresdkRoutingBindingslistofSdkRoutingWaypointCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Waypoint_create_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingWaypointReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Waypoint_release_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingWaypointGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_Waypoint_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingWaypointToFfiNullable(List<Waypoint>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingslistofSdkRoutingWaypointToFfi(value);
  final result = _heresdkRoutingBindingslistofSdkRoutingWaypointCreateHandleNullable(_handle);
  heresdkRoutingBindingslistofSdkRoutingWaypointReleaseFfiHandle(_handle);
  return result;
}

List<Waypoint>? heresdkRoutingBindingslistofSdkRoutingWaypointFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingBindingslistofSdkRoutingWaypointGetValueNullable(handle);
  final result = heresdkRoutingBindingslistofSdkRoutingWaypointFromFfi(_handle);
  heresdkRoutingBindingslistofSdkRoutingWaypointReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingWaypointReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingslistofSdkRoutingWaypointReleaseHandleNullable(handle);

final _heresdkRoutingBindingslistofSdkRoutingZonecategoryCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_ZoneCategory_create_handle'));
final _heresdkRoutingBindingslistofSdkRoutingZonecategoryReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_ZoneCategory_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingZonecategoryInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_ZoneCategory_insert'));
final _heresdkRoutingBindingslistofSdkRoutingZonecategoryIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_ZoneCategory_iterator'));
final _heresdkRoutingBindingslistofSdkRoutingZonecategoryIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_ZoneCategory_iterator_release_handle'));
final _heresdkRoutingBindingslistofSdkRoutingZonecategoryIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_ZoneCategory_iterator_is_valid'));
final _heresdkRoutingBindingslistofSdkRoutingZonecategoryIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_ZoneCategory_iterator_increment'));
final _heresdkRoutingBindingslistofSdkRoutingZonecategoryIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_ZoneCategory_iterator_get'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingZonecategoryToFfi(List<ZoneCategory> value) {
  final _result = _heresdkRoutingBindingslistofSdkRoutingZonecategoryCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingZonecategoryToFfi(element);
    _heresdkRoutingBindingslistofSdkRoutingZonecategoryInsert(_result, _elementHandle);
    sdkRoutingZonecategoryReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<ZoneCategory> heresdkRoutingBindingslistofSdkRoutingZonecategoryFromFfi(Pointer<Void> handle) {
  final result = List<ZoneCategory>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingslistofSdkRoutingZonecategoryIterator(handle);
  while (_heresdkRoutingBindingslistofSdkRoutingZonecategoryIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingslistofSdkRoutingZonecategoryIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingZonecategoryFromFfi(_elementHandle));
    } finally {
      sdkRoutingZonecategoryReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingBindingslistofSdkRoutingZonecategoryIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingslistofSdkRoutingZonecategoryIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingZonecategoryReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingslistofSdkRoutingZonecategoryReleaseHandle(handle);

final _heresdkRoutingBindingslistofSdkRoutingZonecategoryCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_ZoneCategory_create_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingZonecategoryReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_ZoneCategory_release_handle_nullable'));
final _heresdkRoutingBindingslistofSdkRoutingZonecategoryGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_routing_ZoneCategory_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingslistofSdkRoutingZonecategoryToFfiNullable(List<ZoneCategory>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingslistofSdkRoutingZonecategoryToFfi(value);
  final result = _heresdkRoutingBindingslistofSdkRoutingZonecategoryCreateHandleNullable(_handle);
  heresdkRoutingBindingslistofSdkRoutingZonecategoryReleaseFfiHandle(_handle);
  return result;
}

List<ZoneCategory>? heresdkRoutingBindingslistofSdkRoutingZonecategoryFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingBindingslistofSdkRoutingZonecategoryGetValueNullable(handle);
  final result = heresdkRoutingBindingslistofSdkRoutingZonecategoryFromFfi(_handle);
  heresdkRoutingBindingslistofSdkRoutingZonecategoryReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingslistofSdkRoutingZonecategoryReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingslistofSdkRoutingZonecategoryReleaseHandleNullable(handle);

final _heresdkRoutingBindingslistofSdkTransportHazardousmaterialCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_transport_HazardousMaterial_create_handle'));
final _heresdkRoutingBindingslistofSdkTransportHazardousmaterialReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_transport_HazardousMaterial_release_handle'));
final _heresdkRoutingBindingslistofSdkTransportHazardousmaterialInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_transport_HazardousMaterial_insert'));
final _heresdkRoutingBindingslistofSdkTransportHazardousmaterialIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_transport_HazardousMaterial_iterator'));
final _heresdkRoutingBindingslistofSdkTransportHazardousmaterialIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_transport_HazardousMaterial_iterator_release_handle'));
final _heresdkRoutingBindingslistofSdkTransportHazardousmaterialIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_transport_HazardousMaterial_iterator_is_valid'));
final _heresdkRoutingBindingslistofSdkTransportHazardousmaterialIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_transport_HazardousMaterial_iterator_increment'));
final _heresdkRoutingBindingslistofSdkTransportHazardousmaterialIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsListOf_sdk_transport_HazardousMaterial_iterator_get'));

Pointer<Void> heresdkRoutingBindingslistofSdkTransportHazardousmaterialToFfi(List<HazardousMaterial> value) {
  final _result = _heresdkRoutingBindingslistofSdkTransportHazardousmaterialCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkTransportHazardousmaterialToFfi(element);
    _heresdkRoutingBindingslistofSdkTransportHazardousmaterialInsert(_result, _elementHandle);
    sdkTransportHazardousmaterialReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<HazardousMaterial> heresdkRoutingBindingslistofSdkTransportHazardousmaterialFromFfi(Pointer<Void> handle) {
  final result = List<HazardousMaterial>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingslistofSdkTransportHazardousmaterialIterator(handle);
  while (_heresdkRoutingBindingslistofSdkTransportHazardousmaterialIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingslistofSdkTransportHazardousmaterialIteratorGet(_iteratorHandle);
    try {
      result.add(sdkTransportHazardousmaterialFromFfi(_elementHandle));
    } finally {
      sdkTransportHazardousmaterialReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingBindingslistofSdkTransportHazardousmaterialIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingslistofSdkTransportHazardousmaterialIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingslistofSdkTransportHazardousmaterialReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingslistofSdkTransportHazardousmaterialReleaseHandle(handle);

final _heresdkRoutingBindingslistofSdkTransportHazardousmaterialCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_transport_HazardousMaterial_create_handle_nullable'));
final _heresdkRoutingBindingslistofSdkTransportHazardousmaterialReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_transport_HazardousMaterial_release_handle_nullable'));
final _heresdkRoutingBindingslistofSdkTransportHazardousmaterialGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsListOf_sdk_transport_HazardousMaterial_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingslistofSdkTransportHazardousmaterialToFfiNullable(List<HazardousMaterial>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingslistofSdkTransportHazardousmaterialToFfi(value);
  final result = _heresdkRoutingBindingslistofSdkTransportHazardousmaterialCreateHandleNullable(_handle);
  heresdkRoutingBindingslistofSdkTransportHazardousmaterialReleaseFfiHandle(_handle);
  return result;
}

List<HazardousMaterial>? heresdkRoutingBindingslistofSdkTransportHazardousmaterialFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingBindingslistofSdkTransportHazardousmaterialGetValueNullable(handle);
  final result = heresdkRoutingBindingslistofSdkTransportHazardousmaterialFromFfi(_handle);
  heresdkRoutingBindingslistofSdkTransportHazardousmaterialReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingslistofSdkTransportHazardousmaterialReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingslistofSdkTransportHazardousmaterialReleaseHandleNullable(handle);

final _heresdkRoutingBindingsmapofDoubleToDoubleCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindingsMapOf_Double_to_Double_create_handle'));
final _heresdkRoutingBindingsmapofDoubleToDoubleReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsMapOf_Double_to_Double_release_handle'));
final _heresdkRoutingBindingsmapofDoubleToDoublePut = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Double, Double),
    void Function(Pointer<Void>, double, double)
  >('here_sdk_heresdk_routing_bindingsMapOf_Double_to_Double_put'));
final _heresdkRoutingBindingsmapofDoubleToDoubleIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsMapOf_Double_to_Double_iterator'));
final _heresdkRoutingBindingsmapofDoubleToDoubleIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsMapOf_Double_to_Double_iterator_release_handle'));
final _heresdkRoutingBindingsmapofDoubleToDoubleIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsMapOf_Double_to_Double_iterator_is_valid'));
final _heresdkRoutingBindingsmapofDoubleToDoubleIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsMapOf_Double_to_Double_iterator_increment'));
final _heresdkRoutingBindingsmapofDoubleToDoubleIteratorGetKey = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Double Function(Pointer<Void>),
    double Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsMapOf_Double_to_Double_iterator_get_key'));
final _heresdkRoutingBindingsmapofDoubleToDoubleIteratorGetValue = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Double Function(Pointer<Void>),
    double Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsMapOf_Double_to_Double_iterator_get_value'));

Pointer<Void> heresdkRoutingBindingsmapofDoubleToDoubleToFfi(Map<double, double> value) {
  final _result = _heresdkRoutingBindingsmapofDoubleToDoubleCreateHandle();
  for (final entry in value.entries) {
    final _keyHandle = (entry.key);
    final _valueHandle = (entry.value);
    _heresdkRoutingBindingsmapofDoubleToDoublePut(_result, _keyHandle, _valueHandle);
    
    
  }
  return _result;
}

Map<double, double> heresdkRoutingBindingsmapofDoubleToDoubleFromFfi(Pointer<Void> handle) {
  final result = Map<double, double>();
  final _iteratorHandle = _heresdkRoutingBindingsmapofDoubleToDoubleIterator(handle);
  while (_heresdkRoutingBindingsmapofDoubleToDoubleIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _keyHandle = _heresdkRoutingBindingsmapofDoubleToDoubleIteratorGetKey(_iteratorHandle);
    final _valueHandle = _heresdkRoutingBindingsmapofDoubleToDoubleIteratorGetValue(_iteratorHandle);
    try {
      result[(_keyHandle)] =
        (_valueHandle);
    } finally {
      
      
    }
    _heresdkRoutingBindingsmapofDoubleToDoubleIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingsmapofDoubleToDoubleIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingsmapofDoubleToDoubleReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingsmapofDoubleToDoubleReleaseHandle(handle);

final _heresdkRoutingBindingsmapofDoubleToDoubleCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsMapOf_Double_to_Double_create_handle_nullable'));
final _heresdkRoutingBindingsmapofDoubleToDoubleReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsMapOf_Double_to_Double_release_handle_nullable'));
final _heresdkRoutingBindingsmapofDoubleToDoubleGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsMapOf_Double_to_Double_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingsmapofDoubleToDoubleToFfiNullable(Map<double, double>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingsmapofDoubleToDoubleToFfi(value);
  final result = _heresdkRoutingBindingsmapofDoubleToDoubleCreateHandleNullable(_handle);
  heresdkRoutingBindingsmapofDoubleToDoubleReleaseFfiHandle(_handle);
  return result;
}

Map<double, double>? heresdkRoutingBindingsmapofDoubleToDoubleFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingBindingsmapofDoubleToDoubleGetValueNullable(handle);
  final result = heresdkRoutingBindingsmapofDoubleToDoubleFromFfi(_handle);
  heresdkRoutingBindingsmapofDoubleToDoubleReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingsmapofDoubleToDoubleReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingsmapofDoubleToDoubleReleaseHandleNullable(handle);

final _heresdkRoutingBindingsmapofIntToDoubleCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindingsMapOf_Int_to_Double_create_handle'));
final _heresdkRoutingBindingsmapofIntToDoubleReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsMapOf_Int_to_Double_release_handle'));
final _heresdkRoutingBindingsmapofIntToDoublePut = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Int32, Double),
    void Function(Pointer<Void>, int, double)
  >('here_sdk_heresdk_routing_bindingsMapOf_Int_to_Double_put'));
final _heresdkRoutingBindingsmapofIntToDoubleIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsMapOf_Int_to_Double_iterator'));
final _heresdkRoutingBindingsmapofIntToDoubleIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsMapOf_Int_to_Double_iterator_release_handle'));
final _heresdkRoutingBindingsmapofIntToDoubleIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsMapOf_Int_to_Double_iterator_is_valid'));
final _heresdkRoutingBindingsmapofIntToDoubleIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsMapOf_Int_to_Double_iterator_increment'));
final _heresdkRoutingBindingsmapofIntToDoubleIteratorGetKey = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsMapOf_Int_to_Double_iterator_get_key'));
final _heresdkRoutingBindingsmapofIntToDoubleIteratorGetValue = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Double Function(Pointer<Void>),
    double Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsMapOf_Int_to_Double_iterator_get_value'));

Pointer<Void> heresdkRoutingBindingsmapofIntToDoubleToFfi(Map<int, double> value) {
  final _result = _heresdkRoutingBindingsmapofIntToDoubleCreateHandle();
  for (final entry in value.entries) {
    final _keyHandle = (entry.key);
    final _valueHandle = (entry.value);
    _heresdkRoutingBindingsmapofIntToDoublePut(_result, _keyHandle, _valueHandle);
    
    
  }
  return _result;
}

Map<int, double> heresdkRoutingBindingsmapofIntToDoubleFromFfi(Pointer<Void> handle) {
  final result = Map<int, double>();
  final _iteratorHandle = _heresdkRoutingBindingsmapofIntToDoubleIterator(handle);
  while (_heresdkRoutingBindingsmapofIntToDoubleIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _keyHandle = _heresdkRoutingBindingsmapofIntToDoubleIteratorGetKey(_iteratorHandle);
    final _valueHandle = _heresdkRoutingBindingsmapofIntToDoubleIteratorGetValue(_iteratorHandle);
    try {
      result[(_keyHandle)] =
        (_valueHandle);
    } finally {
      
      
    }
    _heresdkRoutingBindingsmapofIntToDoubleIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingsmapofIntToDoubleIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingsmapofIntToDoubleReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingsmapofIntToDoubleReleaseHandle(handle);

final _heresdkRoutingBindingsmapofIntToDoubleCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsMapOf_Int_to_Double_create_handle_nullable'));
final _heresdkRoutingBindingsmapofIntToDoubleReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsMapOf_Int_to_Double_release_handle_nullable'));
final _heresdkRoutingBindingsmapofIntToDoubleGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsMapOf_Int_to_Double_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingsmapofIntToDoubleToFfiNullable(Map<int, double>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingsmapofIntToDoubleToFfi(value);
  final result = _heresdkRoutingBindingsmapofIntToDoubleCreateHandleNullable(_handle);
  heresdkRoutingBindingsmapofIntToDoubleReleaseFfiHandle(_handle);
  return result;
}

Map<int, double>? heresdkRoutingBindingsmapofIntToDoubleFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingBindingsmapofIntToDoubleGetValueNullable(handle);
  final result = heresdkRoutingBindingsmapofIntToDoubleFromFfi(_handle);
  heresdkRoutingBindingsmapofIntToDoubleReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingsmapofIntToDoubleReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingsmapofIntToDoubleReleaseHandleNullable(handle);

final _heresdkRoutingBindingsmapofSdkCoreEngineEnginebaseurlToStringCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_create_handle'));
final _heresdkRoutingBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_release_handle'));
final _heresdkRoutingBindingsmapofSdkCoreEngineEnginebaseurlToStringPut = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32, Pointer<Void>),
    void Function(Pointer<Void>, int, Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_put'));
final _heresdkRoutingBindingsmapofSdkCoreEngineEnginebaseurlToStringIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_iterator'));
final _heresdkRoutingBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_iterator_release_handle'));
final _heresdkRoutingBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_iterator_is_valid'));
final _heresdkRoutingBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_iterator_increment'));
final _heresdkRoutingBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorGetKey = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_iterator_get_key'));
final _heresdkRoutingBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorGetValue = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_iterator_get_value'));

Pointer<Void> heresdkRoutingBindingsmapofSdkCoreEngineEnginebaseurlToStringToFfi(Map<EngineBaseURL, String> value) {
  final _result = _heresdkRoutingBindingsmapofSdkCoreEngineEnginebaseurlToStringCreateHandle();
  for (final entry in value.entries) {
    final _keyHandle = sdkCoreEngineEnginebaseurlToFfi(entry.key);
    final _valueHandle = stringToFfi(entry.value);
    _heresdkRoutingBindingsmapofSdkCoreEngineEnginebaseurlToStringPut(_result, _keyHandle, _valueHandle);
    sdkCoreEngineEnginebaseurlReleaseFfiHandle(_keyHandle);
    stringReleaseFfiHandle(_valueHandle);
  }
  return _result;
}

Map<EngineBaseURL, String> heresdkRoutingBindingsmapofSdkCoreEngineEnginebaseurlToStringFromFfi(Pointer<Void> handle) {
  final result = Map<EngineBaseURL, String>();
  final _iteratorHandle = _heresdkRoutingBindingsmapofSdkCoreEngineEnginebaseurlToStringIterator(handle);
  while (_heresdkRoutingBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _keyHandle = _heresdkRoutingBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorGetKey(_iteratorHandle);
    final _valueHandle = _heresdkRoutingBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorGetValue(_iteratorHandle);
    try {
      result[sdkCoreEngineEnginebaseurlFromFfi(_keyHandle)] =
        stringFromFfi(_valueHandle);
    } finally {
      sdkCoreEngineEnginebaseurlReleaseFfiHandle(_keyHandle);
      stringReleaseFfiHandle(_valueHandle);
    }
    _heresdkRoutingBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseHandle(handle);

final _heresdkRoutingBindingsmapofSdkCoreEngineEnginebaseurlToStringCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_create_handle_nullable'));
final _heresdkRoutingBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_release_handle_nullable'));
final _heresdkRoutingBindingsmapofSdkCoreEngineEnginebaseurlToStringGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingsmapofSdkCoreEngineEnginebaseurlToStringToFfiNullable(Map<EngineBaseURL, String>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingsmapofSdkCoreEngineEnginebaseurlToStringToFfi(value);
  final result = _heresdkRoutingBindingsmapofSdkCoreEngineEnginebaseurlToStringCreateHandleNullable(_handle);
  heresdkRoutingBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseFfiHandle(_handle);
  return result;
}

Map<EngineBaseURL, String>? heresdkRoutingBindingsmapofSdkCoreEngineEnginebaseurlToStringFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingBindingsmapofSdkCoreEngineEnginebaseurlToStringGetValueNullable(handle);
  final result = heresdkRoutingBindingsmapofSdkCoreEngineEnginebaseurlToStringFromFfi(_handle);
  heresdkRoutingBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseHandleNullable(handle);


// Copyright (c) 2018-2022 HERE Global B.V. and its affiliate(s).
// All rights reserved.
//
// This software and other materials contain proprietary information
// controlled by HERE and are protected by applicable copyright legislation.
// Any use and utilization of this software and other materials and
// disclosure to any third parties is conditional upon having a separate
// agreement with HERE for the access, use, utilization or disclosure of this
// software. In the absence of such agreement, the use of the software is not
// allowed.
//






































final _heresdkRoutingCommonBindingslistofIntCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindingsListOf_Int_create_handle'));
final _heresdkRoutingCommonBindingslistofIntReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_Int_release_handle'));
final _heresdkRoutingCommonBindingslistofIntInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Int32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_common_bindingsListOf_Int_insert'));
final _heresdkRoutingCommonBindingslistofIntIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_Int_iterator'));
final _heresdkRoutingCommonBindingslistofIntIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_Int_iterator_release_handle'));
final _heresdkRoutingCommonBindingslistofIntIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_Int_iterator_is_valid'));
final _heresdkRoutingCommonBindingslistofIntIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_Int_iterator_increment'));
final _heresdkRoutingCommonBindingslistofIntIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_Int_iterator_get'));

Pointer<Void> heresdkRoutingCommonBindingslistofIntToFfi(List<int> value) {
  final _result = _heresdkRoutingCommonBindingslistofIntCreateHandle();
  for (final element in value) {
    final _elementHandle = (element);
    _heresdkRoutingCommonBindingslistofIntInsert(_result, _elementHandle);
    
  }
  return _result;
}

List<int> heresdkRoutingCommonBindingslistofIntFromFfi(Pointer<Void> handle) {
  final result = List<int>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingCommonBindingslistofIntIterator(handle);
  while (_heresdkRoutingCommonBindingslistofIntIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingCommonBindingslistofIntIteratorGet(_iteratorHandle);
    try {
      result.add((_elementHandle));
    } finally {
      
    }
    _heresdkRoutingCommonBindingslistofIntIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingslistofIntIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingslistofIntReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingslistofIntReleaseHandle(handle);

final _heresdkRoutingCommonBindingslistofIntCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_Int_create_handle_nullable'));
final _heresdkRoutingCommonBindingslistofIntReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_Int_release_handle_nullable'));
final _heresdkRoutingCommonBindingslistofIntGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_Int_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingslistofIntToFfiNullable(List<int>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingslistofIntToFfi(value);
  final result = _heresdkRoutingCommonBindingslistofIntCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingslistofIntReleaseFfiHandle(_handle);
  return result;
}

List<int>? heresdkRoutingCommonBindingslistofIntFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingCommonBindingslistofIntGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingslistofIntFromFfi(_handle);
  heresdkRoutingCommonBindingslistofIntReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingslistofIntReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingslistofIntReleaseHandleNullable(handle);

final _heresdkRoutingCommonBindingslistofLocaleCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindingsListOf_Locale_create_handle'));
final _heresdkRoutingCommonBindingslistofLocaleReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_Locale_release_handle'));
final _heresdkRoutingCommonBindingslistofLocaleInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_Locale_insert'));
final _heresdkRoutingCommonBindingslistofLocaleIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_Locale_iterator'));
final _heresdkRoutingCommonBindingslistofLocaleIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_Locale_iterator_release_handle'));
final _heresdkRoutingCommonBindingslistofLocaleIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_Locale_iterator_is_valid'));
final _heresdkRoutingCommonBindingslistofLocaleIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_Locale_iterator_increment'));
final _heresdkRoutingCommonBindingslistofLocaleIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_Locale_iterator_get'));

Pointer<Void> heresdkRoutingCommonBindingslistofLocaleToFfi(List<Locale> value) {
  final _result = _heresdkRoutingCommonBindingslistofLocaleCreateHandle();
  for (final element in value) {
    final _elementHandle = localeToFfi(element);
    _heresdkRoutingCommonBindingslistofLocaleInsert(_result, _elementHandle);
    localeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Locale> heresdkRoutingCommonBindingslistofLocaleFromFfi(Pointer<Void> handle) {
  final result = List<Locale>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingCommonBindingslistofLocaleIterator(handle);
  while (_heresdkRoutingCommonBindingslistofLocaleIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingCommonBindingslistofLocaleIteratorGet(_iteratorHandle);
    try {
      result.add(localeFromFfi(_elementHandle));
    } finally {
      localeReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingCommonBindingslistofLocaleIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingslistofLocaleIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingslistofLocaleReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingslistofLocaleReleaseHandle(handle);

final _heresdkRoutingCommonBindingslistofLocaleCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_Locale_create_handle_nullable'));
final _heresdkRoutingCommonBindingslistofLocaleReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_Locale_release_handle_nullable'));
final _heresdkRoutingCommonBindingslistofLocaleGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_Locale_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingslistofLocaleToFfiNullable(List<Locale>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingslistofLocaleToFfi(value);
  final result = _heresdkRoutingCommonBindingslistofLocaleCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingslistofLocaleReleaseFfiHandle(_handle);
  return result;
}

List<Locale>? heresdkRoutingCommonBindingslistofLocaleFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingCommonBindingslistofLocaleGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingslistofLocaleFromFfi(_handle);
  heresdkRoutingCommonBindingslistofLocaleReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingslistofLocaleReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingslistofLocaleReleaseHandleNullable(handle);

final _heresdkRoutingCommonBindingslistofSdkCoreCountrycodeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_CountryCode_create_handle'));
final _heresdkRoutingCommonBindingslistofSdkCoreCountrycodeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_CountryCode_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkCoreCountrycodeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_CountryCode_insert'));
final _heresdkRoutingCommonBindingslistofSdkCoreCountrycodeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_CountryCode_iterator'));
final _heresdkRoutingCommonBindingslistofSdkCoreCountrycodeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_CountryCode_iterator_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkCoreCountrycodeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_CountryCode_iterator_is_valid'));
final _heresdkRoutingCommonBindingslistofSdkCoreCountrycodeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_CountryCode_iterator_increment'));
final _heresdkRoutingCommonBindingslistofSdkCoreCountrycodeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_CountryCode_iterator_get'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkCoreCountrycodeToFfi(List<CountryCode> value) {
  final _result = _heresdkRoutingCommonBindingslistofSdkCoreCountrycodeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreCountrycodeToFfi(element);
    _heresdkRoutingCommonBindingslistofSdkCoreCountrycodeInsert(_result, _elementHandle);
    sdkCoreCountrycodeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<CountryCode> heresdkRoutingCommonBindingslistofSdkCoreCountrycodeFromFfi(Pointer<Void> handle) {
  final result = List<CountryCode>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingCommonBindingslistofSdkCoreCountrycodeIterator(handle);
  while (_heresdkRoutingCommonBindingslistofSdkCoreCountrycodeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingCommonBindingslistofSdkCoreCountrycodeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreCountrycodeFromFfi(_elementHandle));
    } finally {
      sdkCoreCountrycodeReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingCommonBindingslistofSdkCoreCountrycodeIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingslistofSdkCoreCountrycodeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkCoreCountrycodeReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingslistofSdkCoreCountrycodeReleaseHandle(handle);

final _heresdkRoutingCommonBindingslistofSdkCoreCountrycodeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_CountryCode_create_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkCoreCountrycodeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_CountryCode_release_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkCoreCountrycodeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_CountryCode_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkCoreCountrycodeToFfiNullable(List<CountryCode>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingslistofSdkCoreCountrycodeToFfi(value);
  final result = _heresdkRoutingCommonBindingslistofSdkCoreCountrycodeCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingslistofSdkCoreCountrycodeReleaseFfiHandle(_handle);
  return result;
}

List<CountryCode>? heresdkRoutingCommonBindingslistofSdkCoreCountrycodeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingCommonBindingslistofSdkCoreCountrycodeGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingslistofSdkCoreCountrycodeFromFfi(_handle);
  heresdkRoutingCommonBindingslistofSdkCoreCountrycodeReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkCoreCountrycodeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingslistofSdkCoreCountrycodeReleaseHandleNullable(handle);

final _heresdkRoutingCommonBindingslistofSdkCoreGeoboxCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_GeoBox_create_handle'));
final _heresdkRoutingCommonBindingslistofSdkCoreGeoboxReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_GeoBox_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkCoreGeoboxInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_GeoBox_insert'));
final _heresdkRoutingCommonBindingslistofSdkCoreGeoboxIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_GeoBox_iterator'));
final _heresdkRoutingCommonBindingslistofSdkCoreGeoboxIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_GeoBox_iterator_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkCoreGeoboxIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_GeoBox_iterator_is_valid'));
final _heresdkRoutingCommonBindingslistofSdkCoreGeoboxIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_GeoBox_iterator_increment'));
final _heresdkRoutingCommonBindingslistofSdkCoreGeoboxIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_GeoBox_iterator_get'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkCoreGeoboxToFfi(List<GeoBox> value) {
  final _result = _heresdkRoutingCommonBindingslistofSdkCoreGeoboxCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreGeoboxToFfi(element);
    _heresdkRoutingCommonBindingslistofSdkCoreGeoboxInsert(_result, _elementHandle);
    sdkCoreGeoboxReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoBox> heresdkRoutingCommonBindingslistofSdkCoreGeoboxFromFfi(Pointer<Void> handle) {
  final result = List<GeoBox>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingCommonBindingslistofSdkCoreGeoboxIterator(handle);
  while (_heresdkRoutingCommonBindingslistofSdkCoreGeoboxIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingCommonBindingslistofSdkCoreGeoboxIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreGeoboxFromFfi(_elementHandle));
    } finally {
      sdkCoreGeoboxReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingCommonBindingslistofSdkCoreGeoboxIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingslistofSdkCoreGeoboxIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkCoreGeoboxReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingslistofSdkCoreGeoboxReleaseHandle(handle);

final _heresdkRoutingCommonBindingslistofSdkCoreGeoboxCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_GeoBox_create_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkCoreGeoboxReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_GeoBox_release_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkCoreGeoboxGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_GeoBox_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkCoreGeoboxToFfiNullable(List<GeoBox>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingslistofSdkCoreGeoboxToFfi(value);
  final result = _heresdkRoutingCommonBindingslistofSdkCoreGeoboxCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingslistofSdkCoreGeoboxReleaseFfiHandle(_handle);
  return result;
}

List<GeoBox>? heresdkRoutingCommonBindingslistofSdkCoreGeoboxFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingCommonBindingslistofSdkCoreGeoboxGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingslistofSdkCoreGeoboxFromFfi(_handle);
  heresdkRoutingCommonBindingslistofSdkCoreGeoboxReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkCoreGeoboxReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingslistofSdkCoreGeoboxReleaseHandleNullable(handle);

final _heresdkRoutingCommonBindingslistofSdkCoreGeocoordinatesCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_GeoCoordinates_create_handle'));
final _heresdkRoutingCommonBindingslistofSdkCoreGeocoordinatesReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_GeoCoordinates_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkCoreGeocoordinatesInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_GeoCoordinates_insert'));
final _heresdkRoutingCommonBindingslistofSdkCoreGeocoordinatesIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_GeoCoordinates_iterator'));
final _heresdkRoutingCommonBindingslistofSdkCoreGeocoordinatesIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_GeoCoordinates_iterator_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkCoreGeocoordinatesIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_GeoCoordinates_iterator_is_valid'));
final _heresdkRoutingCommonBindingslistofSdkCoreGeocoordinatesIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_GeoCoordinates_iterator_increment'));
final _heresdkRoutingCommonBindingslistofSdkCoreGeocoordinatesIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_GeoCoordinates_iterator_get'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkCoreGeocoordinatesToFfi(List<GeoCoordinates> value) {
  final _result = _heresdkRoutingCommonBindingslistofSdkCoreGeocoordinatesCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreGeocoordinatesToFfi(element);
    _heresdkRoutingCommonBindingslistofSdkCoreGeocoordinatesInsert(_result, _elementHandle);
    sdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoCoordinates> heresdkRoutingCommonBindingslistofSdkCoreGeocoordinatesFromFfi(Pointer<Void> handle) {
  final result = List<GeoCoordinates>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingCommonBindingslistofSdkCoreGeocoordinatesIterator(handle);
  while (_heresdkRoutingCommonBindingslistofSdkCoreGeocoordinatesIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingCommonBindingslistofSdkCoreGeocoordinatesIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreGeocoordinatesFromFfi(_elementHandle));
    } finally {
      sdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingCommonBindingslistofSdkCoreGeocoordinatesIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingslistofSdkCoreGeocoordinatesIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingslistofSdkCoreGeocoordinatesReleaseHandle(handle);

final _heresdkRoutingCommonBindingslistofSdkCoreGeocoordinatesCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_GeoCoordinates_create_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkCoreGeocoordinatesReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_GeoCoordinates_release_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkCoreGeocoordinatesGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_GeoCoordinates_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkCoreGeocoordinatesToFfiNullable(List<GeoCoordinates>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingslistofSdkCoreGeocoordinatesToFfi(value);
  final result = _heresdkRoutingCommonBindingslistofSdkCoreGeocoordinatesCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

List<GeoCoordinates>? heresdkRoutingCommonBindingslistofSdkCoreGeocoordinatesFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingCommonBindingslistofSdkCoreGeocoordinatesGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingslistofSdkCoreGeocoordinatesFromFfi(_handle);
  heresdkRoutingCommonBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkCoreGeocoordinatesReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingslistofSdkCoreGeocoordinatesReleaseHandleNullable(handle);

final _heresdkRoutingCommonBindingslistofSdkCoreLocalizedtextCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_LocalizedText_create_handle'));
final _heresdkRoutingCommonBindingslistofSdkCoreLocalizedtextReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_LocalizedText_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkCoreLocalizedtextInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_LocalizedText_insert'));
final _heresdkRoutingCommonBindingslistofSdkCoreLocalizedtextIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_LocalizedText_iterator'));
final _heresdkRoutingCommonBindingslistofSdkCoreLocalizedtextIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_LocalizedText_iterator_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkCoreLocalizedtextIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_LocalizedText_iterator_is_valid'));
final _heresdkRoutingCommonBindingslistofSdkCoreLocalizedtextIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_LocalizedText_iterator_increment'));
final _heresdkRoutingCommonBindingslistofSdkCoreLocalizedtextIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_LocalizedText_iterator_get'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkCoreLocalizedtextToFfi(List<LocalizedText> value) {
  final _result = _heresdkRoutingCommonBindingslistofSdkCoreLocalizedtextCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreLocalizedtextToFfi(element);
    _heresdkRoutingCommonBindingslistofSdkCoreLocalizedtextInsert(_result, _elementHandle);
    sdkCoreLocalizedtextReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<LocalizedText> heresdkRoutingCommonBindingslistofSdkCoreLocalizedtextFromFfi(Pointer<Void> handle) {
  final result = List<LocalizedText>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingCommonBindingslistofSdkCoreLocalizedtextIterator(handle);
  while (_heresdkRoutingCommonBindingslistofSdkCoreLocalizedtextIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingCommonBindingslistofSdkCoreLocalizedtextIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreLocalizedtextFromFfi(_elementHandle));
    } finally {
      sdkCoreLocalizedtextReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingCommonBindingslistofSdkCoreLocalizedtextIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingslistofSdkCoreLocalizedtextIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkCoreLocalizedtextReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingslistofSdkCoreLocalizedtextReleaseHandle(handle);

final _heresdkRoutingCommonBindingslistofSdkCoreLocalizedtextCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_LocalizedText_create_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkCoreLocalizedtextReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_LocalizedText_release_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkCoreLocalizedtextGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_LocalizedText_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkCoreLocalizedtextToFfiNullable(List<LocalizedText>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingslistofSdkCoreLocalizedtextToFfi(value);
  final result = _heresdkRoutingCommonBindingslistofSdkCoreLocalizedtextCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingslistofSdkCoreLocalizedtextReleaseFfiHandle(_handle);
  return result;
}

List<LocalizedText>? heresdkRoutingCommonBindingslistofSdkCoreLocalizedtextFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingCommonBindingslistofSdkCoreLocalizedtextGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingslistofSdkCoreLocalizedtextFromFfi(_handle);
  heresdkRoutingCommonBindingslistofSdkCoreLocalizedtextReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkCoreLocalizedtextReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingslistofSdkCoreLocalizedtextReleaseHandleNullable(handle);

final _heresdkRoutingCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_create_handle'));
final _heresdkRoutingCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_insert'));
final _heresdkRoutingCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator'));
final _heresdkRoutingCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator_is_valid'));
final _heresdkRoutingCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator_increment'));
final _heresdkRoutingCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator_get'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureToFfi(List<LayerConfigurationFeature> value) {
  final _result = _heresdkRoutingCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreEngineLayerconfigurationFeatureToFfi(element);
    _heresdkRoutingCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureInsert(_result, _elementHandle);
    sdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<LayerConfigurationFeature> heresdkRoutingCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureFromFfi(Pointer<Void> handle) {
  final result = List<LayerConfigurationFeature>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureIterator(handle);
  while (_heresdkRoutingCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreEngineLayerconfigurationFeatureFromFfi(_elementHandle));
    } finally {
      sdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseHandle(handle);

final _heresdkRoutingCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_create_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_release_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureToFfiNullable(List<LayerConfigurationFeature>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureToFfi(value);
  final result = _heresdkRoutingCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(_handle);
  return result;
}

List<LayerConfigurationFeature>? heresdkRoutingCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureFromFfi(_handle);
  heresdkRoutingCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseHandleNullable(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingAttributionCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Attribution_create_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingAttributionReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Attribution_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingAttributionInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Attribution_insert'));
final _heresdkRoutingCommonBindingslistofSdkRoutingAttributionIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Attribution_iterator'));
final _heresdkRoutingCommonBindingslistofSdkRoutingAttributionIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Attribution_iterator_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingAttributionIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Attribution_iterator_is_valid'));
final _heresdkRoutingCommonBindingslistofSdkRoutingAttributionIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Attribution_iterator_increment'));
final _heresdkRoutingCommonBindingslistofSdkRoutingAttributionIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Attribution_iterator_get'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingAttributionToFfi(List<Attribution> value) {
  final _result = _heresdkRoutingCommonBindingslistofSdkRoutingAttributionCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingAttributionToFfi(element);
    _heresdkRoutingCommonBindingslistofSdkRoutingAttributionInsert(_result, _elementHandle);
    sdkRoutingAttributionReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Attribution> heresdkRoutingCommonBindingslistofSdkRoutingAttributionFromFfi(Pointer<Void> handle) {
  final result = List<Attribution>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingCommonBindingslistofSdkRoutingAttributionIterator(handle);
  while (_heresdkRoutingCommonBindingslistofSdkRoutingAttributionIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingCommonBindingslistofSdkRoutingAttributionIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingAttributionFromFfi(_elementHandle));
    } finally {
      sdkRoutingAttributionReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingCommonBindingslistofSdkRoutingAttributionIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingslistofSdkRoutingAttributionIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingAttributionReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingslistofSdkRoutingAttributionReleaseHandle(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingAttributionCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Attribution_create_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingAttributionReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Attribution_release_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingAttributionGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Attribution_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingAttributionToFfiNullable(List<Attribution>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingslistofSdkRoutingAttributionToFfi(value);
  final result = _heresdkRoutingCommonBindingslistofSdkRoutingAttributionCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingAttributionReleaseFfiHandle(_handle);
  return result;
}

List<Attribution>? heresdkRoutingCommonBindingslistofSdkRoutingAttributionFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingCommonBindingslistofSdkRoutingAttributionGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingslistofSdkRoutingAttributionFromFfi(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingAttributionReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingAttributionReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingslistofSdkRoutingAttributionReleaseHandleNullable(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingChargingconnectortypeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_ChargingConnectorType_create_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingChargingconnectortypeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_ChargingConnectorType_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingChargingconnectortypeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_ChargingConnectorType_insert'));
final _heresdkRoutingCommonBindingslistofSdkRoutingChargingconnectortypeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_ChargingConnectorType_iterator'));
final _heresdkRoutingCommonBindingslistofSdkRoutingChargingconnectortypeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_ChargingConnectorType_iterator_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingChargingconnectortypeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_ChargingConnectorType_iterator_is_valid'));
final _heresdkRoutingCommonBindingslistofSdkRoutingChargingconnectortypeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_ChargingConnectorType_iterator_increment'));
final _heresdkRoutingCommonBindingslistofSdkRoutingChargingconnectortypeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_ChargingConnectorType_iterator_get'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingChargingconnectortypeToFfi(List<ChargingConnectorType> value) {
  final _result = _heresdkRoutingCommonBindingslistofSdkRoutingChargingconnectortypeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingChargingconnectortypeToFfi(element);
    _heresdkRoutingCommonBindingslistofSdkRoutingChargingconnectortypeInsert(_result, _elementHandle);
    sdkRoutingChargingconnectortypeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<ChargingConnectorType> heresdkRoutingCommonBindingslistofSdkRoutingChargingconnectortypeFromFfi(Pointer<Void> handle) {
  final result = List<ChargingConnectorType>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingCommonBindingslistofSdkRoutingChargingconnectortypeIterator(handle);
  while (_heresdkRoutingCommonBindingslistofSdkRoutingChargingconnectortypeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingCommonBindingslistofSdkRoutingChargingconnectortypeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingChargingconnectortypeFromFfi(_elementHandle));
    } finally {
      sdkRoutingChargingconnectortypeReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingCommonBindingslistofSdkRoutingChargingconnectortypeIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingslistofSdkRoutingChargingconnectortypeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingChargingconnectortypeReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingslistofSdkRoutingChargingconnectortypeReleaseHandle(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingChargingconnectortypeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_ChargingConnectorType_create_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingChargingconnectortypeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_ChargingConnectorType_release_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingChargingconnectortypeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_ChargingConnectorType_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingChargingconnectortypeToFfiNullable(List<ChargingConnectorType>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingslistofSdkRoutingChargingconnectortypeToFfi(value);
  final result = _heresdkRoutingCommonBindingslistofSdkRoutingChargingconnectortypeCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingChargingconnectortypeReleaseFfiHandle(_handle);
  return result;
}

List<ChargingConnectorType>? heresdkRoutingCommonBindingslistofSdkRoutingChargingconnectortypeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingCommonBindingslistofSdkRoutingChargingconnectortypeGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingslistofSdkRoutingChargingconnectortypeFromFfi(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingChargingconnectortypeReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingChargingconnectortypeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingslistofSdkRoutingChargingconnectortypeReleaseHandleNullable(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingFareCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Fare_create_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingFareReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Fare_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingFareInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Fare_insert'));
final _heresdkRoutingCommonBindingslistofSdkRoutingFareIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Fare_iterator'));
final _heresdkRoutingCommonBindingslistofSdkRoutingFareIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Fare_iterator_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingFareIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Fare_iterator_is_valid'));
final _heresdkRoutingCommonBindingslistofSdkRoutingFareIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Fare_iterator_increment'));
final _heresdkRoutingCommonBindingslistofSdkRoutingFareIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Fare_iterator_get'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingFareToFfi(List<Fare> value) {
  final _result = _heresdkRoutingCommonBindingslistofSdkRoutingFareCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingFareToFfi(element);
    _heresdkRoutingCommonBindingslistofSdkRoutingFareInsert(_result, _elementHandle);
    sdkRoutingFareReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Fare> heresdkRoutingCommonBindingslistofSdkRoutingFareFromFfi(Pointer<Void> handle) {
  final result = List<Fare>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingCommonBindingslistofSdkRoutingFareIterator(handle);
  while (_heresdkRoutingCommonBindingslistofSdkRoutingFareIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingCommonBindingslistofSdkRoutingFareIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingFareFromFfi(_elementHandle));
    } finally {
      sdkRoutingFareReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingCommonBindingslistofSdkRoutingFareIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingslistofSdkRoutingFareIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingFareReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingslistofSdkRoutingFareReleaseHandle(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingFareCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Fare_create_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingFareReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Fare_release_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingFareGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Fare_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingFareToFfiNullable(List<Fare>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingslistofSdkRoutingFareToFfi(value);
  final result = _heresdkRoutingCommonBindingslistofSdkRoutingFareCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingFareReleaseFfiHandle(_handle);
  return result;
}

List<Fare>? heresdkRoutingCommonBindingslistofSdkRoutingFareFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingCommonBindingslistofSdkRoutingFareGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingslistofSdkRoutingFareFromFfi(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingFareReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingFareReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingslistofSdkRoutingFareReleaseHandleNullable(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingHazardousgoodCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_HazardousGood_create_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingHazardousgoodReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_HazardousGood_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingHazardousgoodInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_HazardousGood_insert'));
final _heresdkRoutingCommonBindingslistofSdkRoutingHazardousgoodIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_HazardousGood_iterator'));
final _heresdkRoutingCommonBindingslistofSdkRoutingHazardousgoodIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_HazardousGood_iterator_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingHazardousgoodIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_HazardousGood_iterator_is_valid'));
final _heresdkRoutingCommonBindingslistofSdkRoutingHazardousgoodIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_HazardousGood_iterator_increment'));
final _heresdkRoutingCommonBindingslistofSdkRoutingHazardousgoodIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_HazardousGood_iterator_get'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingHazardousgoodToFfi(List<HazardousGood> value) {
  final _result = _heresdkRoutingCommonBindingslistofSdkRoutingHazardousgoodCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingHazardousgoodToFfi(element);
    _heresdkRoutingCommonBindingslistofSdkRoutingHazardousgoodInsert(_result, _elementHandle);
    sdkRoutingHazardousgoodReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<HazardousGood> heresdkRoutingCommonBindingslistofSdkRoutingHazardousgoodFromFfi(Pointer<Void> handle) {
  final result = List<HazardousGood>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingCommonBindingslistofSdkRoutingHazardousgoodIterator(handle);
  while (_heresdkRoutingCommonBindingslistofSdkRoutingHazardousgoodIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingCommonBindingslistofSdkRoutingHazardousgoodIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingHazardousgoodFromFfi(_elementHandle));
    } finally {
      sdkRoutingHazardousgoodReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingCommonBindingslistofSdkRoutingHazardousgoodIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingslistofSdkRoutingHazardousgoodIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingHazardousgoodReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingslistofSdkRoutingHazardousgoodReleaseHandle(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingHazardousgoodCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_HazardousGood_create_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingHazardousgoodReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_HazardousGood_release_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingHazardousgoodGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_HazardousGood_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingHazardousgoodToFfiNullable(List<HazardousGood>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingslistofSdkRoutingHazardousgoodToFfi(value);
  final result = _heresdkRoutingCommonBindingslistofSdkRoutingHazardousgoodCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingHazardousgoodReleaseFfiHandle(_handle);
  return result;
}

List<HazardousGood>? heresdkRoutingCommonBindingslistofSdkRoutingHazardousgoodFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingCommonBindingslistofSdkRoutingHazardousgoodGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingslistofSdkRoutingHazardousgoodFromFfi(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingHazardousgoodReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingHazardousgoodReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingslistofSdkRoutingHazardousgoodReleaseHandleNullable(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingManeuverCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Maneuver_create_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingManeuverReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Maneuver_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingManeuverInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Maneuver_insert'));
final _heresdkRoutingCommonBindingslistofSdkRoutingManeuverIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Maneuver_iterator'));
final _heresdkRoutingCommonBindingslistofSdkRoutingManeuverIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Maneuver_iterator_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingManeuverIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Maneuver_iterator_is_valid'));
final _heresdkRoutingCommonBindingslistofSdkRoutingManeuverIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Maneuver_iterator_increment'));
final _heresdkRoutingCommonBindingslistofSdkRoutingManeuverIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Maneuver_iterator_get'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingManeuverToFfi(List<Maneuver> value) {
  final _result = _heresdkRoutingCommonBindingslistofSdkRoutingManeuverCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingManeuverToFfi(element);
    _heresdkRoutingCommonBindingslistofSdkRoutingManeuverInsert(_result, _elementHandle);
    sdkRoutingManeuverReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Maneuver> heresdkRoutingCommonBindingslistofSdkRoutingManeuverFromFfi(Pointer<Void> handle) {
  final result = List<Maneuver>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingCommonBindingslistofSdkRoutingManeuverIterator(handle);
  while (_heresdkRoutingCommonBindingslistofSdkRoutingManeuverIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingCommonBindingslistofSdkRoutingManeuverIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingManeuverFromFfi(_elementHandle));
    } finally {
      sdkRoutingManeuverReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingCommonBindingslistofSdkRoutingManeuverIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingslistofSdkRoutingManeuverIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingManeuverReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingslistofSdkRoutingManeuverReleaseHandle(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingManeuverCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Maneuver_create_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingManeuverReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Maneuver_release_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingManeuverGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Maneuver_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingManeuverToFfiNullable(List<Maneuver>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingslistofSdkRoutingManeuverToFfi(value);
  final result = _heresdkRoutingCommonBindingslistofSdkRoutingManeuverCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingManeuverReleaseFfiHandle(_handle);
  return result;
}

List<Maneuver>? heresdkRoutingCommonBindingslistofSdkRoutingManeuverFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingCommonBindingslistofSdkRoutingManeuverGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingslistofSdkRoutingManeuverFromFfi(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingManeuverReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingManeuverReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingslistofSdkRoutingManeuverReleaseHandleNullable(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingPaymentmethodCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_PaymentMethod_create_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingPaymentmethodReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_PaymentMethod_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingPaymentmethodInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_PaymentMethod_insert'));
final _heresdkRoutingCommonBindingslistofSdkRoutingPaymentmethodIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_PaymentMethod_iterator'));
final _heresdkRoutingCommonBindingslistofSdkRoutingPaymentmethodIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_PaymentMethod_iterator_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingPaymentmethodIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_PaymentMethod_iterator_is_valid'));
final _heresdkRoutingCommonBindingslistofSdkRoutingPaymentmethodIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_PaymentMethod_iterator_increment'));
final _heresdkRoutingCommonBindingslistofSdkRoutingPaymentmethodIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_PaymentMethod_iterator_get'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingPaymentmethodToFfi(List<PaymentMethod> value) {
  final _result = _heresdkRoutingCommonBindingslistofSdkRoutingPaymentmethodCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingPaymentmethodToFfi(element);
    _heresdkRoutingCommonBindingslistofSdkRoutingPaymentmethodInsert(_result, _elementHandle);
    sdkRoutingPaymentmethodReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<PaymentMethod> heresdkRoutingCommonBindingslistofSdkRoutingPaymentmethodFromFfi(Pointer<Void> handle) {
  final result = List<PaymentMethod>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingCommonBindingslistofSdkRoutingPaymentmethodIterator(handle);
  while (_heresdkRoutingCommonBindingslistofSdkRoutingPaymentmethodIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingCommonBindingslistofSdkRoutingPaymentmethodIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingPaymentmethodFromFfi(_elementHandle));
    } finally {
      sdkRoutingPaymentmethodReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingCommonBindingslistofSdkRoutingPaymentmethodIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingslistofSdkRoutingPaymentmethodIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingPaymentmethodReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingslistofSdkRoutingPaymentmethodReleaseHandle(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingPaymentmethodCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_PaymentMethod_create_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingPaymentmethodReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_PaymentMethod_release_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingPaymentmethodGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_PaymentMethod_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingPaymentmethodToFfiNullable(List<PaymentMethod>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingslistofSdkRoutingPaymentmethodToFfi(value);
  final result = _heresdkRoutingCommonBindingslistofSdkRoutingPaymentmethodCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingPaymentmethodReleaseFfiHandle(_handle);
  return result;
}

List<PaymentMethod>? heresdkRoutingCommonBindingslistofSdkRoutingPaymentmethodFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingCommonBindingslistofSdkRoutingPaymentmethodGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingslistofSdkRoutingPaymentmethodFromFfi(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingPaymentmethodReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingPaymentmethodReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingslistofSdkRoutingPaymentmethodReleaseHandleNullable(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingPostactionCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_PostAction_create_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingPostactionReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_PostAction_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingPostactionInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_PostAction_insert'));
final _heresdkRoutingCommonBindingslistofSdkRoutingPostactionIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_PostAction_iterator'));
final _heresdkRoutingCommonBindingslistofSdkRoutingPostactionIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_PostAction_iterator_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingPostactionIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_PostAction_iterator_is_valid'));
final _heresdkRoutingCommonBindingslistofSdkRoutingPostactionIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_PostAction_iterator_increment'));
final _heresdkRoutingCommonBindingslistofSdkRoutingPostactionIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_PostAction_iterator_get'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingPostactionToFfi(List<PostAction> value) {
  final _result = _heresdkRoutingCommonBindingslistofSdkRoutingPostactionCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingPostactionToFfi(element);
    _heresdkRoutingCommonBindingslistofSdkRoutingPostactionInsert(_result, _elementHandle);
    sdkRoutingPostactionReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<PostAction> heresdkRoutingCommonBindingslistofSdkRoutingPostactionFromFfi(Pointer<Void> handle) {
  final result = List<PostAction>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingCommonBindingslistofSdkRoutingPostactionIterator(handle);
  while (_heresdkRoutingCommonBindingslistofSdkRoutingPostactionIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingCommonBindingslistofSdkRoutingPostactionIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingPostactionFromFfi(_elementHandle));
    } finally {
      sdkRoutingPostactionReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingCommonBindingslistofSdkRoutingPostactionIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingslistofSdkRoutingPostactionIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingPostactionReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingslistofSdkRoutingPostactionReleaseHandle(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingPostactionCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_PostAction_create_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingPostactionReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_PostAction_release_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingPostactionGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_PostAction_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingPostactionToFfiNullable(List<PostAction>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingslistofSdkRoutingPostactionToFfi(value);
  final result = _heresdkRoutingCommonBindingslistofSdkRoutingPostactionCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingPostactionReleaseFfiHandle(_handle);
  return result;
}

List<PostAction>? heresdkRoutingCommonBindingslistofSdkRoutingPostactionFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingCommonBindingslistofSdkRoutingPostactionGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingslistofSdkRoutingPostactionFromFfi(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingPostactionReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingPostactionReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingslistofSdkRoutingPostactionReleaseHandleNullable(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingPreactionCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_PreAction_create_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingPreactionReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_PreAction_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingPreactionInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_PreAction_insert'));
final _heresdkRoutingCommonBindingslistofSdkRoutingPreactionIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_PreAction_iterator'));
final _heresdkRoutingCommonBindingslistofSdkRoutingPreactionIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_PreAction_iterator_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingPreactionIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_PreAction_iterator_is_valid'));
final _heresdkRoutingCommonBindingslistofSdkRoutingPreactionIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_PreAction_iterator_increment'));
final _heresdkRoutingCommonBindingslistofSdkRoutingPreactionIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_PreAction_iterator_get'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingPreactionToFfi(List<PreAction> value) {
  final _result = _heresdkRoutingCommonBindingslistofSdkRoutingPreactionCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingPreactionToFfi(element);
    _heresdkRoutingCommonBindingslistofSdkRoutingPreactionInsert(_result, _elementHandle);
    sdkRoutingPreactionReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<PreAction> heresdkRoutingCommonBindingslistofSdkRoutingPreactionFromFfi(Pointer<Void> handle) {
  final result = List<PreAction>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingCommonBindingslistofSdkRoutingPreactionIterator(handle);
  while (_heresdkRoutingCommonBindingslistofSdkRoutingPreactionIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingCommonBindingslistofSdkRoutingPreactionIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingPreactionFromFfi(_elementHandle));
    } finally {
      sdkRoutingPreactionReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingCommonBindingslistofSdkRoutingPreactionIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingslistofSdkRoutingPreactionIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingPreactionReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingslistofSdkRoutingPreactionReleaseHandle(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingPreactionCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_PreAction_create_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingPreactionReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_PreAction_release_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingPreactionGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_PreAction_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingPreactionToFfiNullable(List<PreAction>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingslistofSdkRoutingPreactionToFfi(value);
  final result = _heresdkRoutingCommonBindingslistofSdkRoutingPreactionCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingPreactionReleaseFfiHandle(_handle);
  return result;
}

List<PreAction>? heresdkRoutingCommonBindingslistofSdkRoutingPreactionFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingCommonBindingslistofSdkRoutingPreactionGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingslistofSdkRoutingPreactionFromFfi(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingPreactionReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingPreactionReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingslistofSdkRoutingPreactionReleaseHandleNullable(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingRoadfeaturesCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_RoadFeatures_create_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingRoadfeaturesReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_RoadFeatures_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingRoadfeaturesInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_RoadFeatures_insert'));
final _heresdkRoutingCommonBindingslistofSdkRoutingRoadfeaturesIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_RoadFeatures_iterator'));
final _heresdkRoutingCommonBindingslistofSdkRoutingRoadfeaturesIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_RoadFeatures_iterator_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingRoadfeaturesIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_RoadFeatures_iterator_is_valid'));
final _heresdkRoutingCommonBindingslistofSdkRoutingRoadfeaturesIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_RoadFeatures_iterator_increment'));
final _heresdkRoutingCommonBindingslistofSdkRoutingRoadfeaturesIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_RoadFeatures_iterator_get'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingRoadfeaturesToFfi(List<RoadFeatures> value) {
  final _result = _heresdkRoutingCommonBindingslistofSdkRoutingRoadfeaturesCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingRoadfeaturesToFfi(element);
    _heresdkRoutingCommonBindingslistofSdkRoutingRoadfeaturesInsert(_result, _elementHandle);
    sdkRoutingRoadfeaturesReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<RoadFeatures> heresdkRoutingCommonBindingslistofSdkRoutingRoadfeaturesFromFfi(Pointer<Void> handle) {
  final result = List<RoadFeatures>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingCommonBindingslistofSdkRoutingRoadfeaturesIterator(handle);
  while (_heresdkRoutingCommonBindingslistofSdkRoutingRoadfeaturesIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingCommonBindingslistofSdkRoutingRoadfeaturesIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingRoadfeaturesFromFfi(_elementHandle));
    } finally {
      sdkRoutingRoadfeaturesReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingCommonBindingslistofSdkRoutingRoadfeaturesIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingslistofSdkRoutingRoadfeaturesIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingRoadfeaturesReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingslistofSdkRoutingRoadfeaturesReleaseHandle(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingRoadfeaturesCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_RoadFeatures_create_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingRoadfeaturesReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_RoadFeatures_release_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingRoadfeaturesGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_RoadFeatures_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingRoadfeaturesToFfiNullable(List<RoadFeatures>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingslistofSdkRoutingRoadfeaturesToFfi(value);
  final result = _heresdkRoutingCommonBindingslistofSdkRoutingRoadfeaturesCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingRoadfeaturesReleaseFfiHandle(_handle);
  return result;
}

List<RoadFeatures>? heresdkRoutingCommonBindingslistofSdkRoutingRoadfeaturesFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingCommonBindingslistofSdkRoutingRoadfeaturesGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingslistofSdkRoutingRoadfeaturesFromFfi(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingRoadfeaturesReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingRoadfeaturesReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingslistofSdkRoutingRoadfeaturesReleaseHandleNullable(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingRouteCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Route_create_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingRouteReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Route_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingRouteInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Route_insert'));
final _heresdkRoutingCommonBindingslistofSdkRoutingRouteIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Route_iterator'));
final _heresdkRoutingCommonBindingslistofSdkRoutingRouteIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Route_iterator_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingRouteIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Route_iterator_is_valid'));
final _heresdkRoutingCommonBindingslistofSdkRoutingRouteIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Route_iterator_increment'));
final _heresdkRoutingCommonBindingslistofSdkRoutingRouteIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Route_iterator_get'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingRouteToFfi(List<Route> value) {
  final _result = _heresdkRoutingCommonBindingslistofSdkRoutingRouteCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingRouteToFfi(element);
    _heresdkRoutingCommonBindingslistofSdkRoutingRouteInsert(_result, _elementHandle);
    sdkRoutingRouteReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Route> heresdkRoutingCommonBindingslistofSdkRoutingRouteFromFfi(Pointer<Void> handle) {
  final result = List<Route>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingCommonBindingslistofSdkRoutingRouteIterator(handle);
  while (_heresdkRoutingCommonBindingslistofSdkRoutingRouteIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingCommonBindingslistofSdkRoutingRouteIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingRouteFromFfi(_elementHandle));
    } finally {
      sdkRoutingRouteReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingCommonBindingslistofSdkRoutingRouteIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingslistofSdkRoutingRouteIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingRouteReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingslistofSdkRoutingRouteReleaseHandle(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingRouteCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Route_create_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingRouteReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Route_release_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingRouteGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Route_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingRouteToFfiNullable(List<Route>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingslistofSdkRoutingRouteToFfi(value);
  final result = _heresdkRoutingCommonBindingslistofSdkRoutingRouteCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingRouteReleaseFfiHandle(_handle);
  return result;
}

List<Route>? heresdkRoutingCommonBindingslistofSdkRoutingRouteFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingCommonBindingslistofSdkRoutingRouteGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingslistofSdkRoutingRouteFromFfi(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingRouteReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingRouteReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingslistofSdkRoutingRouteReleaseHandleNullable(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingSectionCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Section_create_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingSectionReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Section_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingSectionInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Section_insert'));
final _heresdkRoutingCommonBindingslistofSdkRoutingSectionIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Section_iterator'));
final _heresdkRoutingCommonBindingslistofSdkRoutingSectionIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Section_iterator_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingSectionIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Section_iterator_is_valid'));
final _heresdkRoutingCommonBindingslistofSdkRoutingSectionIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Section_iterator_increment'));
final _heresdkRoutingCommonBindingslistofSdkRoutingSectionIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Section_iterator_get'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingSectionToFfi(List<Section> value) {
  final _result = _heresdkRoutingCommonBindingslistofSdkRoutingSectionCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingSectionToFfi(element);
    _heresdkRoutingCommonBindingslistofSdkRoutingSectionInsert(_result, _elementHandle);
    sdkRoutingSectionReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Section> heresdkRoutingCommonBindingslistofSdkRoutingSectionFromFfi(Pointer<Void> handle) {
  final result = List<Section>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingCommonBindingslistofSdkRoutingSectionIterator(handle);
  while (_heresdkRoutingCommonBindingslistofSdkRoutingSectionIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingCommonBindingslistofSdkRoutingSectionIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingSectionFromFfi(_elementHandle));
    } finally {
      sdkRoutingSectionReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingCommonBindingslistofSdkRoutingSectionIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingslistofSdkRoutingSectionIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingSectionReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingslistofSdkRoutingSectionReleaseHandle(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingSectionCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Section_create_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingSectionReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Section_release_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingSectionGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Section_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingSectionToFfiNullable(List<Section>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingslistofSdkRoutingSectionToFfi(value);
  final result = _heresdkRoutingCommonBindingslistofSdkRoutingSectionCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingSectionReleaseFfiHandle(_handle);
  return result;
}

List<Section>? heresdkRoutingCommonBindingslistofSdkRoutingSectionFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingCommonBindingslistofSdkRoutingSectionGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingslistofSdkRoutingSectionFromFfi(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingSectionReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingSectionReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingslistofSdkRoutingSectionReleaseHandleNullable(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingSectionnoticeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_SectionNotice_create_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingSectionnoticeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_SectionNotice_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingSectionnoticeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_SectionNotice_insert'));
final _heresdkRoutingCommonBindingslistofSdkRoutingSectionnoticeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_SectionNotice_iterator'));
final _heresdkRoutingCommonBindingslistofSdkRoutingSectionnoticeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_SectionNotice_iterator_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingSectionnoticeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_SectionNotice_iterator_is_valid'));
final _heresdkRoutingCommonBindingslistofSdkRoutingSectionnoticeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_SectionNotice_iterator_increment'));
final _heresdkRoutingCommonBindingslistofSdkRoutingSectionnoticeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_SectionNotice_iterator_get'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingSectionnoticeToFfi(List<SectionNotice> value) {
  final _result = _heresdkRoutingCommonBindingslistofSdkRoutingSectionnoticeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingSectionnoticeToFfi(element);
    _heresdkRoutingCommonBindingslistofSdkRoutingSectionnoticeInsert(_result, _elementHandle);
    sdkRoutingSectionnoticeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<SectionNotice> heresdkRoutingCommonBindingslistofSdkRoutingSectionnoticeFromFfi(Pointer<Void> handle) {
  final result = List<SectionNotice>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingCommonBindingslistofSdkRoutingSectionnoticeIterator(handle);
  while (_heresdkRoutingCommonBindingslistofSdkRoutingSectionnoticeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingCommonBindingslistofSdkRoutingSectionnoticeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingSectionnoticeFromFfi(_elementHandle));
    } finally {
      sdkRoutingSectionnoticeReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingCommonBindingslistofSdkRoutingSectionnoticeIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingslistofSdkRoutingSectionnoticeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingSectionnoticeReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingslistofSdkRoutingSectionnoticeReleaseHandle(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingSectionnoticeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_SectionNotice_create_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingSectionnoticeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_SectionNotice_release_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingSectionnoticeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_SectionNotice_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingSectionnoticeToFfiNullable(List<SectionNotice>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingslistofSdkRoutingSectionnoticeToFfi(value);
  final result = _heresdkRoutingCommonBindingslistofSdkRoutingSectionnoticeCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingSectionnoticeReleaseFfiHandle(_handle);
  return result;
}

List<SectionNotice>? heresdkRoutingCommonBindingslistofSdkRoutingSectionnoticeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingCommonBindingslistofSdkRoutingSectionnoticeGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingslistofSdkRoutingSectionnoticeFromFfi(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingSectionnoticeReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingSectionnoticeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingslistofSdkRoutingSectionnoticeReleaseHandleNullable(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingSegmentreferenceCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_SegmentReference_create_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingSegmentreferenceReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_SegmentReference_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingSegmentreferenceInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_SegmentReference_insert'));
final _heresdkRoutingCommonBindingslistofSdkRoutingSegmentreferenceIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_SegmentReference_iterator'));
final _heresdkRoutingCommonBindingslistofSdkRoutingSegmentreferenceIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_SegmentReference_iterator_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingSegmentreferenceIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_SegmentReference_iterator_is_valid'));
final _heresdkRoutingCommonBindingslistofSdkRoutingSegmentreferenceIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_SegmentReference_iterator_increment'));
final _heresdkRoutingCommonBindingslistofSdkRoutingSegmentreferenceIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_SegmentReference_iterator_get'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingSegmentreferenceToFfi(List<SegmentReference> value) {
  final _result = _heresdkRoutingCommonBindingslistofSdkRoutingSegmentreferenceCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingSegmentreferenceToFfi(element);
    _heresdkRoutingCommonBindingslistofSdkRoutingSegmentreferenceInsert(_result, _elementHandle);
    sdkRoutingSegmentreferenceReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<SegmentReference> heresdkRoutingCommonBindingslistofSdkRoutingSegmentreferenceFromFfi(Pointer<Void> handle) {
  final result = List<SegmentReference>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingCommonBindingslistofSdkRoutingSegmentreferenceIterator(handle);
  while (_heresdkRoutingCommonBindingslistofSdkRoutingSegmentreferenceIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingCommonBindingslistofSdkRoutingSegmentreferenceIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingSegmentreferenceFromFfi(_elementHandle));
    } finally {
      sdkRoutingSegmentreferenceReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingCommonBindingslistofSdkRoutingSegmentreferenceIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingslistofSdkRoutingSegmentreferenceIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingSegmentreferenceReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingslistofSdkRoutingSegmentreferenceReleaseHandle(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingSegmentreferenceCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_SegmentReference_create_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingSegmentreferenceReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_SegmentReference_release_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingSegmentreferenceGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_SegmentReference_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingSegmentreferenceToFfiNullable(List<SegmentReference>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingslistofSdkRoutingSegmentreferenceToFfi(value);
  final result = _heresdkRoutingCommonBindingslistofSdkRoutingSegmentreferenceCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingSegmentreferenceReleaseFfiHandle(_handle);
  return result;
}

List<SegmentReference>? heresdkRoutingCommonBindingslistofSdkRoutingSegmentreferenceFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingCommonBindingslistofSdkRoutingSegmentreferenceGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingslistofSdkRoutingSegmentreferenceFromFfi(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingSegmentreferenceReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingSegmentreferenceReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingslistofSdkRoutingSegmentreferenceReleaseHandleNullable(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingSpanCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Span_create_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingSpanReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Span_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingSpanInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Span_insert'));
final _heresdkRoutingCommonBindingslistofSdkRoutingSpanIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Span_iterator'));
final _heresdkRoutingCommonBindingslistofSdkRoutingSpanIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Span_iterator_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingSpanIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Span_iterator_is_valid'));
final _heresdkRoutingCommonBindingslistofSdkRoutingSpanIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Span_iterator_increment'));
final _heresdkRoutingCommonBindingslistofSdkRoutingSpanIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Span_iterator_get'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingSpanToFfi(List<Span> value) {
  final _result = _heresdkRoutingCommonBindingslistofSdkRoutingSpanCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingSpanToFfi(element);
    _heresdkRoutingCommonBindingslistofSdkRoutingSpanInsert(_result, _elementHandle);
    sdkRoutingSpanReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Span> heresdkRoutingCommonBindingslistofSdkRoutingSpanFromFfi(Pointer<Void> handle) {
  final result = List<Span>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingCommonBindingslistofSdkRoutingSpanIterator(handle);
  while (_heresdkRoutingCommonBindingslistofSdkRoutingSpanIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingCommonBindingslistofSdkRoutingSpanIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingSpanFromFfi(_elementHandle));
    } finally {
      sdkRoutingSpanReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingCommonBindingslistofSdkRoutingSpanIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingslistofSdkRoutingSpanIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingSpanReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingslistofSdkRoutingSpanReleaseHandle(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingSpanCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Span_create_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingSpanReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Span_release_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingSpanGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Span_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingSpanToFfiNullable(List<Span>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingslistofSdkRoutingSpanToFfi(value);
  final result = _heresdkRoutingCommonBindingslistofSdkRoutingSpanCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingSpanReleaseFfiHandle(_handle);
  return result;
}

List<Span>? heresdkRoutingCommonBindingslistofSdkRoutingSpanFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingCommonBindingslistofSdkRoutingSpanGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingslistofSdkRoutingSpanFromFfi(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingSpanReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingSpanReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingslistofSdkRoutingSpanReleaseHandleNullable(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingTollCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Toll_create_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTollReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Toll_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTollInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Toll_insert'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTollIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Toll_iterator'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTollIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Toll_iterator_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTollIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Toll_iterator_is_valid'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTollIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Toll_iterator_increment'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTollIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Toll_iterator_get'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingTollToFfi(List<Toll> value) {
  final _result = _heresdkRoutingCommonBindingslistofSdkRoutingTollCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingTollToFfi(element);
    _heresdkRoutingCommonBindingslistofSdkRoutingTollInsert(_result, _elementHandle);
    sdkRoutingTollReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Toll> heresdkRoutingCommonBindingslistofSdkRoutingTollFromFfi(Pointer<Void> handle) {
  final result = List<Toll>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingCommonBindingslistofSdkRoutingTollIterator(handle);
  while (_heresdkRoutingCommonBindingslistofSdkRoutingTollIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingCommonBindingslistofSdkRoutingTollIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingTollFromFfi(_elementHandle));
    } finally {
      sdkRoutingTollReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingCommonBindingslistofSdkRoutingTollIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingslistofSdkRoutingTollIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingTollReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingslistofSdkRoutingTollReleaseHandle(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingTollCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Toll_create_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTollReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Toll_release_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTollGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Toll_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingTollToFfiNullable(List<Toll>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingslistofSdkRoutingTollToFfi(value);
  final result = _heresdkRoutingCommonBindingslistofSdkRoutingTollCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingTollReleaseFfiHandle(_handle);
  return result;
}

List<Toll>? heresdkRoutingCommonBindingslistofSdkRoutingTollFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingCommonBindingslistofSdkRoutingTollGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingslistofSdkRoutingTollFromFfi(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingTollReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingTollReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingslistofSdkRoutingTollReleaseHandleNullable(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingTollfareCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TollFare_create_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTollfareReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TollFare_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTollfareInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TollFare_insert'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTollfareIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TollFare_iterator'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTollfareIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TollFare_iterator_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTollfareIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TollFare_iterator_is_valid'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTollfareIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TollFare_iterator_increment'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTollfareIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TollFare_iterator_get'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingTollfareToFfi(List<TollFare> value) {
  final _result = _heresdkRoutingCommonBindingslistofSdkRoutingTollfareCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingTollfareToFfi(element);
    _heresdkRoutingCommonBindingslistofSdkRoutingTollfareInsert(_result, _elementHandle);
    sdkRoutingTollfareReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<TollFare> heresdkRoutingCommonBindingslistofSdkRoutingTollfareFromFfi(Pointer<Void> handle) {
  final result = List<TollFare>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingCommonBindingslistofSdkRoutingTollfareIterator(handle);
  while (_heresdkRoutingCommonBindingslistofSdkRoutingTollfareIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingCommonBindingslistofSdkRoutingTollfareIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingTollfareFromFfi(_elementHandle));
    } finally {
      sdkRoutingTollfareReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingCommonBindingslistofSdkRoutingTollfareIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingslistofSdkRoutingTollfareIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingTollfareReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingslistofSdkRoutingTollfareReleaseHandle(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingTollfareCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TollFare_create_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTollfareReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TollFare_release_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTollfareGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TollFare_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingTollfareToFfiNullable(List<TollFare>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingslistofSdkRoutingTollfareToFfi(value);
  final result = _heresdkRoutingCommonBindingslistofSdkRoutingTollfareCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingTollfareReleaseFfiHandle(_handle);
  return result;
}

List<TollFare>? heresdkRoutingCommonBindingslistofSdkRoutingTollfareFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingCommonBindingslistofSdkRoutingTollfareGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingslistofSdkRoutingTollfareFromFfi(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingTollfareReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingTollfareReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingslistofSdkRoutingTollfareReleaseHandleNullable(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingTrafficincidentonrouteCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TrafficIncidentOnRoute_create_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTrafficincidentonrouteReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TrafficIncidentOnRoute_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTrafficincidentonrouteInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TrafficIncidentOnRoute_insert'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTrafficincidentonrouteIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TrafficIncidentOnRoute_iterator'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTrafficincidentonrouteIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TrafficIncidentOnRoute_iterator_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTrafficincidentonrouteIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TrafficIncidentOnRoute_iterator_is_valid'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTrafficincidentonrouteIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TrafficIncidentOnRoute_iterator_increment'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTrafficincidentonrouteIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TrafficIncidentOnRoute_iterator_get'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingTrafficincidentonrouteToFfi(List<TrafficIncidentOnRoute> value) {
  final _result = _heresdkRoutingCommonBindingslistofSdkRoutingTrafficincidentonrouteCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingTrafficincidentonrouteToFfi(element);
    _heresdkRoutingCommonBindingslistofSdkRoutingTrafficincidentonrouteInsert(_result, _elementHandle);
    sdkRoutingTrafficincidentonrouteReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<TrafficIncidentOnRoute> heresdkRoutingCommonBindingslistofSdkRoutingTrafficincidentonrouteFromFfi(Pointer<Void> handle) {
  final result = List<TrafficIncidentOnRoute>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingCommonBindingslistofSdkRoutingTrafficincidentonrouteIterator(handle);
  while (_heresdkRoutingCommonBindingslistofSdkRoutingTrafficincidentonrouteIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingCommonBindingslistofSdkRoutingTrafficincidentonrouteIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingTrafficincidentonrouteFromFfi(_elementHandle));
    } finally {
      sdkRoutingTrafficincidentonrouteReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingCommonBindingslistofSdkRoutingTrafficincidentonrouteIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingslistofSdkRoutingTrafficincidentonrouteIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingTrafficincidentonrouteReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingslistofSdkRoutingTrafficincidentonrouteReleaseHandle(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingTrafficincidentonrouteCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TrafficIncidentOnRoute_create_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTrafficincidentonrouteReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TrafficIncidentOnRoute_release_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTrafficincidentonrouteGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TrafficIncidentOnRoute_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingTrafficincidentonrouteToFfiNullable(List<TrafficIncidentOnRoute>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingslistofSdkRoutingTrafficincidentonrouteToFfi(value);
  final result = _heresdkRoutingCommonBindingslistofSdkRoutingTrafficincidentonrouteCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingTrafficincidentonrouteReleaseFfiHandle(_handle);
  return result;
}

List<TrafficIncidentOnRoute>? heresdkRoutingCommonBindingslistofSdkRoutingTrafficincidentonrouteFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingCommonBindingslistofSdkRoutingTrafficincidentonrouteGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingslistofSdkRoutingTrafficincidentonrouteFromFfi(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingTrafficincidentonrouteReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingTrafficincidentonrouteReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingslistofSdkRoutingTrafficincidentonrouteReleaseHandleNullable(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingTrafficspeedCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TrafficSpeed_create_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTrafficspeedReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TrafficSpeed_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTrafficspeedInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TrafficSpeed_insert'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTrafficspeedIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TrafficSpeed_iterator'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTrafficspeedIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TrafficSpeed_iterator_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTrafficspeedIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TrafficSpeed_iterator_is_valid'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTrafficspeedIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TrafficSpeed_iterator_increment'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTrafficspeedIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TrafficSpeed_iterator_get'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingTrafficspeedToFfi(List<TrafficSpeed> value) {
  final _result = _heresdkRoutingCommonBindingslistofSdkRoutingTrafficspeedCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingTrafficspeedToFfi(element);
    _heresdkRoutingCommonBindingslistofSdkRoutingTrafficspeedInsert(_result, _elementHandle);
    sdkRoutingTrafficspeedReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<TrafficSpeed> heresdkRoutingCommonBindingslistofSdkRoutingTrafficspeedFromFfi(Pointer<Void> handle) {
  final result = List<TrafficSpeed>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingCommonBindingslistofSdkRoutingTrafficspeedIterator(handle);
  while (_heresdkRoutingCommonBindingslistofSdkRoutingTrafficspeedIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingCommonBindingslistofSdkRoutingTrafficspeedIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingTrafficspeedFromFfi(_elementHandle));
    } finally {
      sdkRoutingTrafficspeedReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingCommonBindingslistofSdkRoutingTrafficspeedIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingslistofSdkRoutingTrafficspeedIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingTrafficspeedReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingslistofSdkRoutingTrafficspeedReleaseHandle(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingTrafficspeedCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TrafficSpeed_create_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTrafficspeedReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TrafficSpeed_release_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTrafficspeedGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TrafficSpeed_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingTrafficspeedToFfiNullable(List<TrafficSpeed>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingslistofSdkRoutingTrafficspeedToFfi(value);
  final result = _heresdkRoutingCommonBindingslistofSdkRoutingTrafficspeedCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingTrafficspeedReleaseFfiHandle(_handle);
  return result;
}

List<TrafficSpeed>? heresdkRoutingCommonBindingslistofSdkRoutingTrafficspeedFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingCommonBindingslistofSdkRoutingTrafficspeedGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingslistofSdkRoutingTrafficspeedFromFfi(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingTrafficspeedReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingTrafficspeedReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingslistofSdkRoutingTrafficspeedReleaseHandleNullable(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingTransitincidentCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TransitIncident_create_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTransitincidentReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TransitIncident_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTransitincidentInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TransitIncident_insert'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTransitincidentIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TransitIncident_iterator'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTransitincidentIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TransitIncident_iterator_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTransitincidentIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TransitIncident_iterator_is_valid'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTransitincidentIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TransitIncident_iterator_increment'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTransitincidentIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TransitIncident_iterator_get'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingTransitincidentToFfi(List<TransitIncident> value) {
  final _result = _heresdkRoutingCommonBindingslistofSdkRoutingTransitincidentCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingTransitincidentToFfi(element);
    _heresdkRoutingCommonBindingslistofSdkRoutingTransitincidentInsert(_result, _elementHandle);
    sdkRoutingTransitincidentReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<TransitIncident> heresdkRoutingCommonBindingslistofSdkRoutingTransitincidentFromFfi(Pointer<Void> handle) {
  final result = List<TransitIncident>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingCommonBindingslistofSdkRoutingTransitincidentIterator(handle);
  while (_heresdkRoutingCommonBindingslistofSdkRoutingTransitincidentIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingCommonBindingslistofSdkRoutingTransitincidentIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingTransitincidentFromFfi(_elementHandle));
    } finally {
      sdkRoutingTransitincidentReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingCommonBindingslistofSdkRoutingTransitincidentIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingslistofSdkRoutingTransitincidentIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingTransitincidentReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingslistofSdkRoutingTransitincidentReleaseHandle(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingTransitincidentCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TransitIncident_create_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTransitincidentReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TransitIncident_release_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTransitincidentGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TransitIncident_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingTransitincidentToFfiNullable(List<TransitIncident>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingslistofSdkRoutingTransitincidentToFfi(value);
  final result = _heresdkRoutingCommonBindingslistofSdkRoutingTransitincidentCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingTransitincidentReleaseFfiHandle(_handle);
  return result;
}

List<TransitIncident>? heresdkRoutingCommonBindingslistofSdkRoutingTransitincidentFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingCommonBindingslistofSdkRoutingTransitincidentGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingslistofSdkRoutingTransitincidentFromFfi(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingTransitincidentReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingTransitincidentReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingslistofSdkRoutingTransitincidentReleaseHandleNullable(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingTransitmodeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TransitMode_create_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTransitmodeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TransitMode_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTransitmodeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TransitMode_insert'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTransitmodeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TransitMode_iterator'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTransitmodeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TransitMode_iterator_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTransitmodeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TransitMode_iterator_is_valid'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTransitmodeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TransitMode_iterator_increment'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTransitmodeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TransitMode_iterator_get'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingTransitmodeToFfi(List<TransitMode> value) {
  final _result = _heresdkRoutingCommonBindingslistofSdkRoutingTransitmodeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingTransitmodeToFfi(element);
    _heresdkRoutingCommonBindingslistofSdkRoutingTransitmodeInsert(_result, _elementHandle);
    sdkRoutingTransitmodeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<TransitMode> heresdkRoutingCommonBindingslistofSdkRoutingTransitmodeFromFfi(Pointer<Void> handle) {
  final result = List<TransitMode>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingCommonBindingslistofSdkRoutingTransitmodeIterator(handle);
  while (_heresdkRoutingCommonBindingslistofSdkRoutingTransitmodeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingCommonBindingslistofSdkRoutingTransitmodeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingTransitmodeFromFfi(_elementHandle));
    } finally {
      sdkRoutingTransitmodeReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingCommonBindingslistofSdkRoutingTransitmodeIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingslistofSdkRoutingTransitmodeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingTransitmodeReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingslistofSdkRoutingTransitmodeReleaseHandle(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingTransitmodeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TransitMode_create_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTransitmodeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TransitMode_release_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTransitmodeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TransitMode_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingTransitmodeToFfiNullable(List<TransitMode>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingslistofSdkRoutingTransitmodeToFfi(value);
  final result = _heresdkRoutingCommonBindingslistofSdkRoutingTransitmodeCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingTransitmodeReleaseFfiHandle(_handle);
  return result;
}

List<TransitMode>? heresdkRoutingCommonBindingslistofSdkRoutingTransitmodeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingCommonBindingslistofSdkRoutingTransitmodeGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingslistofSdkRoutingTransitmodeFromFfi(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingTransitmodeReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingTransitmodeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingslistofSdkRoutingTransitmodeReleaseHandleNullable(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingTransitstopCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TransitStop_create_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTransitstopReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TransitStop_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTransitstopInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TransitStop_insert'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTransitstopIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TransitStop_iterator'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTransitstopIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TransitStop_iterator_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTransitstopIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TransitStop_iterator_is_valid'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTransitstopIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TransitStop_iterator_increment'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTransitstopIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TransitStop_iterator_get'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingTransitstopToFfi(List<TransitStop> value) {
  final _result = _heresdkRoutingCommonBindingslistofSdkRoutingTransitstopCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingTransitstopToFfi(element);
    _heresdkRoutingCommonBindingslistofSdkRoutingTransitstopInsert(_result, _elementHandle);
    sdkRoutingTransitstopReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<TransitStop> heresdkRoutingCommonBindingslistofSdkRoutingTransitstopFromFfi(Pointer<Void> handle) {
  final result = List<TransitStop>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingCommonBindingslistofSdkRoutingTransitstopIterator(handle);
  while (_heresdkRoutingCommonBindingslistofSdkRoutingTransitstopIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingCommonBindingslistofSdkRoutingTransitstopIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingTransitstopFromFfi(_elementHandle));
    } finally {
      sdkRoutingTransitstopReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingCommonBindingslistofSdkRoutingTransitstopIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingslistofSdkRoutingTransitstopIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingTransitstopReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingslistofSdkRoutingTransitstopReleaseHandle(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingTransitstopCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TransitStop_create_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTransitstopReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TransitStop_release_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingTransitstopGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_TransitStop_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingTransitstopToFfiNullable(List<TransitStop>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingslistofSdkRoutingTransitstopToFfi(value);
  final result = _heresdkRoutingCommonBindingslistofSdkRoutingTransitstopCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingTransitstopReleaseFfiHandle(_handle);
  return result;
}

List<TransitStop>? heresdkRoutingCommonBindingslistofSdkRoutingTransitstopFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingCommonBindingslistofSdkRoutingTransitstopGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingslistofSdkRoutingTransitstopFromFfi(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingTransitstopReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingTransitstopReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingslistofSdkRoutingTransitstopReleaseHandleNullable(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingWaypointCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Waypoint_create_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingWaypointReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Waypoint_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingWaypointInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Waypoint_insert'));
final _heresdkRoutingCommonBindingslistofSdkRoutingWaypointIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Waypoint_iterator'));
final _heresdkRoutingCommonBindingslistofSdkRoutingWaypointIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Waypoint_iterator_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingWaypointIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Waypoint_iterator_is_valid'));
final _heresdkRoutingCommonBindingslistofSdkRoutingWaypointIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Waypoint_iterator_increment'));
final _heresdkRoutingCommonBindingslistofSdkRoutingWaypointIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Waypoint_iterator_get'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingWaypointToFfi(List<Waypoint> value) {
  final _result = _heresdkRoutingCommonBindingslistofSdkRoutingWaypointCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingWaypointToFfi(element);
    _heresdkRoutingCommonBindingslistofSdkRoutingWaypointInsert(_result, _elementHandle);
    sdkRoutingWaypointReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Waypoint> heresdkRoutingCommonBindingslistofSdkRoutingWaypointFromFfi(Pointer<Void> handle) {
  final result = List<Waypoint>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingCommonBindingslistofSdkRoutingWaypointIterator(handle);
  while (_heresdkRoutingCommonBindingslistofSdkRoutingWaypointIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingCommonBindingslistofSdkRoutingWaypointIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingWaypointFromFfi(_elementHandle));
    } finally {
      sdkRoutingWaypointReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingCommonBindingslistofSdkRoutingWaypointIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingslistofSdkRoutingWaypointIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingWaypointReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingslistofSdkRoutingWaypointReleaseHandle(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingWaypointCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Waypoint_create_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingWaypointReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Waypoint_release_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingWaypointGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_Waypoint_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingWaypointToFfiNullable(List<Waypoint>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingslistofSdkRoutingWaypointToFfi(value);
  final result = _heresdkRoutingCommonBindingslistofSdkRoutingWaypointCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingWaypointReleaseFfiHandle(_handle);
  return result;
}

List<Waypoint>? heresdkRoutingCommonBindingslistofSdkRoutingWaypointFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingCommonBindingslistofSdkRoutingWaypointGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingslistofSdkRoutingWaypointFromFfi(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingWaypointReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingWaypointReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingslistofSdkRoutingWaypointReleaseHandleNullable(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingZonecategoryCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_ZoneCategory_create_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingZonecategoryReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_ZoneCategory_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingZonecategoryInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_ZoneCategory_insert'));
final _heresdkRoutingCommonBindingslistofSdkRoutingZonecategoryIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_ZoneCategory_iterator'));
final _heresdkRoutingCommonBindingslistofSdkRoutingZonecategoryIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_ZoneCategory_iterator_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkRoutingZonecategoryIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_ZoneCategory_iterator_is_valid'));
final _heresdkRoutingCommonBindingslistofSdkRoutingZonecategoryIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_ZoneCategory_iterator_increment'));
final _heresdkRoutingCommonBindingslistofSdkRoutingZonecategoryIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_ZoneCategory_iterator_get'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingZonecategoryToFfi(List<ZoneCategory> value) {
  final _result = _heresdkRoutingCommonBindingslistofSdkRoutingZonecategoryCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingZonecategoryToFfi(element);
    _heresdkRoutingCommonBindingslistofSdkRoutingZonecategoryInsert(_result, _elementHandle);
    sdkRoutingZonecategoryReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<ZoneCategory> heresdkRoutingCommonBindingslistofSdkRoutingZonecategoryFromFfi(Pointer<Void> handle) {
  final result = List<ZoneCategory>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingCommonBindingslistofSdkRoutingZonecategoryIterator(handle);
  while (_heresdkRoutingCommonBindingslistofSdkRoutingZonecategoryIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingCommonBindingslistofSdkRoutingZonecategoryIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingZonecategoryFromFfi(_elementHandle));
    } finally {
      sdkRoutingZonecategoryReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingCommonBindingslistofSdkRoutingZonecategoryIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingslistofSdkRoutingZonecategoryIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingZonecategoryReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingslistofSdkRoutingZonecategoryReleaseHandle(handle);

final _heresdkRoutingCommonBindingslistofSdkRoutingZonecategoryCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_ZoneCategory_create_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingZonecategoryReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_ZoneCategory_release_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkRoutingZonecategoryGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_routing_ZoneCategory_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkRoutingZonecategoryToFfiNullable(List<ZoneCategory>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingslistofSdkRoutingZonecategoryToFfi(value);
  final result = _heresdkRoutingCommonBindingslistofSdkRoutingZonecategoryCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingZonecategoryReleaseFfiHandle(_handle);
  return result;
}

List<ZoneCategory>? heresdkRoutingCommonBindingslistofSdkRoutingZonecategoryFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingCommonBindingslistofSdkRoutingZonecategoryGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingslistofSdkRoutingZonecategoryFromFfi(_handle);
  heresdkRoutingCommonBindingslistofSdkRoutingZonecategoryReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkRoutingZonecategoryReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingslistofSdkRoutingZonecategoryReleaseHandleNullable(handle);

final _heresdkRoutingCommonBindingslistofSdkTransportHazardousmaterialCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_transport_HazardousMaterial_create_handle'));
final _heresdkRoutingCommonBindingslistofSdkTransportHazardousmaterialReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_transport_HazardousMaterial_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkTransportHazardousmaterialInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_transport_HazardousMaterial_insert'));
final _heresdkRoutingCommonBindingslistofSdkTransportHazardousmaterialIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_transport_HazardousMaterial_iterator'));
final _heresdkRoutingCommonBindingslistofSdkTransportHazardousmaterialIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_transport_HazardousMaterial_iterator_release_handle'));
final _heresdkRoutingCommonBindingslistofSdkTransportHazardousmaterialIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_transport_HazardousMaterial_iterator_is_valid'));
final _heresdkRoutingCommonBindingslistofSdkTransportHazardousmaterialIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_transport_HazardousMaterial_iterator_increment'));
final _heresdkRoutingCommonBindingslistofSdkTransportHazardousmaterialIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsListOf_sdk_transport_HazardousMaterial_iterator_get'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkTransportHazardousmaterialToFfi(List<HazardousMaterial> value) {
  final _result = _heresdkRoutingCommonBindingslistofSdkTransportHazardousmaterialCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkTransportHazardousmaterialToFfi(element);
    _heresdkRoutingCommonBindingslistofSdkTransportHazardousmaterialInsert(_result, _elementHandle);
    sdkTransportHazardousmaterialReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<HazardousMaterial> heresdkRoutingCommonBindingslistofSdkTransportHazardousmaterialFromFfi(Pointer<Void> handle) {
  final result = List<HazardousMaterial>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingCommonBindingslistofSdkTransportHazardousmaterialIterator(handle);
  while (_heresdkRoutingCommonBindingslistofSdkTransportHazardousmaterialIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingCommonBindingslistofSdkTransportHazardousmaterialIteratorGet(_iteratorHandle);
    try {
      result.add(sdkTransportHazardousmaterialFromFfi(_elementHandle));
    } finally {
      sdkTransportHazardousmaterialReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingCommonBindingslistofSdkTransportHazardousmaterialIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingslistofSdkTransportHazardousmaterialIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkTransportHazardousmaterialReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingslistofSdkTransportHazardousmaterialReleaseHandle(handle);

final _heresdkRoutingCommonBindingslistofSdkTransportHazardousmaterialCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_transport_HazardousMaterial_create_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkTransportHazardousmaterialReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_transport_HazardousMaterial_release_handle_nullable'));
final _heresdkRoutingCommonBindingslistofSdkTransportHazardousmaterialGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsListOf_sdk_transport_HazardousMaterial_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingslistofSdkTransportHazardousmaterialToFfiNullable(List<HazardousMaterial>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingslistofSdkTransportHazardousmaterialToFfi(value);
  final result = _heresdkRoutingCommonBindingslistofSdkTransportHazardousmaterialCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingslistofSdkTransportHazardousmaterialReleaseFfiHandle(_handle);
  return result;
}

List<HazardousMaterial>? heresdkRoutingCommonBindingslistofSdkTransportHazardousmaterialFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingCommonBindingslistofSdkTransportHazardousmaterialGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingslistofSdkTransportHazardousmaterialFromFfi(_handle);
  heresdkRoutingCommonBindingslistofSdkTransportHazardousmaterialReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingslistofSdkTransportHazardousmaterialReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingslistofSdkTransportHazardousmaterialReleaseHandleNullable(handle);

final _heresdkRoutingCommonBindingsmapofDoubleToDoubleCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindingsMapOf_Double_to_Double_create_handle'));
final _heresdkRoutingCommonBindingsmapofDoubleToDoubleReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsMapOf_Double_to_Double_release_handle'));
final _heresdkRoutingCommonBindingsmapofDoubleToDoublePut = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Double, Double),
    void Function(Pointer<Void>, double, double)
  >('here_sdk_heresdk_routing_common_bindingsMapOf_Double_to_Double_put'));
final _heresdkRoutingCommonBindingsmapofDoubleToDoubleIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsMapOf_Double_to_Double_iterator'));
final _heresdkRoutingCommonBindingsmapofDoubleToDoubleIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsMapOf_Double_to_Double_iterator_release_handle'));
final _heresdkRoutingCommonBindingsmapofDoubleToDoubleIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsMapOf_Double_to_Double_iterator_is_valid'));
final _heresdkRoutingCommonBindingsmapofDoubleToDoubleIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsMapOf_Double_to_Double_iterator_increment'));
final _heresdkRoutingCommonBindingsmapofDoubleToDoubleIteratorGetKey = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Double Function(Pointer<Void>),
    double Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsMapOf_Double_to_Double_iterator_get_key'));
final _heresdkRoutingCommonBindingsmapofDoubleToDoubleIteratorGetValue = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Double Function(Pointer<Void>),
    double Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsMapOf_Double_to_Double_iterator_get_value'));

Pointer<Void> heresdkRoutingCommonBindingsmapofDoubleToDoubleToFfi(Map<double, double> value) {
  final _result = _heresdkRoutingCommonBindingsmapofDoubleToDoubleCreateHandle();
  for (final entry in value.entries) {
    final _keyHandle = (entry.key);
    final _valueHandle = (entry.value);
    _heresdkRoutingCommonBindingsmapofDoubleToDoublePut(_result, _keyHandle, _valueHandle);
    
    
  }
  return _result;
}

Map<double, double> heresdkRoutingCommonBindingsmapofDoubleToDoubleFromFfi(Pointer<Void> handle) {
  final result = Map<double, double>();
  final _iteratorHandle = _heresdkRoutingCommonBindingsmapofDoubleToDoubleIterator(handle);
  while (_heresdkRoutingCommonBindingsmapofDoubleToDoubleIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _keyHandle = _heresdkRoutingCommonBindingsmapofDoubleToDoubleIteratorGetKey(_iteratorHandle);
    final _valueHandle = _heresdkRoutingCommonBindingsmapofDoubleToDoubleIteratorGetValue(_iteratorHandle);
    try {
      result[(_keyHandle)] =
        (_valueHandle);
    } finally {
      
      
    }
    _heresdkRoutingCommonBindingsmapofDoubleToDoubleIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingsmapofDoubleToDoubleIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingsmapofDoubleToDoubleReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingsmapofDoubleToDoubleReleaseHandle(handle);

final _heresdkRoutingCommonBindingsmapofDoubleToDoubleCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsMapOf_Double_to_Double_create_handle_nullable'));
final _heresdkRoutingCommonBindingsmapofDoubleToDoubleReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsMapOf_Double_to_Double_release_handle_nullable'));
final _heresdkRoutingCommonBindingsmapofDoubleToDoubleGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsMapOf_Double_to_Double_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingsmapofDoubleToDoubleToFfiNullable(Map<double, double>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingsmapofDoubleToDoubleToFfi(value);
  final result = _heresdkRoutingCommonBindingsmapofDoubleToDoubleCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingsmapofDoubleToDoubleReleaseFfiHandle(_handle);
  return result;
}

Map<double, double>? heresdkRoutingCommonBindingsmapofDoubleToDoubleFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingCommonBindingsmapofDoubleToDoubleGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingsmapofDoubleToDoubleFromFfi(_handle);
  heresdkRoutingCommonBindingsmapofDoubleToDoubleReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingsmapofDoubleToDoubleReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingsmapofDoubleToDoubleReleaseHandleNullable(handle);

final _heresdkRoutingCommonBindingsmapofIntToDoubleCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindingsMapOf_Int_to_Double_create_handle'));
final _heresdkRoutingCommonBindingsmapofIntToDoubleReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsMapOf_Int_to_Double_release_handle'));
final _heresdkRoutingCommonBindingsmapofIntToDoublePut = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Int32, Double),
    void Function(Pointer<Void>, int, double)
  >('here_sdk_heresdk_routing_common_bindingsMapOf_Int_to_Double_put'));
final _heresdkRoutingCommonBindingsmapofIntToDoubleIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsMapOf_Int_to_Double_iterator'));
final _heresdkRoutingCommonBindingsmapofIntToDoubleIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsMapOf_Int_to_Double_iterator_release_handle'));
final _heresdkRoutingCommonBindingsmapofIntToDoubleIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsMapOf_Int_to_Double_iterator_is_valid'));
final _heresdkRoutingCommonBindingsmapofIntToDoubleIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsMapOf_Int_to_Double_iterator_increment'));
final _heresdkRoutingCommonBindingsmapofIntToDoubleIteratorGetKey = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsMapOf_Int_to_Double_iterator_get_key'));
final _heresdkRoutingCommonBindingsmapofIntToDoubleIteratorGetValue = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Double Function(Pointer<Void>),
    double Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsMapOf_Int_to_Double_iterator_get_value'));

Pointer<Void> heresdkRoutingCommonBindingsmapofIntToDoubleToFfi(Map<int, double> value) {
  final _result = _heresdkRoutingCommonBindingsmapofIntToDoubleCreateHandle();
  for (final entry in value.entries) {
    final _keyHandle = (entry.key);
    final _valueHandle = (entry.value);
    _heresdkRoutingCommonBindingsmapofIntToDoublePut(_result, _keyHandle, _valueHandle);
    
    
  }
  return _result;
}

Map<int, double> heresdkRoutingCommonBindingsmapofIntToDoubleFromFfi(Pointer<Void> handle) {
  final result = Map<int, double>();
  final _iteratorHandle = _heresdkRoutingCommonBindingsmapofIntToDoubleIterator(handle);
  while (_heresdkRoutingCommonBindingsmapofIntToDoubleIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _keyHandle = _heresdkRoutingCommonBindingsmapofIntToDoubleIteratorGetKey(_iteratorHandle);
    final _valueHandle = _heresdkRoutingCommonBindingsmapofIntToDoubleIteratorGetValue(_iteratorHandle);
    try {
      result[(_keyHandle)] =
        (_valueHandle);
    } finally {
      
      
    }
    _heresdkRoutingCommonBindingsmapofIntToDoubleIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingsmapofIntToDoubleIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingsmapofIntToDoubleReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingsmapofIntToDoubleReleaseHandle(handle);

final _heresdkRoutingCommonBindingsmapofIntToDoubleCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsMapOf_Int_to_Double_create_handle_nullable'));
final _heresdkRoutingCommonBindingsmapofIntToDoubleReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsMapOf_Int_to_Double_release_handle_nullable'));
final _heresdkRoutingCommonBindingsmapofIntToDoubleGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsMapOf_Int_to_Double_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingsmapofIntToDoubleToFfiNullable(Map<int, double>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingsmapofIntToDoubleToFfi(value);
  final result = _heresdkRoutingCommonBindingsmapofIntToDoubleCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingsmapofIntToDoubleReleaseFfiHandle(_handle);
  return result;
}

Map<int, double>? heresdkRoutingCommonBindingsmapofIntToDoubleFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingCommonBindingsmapofIntToDoubleGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingsmapofIntToDoubleFromFfi(_handle);
  heresdkRoutingCommonBindingsmapofIntToDoubleReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingsmapofIntToDoubleReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingsmapofIntToDoubleReleaseHandleNullable(handle);

final _heresdkRoutingCommonBindingsmapofSdkCoreEngineEnginebaseurlToStringCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_create_handle'));
final _heresdkRoutingCommonBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_release_handle'));
final _heresdkRoutingCommonBindingsmapofSdkCoreEngineEnginebaseurlToStringPut = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32, Pointer<Void>),
    void Function(Pointer<Void>, int, Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_put'));
final _heresdkRoutingCommonBindingsmapofSdkCoreEngineEnginebaseurlToStringIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_iterator'));
final _heresdkRoutingCommonBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_iterator_release_handle'));
final _heresdkRoutingCommonBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_iterator_is_valid'));
final _heresdkRoutingCommonBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_iterator_increment'));
final _heresdkRoutingCommonBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorGetKey = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_iterator_get_key'));
final _heresdkRoutingCommonBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorGetValue = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_iterator_get_value'));

Pointer<Void> heresdkRoutingCommonBindingsmapofSdkCoreEngineEnginebaseurlToStringToFfi(Map<EngineBaseURL, String> value) {
  final _result = _heresdkRoutingCommonBindingsmapofSdkCoreEngineEnginebaseurlToStringCreateHandle();
  for (final entry in value.entries) {
    final _keyHandle = sdkCoreEngineEnginebaseurlToFfi(entry.key);
    final _valueHandle = stringToFfi(entry.value);
    _heresdkRoutingCommonBindingsmapofSdkCoreEngineEnginebaseurlToStringPut(_result, _keyHandle, _valueHandle);
    sdkCoreEngineEnginebaseurlReleaseFfiHandle(_keyHandle);
    stringReleaseFfiHandle(_valueHandle);
  }
  return _result;
}

Map<EngineBaseURL, String> heresdkRoutingCommonBindingsmapofSdkCoreEngineEnginebaseurlToStringFromFfi(Pointer<Void> handle) {
  final result = Map<EngineBaseURL, String>();
  final _iteratorHandle = _heresdkRoutingCommonBindingsmapofSdkCoreEngineEnginebaseurlToStringIterator(handle);
  while (_heresdkRoutingCommonBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _keyHandle = _heresdkRoutingCommonBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorGetKey(_iteratorHandle);
    final _valueHandle = _heresdkRoutingCommonBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorGetValue(_iteratorHandle);
    try {
      result[sdkCoreEngineEnginebaseurlFromFfi(_keyHandle)] =
        stringFromFfi(_valueHandle);
    } finally {
      sdkCoreEngineEnginebaseurlReleaseFfiHandle(_keyHandle);
      stringReleaseFfiHandle(_valueHandle);
    }
    _heresdkRoutingCommonBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseHandle(handle);

final _heresdkRoutingCommonBindingsmapofSdkCoreEngineEnginebaseurlToStringCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_create_handle_nullable'));
final _heresdkRoutingCommonBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_release_handle_nullable'));
final _heresdkRoutingCommonBindingsmapofSdkCoreEngineEnginebaseurlToStringGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingsmapofSdkCoreEngineEnginebaseurlToStringToFfiNullable(Map<EngineBaseURL, String>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingsmapofSdkCoreEngineEnginebaseurlToStringToFfi(value);
  final result = _heresdkRoutingCommonBindingsmapofSdkCoreEngineEnginebaseurlToStringCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseFfiHandle(_handle);
  return result;
}

Map<EngineBaseURL, String>? heresdkRoutingCommonBindingsmapofSdkCoreEngineEnginebaseurlToStringFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingCommonBindingsmapofSdkCoreEngineEnginebaseurlToStringGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingsmapofSdkCoreEngineEnginebaseurlToStringFromFfi(_handle);
  heresdkRoutingCommonBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseHandleNullable(handle);


// Copyright (c) 2018-2022 HERE Global B.V. and its affiliate(s).
// All rights reserved.
//
// This software and other materials contain proprietary information
// controlled by HERE and are protected by applicable copyright legislation.
// Any use and utilization of this software and other materials and
// disclosure to any third parties is conditional upon having a separate
// agreement with HERE for the access, use, utilization or disclosure of this
// software. In the absence of such agreement, the use of the software is not
// allowed.
//








































final _heresdkRoutingIsolineBindingslistofIntCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_Int_create_handle'));
final _heresdkRoutingIsolineBindingslistofIntReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_Int_release_handle'));
final _heresdkRoutingIsolineBindingslistofIntInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Int32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_Int_insert'));
final _heresdkRoutingIsolineBindingslistofIntIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_Int_iterator'));
final _heresdkRoutingIsolineBindingslistofIntIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_Int_iterator_release_handle'));
final _heresdkRoutingIsolineBindingslistofIntIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_Int_iterator_is_valid'));
final _heresdkRoutingIsolineBindingslistofIntIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_Int_iterator_increment'));
final _heresdkRoutingIsolineBindingslistofIntIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_Int_iterator_get'));

Pointer<Void> heresdkRoutingIsolineBindingslistofIntToFfi(List<int> value) {
  final _result = _heresdkRoutingIsolineBindingslistofIntCreateHandle();
  for (final element in value) {
    final _elementHandle = (element);
    _heresdkRoutingIsolineBindingslistofIntInsert(_result, _elementHandle);
    
  }
  return _result;
}

List<int> heresdkRoutingIsolineBindingslistofIntFromFfi(Pointer<Void> handle) {
  final result = List<int>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingIsolineBindingslistofIntIterator(handle);
  while (_heresdkRoutingIsolineBindingslistofIntIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingIsolineBindingslistofIntIteratorGet(_iteratorHandle);
    try {
      result.add((_elementHandle));
    } finally {
      
    }
    _heresdkRoutingIsolineBindingslistofIntIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingslistofIntIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingslistofIntReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingslistofIntReleaseHandle(handle);

final _heresdkRoutingIsolineBindingslistofIntCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_Int_create_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofIntReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_Int_release_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofIntGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_Int_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingslistofIntToFfiNullable(List<int>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingslistofIntToFfi(value);
  final result = _heresdkRoutingIsolineBindingslistofIntCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingslistofIntReleaseFfiHandle(_handle);
  return result;
}

List<int>? heresdkRoutingIsolineBindingslistofIntFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingIsolineBindingslistofIntGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingslistofIntFromFfi(_handle);
  heresdkRoutingIsolineBindingslistofIntReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingslistofIntReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingslistofIntReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingslistofLocaleCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_Locale_create_handle'));
final _heresdkRoutingIsolineBindingslistofLocaleReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_Locale_release_handle'));
final _heresdkRoutingIsolineBindingslistofLocaleInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_Locale_insert'));
final _heresdkRoutingIsolineBindingslistofLocaleIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_Locale_iterator'));
final _heresdkRoutingIsolineBindingslistofLocaleIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_Locale_iterator_release_handle'));
final _heresdkRoutingIsolineBindingslistofLocaleIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_Locale_iterator_is_valid'));
final _heresdkRoutingIsolineBindingslistofLocaleIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_Locale_iterator_increment'));
final _heresdkRoutingIsolineBindingslistofLocaleIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_Locale_iterator_get'));

Pointer<Void> heresdkRoutingIsolineBindingslistofLocaleToFfi(List<Locale> value) {
  final _result = _heresdkRoutingIsolineBindingslistofLocaleCreateHandle();
  for (final element in value) {
    final _elementHandle = localeToFfi(element);
    _heresdkRoutingIsolineBindingslistofLocaleInsert(_result, _elementHandle);
    localeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Locale> heresdkRoutingIsolineBindingslistofLocaleFromFfi(Pointer<Void> handle) {
  final result = List<Locale>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingIsolineBindingslistofLocaleIterator(handle);
  while (_heresdkRoutingIsolineBindingslistofLocaleIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingIsolineBindingslistofLocaleIteratorGet(_iteratorHandle);
    try {
      result.add(localeFromFfi(_elementHandle));
    } finally {
      localeReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingIsolineBindingslistofLocaleIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingslistofLocaleIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingslistofLocaleReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingslistofLocaleReleaseHandle(handle);

final _heresdkRoutingIsolineBindingslistofLocaleCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_Locale_create_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofLocaleReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_Locale_release_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofLocaleGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_Locale_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingslistofLocaleToFfiNullable(List<Locale>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingslistofLocaleToFfi(value);
  final result = _heresdkRoutingIsolineBindingslistofLocaleCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingslistofLocaleReleaseFfiHandle(_handle);
  return result;
}

List<Locale>? heresdkRoutingIsolineBindingslistofLocaleFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingIsolineBindingslistofLocaleGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingslistofLocaleFromFfi(_handle);
  heresdkRoutingIsolineBindingslistofLocaleReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingslistofLocaleReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingslistofLocaleReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingslistofSdkCoreCountrycodeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_CountryCode_create_handle'));
final _heresdkRoutingIsolineBindingslistofSdkCoreCountrycodeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_CountryCode_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkCoreCountrycodeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_CountryCode_insert'));
final _heresdkRoutingIsolineBindingslistofSdkCoreCountrycodeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_CountryCode_iterator'));
final _heresdkRoutingIsolineBindingslistofSdkCoreCountrycodeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_CountryCode_iterator_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkCoreCountrycodeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_CountryCode_iterator_is_valid'));
final _heresdkRoutingIsolineBindingslistofSdkCoreCountrycodeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_CountryCode_iterator_increment'));
final _heresdkRoutingIsolineBindingslistofSdkCoreCountrycodeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_CountryCode_iterator_get'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkCoreCountrycodeToFfi(List<CountryCode> value) {
  final _result = _heresdkRoutingIsolineBindingslistofSdkCoreCountrycodeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreCountrycodeToFfi(element);
    _heresdkRoutingIsolineBindingslistofSdkCoreCountrycodeInsert(_result, _elementHandle);
    sdkCoreCountrycodeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<CountryCode> heresdkRoutingIsolineBindingslistofSdkCoreCountrycodeFromFfi(Pointer<Void> handle) {
  final result = List<CountryCode>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingIsolineBindingslistofSdkCoreCountrycodeIterator(handle);
  while (_heresdkRoutingIsolineBindingslistofSdkCoreCountrycodeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingIsolineBindingslistofSdkCoreCountrycodeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreCountrycodeFromFfi(_elementHandle));
    } finally {
      sdkCoreCountrycodeReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingIsolineBindingslistofSdkCoreCountrycodeIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingslistofSdkCoreCountrycodeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkCoreCountrycodeReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingslistofSdkCoreCountrycodeReleaseHandle(handle);

final _heresdkRoutingIsolineBindingslistofSdkCoreCountrycodeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_CountryCode_create_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkCoreCountrycodeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_CountryCode_release_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkCoreCountrycodeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_CountryCode_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkCoreCountrycodeToFfiNullable(List<CountryCode>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingslistofSdkCoreCountrycodeToFfi(value);
  final result = _heresdkRoutingIsolineBindingslistofSdkCoreCountrycodeCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingslistofSdkCoreCountrycodeReleaseFfiHandle(_handle);
  return result;
}

List<CountryCode>? heresdkRoutingIsolineBindingslistofSdkCoreCountrycodeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingIsolineBindingslistofSdkCoreCountrycodeGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingslistofSdkCoreCountrycodeFromFfi(_handle);
  heresdkRoutingIsolineBindingslistofSdkCoreCountrycodeReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkCoreCountrycodeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingslistofSdkCoreCountrycodeReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingslistofSdkCoreGeoboxCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_GeoBox_create_handle'));
final _heresdkRoutingIsolineBindingslistofSdkCoreGeoboxReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_GeoBox_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkCoreGeoboxInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_GeoBox_insert'));
final _heresdkRoutingIsolineBindingslistofSdkCoreGeoboxIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_GeoBox_iterator'));
final _heresdkRoutingIsolineBindingslistofSdkCoreGeoboxIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_GeoBox_iterator_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkCoreGeoboxIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_GeoBox_iterator_is_valid'));
final _heresdkRoutingIsolineBindingslistofSdkCoreGeoboxIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_GeoBox_iterator_increment'));
final _heresdkRoutingIsolineBindingslistofSdkCoreGeoboxIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_GeoBox_iterator_get'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkCoreGeoboxToFfi(List<GeoBox> value) {
  final _result = _heresdkRoutingIsolineBindingslistofSdkCoreGeoboxCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreGeoboxToFfi(element);
    _heresdkRoutingIsolineBindingslistofSdkCoreGeoboxInsert(_result, _elementHandle);
    sdkCoreGeoboxReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoBox> heresdkRoutingIsolineBindingslistofSdkCoreGeoboxFromFfi(Pointer<Void> handle) {
  final result = List<GeoBox>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingIsolineBindingslistofSdkCoreGeoboxIterator(handle);
  while (_heresdkRoutingIsolineBindingslistofSdkCoreGeoboxIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingIsolineBindingslistofSdkCoreGeoboxIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreGeoboxFromFfi(_elementHandle));
    } finally {
      sdkCoreGeoboxReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingIsolineBindingslistofSdkCoreGeoboxIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingslistofSdkCoreGeoboxIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkCoreGeoboxReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingslistofSdkCoreGeoboxReleaseHandle(handle);

final _heresdkRoutingIsolineBindingslistofSdkCoreGeoboxCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_GeoBox_create_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkCoreGeoboxReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_GeoBox_release_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkCoreGeoboxGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_GeoBox_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkCoreGeoboxToFfiNullable(List<GeoBox>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingslistofSdkCoreGeoboxToFfi(value);
  final result = _heresdkRoutingIsolineBindingslistofSdkCoreGeoboxCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingslistofSdkCoreGeoboxReleaseFfiHandle(_handle);
  return result;
}

List<GeoBox>? heresdkRoutingIsolineBindingslistofSdkCoreGeoboxFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingIsolineBindingslistofSdkCoreGeoboxGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingslistofSdkCoreGeoboxFromFfi(_handle);
  heresdkRoutingIsolineBindingslistofSdkCoreGeoboxReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkCoreGeoboxReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingslistofSdkCoreGeoboxReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingslistofSdkCoreGeocoordinatesCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_GeoCoordinates_create_handle'));
final _heresdkRoutingIsolineBindingslistofSdkCoreGeocoordinatesReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_GeoCoordinates_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkCoreGeocoordinatesInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_GeoCoordinates_insert'));
final _heresdkRoutingIsolineBindingslistofSdkCoreGeocoordinatesIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_GeoCoordinates_iterator'));
final _heresdkRoutingIsolineBindingslistofSdkCoreGeocoordinatesIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_GeoCoordinates_iterator_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkCoreGeocoordinatesIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_GeoCoordinates_iterator_is_valid'));
final _heresdkRoutingIsolineBindingslistofSdkCoreGeocoordinatesIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_GeoCoordinates_iterator_increment'));
final _heresdkRoutingIsolineBindingslistofSdkCoreGeocoordinatesIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_GeoCoordinates_iterator_get'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkCoreGeocoordinatesToFfi(List<GeoCoordinates> value) {
  final _result = _heresdkRoutingIsolineBindingslistofSdkCoreGeocoordinatesCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreGeocoordinatesToFfi(element);
    _heresdkRoutingIsolineBindingslistofSdkCoreGeocoordinatesInsert(_result, _elementHandle);
    sdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoCoordinates> heresdkRoutingIsolineBindingslistofSdkCoreGeocoordinatesFromFfi(Pointer<Void> handle) {
  final result = List<GeoCoordinates>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingIsolineBindingslistofSdkCoreGeocoordinatesIterator(handle);
  while (_heresdkRoutingIsolineBindingslistofSdkCoreGeocoordinatesIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingIsolineBindingslistofSdkCoreGeocoordinatesIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreGeocoordinatesFromFfi(_elementHandle));
    } finally {
      sdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingIsolineBindingslistofSdkCoreGeocoordinatesIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingslistofSdkCoreGeocoordinatesIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingslistofSdkCoreGeocoordinatesReleaseHandle(handle);

final _heresdkRoutingIsolineBindingslistofSdkCoreGeocoordinatesCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_GeoCoordinates_create_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkCoreGeocoordinatesReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_GeoCoordinates_release_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkCoreGeocoordinatesGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_GeoCoordinates_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkCoreGeocoordinatesToFfiNullable(List<GeoCoordinates>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingslistofSdkCoreGeocoordinatesToFfi(value);
  final result = _heresdkRoutingIsolineBindingslistofSdkCoreGeocoordinatesCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

List<GeoCoordinates>? heresdkRoutingIsolineBindingslistofSdkCoreGeocoordinatesFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingIsolineBindingslistofSdkCoreGeocoordinatesGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingslistofSdkCoreGeocoordinatesFromFfi(_handle);
  heresdkRoutingIsolineBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkCoreGeocoordinatesReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingslistofSdkCoreGeocoordinatesReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingslistofSdkCoreGeopolygonCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_GeoPolygon_create_handle'));
final _heresdkRoutingIsolineBindingslistofSdkCoreGeopolygonReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_GeoPolygon_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkCoreGeopolygonInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_GeoPolygon_insert'));
final _heresdkRoutingIsolineBindingslistofSdkCoreGeopolygonIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_GeoPolygon_iterator'));
final _heresdkRoutingIsolineBindingslistofSdkCoreGeopolygonIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_GeoPolygon_iterator_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkCoreGeopolygonIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_GeoPolygon_iterator_is_valid'));
final _heresdkRoutingIsolineBindingslistofSdkCoreGeopolygonIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_GeoPolygon_iterator_increment'));
final _heresdkRoutingIsolineBindingslistofSdkCoreGeopolygonIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_GeoPolygon_iterator_get'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkCoreGeopolygonToFfi(List<GeoPolygon> value) {
  final _result = _heresdkRoutingIsolineBindingslistofSdkCoreGeopolygonCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreGeopolygonToFfi(element);
    _heresdkRoutingIsolineBindingslistofSdkCoreGeopolygonInsert(_result, _elementHandle);
    sdkCoreGeopolygonReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoPolygon> heresdkRoutingIsolineBindingslistofSdkCoreGeopolygonFromFfi(Pointer<Void> handle) {
  final result = List<GeoPolygon>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingIsolineBindingslistofSdkCoreGeopolygonIterator(handle);
  while (_heresdkRoutingIsolineBindingslistofSdkCoreGeopolygonIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingIsolineBindingslistofSdkCoreGeopolygonIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreGeopolygonFromFfi(_elementHandle));
    } finally {
      sdkCoreGeopolygonReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingIsolineBindingslistofSdkCoreGeopolygonIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingslistofSdkCoreGeopolygonIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkCoreGeopolygonReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingslistofSdkCoreGeopolygonReleaseHandle(handle);

final _heresdkRoutingIsolineBindingslistofSdkCoreGeopolygonCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_GeoPolygon_create_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkCoreGeopolygonReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_GeoPolygon_release_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkCoreGeopolygonGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_GeoPolygon_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkCoreGeopolygonToFfiNullable(List<GeoPolygon>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingslistofSdkCoreGeopolygonToFfi(value);
  final result = _heresdkRoutingIsolineBindingslistofSdkCoreGeopolygonCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingslistofSdkCoreGeopolygonReleaseFfiHandle(_handle);
  return result;
}

List<GeoPolygon>? heresdkRoutingIsolineBindingslistofSdkCoreGeopolygonFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingIsolineBindingslistofSdkCoreGeopolygonGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingslistofSdkCoreGeopolygonFromFfi(_handle);
  heresdkRoutingIsolineBindingslistofSdkCoreGeopolygonReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkCoreGeopolygonReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingslistofSdkCoreGeopolygonReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingslistofSdkCoreLocalizedtextCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_LocalizedText_create_handle'));
final _heresdkRoutingIsolineBindingslistofSdkCoreLocalizedtextReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_LocalizedText_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkCoreLocalizedtextInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_LocalizedText_insert'));
final _heresdkRoutingIsolineBindingslistofSdkCoreLocalizedtextIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_LocalizedText_iterator'));
final _heresdkRoutingIsolineBindingslistofSdkCoreLocalizedtextIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_LocalizedText_iterator_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkCoreLocalizedtextIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_LocalizedText_iterator_is_valid'));
final _heresdkRoutingIsolineBindingslistofSdkCoreLocalizedtextIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_LocalizedText_iterator_increment'));
final _heresdkRoutingIsolineBindingslistofSdkCoreLocalizedtextIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_LocalizedText_iterator_get'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkCoreLocalizedtextToFfi(List<LocalizedText> value) {
  final _result = _heresdkRoutingIsolineBindingslistofSdkCoreLocalizedtextCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreLocalizedtextToFfi(element);
    _heresdkRoutingIsolineBindingslistofSdkCoreLocalizedtextInsert(_result, _elementHandle);
    sdkCoreLocalizedtextReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<LocalizedText> heresdkRoutingIsolineBindingslistofSdkCoreLocalizedtextFromFfi(Pointer<Void> handle) {
  final result = List<LocalizedText>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingIsolineBindingslistofSdkCoreLocalizedtextIterator(handle);
  while (_heresdkRoutingIsolineBindingslistofSdkCoreLocalizedtextIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingIsolineBindingslistofSdkCoreLocalizedtextIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreLocalizedtextFromFfi(_elementHandle));
    } finally {
      sdkCoreLocalizedtextReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingIsolineBindingslistofSdkCoreLocalizedtextIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingslistofSdkCoreLocalizedtextIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkCoreLocalizedtextReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingslistofSdkCoreLocalizedtextReleaseHandle(handle);

final _heresdkRoutingIsolineBindingslistofSdkCoreLocalizedtextCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_LocalizedText_create_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkCoreLocalizedtextReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_LocalizedText_release_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkCoreLocalizedtextGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_LocalizedText_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkCoreLocalizedtextToFfiNullable(List<LocalizedText>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingslistofSdkCoreLocalizedtextToFfi(value);
  final result = _heresdkRoutingIsolineBindingslistofSdkCoreLocalizedtextCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingslistofSdkCoreLocalizedtextReleaseFfiHandle(_handle);
  return result;
}

List<LocalizedText>? heresdkRoutingIsolineBindingslistofSdkCoreLocalizedtextFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingIsolineBindingslistofSdkCoreLocalizedtextGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingslistofSdkCoreLocalizedtextFromFfi(_handle);
  heresdkRoutingIsolineBindingslistofSdkCoreLocalizedtextReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkCoreLocalizedtextReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingslistofSdkCoreLocalizedtextReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingslistofSdkCoreEngineLayerconfigurationFeatureCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_create_handle'));
final _heresdkRoutingIsolineBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkCoreEngineLayerconfigurationFeatureInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_insert'));
final _heresdkRoutingIsolineBindingslistofSdkCoreEngineLayerconfigurationFeatureIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator'));
final _heresdkRoutingIsolineBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator_is_valid'));
final _heresdkRoutingIsolineBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator_increment'));
final _heresdkRoutingIsolineBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator_get'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkCoreEngineLayerconfigurationFeatureToFfi(List<LayerConfigurationFeature> value) {
  final _result = _heresdkRoutingIsolineBindingslistofSdkCoreEngineLayerconfigurationFeatureCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreEngineLayerconfigurationFeatureToFfi(element);
    _heresdkRoutingIsolineBindingslistofSdkCoreEngineLayerconfigurationFeatureInsert(_result, _elementHandle);
    sdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<LayerConfigurationFeature> heresdkRoutingIsolineBindingslistofSdkCoreEngineLayerconfigurationFeatureFromFfi(Pointer<Void> handle) {
  final result = List<LayerConfigurationFeature>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingIsolineBindingslistofSdkCoreEngineLayerconfigurationFeatureIterator(handle);
  while (_heresdkRoutingIsolineBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingIsolineBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreEngineLayerconfigurationFeatureFromFfi(_elementHandle));
    } finally {
      sdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingIsolineBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseHandle(handle);

final _heresdkRoutingIsolineBindingslistofSdkCoreEngineLayerconfigurationFeatureCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_create_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_release_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkCoreEngineLayerconfigurationFeatureGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkCoreEngineLayerconfigurationFeatureToFfiNullable(List<LayerConfigurationFeature>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingslistofSdkCoreEngineLayerconfigurationFeatureToFfi(value);
  final result = _heresdkRoutingIsolineBindingslistofSdkCoreEngineLayerconfigurationFeatureCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(_handle);
  return result;
}

List<LayerConfigurationFeature>? heresdkRoutingIsolineBindingslistofSdkCoreEngineLayerconfigurationFeatureFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingIsolineBindingslistofSdkCoreEngineLayerconfigurationFeatureGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingslistofSdkCoreEngineLayerconfigurationFeatureFromFfi(_handle);
  heresdkRoutingIsolineBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingAttributionCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Attribution_create_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingAttributionReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Attribution_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingAttributionInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Attribution_insert'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingAttributionIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Attribution_iterator'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingAttributionIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Attribution_iterator_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingAttributionIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Attribution_iterator_is_valid'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingAttributionIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Attribution_iterator_increment'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingAttributionIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Attribution_iterator_get'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingAttributionToFfi(List<Attribution> value) {
  final _result = _heresdkRoutingIsolineBindingslistofSdkRoutingAttributionCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingAttributionToFfi(element);
    _heresdkRoutingIsolineBindingslistofSdkRoutingAttributionInsert(_result, _elementHandle);
    sdkRoutingAttributionReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Attribution> heresdkRoutingIsolineBindingslistofSdkRoutingAttributionFromFfi(Pointer<Void> handle) {
  final result = List<Attribution>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingAttributionIterator(handle);
  while (_heresdkRoutingIsolineBindingslistofSdkRoutingAttributionIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingAttributionIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingAttributionFromFfi(_elementHandle));
    } finally {
      sdkRoutingAttributionReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingIsolineBindingslistofSdkRoutingAttributionIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingslistofSdkRoutingAttributionIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingAttributionReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingslistofSdkRoutingAttributionReleaseHandle(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingAttributionCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Attribution_create_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingAttributionReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Attribution_release_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingAttributionGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Attribution_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingAttributionToFfiNullable(List<Attribution>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingslistofSdkRoutingAttributionToFfi(value);
  final result = _heresdkRoutingIsolineBindingslistofSdkRoutingAttributionCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingAttributionReleaseFfiHandle(_handle);
  return result;
}

List<Attribution>? heresdkRoutingIsolineBindingslistofSdkRoutingAttributionFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingIsolineBindingslistofSdkRoutingAttributionGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingslistofSdkRoutingAttributionFromFfi(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingAttributionReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingAttributionReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingslistofSdkRoutingAttributionReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingChargingconnectortypeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_ChargingConnectorType_create_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingChargingconnectortypeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_ChargingConnectorType_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingChargingconnectortypeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_ChargingConnectorType_insert'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingChargingconnectortypeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_ChargingConnectorType_iterator'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingChargingconnectortypeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_ChargingConnectorType_iterator_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingChargingconnectortypeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_ChargingConnectorType_iterator_is_valid'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingChargingconnectortypeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_ChargingConnectorType_iterator_increment'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingChargingconnectortypeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_ChargingConnectorType_iterator_get'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingChargingconnectortypeToFfi(List<ChargingConnectorType> value) {
  final _result = _heresdkRoutingIsolineBindingslistofSdkRoutingChargingconnectortypeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingChargingconnectortypeToFfi(element);
    _heresdkRoutingIsolineBindingslistofSdkRoutingChargingconnectortypeInsert(_result, _elementHandle);
    sdkRoutingChargingconnectortypeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<ChargingConnectorType> heresdkRoutingIsolineBindingslistofSdkRoutingChargingconnectortypeFromFfi(Pointer<Void> handle) {
  final result = List<ChargingConnectorType>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingChargingconnectortypeIterator(handle);
  while (_heresdkRoutingIsolineBindingslistofSdkRoutingChargingconnectortypeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingChargingconnectortypeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingChargingconnectortypeFromFfi(_elementHandle));
    } finally {
      sdkRoutingChargingconnectortypeReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingIsolineBindingslistofSdkRoutingChargingconnectortypeIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingslistofSdkRoutingChargingconnectortypeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingChargingconnectortypeReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingslistofSdkRoutingChargingconnectortypeReleaseHandle(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingChargingconnectortypeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_ChargingConnectorType_create_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingChargingconnectortypeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_ChargingConnectorType_release_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingChargingconnectortypeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_ChargingConnectorType_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingChargingconnectortypeToFfiNullable(List<ChargingConnectorType>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingslistofSdkRoutingChargingconnectortypeToFfi(value);
  final result = _heresdkRoutingIsolineBindingslistofSdkRoutingChargingconnectortypeCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingChargingconnectortypeReleaseFfiHandle(_handle);
  return result;
}

List<ChargingConnectorType>? heresdkRoutingIsolineBindingslistofSdkRoutingChargingconnectortypeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingIsolineBindingslistofSdkRoutingChargingconnectortypeGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingslistofSdkRoutingChargingconnectortypeFromFfi(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingChargingconnectortypeReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingChargingconnectortypeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingslistofSdkRoutingChargingconnectortypeReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingFareCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Fare_create_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingFareReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Fare_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingFareInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Fare_insert'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingFareIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Fare_iterator'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingFareIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Fare_iterator_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingFareIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Fare_iterator_is_valid'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingFareIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Fare_iterator_increment'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingFareIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Fare_iterator_get'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingFareToFfi(List<Fare> value) {
  final _result = _heresdkRoutingIsolineBindingslistofSdkRoutingFareCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingFareToFfi(element);
    _heresdkRoutingIsolineBindingslistofSdkRoutingFareInsert(_result, _elementHandle);
    sdkRoutingFareReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Fare> heresdkRoutingIsolineBindingslistofSdkRoutingFareFromFfi(Pointer<Void> handle) {
  final result = List<Fare>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingFareIterator(handle);
  while (_heresdkRoutingIsolineBindingslistofSdkRoutingFareIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingFareIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingFareFromFfi(_elementHandle));
    } finally {
      sdkRoutingFareReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingIsolineBindingslistofSdkRoutingFareIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingslistofSdkRoutingFareIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingFareReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingslistofSdkRoutingFareReleaseHandle(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingFareCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Fare_create_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingFareReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Fare_release_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingFareGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Fare_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingFareToFfiNullable(List<Fare>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingslistofSdkRoutingFareToFfi(value);
  final result = _heresdkRoutingIsolineBindingslistofSdkRoutingFareCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingFareReleaseFfiHandle(_handle);
  return result;
}

List<Fare>? heresdkRoutingIsolineBindingslistofSdkRoutingFareFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingIsolineBindingslistofSdkRoutingFareGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingslistofSdkRoutingFareFromFfi(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingFareReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingFareReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingslistofSdkRoutingFareReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingHazardousgoodCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_HazardousGood_create_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingHazardousgoodReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_HazardousGood_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingHazardousgoodInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_HazardousGood_insert'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingHazardousgoodIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_HazardousGood_iterator'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingHazardousgoodIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_HazardousGood_iterator_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingHazardousgoodIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_HazardousGood_iterator_is_valid'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingHazardousgoodIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_HazardousGood_iterator_increment'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingHazardousgoodIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_HazardousGood_iterator_get'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingHazardousgoodToFfi(List<HazardousGood> value) {
  final _result = _heresdkRoutingIsolineBindingslistofSdkRoutingHazardousgoodCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingHazardousgoodToFfi(element);
    _heresdkRoutingIsolineBindingslistofSdkRoutingHazardousgoodInsert(_result, _elementHandle);
    sdkRoutingHazardousgoodReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<HazardousGood> heresdkRoutingIsolineBindingslistofSdkRoutingHazardousgoodFromFfi(Pointer<Void> handle) {
  final result = List<HazardousGood>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingHazardousgoodIterator(handle);
  while (_heresdkRoutingIsolineBindingslistofSdkRoutingHazardousgoodIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingHazardousgoodIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingHazardousgoodFromFfi(_elementHandle));
    } finally {
      sdkRoutingHazardousgoodReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingIsolineBindingslistofSdkRoutingHazardousgoodIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingslistofSdkRoutingHazardousgoodIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingHazardousgoodReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingslistofSdkRoutingHazardousgoodReleaseHandle(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingHazardousgoodCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_HazardousGood_create_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingHazardousgoodReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_HazardousGood_release_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingHazardousgoodGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_HazardousGood_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingHazardousgoodToFfiNullable(List<HazardousGood>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingslistofSdkRoutingHazardousgoodToFfi(value);
  final result = _heresdkRoutingIsolineBindingslistofSdkRoutingHazardousgoodCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingHazardousgoodReleaseFfiHandle(_handle);
  return result;
}

List<HazardousGood>? heresdkRoutingIsolineBindingslistofSdkRoutingHazardousgoodFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingIsolineBindingslistofSdkRoutingHazardousgoodGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingslistofSdkRoutingHazardousgoodFromFfi(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingHazardousgoodReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingHazardousgoodReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingslistofSdkRoutingHazardousgoodReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingIsolineCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Isoline_create_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingIsolineReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Isoline_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingIsolineInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Isoline_insert'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingIsolineIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Isoline_iterator'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingIsolineIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Isoline_iterator_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingIsolineIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Isoline_iterator_is_valid'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingIsolineIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Isoline_iterator_increment'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingIsolineIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Isoline_iterator_get'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingIsolineToFfi(List<Isoline> value) {
  final _result = _heresdkRoutingIsolineBindingslistofSdkRoutingIsolineCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingIsolineToFfi(element);
    _heresdkRoutingIsolineBindingslistofSdkRoutingIsolineInsert(_result, _elementHandle);
    sdkRoutingIsolineReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Isoline> heresdkRoutingIsolineBindingslistofSdkRoutingIsolineFromFfi(Pointer<Void> handle) {
  final result = List<Isoline>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingIsolineIterator(handle);
  while (_heresdkRoutingIsolineBindingslistofSdkRoutingIsolineIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingIsolineIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingIsolineFromFfi(_elementHandle));
    } finally {
      sdkRoutingIsolineReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingIsolineBindingslistofSdkRoutingIsolineIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingslistofSdkRoutingIsolineIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingIsolineReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingslistofSdkRoutingIsolineReleaseHandle(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingIsolineCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Isoline_create_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingIsolineReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Isoline_release_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingIsolineGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Isoline_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingIsolineToFfiNullable(List<Isoline>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingslistofSdkRoutingIsolineToFfi(value);
  final result = _heresdkRoutingIsolineBindingslistofSdkRoutingIsolineCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingIsolineReleaseFfiHandle(_handle);
  return result;
}

List<Isoline>? heresdkRoutingIsolineBindingslistofSdkRoutingIsolineFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingIsolineBindingslistofSdkRoutingIsolineGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingslistofSdkRoutingIsolineFromFfi(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingIsolineReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingIsolineReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingslistofSdkRoutingIsolineReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingManeuverCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Maneuver_create_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingManeuverReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Maneuver_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingManeuverInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Maneuver_insert'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingManeuverIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Maneuver_iterator'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingManeuverIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Maneuver_iterator_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingManeuverIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Maneuver_iterator_is_valid'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingManeuverIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Maneuver_iterator_increment'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingManeuverIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Maneuver_iterator_get'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingManeuverToFfi(List<Maneuver> value) {
  final _result = _heresdkRoutingIsolineBindingslistofSdkRoutingManeuverCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingManeuverToFfi(element);
    _heresdkRoutingIsolineBindingslistofSdkRoutingManeuverInsert(_result, _elementHandle);
    sdkRoutingManeuverReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Maneuver> heresdkRoutingIsolineBindingslistofSdkRoutingManeuverFromFfi(Pointer<Void> handle) {
  final result = List<Maneuver>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingManeuverIterator(handle);
  while (_heresdkRoutingIsolineBindingslistofSdkRoutingManeuverIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingManeuverIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingManeuverFromFfi(_elementHandle));
    } finally {
      sdkRoutingManeuverReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingIsolineBindingslistofSdkRoutingManeuverIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingslistofSdkRoutingManeuverIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingManeuverReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingslistofSdkRoutingManeuverReleaseHandle(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingManeuverCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Maneuver_create_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingManeuverReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Maneuver_release_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingManeuverGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Maneuver_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingManeuverToFfiNullable(List<Maneuver>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingslistofSdkRoutingManeuverToFfi(value);
  final result = _heresdkRoutingIsolineBindingslistofSdkRoutingManeuverCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingManeuverReleaseFfiHandle(_handle);
  return result;
}

List<Maneuver>? heresdkRoutingIsolineBindingslistofSdkRoutingManeuverFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingIsolineBindingslistofSdkRoutingManeuverGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingslistofSdkRoutingManeuverFromFfi(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingManeuverReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingManeuverReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingslistofSdkRoutingManeuverReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingPaymentmethodCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_PaymentMethod_create_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingPaymentmethodReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_PaymentMethod_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingPaymentmethodInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_PaymentMethod_insert'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingPaymentmethodIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_PaymentMethod_iterator'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingPaymentmethodIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_PaymentMethod_iterator_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingPaymentmethodIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_PaymentMethod_iterator_is_valid'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingPaymentmethodIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_PaymentMethod_iterator_increment'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingPaymentmethodIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_PaymentMethod_iterator_get'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingPaymentmethodToFfi(List<PaymentMethod> value) {
  final _result = _heresdkRoutingIsolineBindingslistofSdkRoutingPaymentmethodCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingPaymentmethodToFfi(element);
    _heresdkRoutingIsolineBindingslistofSdkRoutingPaymentmethodInsert(_result, _elementHandle);
    sdkRoutingPaymentmethodReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<PaymentMethod> heresdkRoutingIsolineBindingslistofSdkRoutingPaymentmethodFromFfi(Pointer<Void> handle) {
  final result = List<PaymentMethod>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingPaymentmethodIterator(handle);
  while (_heresdkRoutingIsolineBindingslistofSdkRoutingPaymentmethodIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingPaymentmethodIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingPaymentmethodFromFfi(_elementHandle));
    } finally {
      sdkRoutingPaymentmethodReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingIsolineBindingslistofSdkRoutingPaymentmethodIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingslistofSdkRoutingPaymentmethodIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingPaymentmethodReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingslistofSdkRoutingPaymentmethodReleaseHandle(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingPaymentmethodCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_PaymentMethod_create_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingPaymentmethodReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_PaymentMethod_release_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingPaymentmethodGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_PaymentMethod_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingPaymentmethodToFfiNullable(List<PaymentMethod>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingslistofSdkRoutingPaymentmethodToFfi(value);
  final result = _heresdkRoutingIsolineBindingslistofSdkRoutingPaymentmethodCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingPaymentmethodReleaseFfiHandle(_handle);
  return result;
}

List<PaymentMethod>? heresdkRoutingIsolineBindingslistofSdkRoutingPaymentmethodFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingIsolineBindingslistofSdkRoutingPaymentmethodGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingslistofSdkRoutingPaymentmethodFromFfi(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingPaymentmethodReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingPaymentmethodReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingslistofSdkRoutingPaymentmethodReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingPostactionCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_PostAction_create_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingPostactionReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_PostAction_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingPostactionInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_PostAction_insert'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingPostactionIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_PostAction_iterator'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingPostactionIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_PostAction_iterator_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingPostactionIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_PostAction_iterator_is_valid'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingPostactionIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_PostAction_iterator_increment'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingPostactionIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_PostAction_iterator_get'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingPostactionToFfi(List<PostAction> value) {
  final _result = _heresdkRoutingIsolineBindingslistofSdkRoutingPostactionCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingPostactionToFfi(element);
    _heresdkRoutingIsolineBindingslistofSdkRoutingPostactionInsert(_result, _elementHandle);
    sdkRoutingPostactionReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<PostAction> heresdkRoutingIsolineBindingslistofSdkRoutingPostactionFromFfi(Pointer<Void> handle) {
  final result = List<PostAction>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingPostactionIterator(handle);
  while (_heresdkRoutingIsolineBindingslistofSdkRoutingPostactionIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingPostactionIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingPostactionFromFfi(_elementHandle));
    } finally {
      sdkRoutingPostactionReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingIsolineBindingslistofSdkRoutingPostactionIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingslistofSdkRoutingPostactionIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingPostactionReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingslistofSdkRoutingPostactionReleaseHandle(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingPostactionCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_PostAction_create_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingPostactionReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_PostAction_release_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingPostactionGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_PostAction_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingPostactionToFfiNullable(List<PostAction>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingslistofSdkRoutingPostactionToFfi(value);
  final result = _heresdkRoutingIsolineBindingslistofSdkRoutingPostactionCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingPostactionReleaseFfiHandle(_handle);
  return result;
}

List<PostAction>? heresdkRoutingIsolineBindingslistofSdkRoutingPostactionFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingIsolineBindingslistofSdkRoutingPostactionGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingslistofSdkRoutingPostactionFromFfi(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingPostactionReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingPostactionReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingslistofSdkRoutingPostactionReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingPreactionCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_PreAction_create_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingPreactionReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_PreAction_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingPreactionInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_PreAction_insert'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingPreactionIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_PreAction_iterator'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingPreactionIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_PreAction_iterator_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingPreactionIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_PreAction_iterator_is_valid'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingPreactionIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_PreAction_iterator_increment'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingPreactionIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_PreAction_iterator_get'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingPreactionToFfi(List<PreAction> value) {
  final _result = _heresdkRoutingIsolineBindingslistofSdkRoutingPreactionCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingPreactionToFfi(element);
    _heresdkRoutingIsolineBindingslistofSdkRoutingPreactionInsert(_result, _elementHandle);
    sdkRoutingPreactionReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<PreAction> heresdkRoutingIsolineBindingslistofSdkRoutingPreactionFromFfi(Pointer<Void> handle) {
  final result = List<PreAction>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingPreactionIterator(handle);
  while (_heresdkRoutingIsolineBindingslistofSdkRoutingPreactionIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingPreactionIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingPreactionFromFfi(_elementHandle));
    } finally {
      sdkRoutingPreactionReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingIsolineBindingslistofSdkRoutingPreactionIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingslistofSdkRoutingPreactionIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingPreactionReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingslistofSdkRoutingPreactionReleaseHandle(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingPreactionCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_PreAction_create_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingPreactionReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_PreAction_release_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingPreactionGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_PreAction_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingPreactionToFfiNullable(List<PreAction>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingslistofSdkRoutingPreactionToFfi(value);
  final result = _heresdkRoutingIsolineBindingslistofSdkRoutingPreactionCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingPreactionReleaseFfiHandle(_handle);
  return result;
}

List<PreAction>? heresdkRoutingIsolineBindingslistofSdkRoutingPreactionFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingIsolineBindingslistofSdkRoutingPreactionGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingslistofSdkRoutingPreactionFromFfi(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingPreactionReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingPreactionReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingslistofSdkRoutingPreactionReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingRoadfeaturesCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_RoadFeatures_create_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingRoadfeaturesReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_RoadFeatures_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingRoadfeaturesInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_RoadFeatures_insert'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingRoadfeaturesIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_RoadFeatures_iterator'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingRoadfeaturesIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_RoadFeatures_iterator_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingRoadfeaturesIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_RoadFeatures_iterator_is_valid'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingRoadfeaturesIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_RoadFeatures_iterator_increment'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingRoadfeaturesIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_RoadFeatures_iterator_get'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingRoadfeaturesToFfi(List<RoadFeatures> value) {
  final _result = _heresdkRoutingIsolineBindingslistofSdkRoutingRoadfeaturesCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingRoadfeaturesToFfi(element);
    _heresdkRoutingIsolineBindingslistofSdkRoutingRoadfeaturesInsert(_result, _elementHandle);
    sdkRoutingRoadfeaturesReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<RoadFeatures> heresdkRoutingIsolineBindingslistofSdkRoutingRoadfeaturesFromFfi(Pointer<Void> handle) {
  final result = List<RoadFeatures>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingRoadfeaturesIterator(handle);
  while (_heresdkRoutingIsolineBindingslistofSdkRoutingRoadfeaturesIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingRoadfeaturesIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingRoadfeaturesFromFfi(_elementHandle));
    } finally {
      sdkRoutingRoadfeaturesReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingIsolineBindingslistofSdkRoutingRoadfeaturesIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingslistofSdkRoutingRoadfeaturesIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingRoadfeaturesReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingslistofSdkRoutingRoadfeaturesReleaseHandle(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingRoadfeaturesCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_RoadFeatures_create_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingRoadfeaturesReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_RoadFeatures_release_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingRoadfeaturesGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_RoadFeatures_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingRoadfeaturesToFfiNullable(List<RoadFeatures>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingslistofSdkRoutingRoadfeaturesToFfi(value);
  final result = _heresdkRoutingIsolineBindingslistofSdkRoutingRoadfeaturesCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingRoadfeaturesReleaseFfiHandle(_handle);
  return result;
}

List<RoadFeatures>? heresdkRoutingIsolineBindingslistofSdkRoutingRoadfeaturesFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingIsolineBindingslistofSdkRoutingRoadfeaturesGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingslistofSdkRoutingRoadfeaturesFromFfi(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingRoadfeaturesReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingRoadfeaturesReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingslistofSdkRoutingRoadfeaturesReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingRouteCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Route_create_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingRouteReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Route_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingRouteInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Route_insert'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingRouteIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Route_iterator'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingRouteIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Route_iterator_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingRouteIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Route_iterator_is_valid'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingRouteIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Route_iterator_increment'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingRouteIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Route_iterator_get'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingRouteToFfi(List<Route> value) {
  final _result = _heresdkRoutingIsolineBindingslistofSdkRoutingRouteCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingRouteToFfi(element);
    _heresdkRoutingIsolineBindingslistofSdkRoutingRouteInsert(_result, _elementHandle);
    sdkRoutingRouteReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Route> heresdkRoutingIsolineBindingslistofSdkRoutingRouteFromFfi(Pointer<Void> handle) {
  final result = List<Route>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingRouteIterator(handle);
  while (_heresdkRoutingIsolineBindingslistofSdkRoutingRouteIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingRouteIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingRouteFromFfi(_elementHandle));
    } finally {
      sdkRoutingRouteReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingIsolineBindingslistofSdkRoutingRouteIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingslistofSdkRoutingRouteIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingRouteReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingslistofSdkRoutingRouteReleaseHandle(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingRouteCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Route_create_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingRouteReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Route_release_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingRouteGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Route_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingRouteToFfiNullable(List<Route>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingslistofSdkRoutingRouteToFfi(value);
  final result = _heresdkRoutingIsolineBindingslistofSdkRoutingRouteCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingRouteReleaseFfiHandle(_handle);
  return result;
}

List<Route>? heresdkRoutingIsolineBindingslistofSdkRoutingRouteFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingIsolineBindingslistofSdkRoutingRouteGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingslistofSdkRoutingRouteFromFfi(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingRouteReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingRouteReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingslistofSdkRoutingRouteReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingSectionCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Section_create_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingSectionReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Section_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingSectionInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Section_insert'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingSectionIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Section_iterator'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingSectionIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Section_iterator_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingSectionIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Section_iterator_is_valid'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingSectionIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Section_iterator_increment'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingSectionIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Section_iterator_get'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingSectionToFfi(List<Section> value) {
  final _result = _heresdkRoutingIsolineBindingslistofSdkRoutingSectionCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingSectionToFfi(element);
    _heresdkRoutingIsolineBindingslistofSdkRoutingSectionInsert(_result, _elementHandle);
    sdkRoutingSectionReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Section> heresdkRoutingIsolineBindingslistofSdkRoutingSectionFromFfi(Pointer<Void> handle) {
  final result = List<Section>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingSectionIterator(handle);
  while (_heresdkRoutingIsolineBindingslistofSdkRoutingSectionIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingSectionIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingSectionFromFfi(_elementHandle));
    } finally {
      sdkRoutingSectionReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingIsolineBindingslistofSdkRoutingSectionIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingslistofSdkRoutingSectionIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingSectionReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingslistofSdkRoutingSectionReleaseHandle(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingSectionCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Section_create_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingSectionReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Section_release_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingSectionGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Section_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingSectionToFfiNullable(List<Section>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingslistofSdkRoutingSectionToFfi(value);
  final result = _heresdkRoutingIsolineBindingslistofSdkRoutingSectionCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingSectionReleaseFfiHandle(_handle);
  return result;
}

List<Section>? heresdkRoutingIsolineBindingslistofSdkRoutingSectionFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingIsolineBindingslistofSdkRoutingSectionGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingslistofSdkRoutingSectionFromFfi(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingSectionReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingSectionReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingslistofSdkRoutingSectionReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingSectionnoticeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_SectionNotice_create_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingSectionnoticeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_SectionNotice_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingSectionnoticeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_SectionNotice_insert'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingSectionnoticeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_SectionNotice_iterator'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingSectionnoticeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_SectionNotice_iterator_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingSectionnoticeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_SectionNotice_iterator_is_valid'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingSectionnoticeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_SectionNotice_iterator_increment'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingSectionnoticeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_SectionNotice_iterator_get'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingSectionnoticeToFfi(List<SectionNotice> value) {
  final _result = _heresdkRoutingIsolineBindingslistofSdkRoutingSectionnoticeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingSectionnoticeToFfi(element);
    _heresdkRoutingIsolineBindingslistofSdkRoutingSectionnoticeInsert(_result, _elementHandle);
    sdkRoutingSectionnoticeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<SectionNotice> heresdkRoutingIsolineBindingslistofSdkRoutingSectionnoticeFromFfi(Pointer<Void> handle) {
  final result = List<SectionNotice>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingSectionnoticeIterator(handle);
  while (_heresdkRoutingIsolineBindingslistofSdkRoutingSectionnoticeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingSectionnoticeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingSectionnoticeFromFfi(_elementHandle));
    } finally {
      sdkRoutingSectionnoticeReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingIsolineBindingslistofSdkRoutingSectionnoticeIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingslistofSdkRoutingSectionnoticeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingSectionnoticeReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingslistofSdkRoutingSectionnoticeReleaseHandle(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingSectionnoticeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_SectionNotice_create_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingSectionnoticeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_SectionNotice_release_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingSectionnoticeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_SectionNotice_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingSectionnoticeToFfiNullable(List<SectionNotice>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingslistofSdkRoutingSectionnoticeToFfi(value);
  final result = _heresdkRoutingIsolineBindingslistofSdkRoutingSectionnoticeCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingSectionnoticeReleaseFfiHandle(_handle);
  return result;
}

List<SectionNotice>? heresdkRoutingIsolineBindingslistofSdkRoutingSectionnoticeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingIsolineBindingslistofSdkRoutingSectionnoticeGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingslistofSdkRoutingSectionnoticeFromFfi(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingSectionnoticeReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingSectionnoticeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingslistofSdkRoutingSectionnoticeReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingSegmentreferenceCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_SegmentReference_create_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingSegmentreferenceReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_SegmentReference_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingSegmentreferenceInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_SegmentReference_insert'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingSegmentreferenceIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_SegmentReference_iterator'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingSegmentreferenceIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_SegmentReference_iterator_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingSegmentreferenceIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_SegmentReference_iterator_is_valid'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingSegmentreferenceIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_SegmentReference_iterator_increment'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingSegmentreferenceIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_SegmentReference_iterator_get'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingSegmentreferenceToFfi(List<SegmentReference> value) {
  final _result = _heresdkRoutingIsolineBindingslistofSdkRoutingSegmentreferenceCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingSegmentreferenceToFfi(element);
    _heresdkRoutingIsolineBindingslistofSdkRoutingSegmentreferenceInsert(_result, _elementHandle);
    sdkRoutingSegmentreferenceReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<SegmentReference> heresdkRoutingIsolineBindingslistofSdkRoutingSegmentreferenceFromFfi(Pointer<Void> handle) {
  final result = List<SegmentReference>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingSegmentreferenceIterator(handle);
  while (_heresdkRoutingIsolineBindingslistofSdkRoutingSegmentreferenceIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingSegmentreferenceIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingSegmentreferenceFromFfi(_elementHandle));
    } finally {
      sdkRoutingSegmentreferenceReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingIsolineBindingslistofSdkRoutingSegmentreferenceIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingslistofSdkRoutingSegmentreferenceIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingSegmentreferenceReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingslistofSdkRoutingSegmentreferenceReleaseHandle(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingSegmentreferenceCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_SegmentReference_create_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingSegmentreferenceReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_SegmentReference_release_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingSegmentreferenceGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_SegmentReference_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingSegmentreferenceToFfiNullable(List<SegmentReference>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingslistofSdkRoutingSegmentreferenceToFfi(value);
  final result = _heresdkRoutingIsolineBindingslistofSdkRoutingSegmentreferenceCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingSegmentreferenceReleaseFfiHandle(_handle);
  return result;
}

List<SegmentReference>? heresdkRoutingIsolineBindingslistofSdkRoutingSegmentreferenceFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingIsolineBindingslistofSdkRoutingSegmentreferenceGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingslistofSdkRoutingSegmentreferenceFromFfi(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingSegmentreferenceReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingSegmentreferenceReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingslistofSdkRoutingSegmentreferenceReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingSpanCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Span_create_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingSpanReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Span_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingSpanInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Span_insert'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingSpanIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Span_iterator'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingSpanIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Span_iterator_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingSpanIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Span_iterator_is_valid'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingSpanIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Span_iterator_increment'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingSpanIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Span_iterator_get'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingSpanToFfi(List<Span> value) {
  final _result = _heresdkRoutingIsolineBindingslistofSdkRoutingSpanCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingSpanToFfi(element);
    _heresdkRoutingIsolineBindingslistofSdkRoutingSpanInsert(_result, _elementHandle);
    sdkRoutingSpanReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Span> heresdkRoutingIsolineBindingslistofSdkRoutingSpanFromFfi(Pointer<Void> handle) {
  final result = List<Span>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingSpanIterator(handle);
  while (_heresdkRoutingIsolineBindingslistofSdkRoutingSpanIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingSpanIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingSpanFromFfi(_elementHandle));
    } finally {
      sdkRoutingSpanReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingIsolineBindingslistofSdkRoutingSpanIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingslistofSdkRoutingSpanIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingSpanReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingslistofSdkRoutingSpanReleaseHandle(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingSpanCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Span_create_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingSpanReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Span_release_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingSpanGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Span_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingSpanToFfiNullable(List<Span>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingslistofSdkRoutingSpanToFfi(value);
  final result = _heresdkRoutingIsolineBindingslistofSdkRoutingSpanCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingSpanReleaseFfiHandle(_handle);
  return result;
}

List<Span>? heresdkRoutingIsolineBindingslistofSdkRoutingSpanFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingIsolineBindingslistofSdkRoutingSpanGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingslistofSdkRoutingSpanFromFfi(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingSpanReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingSpanReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingslistofSdkRoutingSpanReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingTollCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Toll_create_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTollReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Toll_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTollInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Toll_insert'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTollIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Toll_iterator'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTollIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Toll_iterator_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTollIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Toll_iterator_is_valid'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTollIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Toll_iterator_increment'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTollIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Toll_iterator_get'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingTollToFfi(List<Toll> value) {
  final _result = _heresdkRoutingIsolineBindingslistofSdkRoutingTollCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingTollToFfi(element);
    _heresdkRoutingIsolineBindingslistofSdkRoutingTollInsert(_result, _elementHandle);
    sdkRoutingTollReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Toll> heresdkRoutingIsolineBindingslistofSdkRoutingTollFromFfi(Pointer<Void> handle) {
  final result = List<Toll>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingTollIterator(handle);
  while (_heresdkRoutingIsolineBindingslistofSdkRoutingTollIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingTollIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingTollFromFfi(_elementHandle));
    } finally {
      sdkRoutingTollReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingIsolineBindingslistofSdkRoutingTollIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingslistofSdkRoutingTollIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingTollReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingslistofSdkRoutingTollReleaseHandle(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingTollCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Toll_create_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTollReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Toll_release_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTollGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Toll_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingTollToFfiNullable(List<Toll>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingslistofSdkRoutingTollToFfi(value);
  final result = _heresdkRoutingIsolineBindingslistofSdkRoutingTollCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingTollReleaseFfiHandle(_handle);
  return result;
}

List<Toll>? heresdkRoutingIsolineBindingslistofSdkRoutingTollFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingIsolineBindingslistofSdkRoutingTollGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingslistofSdkRoutingTollFromFfi(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingTollReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingTollReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingslistofSdkRoutingTollReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingTollfareCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TollFare_create_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTollfareReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TollFare_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTollfareInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TollFare_insert'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTollfareIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TollFare_iterator'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTollfareIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TollFare_iterator_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTollfareIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TollFare_iterator_is_valid'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTollfareIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TollFare_iterator_increment'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTollfareIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TollFare_iterator_get'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingTollfareToFfi(List<TollFare> value) {
  final _result = _heresdkRoutingIsolineBindingslistofSdkRoutingTollfareCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingTollfareToFfi(element);
    _heresdkRoutingIsolineBindingslistofSdkRoutingTollfareInsert(_result, _elementHandle);
    sdkRoutingTollfareReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<TollFare> heresdkRoutingIsolineBindingslistofSdkRoutingTollfareFromFfi(Pointer<Void> handle) {
  final result = List<TollFare>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingTollfareIterator(handle);
  while (_heresdkRoutingIsolineBindingslistofSdkRoutingTollfareIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingTollfareIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingTollfareFromFfi(_elementHandle));
    } finally {
      sdkRoutingTollfareReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingIsolineBindingslistofSdkRoutingTollfareIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingslistofSdkRoutingTollfareIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingTollfareReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingslistofSdkRoutingTollfareReleaseHandle(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingTollfareCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TollFare_create_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTollfareReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TollFare_release_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTollfareGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TollFare_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingTollfareToFfiNullable(List<TollFare>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingslistofSdkRoutingTollfareToFfi(value);
  final result = _heresdkRoutingIsolineBindingslistofSdkRoutingTollfareCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingTollfareReleaseFfiHandle(_handle);
  return result;
}

List<TollFare>? heresdkRoutingIsolineBindingslistofSdkRoutingTollfareFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingIsolineBindingslistofSdkRoutingTollfareGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingslistofSdkRoutingTollfareFromFfi(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingTollfareReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingTollfareReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingslistofSdkRoutingTollfareReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingTrafficincidentonrouteCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TrafficIncidentOnRoute_create_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTrafficincidentonrouteReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TrafficIncidentOnRoute_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTrafficincidentonrouteInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TrafficIncidentOnRoute_insert'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTrafficincidentonrouteIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TrafficIncidentOnRoute_iterator'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTrafficincidentonrouteIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TrafficIncidentOnRoute_iterator_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTrafficincidentonrouteIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TrafficIncidentOnRoute_iterator_is_valid'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTrafficincidentonrouteIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TrafficIncidentOnRoute_iterator_increment'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTrafficincidentonrouteIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TrafficIncidentOnRoute_iterator_get'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingTrafficincidentonrouteToFfi(List<TrafficIncidentOnRoute> value) {
  final _result = _heresdkRoutingIsolineBindingslistofSdkRoutingTrafficincidentonrouteCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingTrafficincidentonrouteToFfi(element);
    _heresdkRoutingIsolineBindingslistofSdkRoutingTrafficincidentonrouteInsert(_result, _elementHandle);
    sdkRoutingTrafficincidentonrouteReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<TrafficIncidentOnRoute> heresdkRoutingIsolineBindingslistofSdkRoutingTrafficincidentonrouteFromFfi(Pointer<Void> handle) {
  final result = List<TrafficIncidentOnRoute>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingTrafficincidentonrouteIterator(handle);
  while (_heresdkRoutingIsolineBindingslistofSdkRoutingTrafficincidentonrouteIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingTrafficincidentonrouteIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingTrafficincidentonrouteFromFfi(_elementHandle));
    } finally {
      sdkRoutingTrafficincidentonrouteReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingIsolineBindingslistofSdkRoutingTrafficincidentonrouteIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingslistofSdkRoutingTrafficincidentonrouteIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingTrafficincidentonrouteReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingslistofSdkRoutingTrafficincidentonrouteReleaseHandle(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingTrafficincidentonrouteCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TrafficIncidentOnRoute_create_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTrafficincidentonrouteReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TrafficIncidentOnRoute_release_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTrafficincidentonrouteGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TrafficIncidentOnRoute_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingTrafficincidentonrouteToFfiNullable(List<TrafficIncidentOnRoute>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingslistofSdkRoutingTrafficincidentonrouteToFfi(value);
  final result = _heresdkRoutingIsolineBindingslistofSdkRoutingTrafficincidentonrouteCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingTrafficincidentonrouteReleaseFfiHandle(_handle);
  return result;
}

List<TrafficIncidentOnRoute>? heresdkRoutingIsolineBindingslistofSdkRoutingTrafficincidentonrouteFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingIsolineBindingslistofSdkRoutingTrafficincidentonrouteGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingslistofSdkRoutingTrafficincidentonrouteFromFfi(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingTrafficincidentonrouteReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingTrafficincidentonrouteReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingslistofSdkRoutingTrafficincidentonrouteReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingTrafficspeedCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TrafficSpeed_create_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTrafficspeedReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TrafficSpeed_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTrafficspeedInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TrafficSpeed_insert'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTrafficspeedIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TrafficSpeed_iterator'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTrafficspeedIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TrafficSpeed_iterator_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTrafficspeedIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TrafficSpeed_iterator_is_valid'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTrafficspeedIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TrafficSpeed_iterator_increment'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTrafficspeedIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TrafficSpeed_iterator_get'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingTrafficspeedToFfi(List<TrafficSpeed> value) {
  final _result = _heresdkRoutingIsolineBindingslistofSdkRoutingTrafficspeedCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingTrafficspeedToFfi(element);
    _heresdkRoutingIsolineBindingslistofSdkRoutingTrafficspeedInsert(_result, _elementHandle);
    sdkRoutingTrafficspeedReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<TrafficSpeed> heresdkRoutingIsolineBindingslistofSdkRoutingTrafficspeedFromFfi(Pointer<Void> handle) {
  final result = List<TrafficSpeed>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingTrafficspeedIterator(handle);
  while (_heresdkRoutingIsolineBindingslistofSdkRoutingTrafficspeedIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingTrafficspeedIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingTrafficspeedFromFfi(_elementHandle));
    } finally {
      sdkRoutingTrafficspeedReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingIsolineBindingslistofSdkRoutingTrafficspeedIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingslistofSdkRoutingTrafficspeedIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingTrafficspeedReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingslistofSdkRoutingTrafficspeedReleaseHandle(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingTrafficspeedCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TrafficSpeed_create_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTrafficspeedReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TrafficSpeed_release_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTrafficspeedGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TrafficSpeed_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingTrafficspeedToFfiNullable(List<TrafficSpeed>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingslistofSdkRoutingTrafficspeedToFfi(value);
  final result = _heresdkRoutingIsolineBindingslistofSdkRoutingTrafficspeedCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingTrafficspeedReleaseFfiHandle(_handle);
  return result;
}

List<TrafficSpeed>? heresdkRoutingIsolineBindingslistofSdkRoutingTrafficspeedFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingIsolineBindingslistofSdkRoutingTrafficspeedGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingslistofSdkRoutingTrafficspeedFromFfi(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingTrafficspeedReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingTrafficspeedReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingslistofSdkRoutingTrafficspeedReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingTransitincidentCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TransitIncident_create_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTransitincidentReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TransitIncident_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTransitincidentInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TransitIncident_insert'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTransitincidentIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TransitIncident_iterator'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTransitincidentIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TransitIncident_iterator_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTransitincidentIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TransitIncident_iterator_is_valid'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTransitincidentIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TransitIncident_iterator_increment'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTransitincidentIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TransitIncident_iterator_get'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingTransitincidentToFfi(List<TransitIncident> value) {
  final _result = _heresdkRoutingIsolineBindingslistofSdkRoutingTransitincidentCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingTransitincidentToFfi(element);
    _heresdkRoutingIsolineBindingslistofSdkRoutingTransitincidentInsert(_result, _elementHandle);
    sdkRoutingTransitincidentReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<TransitIncident> heresdkRoutingIsolineBindingslistofSdkRoutingTransitincidentFromFfi(Pointer<Void> handle) {
  final result = List<TransitIncident>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingTransitincidentIterator(handle);
  while (_heresdkRoutingIsolineBindingslistofSdkRoutingTransitincidentIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingTransitincidentIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingTransitincidentFromFfi(_elementHandle));
    } finally {
      sdkRoutingTransitincidentReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingIsolineBindingslistofSdkRoutingTransitincidentIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingslistofSdkRoutingTransitincidentIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingTransitincidentReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingslistofSdkRoutingTransitincidentReleaseHandle(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingTransitincidentCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TransitIncident_create_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTransitincidentReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TransitIncident_release_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTransitincidentGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TransitIncident_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingTransitincidentToFfiNullable(List<TransitIncident>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingslistofSdkRoutingTransitincidentToFfi(value);
  final result = _heresdkRoutingIsolineBindingslistofSdkRoutingTransitincidentCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingTransitincidentReleaseFfiHandle(_handle);
  return result;
}

List<TransitIncident>? heresdkRoutingIsolineBindingslistofSdkRoutingTransitincidentFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingIsolineBindingslistofSdkRoutingTransitincidentGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingslistofSdkRoutingTransitincidentFromFfi(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingTransitincidentReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingTransitincidentReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingslistofSdkRoutingTransitincidentReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingTransitmodeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TransitMode_create_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTransitmodeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TransitMode_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTransitmodeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TransitMode_insert'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTransitmodeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TransitMode_iterator'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTransitmodeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TransitMode_iterator_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTransitmodeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TransitMode_iterator_is_valid'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTransitmodeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TransitMode_iterator_increment'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTransitmodeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TransitMode_iterator_get'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingTransitmodeToFfi(List<TransitMode> value) {
  final _result = _heresdkRoutingIsolineBindingslistofSdkRoutingTransitmodeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingTransitmodeToFfi(element);
    _heresdkRoutingIsolineBindingslistofSdkRoutingTransitmodeInsert(_result, _elementHandle);
    sdkRoutingTransitmodeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<TransitMode> heresdkRoutingIsolineBindingslistofSdkRoutingTransitmodeFromFfi(Pointer<Void> handle) {
  final result = List<TransitMode>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingTransitmodeIterator(handle);
  while (_heresdkRoutingIsolineBindingslistofSdkRoutingTransitmodeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingTransitmodeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingTransitmodeFromFfi(_elementHandle));
    } finally {
      sdkRoutingTransitmodeReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingIsolineBindingslistofSdkRoutingTransitmodeIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingslistofSdkRoutingTransitmodeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingTransitmodeReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingslistofSdkRoutingTransitmodeReleaseHandle(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingTransitmodeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TransitMode_create_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTransitmodeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TransitMode_release_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTransitmodeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TransitMode_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingTransitmodeToFfiNullable(List<TransitMode>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingslistofSdkRoutingTransitmodeToFfi(value);
  final result = _heresdkRoutingIsolineBindingslistofSdkRoutingTransitmodeCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingTransitmodeReleaseFfiHandle(_handle);
  return result;
}

List<TransitMode>? heresdkRoutingIsolineBindingslistofSdkRoutingTransitmodeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingIsolineBindingslistofSdkRoutingTransitmodeGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingslistofSdkRoutingTransitmodeFromFfi(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingTransitmodeReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingTransitmodeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingslistofSdkRoutingTransitmodeReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingTransitstopCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TransitStop_create_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTransitstopReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TransitStop_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTransitstopInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TransitStop_insert'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTransitstopIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TransitStop_iterator'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTransitstopIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TransitStop_iterator_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTransitstopIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TransitStop_iterator_is_valid'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTransitstopIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TransitStop_iterator_increment'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTransitstopIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TransitStop_iterator_get'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingTransitstopToFfi(List<TransitStop> value) {
  final _result = _heresdkRoutingIsolineBindingslistofSdkRoutingTransitstopCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingTransitstopToFfi(element);
    _heresdkRoutingIsolineBindingslistofSdkRoutingTransitstopInsert(_result, _elementHandle);
    sdkRoutingTransitstopReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<TransitStop> heresdkRoutingIsolineBindingslistofSdkRoutingTransitstopFromFfi(Pointer<Void> handle) {
  final result = List<TransitStop>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingTransitstopIterator(handle);
  while (_heresdkRoutingIsolineBindingslistofSdkRoutingTransitstopIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingTransitstopIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingTransitstopFromFfi(_elementHandle));
    } finally {
      sdkRoutingTransitstopReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingIsolineBindingslistofSdkRoutingTransitstopIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingslistofSdkRoutingTransitstopIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingTransitstopReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingslistofSdkRoutingTransitstopReleaseHandle(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingTransitstopCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TransitStop_create_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTransitstopReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TransitStop_release_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingTransitstopGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_TransitStop_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingTransitstopToFfiNullable(List<TransitStop>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingslistofSdkRoutingTransitstopToFfi(value);
  final result = _heresdkRoutingIsolineBindingslistofSdkRoutingTransitstopCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingTransitstopReleaseFfiHandle(_handle);
  return result;
}

List<TransitStop>? heresdkRoutingIsolineBindingslistofSdkRoutingTransitstopFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingIsolineBindingslistofSdkRoutingTransitstopGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingslistofSdkRoutingTransitstopFromFfi(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingTransitstopReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingTransitstopReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingslistofSdkRoutingTransitstopReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingWaypointCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Waypoint_create_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingWaypointReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Waypoint_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingWaypointInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Waypoint_insert'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingWaypointIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Waypoint_iterator'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingWaypointIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Waypoint_iterator_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingWaypointIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Waypoint_iterator_is_valid'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingWaypointIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Waypoint_iterator_increment'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingWaypointIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Waypoint_iterator_get'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingWaypointToFfi(List<Waypoint> value) {
  final _result = _heresdkRoutingIsolineBindingslistofSdkRoutingWaypointCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingWaypointToFfi(element);
    _heresdkRoutingIsolineBindingslistofSdkRoutingWaypointInsert(_result, _elementHandle);
    sdkRoutingWaypointReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Waypoint> heresdkRoutingIsolineBindingslistofSdkRoutingWaypointFromFfi(Pointer<Void> handle) {
  final result = List<Waypoint>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingWaypointIterator(handle);
  while (_heresdkRoutingIsolineBindingslistofSdkRoutingWaypointIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingWaypointIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingWaypointFromFfi(_elementHandle));
    } finally {
      sdkRoutingWaypointReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingIsolineBindingslistofSdkRoutingWaypointIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingslistofSdkRoutingWaypointIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingWaypointReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingslistofSdkRoutingWaypointReleaseHandle(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingWaypointCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Waypoint_create_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingWaypointReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Waypoint_release_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingWaypointGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_Waypoint_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingWaypointToFfiNullable(List<Waypoint>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingslistofSdkRoutingWaypointToFfi(value);
  final result = _heresdkRoutingIsolineBindingslistofSdkRoutingWaypointCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingWaypointReleaseFfiHandle(_handle);
  return result;
}

List<Waypoint>? heresdkRoutingIsolineBindingslistofSdkRoutingWaypointFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingIsolineBindingslistofSdkRoutingWaypointGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingslistofSdkRoutingWaypointFromFfi(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingWaypointReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingWaypointReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingslistofSdkRoutingWaypointReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingZonecategoryCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_ZoneCategory_create_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingZonecategoryReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_ZoneCategory_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingZonecategoryInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_ZoneCategory_insert'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingZonecategoryIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_ZoneCategory_iterator'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingZonecategoryIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_ZoneCategory_iterator_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingZonecategoryIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_ZoneCategory_iterator_is_valid'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingZonecategoryIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_ZoneCategory_iterator_increment'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingZonecategoryIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_ZoneCategory_iterator_get'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingZonecategoryToFfi(List<ZoneCategory> value) {
  final _result = _heresdkRoutingIsolineBindingslistofSdkRoutingZonecategoryCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingZonecategoryToFfi(element);
    _heresdkRoutingIsolineBindingslistofSdkRoutingZonecategoryInsert(_result, _elementHandle);
    sdkRoutingZonecategoryReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<ZoneCategory> heresdkRoutingIsolineBindingslistofSdkRoutingZonecategoryFromFfi(Pointer<Void> handle) {
  final result = List<ZoneCategory>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingZonecategoryIterator(handle);
  while (_heresdkRoutingIsolineBindingslistofSdkRoutingZonecategoryIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingIsolineBindingslistofSdkRoutingZonecategoryIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingZonecategoryFromFfi(_elementHandle));
    } finally {
      sdkRoutingZonecategoryReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingIsolineBindingslistofSdkRoutingZonecategoryIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingslistofSdkRoutingZonecategoryIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingZonecategoryReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingslistofSdkRoutingZonecategoryReleaseHandle(handle);

final _heresdkRoutingIsolineBindingslistofSdkRoutingZonecategoryCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_ZoneCategory_create_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingZonecategoryReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_ZoneCategory_release_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkRoutingZonecategoryGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_routing_ZoneCategory_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkRoutingZonecategoryToFfiNullable(List<ZoneCategory>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingslistofSdkRoutingZonecategoryToFfi(value);
  final result = _heresdkRoutingIsolineBindingslistofSdkRoutingZonecategoryCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingZonecategoryReleaseFfiHandle(_handle);
  return result;
}

List<ZoneCategory>? heresdkRoutingIsolineBindingslistofSdkRoutingZonecategoryFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingIsolineBindingslistofSdkRoutingZonecategoryGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingslistofSdkRoutingZonecategoryFromFfi(_handle);
  heresdkRoutingIsolineBindingslistofSdkRoutingZonecategoryReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkRoutingZonecategoryReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingslistofSdkRoutingZonecategoryReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingslistofSdkTransportHazardousmaterialCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_transport_HazardousMaterial_create_handle'));
final _heresdkRoutingIsolineBindingslistofSdkTransportHazardousmaterialReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_transport_HazardousMaterial_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkTransportHazardousmaterialInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_transport_HazardousMaterial_insert'));
final _heresdkRoutingIsolineBindingslistofSdkTransportHazardousmaterialIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_transport_HazardousMaterial_iterator'));
final _heresdkRoutingIsolineBindingslistofSdkTransportHazardousmaterialIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_transport_HazardousMaterial_iterator_release_handle'));
final _heresdkRoutingIsolineBindingslistofSdkTransportHazardousmaterialIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_transport_HazardousMaterial_iterator_is_valid'));
final _heresdkRoutingIsolineBindingslistofSdkTransportHazardousmaterialIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_transport_HazardousMaterial_iterator_increment'));
final _heresdkRoutingIsolineBindingslistofSdkTransportHazardousmaterialIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_transport_HazardousMaterial_iterator_get'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkTransportHazardousmaterialToFfi(List<HazardousMaterial> value) {
  final _result = _heresdkRoutingIsolineBindingslistofSdkTransportHazardousmaterialCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkTransportHazardousmaterialToFfi(element);
    _heresdkRoutingIsolineBindingslistofSdkTransportHazardousmaterialInsert(_result, _elementHandle);
    sdkTransportHazardousmaterialReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<HazardousMaterial> heresdkRoutingIsolineBindingslistofSdkTransportHazardousmaterialFromFfi(Pointer<Void> handle) {
  final result = List<HazardousMaterial>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingIsolineBindingslistofSdkTransportHazardousmaterialIterator(handle);
  while (_heresdkRoutingIsolineBindingslistofSdkTransportHazardousmaterialIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingIsolineBindingslistofSdkTransportHazardousmaterialIteratorGet(_iteratorHandle);
    try {
      result.add(sdkTransportHazardousmaterialFromFfi(_elementHandle));
    } finally {
      sdkTransportHazardousmaterialReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingIsolineBindingslistofSdkTransportHazardousmaterialIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingslistofSdkTransportHazardousmaterialIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkTransportHazardousmaterialReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingslistofSdkTransportHazardousmaterialReleaseHandle(handle);

final _heresdkRoutingIsolineBindingslistofSdkTransportHazardousmaterialCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_transport_HazardousMaterial_create_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkTransportHazardousmaterialReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_transport_HazardousMaterial_release_handle_nullable'));
final _heresdkRoutingIsolineBindingslistofSdkTransportHazardousmaterialGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsListOf_sdk_transport_HazardousMaterial_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingslistofSdkTransportHazardousmaterialToFfiNullable(List<HazardousMaterial>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingslistofSdkTransportHazardousmaterialToFfi(value);
  final result = _heresdkRoutingIsolineBindingslistofSdkTransportHazardousmaterialCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingslistofSdkTransportHazardousmaterialReleaseFfiHandle(_handle);
  return result;
}

List<HazardousMaterial>? heresdkRoutingIsolineBindingslistofSdkTransportHazardousmaterialFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingIsolineBindingslistofSdkTransportHazardousmaterialGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingslistofSdkTransportHazardousmaterialFromFfi(_handle);
  heresdkRoutingIsolineBindingslistofSdkTransportHazardousmaterialReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingslistofSdkTransportHazardousmaterialReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingslistofSdkTransportHazardousmaterialReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingsmapofDoubleToDoubleCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindingsMapOf_Double_to_Double_create_handle'));
final _heresdkRoutingIsolineBindingsmapofDoubleToDoubleReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsMapOf_Double_to_Double_release_handle'));
final _heresdkRoutingIsolineBindingsmapofDoubleToDoublePut = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Double, Double),
    void Function(Pointer<Void>, double, double)
  >('here_sdk_heresdk_routing_isoline_bindingsMapOf_Double_to_Double_put'));
final _heresdkRoutingIsolineBindingsmapofDoubleToDoubleIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsMapOf_Double_to_Double_iterator'));
final _heresdkRoutingIsolineBindingsmapofDoubleToDoubleIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsMapOf_Double_to_Double_iterator_release_handle'));
final _heresdkRoutingIsolineBindingsmapofDoubleToDoubleIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsMapOf_Double_to_Double_iterator_is_valid'));
final _heresdkRoutingIsolineBindingsmapofDoubleToDoubleIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsMapOf_Double_to_Double_iterator_increment'));
final _heresdkRoutingIsolineBindingsmapofDoubleToDoubleIteratorGetKey = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Double Function(Pointer<Void>),
    double Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsMapOf_Double_to_Double_iterator_get_key'));
final _heresdkRoutingIsolineBindingsmapofDoubleToDoubleIteratorGetValue = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Double Function(Pointer<Void>),
    double Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsMapOf_Double_to_Double_iterator_get_value'));

Pointer<Void> heresdkRoutingIsolineBindingsmapofDoubleToDoubleToFfi(Map<double, double> value) {
  final _result = _heresdkRoutingIsolineBindingsmapofDoubleToDoubleCreateHandle();
  for (final entry in value.entries) {
    final _keyHandle = (entry.key);
    final _valueHandle = (entry.value);
    _heresdkRoutingIsolineBindingsmapofDoubleToDoublePut(_result, _keyHandle, _valueHandle);
    
    
  }
  return _result;
}

Map<double, double> heresdkRoutingIsolineBindingsmapofDoubleToDoubleFromFfi(Pointer<Void> handle) {
  final result = Map<double, double>();
  final _iteratorHandle = _heresdkRoutingIsolineBindingsmapofDoubleToDoubleIterator(handle);
  while (_heresdkRoutingIsolineBindingsmapofDoubleToDoubleIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _keyHandle = _heresdkRoutingIsolineBindingsmapofDoubleToDoubleIteratorGetKey(_iteratorHandle);
    final _valueHandle = _heresdkRoutingIsolineBindingsmapofDoubleToDoubleIteratorGetValue(_iteratorHandle);
    try {
      result[(_keyHandle)] =
        (_valueHandle);
    } finally {
      
      
    }
    _heresdkRoutingIsolineBindingsmapofDoubleToDoubleIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingsmapofDoubleToDoubleIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingsmapofDoubleToDoubleReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingsmapofDoubleToDoubleReleaseHandle(handle);

final _heresdkRoutingIsolineBindingsmapofDoubleToDoubleCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsMapOf_Double_to_Double_create_handle_nullable'));
final _heresdkRoutingIsolineBindingsmapofDoubleToDoubleReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsMapOf_Double_to_Double_release_handle_nullable'));
final _heresdkRoutingIsolineBindingsmapofDoubleToDoubleGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsMapOf_Double_to_Double_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingsmapofDoubleToDoubleToFfiNullable(Map<double, double>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingsmapofDoubleToDoubleToFfi(value);
  final result = _heresdkRoutingIsolineBindingsmapofDoubleToDoubleCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingsmapofDoubleToDoubleReleaseFfiHandle(_handle);
  return result;
}

Map<double, double>? heresdkRoutingIsolineBindingsmapofDoubleToDoubleFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingIsolineBindingsmapofDoubleToDoubleGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingsmapofDoubleToDoubleFromFfi(_handle);
  heresdkRoutingIsolineBindingsmapofDoubleToDoubleReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingsmapofDoubleToDoubleReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingsmapofDoubleToDoubleReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingsmapofIntToDoubleCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindingsMapOf_Int_to_Double_create_handle'));
final _heresdkRoutingIsolineBindingsmapofIntToDoubleReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsMapOf_Int_to_Double_release_handle'));
final _heresdkRoutingIsolineBindingsmapofIntToDoublePut = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Int32, Double),
    void Function(Pointer<Void>, int, double)
  >('here_sdk_heresdk_routing_isoline_bindingsMapOf_Int_to_Double_put'));
final _heresdkRoutingIsolineBindingsmapofIntToDoubleIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsMapOf_Int_to_Double_iterator'));
final _heresdkRoutingIsolineBindingsmapofIntToDoubleIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsMapOf_Int_to_Double_iterator_release_handle'));
final _heresdkRoutingIsolineBindingsmapofIntToDoubleIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsMapOf_Int_to_Double_iterator_is_valid'));
final _heresdkRoutingIsolineBindingsmapofIntToDoubleIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsMapOf_Int_to_Double_iterator_increment'));
final _heresdkRoutingIsolineBindingsmapofIntToDoubleIteratorGetKey = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsMapOf_Int_to_Double_iterator_get_key'));
final _heresdkRoutingIsolineBindingsmapofIntToDoubleIteratorGetValue = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Double Function(Pointer<Void>),
    double Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsMapOf_Int_to_Double_iterator_get_value'));

Pointer<Void> heresdkRoutingIsolineBindingsmapofIntToDoubleToFfi(Map<int, double> value) {
  final _result = _heresdkRoutingIsolineBindingsmapofIntToDoubleCreateHandle();
  for (final entry in value.entries) {
    final _keyHandle = (entry.key);
    final _valueHandle = (entry.value);
    _heresdkRoutingIsolineBindingsmapofIntToDoublePut(_result, _keyHandle, _valueHandle);
    
    
  }
  return _result;
}

Map<int, double> heresdkRoutingIsolineBindingsmapofIntToDoubleFromFfi(Pointer<Void> handle) {
  final result = Map<int, double>();
  final _iteratorHandle = _heresdkRoutingIsolineBindingsmapofIntToDoubleIterator(handle);
  while (_heresdkRoutingIsolineBindingsmapofIntToDoubleIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _keyHandle = _heresdkRoutingIsolineBindingsmapofIntToDoubleIteratorGetKey(_iteratorHandle);
    final _valueHandle = _heresdkRoutingIsolineBindingsmapofIntToDoubleIteratorGetValue(_iteratorHandle);
    try {
      result[(_keyHandle)] =
        (_valueHandle);
    } finally {
      
      
    }
    _heresdkRoutingIsolineBindingsmapofIntToDoubleIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingsmapofIntToDoubleIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingsmapofIntToDoubleReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingsmapofIntToDoubleReleaseHandle(handle);

final _heresdkRoutingIsolineBindingsmapofIntToDoubleCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsMapOf_Int_to_Double_create_handle_nullable'));
final _heresdkRoutingIsolineBindingsmapofIntToDoubleReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsMapOf_Int_to_Double_release_handle_nullable'));
final _heresdkRoutingIsolineBindingsmapofIntToDoubleGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsMapOf_Int_to_Double_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingsmapofIntToDoubleToFfiNullable(Map<int, double>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingsmapofIntToDoubleToFfi(value);
  final result = _heresdkRoutingIsolineBindingsmapofIntToDoubleCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingsmapofIntToDoubleReleaseFfiHandle(_handle);
  return result;
}

Map<int, double>? heresdkRoutingIsolineBindingsmapofIntToDoubleFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingIsolineBindingsmapofIntToDoubleGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingsmapofIntToDoubleFromFfi(_handle);
  heresdkRoutingIsolineBindingsmapofIntToDoubleReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingsmapofIntToDoubleReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingsmapofIntToDoubleReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingsmapofSdkCoreEngineEnginebaseurlToStringCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_create_handle'));
final _heresdkRoutingIsolineBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_release_handle'));
final _heresdkRoutingIsolineBindingsmapofSdkCoreEngineEnginebaseurlToStringPut = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32, Pointer<Void>),
    void Function(Pointer<Void>, int, Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_put'));
final _heresdkRoutingIsolineBindingsmapofSdkCoreEngineEnginebaseurlToStringIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_iterator'));
final _heresdkRoutingIsolineBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_iterator_release_handle'));
final _heresdkRoutingIsolineBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_iterator_is_valid'));
final _heresdkRoutingIsolineBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_iterator_increment'));
final _heresdkRoutingIsolineBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorGetKey = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_iterator_get_key'));
final _heresdkRoutingIsolineBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorGetValue = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_iterator_get_value'));

Pointer<Void> heresdkRoutingIsolineBindingsmapofSdkCoreEngineEnginebaseurlToStringToFfi(Map<EngineBaseURL, String> value) {
  final _result = _heresdkRoutingIsolineBindingsmapofSdkCoreEngineEnginebaseurlToStringCreateHandle();
  for (final entry in value.entries) {
    final _keyHandle = sdkCoreEngineEnginebaseurlToFfi(entry.key);
    final _valueHandle = stringToFfi(entry.value);
    _heresdkRoutingIsolineBindingsmapofSdkCoreEngineEnginebaseurlToStringPut(_result, _keyHandle, _valueHandle);
    sdkCoreEngineEnginebaseurlReleaseFfiHandle(_keyHandle);
    stringReleaseFfiHandle(_valueHandle);
  }
  return _result;
}

Map<EngineBaseURL, String> heresdkRoutingIsolineBindingsmapofSdkCoreEngineEnginebaseurlToStringFromFfi(Pointer<Void> handle) {
  final result = Map<EngineBaseURL, String>();
  final _iteratorHandle = _heresdkRoutingIsolineBindingsmapofSdkCoreEngineEnginebaseurlToStringIterator(handle);
  while (_heresdkRoutingIsolineBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _keyHandle = _heresdkRoutingIsolineBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorGetKey(_iteratorHandle);
    final _valueHandle = _heresdkRoutingIsolineBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorGetValue(_iteratorHandle);
    try {
      result[sdkCoreEngineEnginebaseurlFromFfi(_keyHandle)] =
        stringFromFfi(_valueHandle);
    } finally {
      sdkCoreEngineEnginebaseurlReleaseFfiHandle(_keyHandle);
      stringReleaseFfiHandle(_valueHandle);
    }
    _heresdkRoutingIsolineBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseHandle(handle);

final _heresdkRoutingIsolineBindingsmapofSdkCoreEngineEnginebaseurlToStringCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_create_handle_nullable'));
final _heresdkRoutingIsolineBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_release_handle_nullable'));
final _heresdkRoutingIsolineBindingsmapofSdkCoreEngineEnginebaseurlToStringGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingsmapofSdkCoreEngineEnginebaseurlToStringToFfiNullable(Map<EngineBaseURL, String>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingsmapofSdkCoreEngineEnginebaseurlToStringToFfi(value);
  final result = _heresdkRoutingIsolineBindingsmapofSdkCoreEngineEnginebaseurlToStringCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseFfiHandle(_handle);
  return result;
}

Map<EngineBaseURL, String>? heresdkRoutingIsolineBindingsmapofSdkCoreEngineEnginebaseurlToStringFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingIsolineBindingsmapofSdkCoreEngineEnginebaseurlToStringGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingsmapofSdkCoreEngineEnginebaseurlToStringFromFfi(_handle);
  heresdkRoutingIsolineBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseHandleNullable(handle);


// Copyright (c) 2018-2022 HERE Global B.V. and its affiliate(s).
// All rights reserved.
//
// This software and other materials contain proprietary information
// controlled by HERE and are protected by applicable copyright legislation.
// Any use and utilization of this software and other materials and
// disclosure to any third parties is conditional upon having a separate
// agreement with HERE for the access, use, utilization or disclosure of this
// software. In the absence of such agreement, the use of the software is not
// allowed.
//






































final _heresdkRoutingOfflineBindingslistofIntCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_offline_bindingsListOf_Int_create_handle'));
final _heresdkRoutingOfflineBindingslistofIntReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_Int_release_handle'));
final _heresdkRoutingOfflineBindingslistofIntInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Int32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_Int_insert'));
final _heresdkRoutingOfflineBindingslistofIntIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_Int_iterator'));
final _heresdkRoutingOfflineBindingslistofIntIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_Int_iterator_release_handle'));
final _heresdkRoutingOfflineBindingslistofIntIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_Int_iterator_is_valid'));
final _heresdkRoutingOfflineBindingslistofIntIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_Int_iterator_increment'));
final _heresdkRoutingOfflineBindingslistofIntIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_Int_iterator_get'));

Pointer<Void> heresdkRoutingOfflineBindingslistofIntToFfi(List<int> value) {
  final _result = _heresdkRoutingOfflineBindingslistofIntCreateHandle();
  for (final element in value) {
    final _elementHandle = (element);
    _heresdkRoutingOfflineBindingslistofIntInsert(_result, _elementHandle);
    
  }
  return _result;
}

List<int> heresdkRoutingOfflineBindingslistofIntFromFfi(Pointer<Void> handle) {
  final result = List<int>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingOfflineBindingslistofIntIterator(handle);
  while (_heresdkRoutingOfflineBindingslistofIntIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingOfflineBindingslistofIntIteratorGet(_iteratorHandle);
    try {
      result.add((_elementHandle));
    } finally {
      
    }
    _heresdkRoutingOfflineBindingslistofIntIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingOfflineBindingslistofIntIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingOfflineBindingslistofIntReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingOfflineBindingslistofIntReleaseHandle(handle);

final _heresdkRoutingOfflineBindingslistofIntCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_Int_create_handle_nullable'));
final _heresdkRoutingOfflineBindingslistofIntReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_Int_release_handle_nullable'));
final _heresdkRoutingOfflineBindingslistofIntGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_Int_get_value_nullable'));

Pointer<Void> heresdkRoutingOfflineBindingslistofIntToFfiNullable(List<int>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingOfflineBindingslistofIntToFfi(value);
  final result = _heresdkRoutingOfflineBindingslistofIntCreateHandleNullable(_handle);
  heresdkRoutingOfflineBindingslistofIntReleaseFfiHandle(_handle);
  return result;
}

List<int>? heresdkRoutingOfflineBindingslistofIntFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingOfflineBindingslistofIntGetValueNullable(handle);
  final result = heresdkRoutingOfflineBindingslistofIntFromFfi(_handle);
  heresdkRoutingOfflineBindingslistofIntReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingOfflineBindingslistofIntReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingOfflineBindingslistofIntReleaseHandleNullable(handle);

final _heresdkRoutingOfflineBindingslistofLocaleCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_offline_bindingsListOf_Locale_create_handle'));
final _heresdkRoutingOfflineBindingslistofLocaleReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_Locale_release_handle'));
final _heresdkRoutingOfflineBindingslistofLocaleInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_Locale_insert'));
final _heresdkRoutingOfflineBindingslistofLocaleIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_Locale_iterator'));
final _heresdkRoutingOfflineBindingslistofLocaleIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_Locale_iterator_release_handle'));
final _heresdkRoutingOfflineBindingslistofLocaleIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_Locale_iterator_is_valid'));
final _heresdkRoutingOfflineBindingslistofLocaleIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_Locale_iterator_increment'));
final _heresdkRoutingOfflineBindingslistofLocaleIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_Locale_iterator_get'));

Pointer<Void> heresdkRoutingOfflineBindingslistofLocaleToFfi(List<Locale> value) {
  final _result = _heresdkRoutingOfflineBindingslistofLocaleCreateHandle();
  for (final element in value) {
    final _elementHandle = localeToFfi(element);
    _heresdkRoutingOfflineBindingslistofLocaleInsert(_result, _elementHandle);
    localeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Locale> heresdkRoutingOfflineBindingslistofLocaleFromFfi(Pointer<Void> handle) {
  final result = List<Locale>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingOfflineBindingslistofLocaleIterator(handle);
  while (_heresdkRoutingOfflineBindingslistofLocaleIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingOfflineBindingslistofLocaleIteratorGet(_iteratorHandle);
    try {
      result.add(localeFromFfi(_elementHandle));
    } finally {
      localeReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingOfflineBindingslistofLocaleIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingOfflineBindingslistofLocaleIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingOfflineBindingslistofLocaleReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingOfflineBindingslistofLocaleReleaseHandle(handle);

final _heresdkRoutingOfflineBindingslistofLocaleCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_Locale_create_handle_nullable'));
final _heresdkRoutingOfflineBindingslistofLocaleReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_Locale_release_handle_nullable'));
final _heresdkRoutingOfflineBindingslistofLocaleGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_Locale_get_value_nullable'));

Pointer<Void> heresdkRoutingOfflineBindingslistofLocaleToFfiNullable(List<Locale>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingOfflineBindingslistofLocaleToFfi(value);
  final result = _heresdkRoutingOfflineBindingslistofLocaleCreateHandleNullable(_handle);
  heresdkRoutingOfflineBindingslistofLocaleReleaseFfiHandle(_handle);
  return result;
}

List<Locale>? heresdkRoutingOfflineBindingslistofLocaleFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingOfflineBindingslistofLocaleGetValueNullable(handle);
  final result = heresdkRoutingOfflineBindingslistofLocaleFromFfi(_handle);
  heresdkRoutingOfflineBindingslistofLocaleReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingOfflineBindingslistofLocaleReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingOfflineBindingslistofLocaleReleaseHandleNullable(handle);

final _heresdkRoutingOfflineBindingslistofSdkCoreCountrycodeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_core_CountryCode_create_handle'));
final _heresdkRoutingOfflineBindingslistofSdkCoreCountrycodeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_core_CountryCode_release_handle'));
final _heresdkRoutingOfflineBindingslistofSdkCoreCountrycodeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_core_CountryCode_insert'));
final _heresdkRoutingOfflineBindingslistofSdkCoreCountrycodeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_core_CountryCode_iterator'));
final _heresdkRoutingOfflineBindingslistofSdkCoreCountrycodeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_core_CountryCode_iterator_release_handle'));
final _heresdkRoutingOfflineBindingslistofSdkCoreCountrycodeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_core_CountryCode_iterator_is_valid'));
final _heresdkRoutingOfflineBindingslistofSdkCoreCountrycodeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_core_CountryCode_iterator_increment'));
final _heresdkRoutingOfflineBindingslistofSdkCoreCountrycodeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_core_CountryCode_iterator_get'));

Pointer<Void> heresdkRoutingOfflineBindingslistofSdkCoreCountrycodeToFfi(List<CountryCode> value) {
  final _result = _heresdkRoutingOfflineBindingslistofSdkCoreCountrycodeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreCountrycodeToFfi(element);
    _heresdkRoutingOfflineBindingslistofSdkCoreCountrycodeInsert(_result, _elementHandle);
    sdkCoreCountrycodeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<CountryCode> heresdkRoutingOfflineBindingslistofSdkCoreCountrycodeFromFfi(Pointer<Void> handle) {
  final result = List<CountryCode>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingOfflineBindingslistofSdkCoreCountrycodeIterator(handle);
  while (_heresdkRoutingOfflineBindingslistofSdkCoreCountrycodeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingOfflineBindingslistofSdkCoreCountrycodeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreCountrycodeFromFfi(_elementHandle));
    } finally {
      sdkCoreCountrycodeReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingOfflineBindingslistofSdkCoreCountrycodeIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingOfflineBindingslistofSdkCoreCountrycodeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingOfflineBindingslistofSdkCoreCountrycodeReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingOfflineBindingslistofSdkCoreCountrycodeReleaseHandle(handle);

final _heresdkRoutingOfflineBindingslistofSdkCoreCountrycodeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_core_CountryCode_create_handle_nullable'));
final _heresdkRoutingOfflineBindingslistofSdkCoreCountrycodeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_core_CountryCode_release_handle_nullable'));
final _heresdkRoutingOfflineBindingslistofSdkCoreCountrycodeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_core_CountryCode_get_value_nullable'));

Pointer<Void> heresdkRoutingOfflineBindingslistofSdkCoreCountrycodeToFfiNullable(List<CountryCode>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingOfflineBindingslistofSdkCoreCountrycodeToFfi(value);
  final result = _heresdkRoutingOfflineBindingslistofSdkCoreCountrycodeCreateHandleNullable(_handle);
  heresdkRoutingOfflineBindingslistofSdkCoreCountrycodeReleaseFfiHandle(_handle);
  return result;
}

List<CountryCode>? heresdkRoutingOfflineBindingslistofSdkCoreCountrycodeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingOfflineBindingslistofSdkCoreCountrycodeGetValueNullable(handle);
  final result = heresdkRoutingOfflineBindingslistofSdkCoreCountrycodeFromFfi(_handle);
  heresdkRoutingOfflineBindingslistofSdkCoreCountrycodeReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingOfflineBindingslistofSdkCoreCountrycodeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingOfflineBindingslistofSdkCoreCountrycodeReleaseHandleNullable(handle);

final _heresdkRoutingOfflineBindingslistofSdkCoreGeoboxCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_core_GeoBox_create_handle'));
final _heresdkRoutingOfflineBindingslistofSdkCoreGeoboxReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_core_GeoBox_release_handle'));
final _heresdkRoutingOfflineBindingslistofSdkCoreGeoboxInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_core_GeoBox_insert'));
final _heresdkRoutingOfflineBindingslistofSdkCoreGeoboxIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_core_GeoBox_iterator'));
final _heresdkRoutingOfflineBindingslistofSdkCoreGeoboxIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_core_GeoBox_iterator_release_handle'));
final _heresdkRoutingOfflineBindingslistofSdkCoreGeoboxIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_core_GeoBox_iterator_is_valid'));
final _heresdkRoutingOfflineBindingslistofSdkCoreGeoboxIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_core_GeoBox_iterator_increment'));
final _heresdkRoutingOfflineBindingslistofSdkCoreGeoboxIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_core_GeoBox_iterator_get'));

Pointer<Void> heresdkRoutingOfflineBindingslistofSdkCoreGeoboxToFfi(List<GeoBox> value) {
  final _result = _heresdkRoutingOfflineBindingslistofSdkCoreGeoboxCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreGeoboxToFfi(element);
    _heresdkRoutingOfflineBindingslistofSdkCoreGeoboxInsert(_result, _elementHandle);
    sdkCoreGeoboxReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoBox> heresdkRoutingOfflineBindingslistofSdkCoreGeoboxFromFfi(Pointer<Void> handle) {
  final result = List<GeoBox>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingOfflineBindingslistofSdkCoreGeoboxIterator(handle);
  while (_heresdkRoutingOfflineBindingslistofSdkCoreGeoboxIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingOfflineBindingslistofSdkCoreGeoboxIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreGeoboxFromFfi(_elementHandle));
    } finally {
      sdkCoreGeoboxReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingOfflineBindingslistofSdkCoreGeoboxIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingOfflineBindingslistofSdkCoreGeoboxIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingOfflineBindingslistofSdkCoreGeoboxReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingOfflineBindingslistofSdkCoreGeoboxReleaseHandle(handle);

final _heresdkRoutingOfflineBindingslistofSdkCoreGeoboxCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_core_GeoBox_create_handle_nullable'));
final _heresdkRoutingOfflineBindingslistofSdkCoreGeoboxReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_core_GeoBox_release_handle_nullable'));
final _heresdkRoutingOfflineBindingslistofSdkCoreGeoboxGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_core_GeoBox_get_value_nullable'));

Pointer<Void> heresdkRoutingOfflineBindingslistofSdkCoreGeoboxToFfiNullable(List<GeoBox>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingOfflineBindingslistofSdkCoreGeoboxToFfi(value);
  final result = _heresdkRoutingOfflineBindingslistofSdkCoreGeoboxCreateHandleNullable(_handle);
  heresdkRoutingOfflineBindingslistofSdkCoreGeoboxReleaseFfiHandle(_handle);
  return result;
}

List<GeoBox>? heresdkRoutingOfflineBindingslistofSdkCoreGeoboxFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingOfflineBindingslistofSdkCoreGeoboxGetValueNullable(handle);
  final result = heresdkRoutingOfflineBindingslistofSdkCoreGeoboxFromFfi(_handle);
  heresdkRoutingOfflineBindingslistofSdkCoreGeoboxReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingOfflineBindingslistofSdkCoreGeoboxReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingOfflineBindingslistofSdkCoreGeoboxReleaseHandleNullable(handle);

final _heresdkRoutingOfflineBindingslistofSdkCoreGeocoordinatesCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_core_GeoCoordinates_create_handle'));
final _heresdkRoutingOfflineBindingslistofSdkCoreGeocoordinatesReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_core_GeoCoordinates_release_handle'));
final _heresdkRoutingOfflineBindingslistofSdkCoreGeocoordinatesInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_core_GeoCoordinates_insert'));
final _heresdkRoutingOfflineBindingslistofSdkCoreGeocoordinatesIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_core_GeoCoordinates_iterator'));
final _heresdkRoutingOfflineBindingslistofSdkCoreGeocoordinatesIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_core_GeoCoordinates_iterator_release_handle'));
final _heresdkRoutingOfflineBindingslistofSdkCoreGeocoordinatesIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_core_GeoCoordinates_iterator_is_valid'));
final _heresdkRoutingOfflineBindingslistofSdkCoreGeocoordinatesIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_core_GeoCoordinates_iterator_increment'));
final _heresdkRoutingOfflineBindingslistofSdkCoreGeocoordinatesIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_core_GeoCoordinates_iterator_get'));

Pointer<Void> heresdkRoutingOfflineBindingslistofSdkCoreGeocoordinatesToFfi(List<GeoCoordinates> value) {
  final _result = _heresdkRoutingOfflineBindingslistofSdkCoreGeocoordinatesCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreGeocoordinatesToFfi(element);
    _heresdkRoutingOfflineBindingslistofSdkCoreGeocoordinatesInsert(_result, _elementHandle);
    sdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoCoordinates> heresdkRoutingOfflineBindingslistofSdkCoreGeocoordinatesFromFfi(Pointer<Void> handle) {
  final result = List<GeoCoordinates>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingOfflineBindingslistofSdkCoreGeocoordinatesIterator(handle);
  while (_heresdkRoutingOfflineBindingslistofSdkCoreGeocoordinatesIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingOfflineBindingslistofSdkCoreGeocoordinatesIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreGeocoordinatesFromFfi(_elementHandle));
    } finally {
      sdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingOfflineBindingslistofSdkCoreGeocoordinatesIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingOfflineBindingslistofSdkCoreGeocoordinatesIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingOfflineBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingOfflineBindingslistofSdkCoreGeocoordinatesReleaseHandle(handle);

final _heresdkRoutingOfflineBindingslistofSdkCoreGeocoordinatesCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_core_GeoCoordinates_create_handle_nullable'));
final _heresdkRoutingOfflineBindingslistofSdkCoreGeocoordinatesReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_core_GeoCoordinates_release_handle_nullable'));
final _heresdkRoutingOfflineBindingslistofSdkCoreGeocoordinatesGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_core_GeoCoordinates_get_value_nullable'));

Pointer<Void> heresdkRoutingOfflineBindingslistofSdkCoreGeocoordinatesToFfiNullable(List<GeoCoordinates>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingOfflineBindingslistofSdkCoreGeocoordinatesToFfi(value);
  final result = _heresdkRoutingOfflineBindingslistofSdkCoreGeocoordinatesCreateHandleNullable(_handle);
  heresdkRoutingOfflineBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

List<GeoCoordinates>? heresdkRoutingOfflineBindingslistofSdkCoreGeocoordinatesFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingOfflineBindingslistofSdkCoreGeocoordinatesGetValueNullable(handle);
  final result = heresdkRoutingOfflineBindingslistofSdkCoreGeocoordinatesFromFfi(_handle);
  heresdkRoutingOfflineBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingOfflineBindingslistofSdkCoreGeocoordinatesReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingOfflineBindingslistofSdkCoreGeocoordinatesReleaseHandleNullable(handle);

final _heresdkRoutingOfflineBindingslistofSdkCoreLocalizedtextCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_core_LocalizedText_create_handle'));
final _heresdkRoutingOfflineBindingslistofSdkCoreLocalizedtextReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_core_LocalizedText_release_handle'));
final _heresdkRoutingOfflineBindingslistofSdkCoreLocalizedtextInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_core_LocalizedText_insert'));
final _heresdkRoutingOfflineBindingslistofSdkCoreLocalizedtextIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_core_LocalizedText_iterator'));
final _heresdkRoutingOfflineBindingslistofSdkCoreLocalizedtextIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_core_LocalizedText_iterator_release_handle'));
final _heresdkRoutingOfflineBindingslistofSdkCoreLocalizedtextIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_core_LocalizedText_iterator_is_valid'));
final _heresdkRoutingOfflineBindingslistofSdkCoreLocalizedtextIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_core_LocalizedText_iterator_increment'));
final _heresdkRoutingOfflineBindingslistofSdkCoreLocalizedtextIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_core_LocalizedText_iterator_get'));

Pointer<Void> heresdkRoutingOfflineBindingslistofSdkCoreLocalizedtextToFfi(List<LocalizedText> value) {
  final _result = _heresdkRoutingOfflineBindingslistofSdkCoreLocalizedtextCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreLocalizedtextToFfi(element);
    _heresdkRoutingOfflineBindingslistofSdkCoreLocalizedtextInsert(_result, _elementHandle);
    sdkCoreLocalizedtextReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<LocalizedText> heresdkRoutingOfflineBindingslistofSdkCoreLocalizedtextFromFfi(Pointer<Void> handle) {
  final result = List<LocalizedText>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingOfflineBindingslistofSdkCoreLocalizedtextIterator(handle);
  while (_heresdkRoutingOfflineBindingslistofSdkCoreLocalizedtextIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingOfflineBindingslistofSdkCoreLocalizedtextIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreLocalizedtextFromFfi(_elementHandle));
    } finally {
      sdkCoreLocalizedtextReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingOfflineBindingslistofSdkCoreLocalizedtextIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingOfflineBindingslistofSdkCoreLocalizedtextIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingOfflineBindingslistofSdkCoreLocalizedtextReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingOfflineBindingslistofSdkCoreLocalizedtextReleaseHandle(handle);

final _heresdkRoutingOfflineBindingslistofSdkCoreLocalizedtextCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_core_LocalizedText_create_handle_nullable'));
final _heresdkRoutingOfflineBindingslistofSdkCoreLocalizedtextReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_core_LocalizedText_release_handle_nullable'));
final _heresdkRoutingOfflineBindingslistofSdkCoreLocalizedtextGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_core_LocalizedText_get_value_nullable'));

Pointer<Void> heresdkRoutingOfflineBindingslistofSdkCoreLocalizedtextToFfiNullable(List<LocalizedText>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingOfflineBindingslistofSdkCoreLocalizedtextToFfi(value);
  final result = _heresdkRoutingOfflineBindingslistofSdkCoreLocalizedtextCreateHandleNullable(_handle);
  heresdkRoutingOfflineBindingslistofSdkCoreLocalizedtextReleaseFfiHandle(_handle);
  return result;
}

List<LocalizedText>? heresdkRoutingOfflineBindingslistofSdkCoreLocalizedtextFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingOfflineBindingslistofSdkCoreLocalizedtextGetValueNullable(handle);
  final result = heresdkRoutingOfflineBindingslistofSdkCoreLocalizedtextFromFfi(_handle);
  heresdkRoutingOfflineBindingslistofSdkCoreLocalizedtextReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingOfflineBindingslistofSdkCoreLocalizedtextReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingOfflineBindingslistofSdkCoreLocalizedtextReleaseHandleNullable(handle);

final _heresdkRoutingOfflineBindingslistofSdkCoreEngineLayerconfigurationFeatureCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_create_handle'));
final _heresdkRoutingOfflineBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_release_handle'));
final _heresdkRoutingOfflineBindingslistofSdkCoreEngineLayerconfigurationFeatureInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_insert'));
final _heresdkRoutingOfflineBindingslistofSdkCoreEngineLayerconfigurationFeatureIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator'));
final _heresdkRoutingOfflineBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator_release_handle'));
final _heresdkRoutingOfflineBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator_is_valid'));
final _heresdkRoutingOfflineBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator_increment'));
final _heresdkRoutingOfflineBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator_get'));

Pointer<Void> heresdkRoutingOfflineBindingslistofSdkCoreEngineLayerconfigurationFeatureToFfi(List<LayerConfigurationFeature> value) {
  final _result = _heresdkRoutingOfflineBindingslistofSdkCoreEngineLayerconfigurationFeatureCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreEngineLayerconfigurationFeatureToFfi(element);
    _heresdkRoutingOfflineBindingslistofSdkCoreEngineLayerconfigurationFeatureInsert(_result, _elementHandle);
    sdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<LayerConfigurationFeature> heresdkRoutingOfflineBindingslistofSdkCoreEngineLayerconfigurationFeatureFromFfi(Pointer<Void> handle) {
  final result = List<LayerConfigurationFeature>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingOfflineBindingslistofSdkCoreEngineLayerconfigurationFeatureIterator(handle);
  while (_heresdkRoutingOfflineBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingOfflineBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreEngineLayerconfigurationFeatureFromFfi(_elementHandle));
    } finally {
      sdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingOfflineBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingOfflineBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingOfflineBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingOfflineBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseHandle(handle);

final _heresdkRoutingOfflineBindingslistofSdkCoreEngineLayerconfigurationFeatureCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_create_handle_nullable'));
final _heresdkRoutingOfflineBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_release_handle_nullable'));
final _heresdkRoutingOfflineBindingslistofSdkCoreEngineLayerconfigurationFeatureGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_get_value_nullable'));

Pointer<Void> heresdkRoutingOfflineBindingslistofSdkCoreEngineLayerconfigurationFeatureToFfiNullable(List<LayerConfigurationFeature>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingOfflineBindingslistofSdkCoreEngineLayerconfigurationFeatureToFfi(value);
  final result = _heresdkRoutingOfflineBindingslistofSdkCoreEngineLayerconfigurationFeatureCreateHandleNullable(_handle);
  heresdkRoutingOfflineBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(_handle);
  return result;
}

List<LayerConfigurationFeature>? heresdkRoutingOfflineBindingslistofSdkCoreEngineLayerconfigurationFeatureFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingOfflineBindingslistofSdkCoreEngineLayerconfigurationFeatureGetValueNullable(handle);
  final result = heresdkRoutingOfflineBindingslistofSdkCoreEngineLayerconfigurationFeatureFromFfi(_handle);
  heresdkRoutingOfflineBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingOfflineBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingOfflineBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseHandleNullable(handle);

final _heresdkRoutingOfflineBindingslistofSdkRoutingAttributionCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_Attribution_create_handle'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingAttributionReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_Attribution_release_handle'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingAttributionInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_Attribution_insert'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingAttributionIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_Attribution_iterator'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingAttributionIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_Attribution_iterator_release_handle'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingAttributionIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_Attribution_iterator_is_valid'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingAttributionIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_Attribution_iterator_increment'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingAttributionIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_Attribution_iterator_get'));

Pointer<Void> heresdkRoutingOfflineBindingslistofSdkRoutingAttributionToFfi(List<Attribution> value) {
  final _result = _heresdkRoutingOfflineBindingslistofSdkRoutingAttributionCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingAttributionToFfi(element);
    _heresdkRoutingOfflineBindingslistofSdkRoutingAttributionInsert(_result, _elementHandle);
    sdkRoutingAttributionReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Attribution> heresdkRoutingOfflineBindingslistofSdkRoutingAttributionFromFfi(Pointer<Void> handle) {
  final result = List<Attribution>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingOfflineBindingslistofSdkRoutingAttributionIterator(handle);
  while (_heresdkRoutingOfflineBindingslistofSdkRoutingAttributionIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingOfflineBindingslistofSdkRoutingAttributionIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingAttributionFromFfi(_elementHandle));
    } finally {
      sdkRoutingAttributionReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingOfflineBindingslistofSdkRoutingAttributionIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingOfflineBindingslistofSdkRoutingAttributionIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingOfflineBindingslistofSdkRoutingAttributionReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingOfflineBindingslistofSdkRoutingAttributionReleaseHandle(handle);

final _heresdkRoutingOfflineBindingslistofSdkRoutingAttributionCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_Attribution_create_handle_nullable'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingAttributionReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_Attribution_release_handle_nullable'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingAttributionGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_Attribution_get_value_nullable'));

Pointer<Void> heresdkRoutingOfflineBindingslistofSdkRoutingAttributionToFfiNullable(List<Attribution>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingOfflineBindingslistofSdkRoutingAttributionToFfi(value);
  final result = _heresdkRoutingOfflineBindingslistofSdkRoutingAttributionCreateHandleNullable(_handle);
  heresdkRoutingOfflineBindingslistofSdkRoutingAttributionReleaseFfiHandle(_handle);
  return result;
}

List<Attribution>? heresdkRoutingOfflineBindingslistofSdkRoutingAttributionFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingOfflineBindingslistofSdkRoutingAttributionGetValueNullable(handle);
  final result = heresdkRoutingOfflineBindingslistofSdkRoutingAttributionFromFfi(_handle);
  heresdkRoutingOfflineBindingslistofSdkRoutingAttributionReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingOfflineBindingslistofSdkRoutingAttributionReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingOfflineBindingslistofSdkRoutingAttributionReleaseHandleNullable(handle);

final _heresdkRoutingOfflineBindingslistofSdkRoutingChargingconnectortypeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_ChargingConnectorType_create_handle'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingChargingconnectortypeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_ChargingConnectorType_release_handle'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingChargingconnectortypeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_ChargingConnectorType_insert'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingChargingconnectortypeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_ChargingConnectorType_iterator'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingChargingconnectortypeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_ChargingConnectorType_iterator_release_handle'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingChargingconnectortypeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_ChargingConnectorType_iterator_is_valid'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingChargingconnectortypeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_ChargingConnectorType_iterator_increment'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingChargingconnectortypeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_ChargingConnectorType_iterator_get'));

Pointer<Void> heresdkRoutingOfflineBindingslistofSdkRoutingChargingconnectortypeToFfi(List<ChargingConnectorType> value) {
  final _result = _heresdkRoutingOfflineBindingslistofSdkRoutingChargingconnectortypeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingChargingconnectortypeToFfi(element);
    _heresdkRoutingOfflineBindingslistofSdkRoutingChargingconnectortypeInsert(_result, _elementHandle);
    sdkRoutingChargingconnectortypeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<ChargingConnectorType> heresdkRoutingOfflineBindingslistofSdkRoutingChargingconnectortypeFromFfi(Pointer<Void> handle) {
  final result = List<ChargingConnectorType>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingOfflineBindingslistofSdkRoutingChargingconnectortypeIterator(handle);
  while (_heresdkRoutingOfflineBindingslistofSdkRoutingChargingconnectortypeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingOfflineBindingslistofSdkRoutingChargingconnectortypeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingChargingconnectortypeFromFfi(_elementHandle));
    } finally {
      sdkRoutingChargingconnectortypeReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingOfflineBindingslistofSdkRoutingChargingconnectortypeIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingOfflineBindingslistofSdkRoutingChargingconnectortypeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingOfflineBindingslistofSdkRoutingChargingconnectortypeReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingOfflineBindingslistofSdkRoutingChargingconnectortypeReleaseHandle(handle);

final _heresdkRoutingOfflineBindingslistofSdkRoutingChargingconnectortypeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_ChargingConnectorType_create_handle_nullable'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingChargingconnectortypeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_ChargingConnectorType_release_handle_nullable'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingChargingconnectortypeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_ChargingConnectorType_get_value_nullable'));

Pointer<Void> heresdkRoutingOfflineBindingslistofSdkRoutingChargingconnectortypeToFfiNullable(List<ChargingConnectorType>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingOfflineBindingslistofSdkRoutingChargingconnectortypeToFfi(value);
  final result = _heresdkRoutingOfflineBindingslistofSdkRoutingChargingconnectortypeCreateHandleNullable(_handle);
  heresdkRoutingOfflineBindingslistofSdkRoutingChargingconnectortypeReleaseFfiHandle(_handle);
  return result;
}

List<ChargingConnectorType>? heresdkRoutingOfflineBindingslistofSdkRoutingChargingconnectortypeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingOfflineBindingslistofSdkRoutingChargingconnectortypeGetValueNullable(handle);
  final result = heresdkRoutingOfflineBindingslistofSdkRoutingChargingconnectortypeFromFfi(_handle);
  heresdkRoutingOfflineBindingslistofSdkRoutingChargingconnectortypeReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingOfflineBindingslistofSdkRoutingChargingconnectortypeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingOfflineBindingslistofSdkRoutingChargingconnectortypeReleaseHandleNullable(handle);

final _heresdkRoutingOfflineBindingslistofSdkRoutingFareCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_Fare_create_handle'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingFareReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_Fare_release_handle'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingFareInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_Fare_insert'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingFareIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_Fare_iterator'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingFareIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_Fare_iterator_release_handle'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingFareIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_Fare_iterator_is_valid'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingFareIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_Fare_iterator_increment'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingFareIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_Fare_iterator_get'));

Pointer<Void> heresdkRoutingOfflineBindingslistofSdkRoutingFareToFfi(List<Fare> value) {
  final _result = _heresdkRoutingOfflineBindingslistofSdkRoutingFareCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingFareToFfi(element);
    _heresdkRoutingOfflineBindingslistofSdkRoutingFareInsert(_result, _elementHandle);
    sdkRoutingFareReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Fare> heresdkRoutingOfflineBindingslistofSdkRoutingFareFromFfi(Pointer<Void> handle) {
  final result = List<Fare>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingOfflineBindingslistofSdkRoutingFareIterator(handle);
  while (_heresdkRoutingOfflineBindingslistofSdkRoutingFareIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingOfflineBindingslistofSdkRoutingFareIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingFareFromFfi(_elementHandle));
    } finally {
      sdkRoutingFareReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingOfflineBindingslistofSdkRoutingFareIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingOfflineBindingslistofSdkRoutingFareIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingOfflineBindingslistofSdkRoutingFareReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingOfflineBindingslistofSdkRoutingFareReleaseHandle(handle);

final _heresdkRoutingOfflineBindingslistofSdkRoutingFareCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_Fare_create_handle_nullable'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingFareReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_Fare_release_handle_nullable'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingFareGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_Fare_get_value_nullable'));

Pointer<Void> heresdkRoutingOfflineBindingslistofSdkRoutingFareToFfiNullable(List<Fare>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingOfflineBindingslistofSdkRoutingFareToFfi(value);
  final result = _heresdkRoutingOfflineBindingslistofSdkRoutingFareCreateHandleNullable(_handle);
  heresdkRoutingOfflineBindingslistofSdkRoutingFareReleaseFfiHandle(_handle);
  return result;
}

List<Fare>? heresdkRoutingOfflineBindingslistofSdkRoutingFareFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingOfflineBindingslistofSdkRoutingFareGetValueNullable(handle);
  final result = heresdkRoutingOfflineBindingslistofSdkRoutingFareFromFfi(_handle);
  heresdkRoutingOfflineBindingslistofSdkRoutingFareReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingOfflineBindingslistofSdkRoutingFareReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingOfflineBindingslistofSdkRoutingFareReleaseHandleNullable(handle);

final _heresdkRoutingOfflineBindingslistofSdkRoutingHazardousgoodCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_HazardousGood_create_handle'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingHazardousgoodReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_HazardousGood_release_handle'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingHazardousgoodInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_HazardousGood_insert'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingHazardousgoodIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_HazardousGood_iterator'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingHazardousgoodIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_HazardousGood_iterator_release_handle'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingHazardousgoodIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_HazardousGood_iterator_is_valid'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingHazardousgoodIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_HazardousGood_iterator_increment'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingHazardousgoodIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_HazardousGood_iterator_get'));

Pointer<Void> heresdkRoutingOfflineBindingslistofSdkRoutingHazardousgoodToFfi(List<HazardousGood> value) {
  final _result = _heresdkRoutingOfflineBindingslistofSdkRoutingHazardousgoodCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingHazardousgoodToFfi(element);
    _heresdkRoutingOfflineBindingslistofSdkRoutingHazardousgoodInsert(_result, _elementHandle);
    sdkRoutingHazardousgoodReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<HazardousGood> heresdkRoutingOfflineBindingslistofSdkRoutingHazardousgoodFromFfi(Pointer<Void> handle) {
  final result = List<HazardousGood>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingOfflineBindingslistofSdkRoutingHazardousgoodIterator(handle);
  while (_heresdkRoutingOfflineBindingslistofSdkRoutingHazardousgoodIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingOfflineBindingslistofSdkRoutingHazardousgoodIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingHazardousgoodFromFfi(_elementHandle));
    } finally {
      sdkRoutingHazardousgoodReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingOfflineBindingslistofSdkRoutingHazardousgoodIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingOfflineBindingslistofSdkRoutingHazardousgoodIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingOfflineBindingslistofSdkRoutingHazardousgoodReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingOfflineBindingslistofSdkRoutingHazardousgoodReleaseHandle(handle);

final _heresdkRoutingOfflineBindingslistofSdkRoutingHazardousgoodCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_HazardousGood_create_handle_nullable'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingHazardousgoodReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_HazardousGood_release_handle_nullable'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingHazardousgoodGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_HazardousGood_get_value_nullable'));

Pointer<Void> heresdkRoutingOfflineBindingslistofSdkRoutingHazardousgoodToFfiNullable(List<HazardousGood>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingOfflineBindingslistofSdkRoutingHazardousgoodToFfi(value);
  final result = _heresdkRoutingOfflineBindingslistofSdkRoutingHazardousgoodCreateHandleNullable(_handle);
  heresdkRoutingOfflineBindingslistofSdkRoutingHazardousgoodReleaseFfiHandle(_handle);
  return result;
}

List<HazardousGood>? heresdkRoutingOfflineBindingslistofSdkRoutingHazardousgoodFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingOfflineBindingslistofSdkRoutingHazardousgoodGetValueNullable(handle);
  final result = heresdkRoutingOfflineBindingslistofSdkRoutingHazardousgoodFromFfi(_handle);
  heresdkRoutingOfflineBindingslistofSdkRoutingHazardousgoodReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingOfflineBindingslistofSdkRoutingHazardousgoodReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingOfflineBindingslistofSdkRoutingHazardousgoodReleaseHandleNullable(handle);

final _heresdkRoutingOfflineBindingslistofSdkRoutingManeuverCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_Maneuver_create_handle'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingManeuverReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_Maneuver_release_handle'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingManeuverInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_Maneuver_insert'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingManeuverIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_Maneuver_iterator'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingManeuverIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_Maneuver_iterator_release_handle'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingManeuverIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_Maneuver_iterator_is_valid'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingManeuverIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_Maneuver_iterator_increment'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingManeuverIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_Maneuver_iterator_get'));

Pointer<Void> heresdkRoutingOfflineBindingslistofSdkRoutingManeuverToFfi(List<Maneuver> value) {
  final _result = _heresdkRoutingOfflineBindingslistofSdkRoutingManeuverCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingManeuverToFfi(element);
    _heresdkRoutingOfflineBindingslistofSdkRoutingManeuverInsert(_result, _elementHandle);
    sdkRoutingManeuverReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Maneuver> heresdkRoutingOfflineBindingslistofSdkRoutingManeuverFromFfi(Pointer<Void> handle) {
  final result = List<Maneuver>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingOfflineBindingslistofSdkRoutingManeuverIterator(handle);
  while (_heresdkRoutingOfflineBindingslistofSdkRoutingManeuverIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingOfflineBindingslistofSdkRoutingManeuverIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingManeuverFromFfi(_elementHandle));
    } finally {
      sdkRoutingManeuverReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingOfflineBindingslistofSdkRoutingManeuverIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingOfflineBindingslistofSdkRoutingManeuverIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingOfflineBindingslistofSdkRoutingManeuverReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingOfflineBindingslistofSdkRoutingManeuverReleaseHandle(handle);

final _heresdkRoutingOfflineBindingslistofSdkRoutingManeuverCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_Maneuver_create_handle_nullable'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingManeuverReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_Maneuver_release_handle_nullable'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingManeuverGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_Maneuver_get_value_nullable'));

Pointer<Void> heresdkRoutingOfflineBindingslistofSdkRoutingManeuverToFfiNullable(List<Maneuver>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingOfflineBindingslistofSdkRoutingManeuverToFfi(value);
  final result = _heresdkRoutingOfflineBindingslistofSdkRoutingManeuverCreateHandleNullable(_handle);
  heresdkRoutingOfflineBindingslistofSdkRoutingManeuverReleaseFfiHandle(_handle);
  return result;
}

List<Maneuver>? heresdkRoutingOfflineBindingslistofSdkRoutingManeuverFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingOfflineBindingslistofSdkRoutingManeuverGetValueNullable(handle);
  final result = heresdkRoutingOfflineBindingslistofSdkRoutingManeuverFromFfi(_handle);
  heresdkRoutingOfflineBindingslistofSdkRoutingManeuverReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingOfflineBindingslistofSdkRoutingManeuverReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingOfflineBindingslistofSdkRoutingManeuverReleaseHandleNullable(handle);

final _heresdkRoutingOfflineBindingslistofSdkRoutingPaymentmethodCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_PaymentMethod_create_handle'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingPaymentmethodReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_PaymentMethod_release_handle'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingPaymentmethodInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_PaymentMethod_insert'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingPaymentmethodIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_PaymentMethod_iterator'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingPaymentmethodIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_PaymentMethod_iterator_release_handle'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingPaymentmethodIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_PaymentMethod_iterator_is_valid'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingPaymentmethodIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_PaymentMethod_iterator_increment'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingPaymentmethodIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_PaymentMethod_iterator_get'));

Pointer<Void> heresdkRoutingOfflineBindingslistofSdkRoutingPaymentmethodToFfi(List<PaymentMethod> value) {
  final _result = _heresdkRoutingOfflineBindingslistofSdkRoutingPaymentmethodCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingPaymentmethodToFfi(element);
    _heresdkRoutingOfflineBindingslistofSdkRoutingPaymentmethodInsert(_result, _elementHandle);
    sdkRoutingPaymentmethodReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<PaymentMethod> heresdkRoutingOfflineBindingslistofSdkRoutingPaymentmethodFromFfi(Pointer<Void> handle) {
  final result = List<PaymentMethod>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingOfflineBindingslistofSdkRoutingPaymentmethodIterator(handle);
  while (_heresdkRoutingOfflineBindingslistofSdkRoutingPaymentmethodIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingOfflineBindingslistofSdkRoutingPaymentmethodIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingPaymentmethodFromFfi(_elementHandle));
    } finally {
      sdkRoutingPaymentmethodReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingOfflineBindingslistofSdkRoutingPaymentmethodIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingOfflineBindingslistofSdkRoutingPaymentmethodIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingOfflineBindingslistofSdkRoutingPaymentmethodReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingOfflineBindingslistofSdkRoutingPaymentmethodReleaseHandle(handle);

final _heresdkRoutingOfflineBindingslistofSdkRoutingPaymentmethodCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_PaymentMethod_create_handle_nullable'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingPaymentmethodReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_PaymentMethod_release_handle_nullable'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingPaymentmethodGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_PaymentMethod_get_value_nullable'));

Pointer<Void> heresdkRoutingOfflineBindingslistofSdkRoutingPaymentmethodToFfiNullable(List<PaymentMethod>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingOfflineBindingslistofSdkRoutingPaymentmethodToFfi(value);
  final result = _heresdkRoutingOfflineBindingslistofSdkRoutingPaymentmethodCreateHandleNullable(_handle);
  heresdkRoutingOfflineBindingslistofSdkRoutingPaymentmethodReleaseFfiHandle(_handle);
  return result;
}

List<PaymentMethod>? heresdkRoutingOfflineBindingslistofSdkRoutingPaymentmethodFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingOfflineBindingslistofSdkRoutingPaymentmethodGetValueNullable(handle);
  final result = heresdkRoutingOfflineBindingslistofSdkRoutingPaymentmethodFromFfi(_handle);
  heresdkRoutingOfflineBindingslistofSdkRoutingPaymentmethodReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingOfflineBindingslistofSdkRoutingPaymentmethodReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingOfflineBindingslistofSdkRoutingPaymentmethodReleaseHandleNullable(handle);

final _heresdkRoutingOfflineBindingslistofSdkRoutingPostactionCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_PostAction_create_handle'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingPostactionReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_PostAction_release_handle'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingPostactionInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_PostAction_insert'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingPostactionIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_PostAction_iterator'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingPostactionIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_PostAction_iterator_release_handle'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingPostactionIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_PostAction_iterator_is_valid'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingPostactionIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_PostAction_iterator_increment'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingPostactionIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_PostAction_iterator_get'));

Pointer<Void> heresdkRoutingOfflineBindingslistofSdkRoutingPostactionToFfi(List<PostAction> value) {
  final _result = _heresdkRoutingOfflineBindingslistofSdkRoutingPostactionCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingPostactionToFfi(element);
    _heresdkRoutingOfflineBindingslistofSdkRoutingPostactionInsert(_result, _elementHandle);
    sdkRoutingPostactionReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<PostAction> heresdkRoutingOfflineBindingslistofSdkRoutingPostactionFromFfi(Pointer<Void> handle) {
  final result = List<PostAction>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingOfflineBindingslistofSdkRoutingPostactionIterator(handle);
  while (_heresdkRoutingOfflineBindingslistofSdkRoutingPostactionIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingOfflineBindingslistofSdkRoutingPostactionIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingPostactionFromFfi(_elementHandle));
    } finally {
      sdkRoutingPostactionReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingOfflineBindingslistofSdkRoutingPostactionIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingOfflineBindingslistofSdkRoutingPostactionIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingOfflineBindingslistofSdkRoutingPostactionReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingOfflineBindingslistofSdkRoutingPostactionReleaseHandle(handle);

final _heresdkRoutingOfflineBindingslistofSdkRoutingPostactionCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_PostAction_create_handle_nullable'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingPostactionReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_PostAction_release_handle_nullable'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingPostactionGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_PostAction_get_value_nullable'));

Pointer<Void> heresdkRoutingOfflineBindingslistofSdkRoutingPostactionToFfiNullable(List<PostAction>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingOfflineBindingslistofSdkRoutingPostactionToFfi(value);
  final result = _heresdkRoutingOfflineBindingslistofSdkRoutingPostactionCreateHandleNullable(_handle);
  heresdkRoutingOfflineBindingslistofSdkRoutingPostactionReleaseFfiHandle(_handle);
  return result;
}

List<PostAction>? heresdkRoutingOfflineBindingslistofSdkRoutingPostactionFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingOfflineBindingslistofSdkRoutingPostactionGetValueNullable(handle);
  final result = heresdkRoutingOfflineBindingslistofSdkRoutingPostactionFromFfi(_handle);
  heresdkRoutingOfflineBindingslistofSdkRoutingPostactionReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingOfflineBindingslistofSdkRoutingPostactionReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingOfflineBindingslistofSdkRoutingPostactionReleaseHandleNullable(handle);

final _heresdkRoutingOfflineBindingslistofSdkRoutingPreactionCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_PreAction_create_handle'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingPreactionReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_PreAction_release_handle'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingPreactionInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_PreAction_insert'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingPreactionIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_PreAction_iterator'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingPreactionIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_PreAction_iterator_release_handle'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingPreactionIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_PreAction_iterator_is_valid'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingPreactionIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_PreAction_iterator_increment'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingPreactionIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_PreAction_iterator_get'));

Pointer<Void> heresdkRoutingOfflineBindingslistofSdkRoutingPreactionToFfi(List<PreAction> value) {
  final _result = _heresdkRoutingOfflineBindingslistofSdkRoutingPreactionCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingPreactionToFfi(element);
    _heresdkRoutingOfflineBindingslistofSdkRoutingPreactionInsert(_result, _elementHandle);
    sdkRoutingPreactionReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<PreAction> heresdkRoutingOfflineBindingslistofSdkRoutingPreactionFromFfi(Pointer<Void> handle) {
  final result = List<PreAction>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingOfflineBindingslistofSdkRoutingPreactionIterator(handle);
  while (_heresdkRoutingOfflineBindingslistofSdkRoutingPreactionIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingOfflineBindingslistofSdkRoutingPreactionIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingPreactionFromFfi(_elementHandle));
    } finally {
      sdkRoutingPreactionReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingOfflineBindingslistofSdkRoutingPreactionIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingOfflineBindingslistofSdkRoutingPreactionIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingOfflineBindingslistofSdkRoutingPreactionReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingOfflineBindingslistofSdkRoutingPreactionReleaseHandle(handle);

final _heresdkRoutingOfflineBindingslistofSdkRoutingPreactionCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_PreAction_create_handle_nullable'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingPreactionReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_PreAction_release_handle_nullable'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingPreactionGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_PreAction_get_value_nullable'));

Pointer<Void> heresdkRoutingOfflineBindingslistofSdkRoutingPreactionToFfiNullable(List<PreAction>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingOfflineBindingslistofSdkRoutingPreactionToFfi(value);
  final result = _heresdkRoutingOfflineBindingslistofSdkRoutingPreactionCreateHandleNullable(_handle);
  heresdkRoutingOfflineBindingslistofSdkRoutingPreactionReleaseFfiHandle(_handle);
  return result;
}

List<PreAction>? heresdkRoutingOfflineBindingslistofSdkRoutingPreactionFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingOfflineBindingslistofSdkRoutingPreactionGetValueNullable(handle);
  final result = heresdkRoutingOfflineBindingslistofSdkRoutingPreactionFromFfi(_handle);
  heresdkRoutingOfflineBindingslistofSdkRoutingPreactionReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingOfflineBindingslistofSdkRoutingPreactionReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingOfflineBindingslistofSdkRoutingPreactionReleaseHandleNullable(handle);

final _heresdkRoutingOfflineBindingslistofSdkRoutingRoadfeaturesCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_RoadFeatures_create_handle'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingRoadfeaturesReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_RoadFeatures_release_handle'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingRoadfeaturesInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_RoadFeatures_insert'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingRoadfeaturesIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_RoadFeatures_iterator'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingRoadfeaturesIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_RoadFeatures_iterator_release_handle'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingRoadfeaturesIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_RoadFeatures_iterator_is_valid'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingRoadfeaturesIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_RoadFeatures_iterator_increment'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingRoadfeaturesIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_RoadFeatures_iterator_get'));

Pointer<Void> heresdkRoutingOfflineBindingslistofSdkRoutingRoadfeaturesToFfi(List<RoadFeatures> value) {
  final _result = _heresdkRoutingOfflineBindingslistofSdkRoutingRoadfeaturesCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingRoadfeaturesToFfi(element);
    _heresdkRoutingOfflineBindingslistofSdkRoutingRoadfeaturesInsert(_result, _elementHandle);
    sdkRoutingRoadfeaturesReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<RoadFeatures> heresdkRoutingOfflineBindingslistofSdkRoutingRoadfeaturesFromFfi(Pointer<Void> handle) {
  final result = List<RoadFeatures>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingOfflineBindingslistofSdkRoutingRoadfeaturesIterator(handle);
  while (_heresdkRoutingOfflineBindingslistofSdkRoutingRoadfeaturesIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingOfflineBindingslistofSdkRoutingRoadfeaturesIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingRoadfeaturesFromFfi(_elementHandle));
    } finally {
      sdkRoutingRoadfeaturesReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingOfflineBindingslistofSdkRoutingRoadfeaturesIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingOfflineBindingslistofSdkRoutingRoadfeaturesIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingOfflineBindingslistofSdkRoutingRoadfeaturesReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingOfflineBindingslistofSdkRoutingRoadfeaturesReleaseHandle(handle);

final _heresdkRoutingOfflineBindingslistofSdkRoutingRoadfeaturesCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_RoadFeatures_create_handle_nullable'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingRoadfeaturesReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_RoadFeatures_release_handle_nullable'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingRoadfeaturesGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_RoadFeatures_get_value_nullable'));

Pointer<Void> heresdkRoutingOfflineBindingslistofSdkRoutingRoadfeaturesToFfiNullable(List<RoadFeatures>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingOfflineBindingslistofSdkRoutingRoadfeaturesToFfi(value);
  final result = _heresdkRoutingOfflineBindingslistofSdkRoutingRoadfeaturesCreateHandleNullable(_handle);
  heresdkRoutingOfflineBindingslistofSdkRoutingRoadfeaturesReleaseFfiHandle(_handle);
  return result;
}

List<RoadFeatures>? heresdkRoutingOfflineBindingslistofSdkRoutingRoadfeaturesFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingOfflineBindingslistofSdkRoutingRoadfeaturesGetValueNullable(handle);
  final result = heresdkRoutingOfflineBindingslistofSdkRoutingRoadfeaturesFromFfi(_handle);
  heresdkRoutingOfflineBindingslistofSdkRoutingRoadfeaturesReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingOfflineBindingslistofSdkRoutingRoadfeaturesReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingOfflineBindingslistofSdkRoutingRoadfeaturesReleaseHandleNullable(handle);

final _heresdkRoutingOfflineBindingslistofSdkRoutingRouteCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_Route_create_handle'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingRouteReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_Route_release_handle'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingRouteInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_Route_insert'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingRouteIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_Route_iterator'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingRouteIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_Route_iterator_release_handle'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingRouteIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_Route_iterator_is_valid'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingRouteIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_Route_iterator_increment'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingRouteIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_Route_iterator_get'));

Pointer<Void> heresdkRoutingOfflineBindingslistofSdkRoutingRouteToFfi(List<Route> value) {
  final _result = _heresdkRoutingOfflineBindingslistofSdkRoutingRouteCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingRouteToFfi(element);
    _heresdkRoutingOfflineBindingslistofSdkRoutingRouteInsert(_result, _elementHandle);
    sdkRoutingRouteReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Route> heresdkRoutingOfflineBindingslistofSdkRoutingRouteFromFfi(Pointer<Void> handle) {
  final result = List<Route>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingOfflineBindingslistofSdkRoutingRouteIterator(handle);
  while (_heresdkRoutingOfflineBindingslistofSdkRoutingRouteIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingOfflineBindingslistofSdkRoutingRouteIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingRouteFromFfi(_elementHandle));
    } finally {
      sdkRoutingRouteReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingOfflineBindingslistofSdkRoutingRouteIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingOfflineBindingslistofSdkRoutingRouteIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingOfflineBindingslistofSdkRoutingRouteReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingOfflineBindingslistofSdkRoutingRouteReleaseHandle(handle);

final _heresdkRoutingOfflineBindingslistofSdkRoutingRouteCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_Route_create_handle_nullable'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingRouteReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_Route_release_handle_nullable'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingRouteGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_Route_get_value_nullable'));

Pointer<Void> heresdkRoutingOfflineBindingslistofSdkRoutingRouteToFfiNullable(List<Route>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingOfflineBindingslistofSdkRoutingRouteToFfi(value);
  final result = _heresdkRoutingOfflineBindingslistofSdkRoutingRouteCreateHandleNullable(_handle);
  heresdkRoutingOfflineBindingslistofSdkRoutingRouteReleaseFfiHandle(_handle);
  return result;
}

List<Route>? heresdkRoutingOfflineBindingslistofSdkRoutingRouteFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingOfflineBindingslistofSdkRoutingRouteGetValueNullable(handle);
  final result = heresdkRoutingOfflineBindingslistofSdkRoutingRouteFromFfi(_handle);
  heresdkRoutingOfflineBindingslistofSdkRoutingRouteReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingOfflineBindingslistofSdkRoutingRouteReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingOfflineBindingslistofSdkRoutingRouteReleaseHandleNullable(handle);

final _heresdkRoutingOfflineBindingslistofSdkRoutingSectionCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_Section_create_handle'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingSectionReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_Section_release_handle'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingSectionInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_Section_insert'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingSectionIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_Section_iterator'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingSectionIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_Section_iterator_release_handle'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingSectionIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_Section_iterator_is_valid'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingSectionIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_Section_iterator_increment'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingSectionIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_Section_iterator_get'));

Pointer<Void> heresdkRoutingOfflineBindingslistofSdkRoutingSectionToFfi(List<Section> value) {
  final _result = _heresdkRoutingOfflineBindingslistofSdkRoutingSectionCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingSectionToFfi(element);
    _heresdkRoutingOfflineBindingslistofSdkRoutingSectionInsert(_result, _elementHandle);
    sdkRoutingSectionReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Section> heresdkRoutingOfflineBindingslistofSdkRoutingSectionFromFfi(Pointer<Void> handle) {
  final result = List<Section>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingOfflineBindingslistofSdkRoutingSectionIterator(handle);
  while (_heresdkRoutingOfflineBindingslistofSdkRoutingSectionIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingOfflineBindingslistofSdkRoutingSectionIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingSectionFromFfi(_elementHandle));
    } finally {
      sdkRoutingSectionReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingOfflineBindingslistofSdkRoutingSectionIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingOfflineBindingslistofSdkRoutingSectionIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingOfflineBindingslistofSdkRoutingSectionReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingOfflineBindingslistofSdkRoutingSectionReleaseHandle(handle);

final _heresdkRoutingOfflineBindingslistofSdkRoutingSectionCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_Section_create_handle_nullable'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingSectionReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_Section_release_handle_nullable'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingSectionGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_Section_get_value_nullable'));

Pointer<Void> heresdkRoutingOfflineBindingslistofSdkRoutingSectionToFfiNullable(List<Section>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingOfflineBindingslistofSdkRoutingSectionToFfi(value);
  final result = _heresdkRoutingOfflineBindingslistofSdkRoutingSectionCreateHandleNullable(_handle);
  heresdkRoutingOfflineBindingslistofSdkRoutingSectionReleaseFfiHandle(_handle);
  return result;
}

List<Section>? heresdkRoutingOfflineBindingslistofSdkRoutingSectionFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingOfflineBindingslistofSdkRoutingSectionGetValueNullable(handle);
  final result = heresdkRoutingOfflineBindingslistofSdkRoutingSectionFromFfi(_handle);
  heresdkRoutingOfflineBindingslistofSdkRoutingSectionReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingOfflineBindingslistofSdkRoutingSectionReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingOfflineBindingslistofSdkRoutingSectionReleaseHandleNullable(handle);

final _heresdkRoutingOfflineBindingslistofSdkRoutingSectionnoticeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_SectionNotice_create_handle'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingSectionnoticeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_SectionNotice_release_handle'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingSectionnoticeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_SectionNotice_insert'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingSectionnoticeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_SectionNotice_iterator'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingSectionnoticeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_SectionNotice_iterator_release_handle'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingSectionnoticeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_SectionNotice_iterator_is_valid'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingSectionnoticeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_SectionNotice_iterator_increment'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingSectionnoticeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_SectionNotice_iterator_get'));

Pointer<Void> heresdkRoutingOfflineBindingslistofSdkRoutingSectionnoticeToFfi(List<SectionNotice> value) {
  final _result = _heresdkRoutingOfflineBindingslistofSdkRoutingSectionnoticeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingSectionnoticeToFfi(element);
    _heresdkRoutingOfflineBindingslistofSdkRoutingSectionnoticeInsert(_result, _elementHandle);
    sdkRoutingSectionnoticeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<SectionNotice> heresdkRoutingOfflineBindingslistofSdkRoutingSectionnoticeFromFfi(Pointer<Void> handle) {
  final result = List<SectionNotice>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingOfflineBindingslistofSdkRoutingSectionnoticeIterator(handle);
  while (_heresdkRoutingOfflineBindingslistofSdkRoutingSectionnoticeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingOfflineBindingslistofSdkRoutingSectionnoticeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingSectionnoticeFromFfi(_elementHandle));
    } finally {
      sdkRoutingSectionnoticeReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingOfflineBindingslistofSdkRoutingSectionnoticeIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingOfflineBindingslistofSdkRoutingSectionnoticeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingOfflineBindingslistofSdkRoutingSectionnoticeReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingOfflineBindingslistofSdkRoutingSectionnoticeReleaseHandle(handle);

final _heresdkRoutingOfflineBindingslistofSdkRoutingSectionnoticeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_SectionNotice_create_handle_nullable'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingSectionnoticeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_SectionNotice_release_handle_nullable'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingSectionnoticeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_SectionNotice_get_value_nullable'));

Pointer<Void> heresdkRoutingOfflineBindingslistofSdkRoutingSectionnoticeToFfiNullable(List<SectionNotice>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingOfflineBindingslistofSdkRoutingSectionnoticeToFfi(value);
  final result = _heresdkRoutingOfflineBindingslistofSdkRoutingSectionnoticeCreateHandleNullable(_handle);
  heresdkRoutingOfflineBindingslistofSdkRoutingSectionnoticeReleaseFfiHandle(_handle);
  return result;
}

List<SectionNotice>? heresdkRoutingOfflineBindingslistofSdkRoutingSectionnoticeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingOfflineBindingslistofSdkRoutingSectionnoticeGetValueNullable(handle);
  final result = heresdkRoutingOfflineBindingslistofSdkRoutingSectionnoticeFromFfi(_handle);
  heresdkRoutingOfflineBindingslistofSdkRoutingSectionnoticeReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingOfflineBindingslistofSdkRoutingSectionnoticeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingOfflineBindingslistofSdkRoutingSectionnoticeReleaseHandleNullable(handle);

final _heresdkRoutingOfflineBindingslistofSdkRoutingSegmentreferenceCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_SegmentReference_create_handle'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingSegmentreferenceReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_SegmentReference_release_handle'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingSegmentreferenceInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_SegmentReference_insert'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingSegmentreferenceIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_SegmentReference_iterator'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingSegmentreferenceIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_SegmentReference_iterator_release_handle'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingSegmentreferenceIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_SegmentReference_iterator_is_valid'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingSegmentreferenceIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_SegmentReference_iterator_increment'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingSegmentreferenceIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_SegmentReference_iterator_get'));

Pointer<Void> heresdkRoutingOfflineBindingslistofSdkRoutingSegmentreferenceToFfi(List<SegmentReference> value) {
  final _result = _heresdkRoutingOfflineBindingslistofSdkRoutingSegmentreferenceCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingSegmentreferenceToFfi(element);
    _heresdkRoutingOfflineBindingslistofSdkRoutingSegmentreferenceInsert(_result, _elementHandle);
    sdkRoutingSegmentreferenceReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<SegmentReference> heresdkRoutingOfflineBindingslistofSdkRoutingSegmentreferenceFromFfi(Pointer<Void> handle) {
  final result = List<SegmentReference>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingOfflineBindingslistofSdkRoutingSegmentreferenceIterator(handle);
  while (_heresdkRoutingOfflineBindingslistofSdkRoutingSegmentreferenceIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingOfflineBindingslistofSdkRoutingSegmentreferenceIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingSegmentreferenceFromFfi(_elementHandle));
    } finally {
      sdkRoutingSegmentreferenceReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingOfflineBindingslistofSdkRoutingSegmentreferenceIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingOfflineBindingslistofSdkRoutingSegmentreferenceIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingOfflineBindingslistofSdkRoutingSegmentreferenceReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingOfflineBindingslistofSdkRoutingSegmentreferenceReleaseHandle(handle);

final _heresdkRoutingOfflineBindingslistofSdkRoutingSegmentreferenceCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_SegmentReference_create_handle_nullable'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingSegmentreferenceReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_SegmentReference_release_handle_nullable'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingSegmentreferenceGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_SegmentReference_get_value_nullable'));

Pointer<Void> heresdkRoutingOfflineBindingslistofSdkRoutingSegmentreferenceToFfiNullable(List<SegmentReference>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingOfflineBindingslistofSdkRoutingSegmentreferenceToFfi(value);
  final result = _heresdkRoutingOfflineBindingslistofSdkRoutingSegmentreferenceCreateHandleNullable(_handle);
  heresdkRoutingOfflineBindingslistofSdkRoutingSegmentreferenceReleaseFfiHandle(_handle);
  return result;
}

List<SegmentReference>? heresdkRoutingOfflineBindingslistofSdkRoutingSegmentreferenceFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingOfflineBindingslistofSdkRoutingSegmentreferenceGetValueNullable(handle);
  final result = heresdkRoutingOfflineBindingslistofSdkRoutingSegmentreferenceFromFfi(_handle);
  heresdkRoutingOfflineBindingslistofSdkRoutingSegmentreferenceReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingOfflineBindingslistofSdkRoutingSegmentreferenceReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingOfflineBindingslistofSdkRoutingSegmentreferenceReleaseHandleNullable(handle);

final _heresdkRoutingOfflineBindingslistofSdkRoutingSpanCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_Span_create_handle'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingSpanReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_Span_release_handle'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingSpanInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_Span_insert'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingSpanIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_Span_iterator'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingSpanIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_Span_iterator_release_handle'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingSpanIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_Span_iterator_is_valid'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingSpanIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_Span_iterator_increment'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingSpanIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_Span_iterator_get'));

Pointer<Void> heresdkRoutingOfflineBindingslistofSdkRoutingSpanToFfi(List<Span> value) {
  final _result = _heresdkRoutingOfflineBindingslistofSdkRoutingSpanCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingSpanToFfi(element);
    _heresdkRoutingOfflineBindingslistofSdkRoutingSpanInsert(_result, _elementHandle);
    sdkRoutingSpanReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Span> heresdkRoutingOfflineBindingslistofSdkRoutingSpanFromFfi(Pointer<Void> handle) {
  final result = List<Span>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingOfflineBindingslistofSdkRoutingSpanIterator(handle);
  while (_heresdkRoutingOfflineBindingslistofSdkRoutingSpanIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingOfflineBindingslistofSdkRoutingSpanIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingSpanFromFfi(_elementHandle));
    } finally {
      sdkRoutingSpanReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingOfflineBindingslistofSdkRoutingSpanIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingOfflineBindingslistofSdkRoutingSpanIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingOfflineBindingslistofSdkRoutingSpanReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingOfflineBindingslistofSdkRoutingSpanReleaseHandle(handle);

final _heresdkRoutingOfflineBindingslistofSdkRoutingSpanCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_Span_create_handle_nullable'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingSpanReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_Span_release_handle_nullable'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingSpanGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_Span_get_value_nullable'));

Pointer<Void> heresdkRoutingOfflineBindingslistofSdkRoutingSpanToFfiNullable(List<Span>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingOfflineBindingslistofSdkRoutingSpanToFfi(value);
  final result = _heresdkRoutingOfflineBindingslistofSdkRoutingSpanCreateHandleNullable(_handle);
  heresdkRoutingOfflineBindingslistofSdkRoutingSpanReleaseFfiHandle(_handle);
  return result;
}

List<Span>? heresdkRoutingOfflineBindingslistofSdkRoutingSpanFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingOfflineBindingslistofSdkRoutingSpanGetValueNullable(handle);
  final result = heresdkRoutingOfflineBindingslistofSdkRoutingSpanFromFfi(_handle);
  heresdkRoutingOfflineBindingslistofSdkRoutingSpanReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingOfflineBindingslistofSdkRoutingSpanReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingOfflineBindingslistofSdkRoutingSpanReleaseHandleNullable(handle);

final _heresdkRoutingOfflineBindingslistofSdkRoutingTollCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_Toll_create_handle'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingTollReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_Toll_release_handle'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingTollInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_Toll_insert'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingTollIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_Toll_iterator'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingTollIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_Toll_iterator_release_handle'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingTollIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_Toll_iterator_is_valid'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingTollIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_Toll_iterator_increment'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingTollIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_Toll_iterator_get'));

Pointer<Void> heresdkRoutingOfflineBindingslistofSdkRoutingTollToFfi(List<Toll> value) {
  final _result = _heresdkRoutingOfflineBindingslistofSdkRoutingTollCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingTollToFfi(element);
    _heresdkRoutingOfflineBindingslistofSdkRoutingTollInsert(_result, _elementHandle);
    sdkRoutingTollReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Toll> heresdkRoutingOfflineBindingslistofSdkRoutingTollFromFfi(Pointer<Void> handle) {
  final result = List<Toll>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingOfflineBindingslistofSdkRoutingTollIterator(handle);
  while (_heresdkRoutingOfflineBindingslistofSdkRoutingTollIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingOfflineBindingslistofSdkRoutingTollIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingTollFromFfi(_elementHandle));
    } finally {
      sdkRoutingTollReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingOfflineBindingslistofSdkRoutingTollIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingOfflineBindingslistofSdkRoutingTollIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingOfflineBindingslistofSdkRoutingTollReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingOfflineBindingslistofSdkRoutingTollReleaseHandle(handle);

final _heresdkRoutingOfflineBindingslistofSdkRoutingTollCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_Toll_create_handle_nullable'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingTollReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_Toll_release_handle_nullable'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingTollGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_Toll_get_value_nullable'));

Pointer<Void> heresdkRoutingOfflineBindingslistofSdkRoutingTollToFfiNullable(List<Toll>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingOfflineBindingslistofSdkRoutingTollToFfi(value);
  final result = _heresdkRoutingOfflineBindingslistofSdkRoutingTollCreateHandleNullable(_handle);
  heresdkRoutingOfflineBindingslistofSdkRoutingTollReleaseFfiHandle(_handle);
  return result;
}

List<Toll>? heresdkRoutingOfflineBindingslistofSdkRoutingTollFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingOfflineBindingslistofSdkRoutingTollGetValueNullable(handle);
  final result = heresdkRoutingOfflineBindingslistofSdkRoutingTollFromFfi(_handle);
  heresdkRoutingOfflineBindingslistofSdkRoutingTollReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingOfflineBindingslistofSdkRoutingTollReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingOfflineBindingslistofSdkRoutingTollReleaseHandleNullable(handle);

final _heresdkRoutingOfflineBindingslistofSdkRoutingTollfareCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_TollFare_create_handle'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingTollfareReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_TollFare_release_handle'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingTollfareInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_TollFare_insert'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingTollfareIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_TollFare_iterator'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingTollfareIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_TollFare_iterator_release_handle'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingTollfareIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_TollFare_iterator_is_valid'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingTollfareIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_TollFare_iterator_increment'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingTollfareIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_TollFare_iterator_get'));

Pointer<Void> heresdkRoutingOfflineBindingslistofSdkRoutingTollfareToFfi(List<TollFare> value) {
  final _result = _heresdkRoutingOfflineBindingslistofSdkRoutingTollfareCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingTollfareToFfi(element);
    _heresdkRoutingOfflineBindingslistofSdkRoutingTollfareInsert(_result, _elementHandle);
    sdkRoutingTollfareReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<TollFare> heresdkRoutingOfflineBindingslistofSdkRoutingTollfareFromFfi(Pointer<Void> handle) {
  final result = List<TollFare>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingOfflineBindingslistofSdkRoutingTollfareIterator(handle);
  while (_heresdkRoutingOfflineBindingslistofSdkRoutingTollfareIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingOfflineBindingslistofSdkRoutingTollfareIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingTollfareFromFfi(_elementHandle));
    } finally {
      sdkRoutingTollfareReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingOfflineBindingslistofSdkRoutingTollfareIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingOfflineBindingslistofSdkRoutingTollfareIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingOfflineBindingslistofSdkRoutingTollfareReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingOfflineBindingslistofSdkRoutingTollfareReleaseHandle(handle);

final _heresdkRoutingOfflineBindingslistofSdkRoutingTollfareCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_TollFare_create_handle_nullable'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingTollfareReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_TollFare_release_handle_nullable'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingTollfareGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_TollFare_get_value_nullable'));

Pointer<Void> heresdkRoutingOfflineBindingslistofSdkRoutingTollfareToFfiNullable(List<TollFare>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingOfflineBindingslistofSdkRoutingTollfareToFfi(value);
  final result = _heresdkRoutingOfflineBindingslistofSdkRoutingTollfareCreateHandleNullable(_handle);
  heresdkRoutingOfflineBindingslistofSdkRoutingTollfareReleaseFfiHandle(_handle);
  return result;
}

List<TollFare>? heresdkRoutingOfflineBindingslistofSdkRoutingTollfareFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingOfflineBindingslistofSdkRoutingTollfareGetValueNullable(handle);
  final result = heresdkRoutingOfflineBindingslistofSdkRoutingTollfareFromFfi(_handle);
  heresdkRoutingOfflineBindingslistofSdkRoutingTollfareReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingOfflineBindingslistofSdkRoutingTollfareReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingOfflineBindingslistofSdkRoutingTollfareReleaseHandleNullable(handle);

final _heresdkRoutingOfflineBindingslistofSdkRoutingTrafficincidentonrouteCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_TrafficIncidentOnRoute_create_handle'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingTrafficincidentonrouteReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_TrafficIncidentOnRoute_release_handle'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingTrafficincidentonrouteInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_TrafficIncidentOnRoute_insert'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingTrafficincidentonrouteIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_TrafficIncidentOnRoute_iterator'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingTrafficincidentonrouteIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_TrafficIncidentOnRoute_iterator_release_handle'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingTrafficincidentonrouteIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_TrafficIncidentOnRoute_iterator_is_valid'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingTrafficincidentonrouteIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_TrafficIncidentOnRoute_iterator_increment'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingTrafficincidentonrouteIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_TrafficIncidentOnRoute_iterator_get'));

Pointer<Void> heresdkRoutingOfflineBindingslistofSdkRoutingTrafficincidentonrouteToFfi(List<TrafficIncidentOnRoute> value) {
  final _result = _heresdkRoutingOfflineBindingslistofSdkRoutingTrafficincidentonrouteCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingTrafficincidentonrouteToFfi(element);
    _heresdkRoutingOfflineBindingslistofSdkRoutingTrafficincidentonrouteInsert(_result, _elementHandle);
    sdkRoutingTrafficincidentonrouteReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<TrafficIncidentOnRoute> heresdkRoutingOfflineBindingslistofSdkRoutingTrafficincidentonrouteFromFfi(Pointer<Void> handle) {
  final result = List<TrafficIncidentOnRoute>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingOfflineBindingslistofSdkRoutingTrafficincidentonrouteIterator(handle);
  while (_heresdkRoutingOfflineBindingslistofSdkRoutingTrafficincidentonrouteIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingOfflineBindingslistofSdkRoutingTrafficincidentonrouteIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingTrafficincidentonrouteFromFfi(_elementHandle));
    } finally {
      sdkRoutingTrafficincidentonrouteReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingOfflineBindingslistofSdkRoutingTrafficincidentonrouteIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingOfflineBindingslistofSdkRoutingTrafficincidentonrouteIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingOfflineBindingslistofSdkRoutingTrafficincidentonrouteReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingOfflineBindingslistofSdkRoutingTrafficincidentonrouteReleaseHandle(handle);

final _heresdkRoutingOfflineBindingslistofSdkRoutingTrafficincidentonrouteCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_TrafficIncidentOnRoute_create_handle_nullable'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingTrafficincidentonrouteReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_TrafficIncidentOnRoute_release_handle_nullable'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingTrafficincidentonrouteGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_TrafficIncidentOnRoute_get_value_nullable'));

Pointer<Void> heresdkRoutingOfflineBindingslistofSdkRoutingTrafficincidentonrouteToFfiNullable(List<TrafficIncidentOnRoute>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingOfflineBindingslistofSdkRoutingTrafficincidentonrouteToFfi(value);
  final result = _heresdkRoutingOfflineBindingslistofSdkRoutingTrafficincidentonrouteCreateHandleNullable(_handle);
  heresdkRoutingOfflineBindingslistofSdkRoutingTrafficincidentonrouteReleaseFfiHandle(_handle);
  return result;
}

List<TrafficIncidentOnRoute>? heresdkRoutingOfflineBindingslistofSdkRoutingTrafficincidentonrouteFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingOfflineBindingslistofSdkRoutingTrafficincidentonrouteGetValueNullable(handle);
  final result = heresdkRoutingOfflineBindingslistofSdkRoutingTrafficincidentonrouteFromFfi(_handle);
  heresdkRoutingOfflineBindingslistofSdkRoutingTrafficincidentonrouteReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingOfflineBindingslistofSdkRoutingTrafficincidentonrouteReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingOfflineBindingslistofSdkRoutingTrafficincidentonrouteReleaseHandleNullable(handle);

final _heresdkRoutingOfflineBindingslistofSdkRoutingTrafficspeedCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_TrafficSpeed_create_handle'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingTrafficspeedReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_TrafficSpeed_release_handle'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingTrafficspeedInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_TrafficSpeed_insert'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingTrafficspeedIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_TrafficSpeed_iterator'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingTrafficspeedIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_TrafficSpeed_iterator_release_handle'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingTrafficspeedIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_TrafficSpeed_iterator_is_valid'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingTrafficspeedIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_TrafficSpeed_iterator_increment'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingTrafficspeedIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_TrafficSpeed_iterator_get'));

Pointer<Void> heresdkRoutingOfflineBindingslistofSdkRoutingTrafficspeedToFfi(List<TrafficSpeed> value) {
  final _result = _heresdkRoutingOfflineBindingslistofSdkRoutingTrafficspeedCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingTrafficspeedToFfi(element);
    _heresdkRoutingOfflineBindingslistofSdkRoutingTrafficspeedInsert(_result, _elementHandle);
    sdkRoutingTrafficspeedReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<TrafficSpeed> heresdkRoutingOfflineBindingslistofSdkRoutingTrafficspeedFromFfi(Pointer<Void> handle) {
  final result = List<TrafficSpeed>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingOfflineBindingslistofSdkRoutingTrafficspeedIterator(handle);
  while (_heresdkRoutingOfflineBindingslistofSdkRoutingTrafficspeedIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingOfflineBindingslistofSdkRoutingTrafficspeedIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingTrafficspeedFromFfi(_elementHandle));
    } finally {
      sdkRoutingTrafficspeedReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingOfflineBindingslistofSdkRoutingTrafficspeedIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingOfflineBindingslistofSdkRoutingTrafficspeedIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingOfflineBindingslistofSdkRoutingTrafficspeedReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingOfflineBindingslistofSdkRoutingTrafficspeedReleaseHandle(handle);

final _heresdkRoutingOfflineBindingslistofSdkRoutingTrafficspeedCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_TrafficSpeed_create_handle_nullable'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingTrafficspeedReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_TrafficSpeed_release_handle_nullable'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingTrafficspeedGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_TrafficSpeed_get_value_nullable'));

Pointer<Void> heresdkRoutingOfflineBindingslistofSdkRoutingTrafficspeedToFfiNullable(List<TrafficSpeed>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingOfflineBindingslistofSdkRoutingTrafficspeedToFfi(value);
  final result = _heresdkRoutingOfflineBindingslistofSdkRoutingTrafficspeedCreateHandleNullable(_handle);
  heresdkRoutingOfflineBindingslistofSdkRoutingTrafficspeedReleaseFfiHandle(_handle);
  return result;
}

List<TrafficSpeed>? heresdkRoutingOfflineBindingslistofSdkRoutingTrafficspeedFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingOfflineBindingslistofSdkRoutingTrafficspeedGetValueNullable(handle);
  final result = heresdkRoutingOfflineBindingslistofSdkRoutingTrafficspeedFromFfi(_handle);
  heresdkRoutingOfflineBindingslistofSdkRoutingTrafficspeedReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingOfflineBindingslistofSdkRoutingTrafficspeedReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingOfflineBindingslistofSdkRoutingTrafficspeedReleaseHandleNullable(handle);

final _heresdkRoutingOfflineBindingslistofSdkRoutingTransitincidentCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_TransitIncident_create_handle'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingTransitincidentReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_TransitIncident_release_handle'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingTransitincidentInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_TransitIncident_insert'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingTransitincidentIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_TransitIncident_iterator'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingTransitincidentIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_TransitIncident_iterator_release_handle'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingTransitincidentIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_TransitIncident_iterator_is_valid'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingTransitincidentIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_TransitIncident_iterator_increment'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingTransitincidentIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_TransitIncident_iterator_get'));

Pointer<Void> heresdkRoutingOfflineBindingslistofSdkRoutingTransitincidentToFfi(List<TransitIncident> value) {
  final _result = _heresdkRoutingOfflineBindingslistofSdkRoutingTransitincidentCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingTransitincidentToFfi(element);
    _heresdkRoutingOfflineBindingslistofSdkRoutingTransitincidentInsert(_result, _elementHandle);
    sdkRoutingTransitincidentReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<TransitIncident> heresdkRoutingOfflineBindingslistofSdkRoutingTransitincidentFromFfi(Pointer<Void> handle) {
  final result = List<TransitIncident>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingOfflineBindingslistofSdkRoutingTransitincidentIterator(handle);
  while (_heresdkRoutingOfflineBindingslistofSdkRoutingTransitincidentIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingOfflineBindingslistofSdkRoutingTransitincidentIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingTransitincidentFromFfi(_elementHandle));
    } finally {
      sdkRoutingTransitincidentReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingOfflineBindingslistofSdkRoutingTransitincidentIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingOfflineBindingslistofSdkRoutingTransitincidentIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingOfflineBindingslistofSdkRoutingTransitincidentReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingOfflineBindingslistofSdkRoutingTransitincidentReleaseHandle(handle);

final _heresdkRoutingOfflineBindingslistofSdkRoutingTransitincidentCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_TransitIncident_create_handle_nullable'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingTransitincidentReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_TransitIncident_release_handle_nullable'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingTransitincidentGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_TransitIncident_get_value_nullable'));

Pointer<Void> heresdkRoutingOfflineBindingslistofSdkRoutingTransitincidentToFfiNullable(List<TransitIncident>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingOfflineBindingslistofSdkRoutingTransitincidentToFfi(value);
  final result = _heresdkRoutingOfflineBindingslistofSdkRoutingTransitincidentCreateHandleNullable(_handle);
  heresdkRoutingOfflineBindingslistofSdkRoutingTransitincidentReleaseFfiHandle(_handle);
  return result;
}

List<TransitIncident>? heresdkRoutingOfflineBindingslistofSdkRoutingTransitincidentFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingOfflineBindingslistofSdkRoutingTransitincidentGetValueNullable(handle);
  final result = heresdkRoutingOfflineBindingslistofSdkRoutingTransitincidentFromFfi(_handle);
  heresdkRoutingOfflineBindingslistofSdkRoutingTransitincidentReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingOfflineBindingslistofSdkRoutingTransitincidentReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingOfflineBindingslistofSdkRoutingTransitincidentReleaseHandleNullable(handle);

final _heresdkRoutingOfflineBindingslistofSdkRoutingTransitmodeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_TransitMode_create_handle'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingTransitmodeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_TransitMode_release_handle'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingTransitmodeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_TransitMode_insert'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingTransitmodeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_TransitMode_iterator'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingTransitmodeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_TransitMode_iterator_release_handle'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingTransitmodeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_TransitMode_iterator_is_valid'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingTransitmodeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_TransitMode_iterator_increment'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingTransitmodeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_TransitMode_iterator_get'));

Pointer<Void> heresdkRoutingOfflineBindingslistofSdkRoutingTransitmodeToFfi(List<TransitMode> value) {
  final _result = _heresdkRoutingOfflineBindingslistofSdkRoutingTransitmodeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingTransitmodeToFfi(element);
    _heresdkRoutingOfflineBindingslistofSdkRoutingTransitmodeInsert(_result, _elementHandle);
    sdkRoutingTransitmodeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<TransitMode> heresdkRoutingOfflineBindingslistofSdkRoutingTransitmodeFromFfi(Pointer<Void> handle) {
  final result = List<TransitMode>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingOfflineBindingslistofSdkRoutingTransitmodeIterator(handle);
  while (_heresdkRoutingOfflineBindingslistofSdkRoutingTransitmodeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingOfflineBindingslistofSdkRoutingTransitmodeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingTransitmodeFromFfi(_elementHandle));
    } finally {
      sdkRoutingTransitmodeReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingOfflineBindingslistofSdkRoutingTransitmodeIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingOfflineBindingslistofSdkRoutingTransitmodeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingOfflineBindingslistofSdkRoutingTransitmodeReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingOfflineBindingslistofSdkRoutingTransitmodeReleaseHandle(handle);

final _heresdkRoutingOfflineBindingslistofSdkRoutingTransitmodeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_TransitMode_create_handle_nullable'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingTransitmodeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_TransitMode_release_handle_nullable'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingTransitmodeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_TransitMode_get_value_nullable'));

Pointer<Void> heresdkRoutingOfflineBindingslistofSdkRoutingTransitmodeToFfiNullable(List<TransitMode>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingOfflineBindingslistofSdkRoutingTransitmodeToFfi(value);
  final result = _heresdkRoutingOfflineBindingslistofSdkRoutingTransitmodeCreateHandleNullable(_handle);
  heresdkRoutingOfflineBindingslistofSdkRoutingTransitmodeReleaseFfiHandle(_handle);
  return result;
}

List<TransitMode>? heresdkRoutingOfflineBindingslistofSdkRoutingTransitmodeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingOfflineBindingslistofSdkRoutingTransitmodeGetValueNullable(handle);
  final result = heresdkRoutingOfflineBindingslistofSdkRoutingTransitmodeFromFfi(_handle);
  heresdkRoutingOfflineBindingslistofSdkRoutingTransitmodeReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingOfflineBindingslistofSdkRoutingTransitmodeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingOfflineBindingslistofSdkRoutingTransitmodeReleaseHandleNullable(handle);

final _heresdkRoutingOfflineBindingslistofSdkRoutingTransitstopCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_TransitStop_create_handle'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingTransitstopReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_TransitStop_release_handle'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingTransitstopInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_TransitStop_insert'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingTransitstopIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_TransitStop_iterator'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingTransitstopIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_TransitStop_iterator_release_handle'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingTransitstopIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_TransitStop_iterator_is_valid'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingTransitstopIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_TransitStop_iterator_increment'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingTransitstopIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_TransitStop_iterator_get'));

Pointer<Void> heresdkRoutingOfflineBindingslistofSdkRoutingTransitstopToFfi(List<TransitStop> value) {
  final _result = _heresdkRoutingOfflineBindingslistofSdkRoutingTransitstopCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingTransitstopToFfi(element);
    _heresdkRoutingOfflineBindingslistofSdkRoutingTransitstopInsert(_result, _elementHandle);
    sdkRoutingTransitstopReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<TransitStop> heresdkRoutingOfflineBindingslistofSdkRoutingTransitstopFromFfi(Pointer<Void> handle) {
  final result = List<TransitStop>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingOfflineBindingslistofSdkRoutingTransitstopIterator(handle);
  while (_heresdkRoutingOfflineBindingslistofSdkRoutingTransitstopIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingOfflineBindingslistofSdkRoutingTransitstopIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingTransitstopFromFfi(_elementHandle));
    } finally {
      sdkRoutingTransitstopReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingOfflineBindingslistofSdkRoutingTransitstopIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingOfflineBindingslistofSdkRoutingTransitstopIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingOfflineBindingslistofSdkRoutingTransitstopReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingOfflineBindingslistofSdkRoutingTransitstopReleaseHandle(handle);

final _heresdkRoutingOfflineBindingslistofSdkRoutingTransitstopCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_TransitStop_create_handle_nullable'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingTransitstopReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_TransitStop_release_handle_nullable'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingTransitstopGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_TransitStop_get_value_nullable'));

Pointer<Void> heresdkRoutingOfflineBindingslistofSdkRoutingTransitstopToFfiNullable(List<TransitStop>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingOfflineBindingslistofSdkRoutingTransitstopToFfi(value);
  final result = _heresdkRoutingOfflineBindingslistofSdkRoutingTransitstopCreateHandleNullable(_handle);
  heresdkRoutingOfflineBindingslistofSdkRoutingTransitstopReleaseFfiHandle(_handle);
  return result;
}

List<TransitStop>? heresdkRoutingOfflineBindingslistofSdkRoutingTransitstopFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingOfflineBindingslistofSdkRoutingTransitstopGetValueNullable(handle);
  final result = heresdkRoutingOfflineBindingslistofSdkRoutingTransitstopFromFfi(_handle);
  heresdkRoutingOfflineBindingslistofSdkRoutingTransitstopReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingOfflineBindingslistofSdkRoutingTransitstopReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingOfflineBindingslistofSdkRoutingTransitstopReleaseHandleNullable(handle);

final _heresdkRoutingOfflineBindingslistofSdkRoutingWaypointCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_Waypoint_create_handle'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingWaypointReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_Waypoint_release_handle'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingWaypointInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_Waypoint_insert'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingWaypointIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_Waypoint_iterator'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingWaypointIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_Waypoint_iterator_release_handle'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingWaypointIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_Waypoint_iterator_is_valid'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingWaypointIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_Waypoint_iterator_increment'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingWaypointIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_Waypoint_iterator_get'));

Pointer<Void> heresdkRoutingOfflineBindingslistofSdkRoutingWaypointToFfi(List<Waypoint> value) {
  final _result = _heresdkRoutingOfflineBindingslistofSdkRoutingWaypointCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingWaypointToFfi(element);
    _heresdkRoutingOfflineBindingslistofSdkRoutingWaypointInsert(_result, _elementHandle);
    sdkRoutingWaypointReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Waypoint> heresdkRoutingOfflineBindingslistofSdkRoutingWaypointFromFfi(Pointer<Void> handle) {
  final result = List<Waypoint>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingOfflineBindingslistofSdkRoutingWaypointIterator(handle);
  while (_heresdkRoutingOfflineBindingslistofSdkRoutingWaypointIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingOfflineBindingslistofSdkRoutingWaypointIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingWaypointFromFfi(_elementHandle));
    } finally {
      sdkRoutingWaypointReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingOfflineBindingslistofSdkRoutingWaypointIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingOfflineBindingslistofSdkRoutingWaypointIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingOfflineBindingslistofSdkRoutingWaypointReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingOfflineBindingslistofSdkRoutingWaypointReleaseHandle(handle);

final _heresdkRoutingOfflineBindingslistofSdkRoutingWaypointCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_Waypoint_create_handle_nullable'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingWaypointReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_Waypoint_release_handle_nullable'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingWaypointGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_Waypoint_get_value_nullable'));

Pointer<Void> heresdkRoutingOfflineBindingslistofSdkRoutingWaypointToFfiNullable(List<Waypoint>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingOfflineBindingslistofSdkRoutingWaypointToFfi(value);
  final result = _heresdkRoutingOfflineBindingslistofSdkRoutingWaypointCreateHandleNullable(_handle);
  heresdkRoutingOfflineBindingslistofSdkRoutingWaypointReleaseFfiHandle(_handle);
  return result;
}

List<Waypoint>? heresdkRoutingOfflineBindingslistofSdkRoutingWaypointFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingOfflineBindingslistofSdkRoutingWaypointGetValueNullable(handle);
  final result = heresdkRoutingOfflineBindingslistofSdkRoutingWaypointFromFfi(_handle);
  heresdkRoutingOfflineBindingslistofSdkRoutingWaypointReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingOfflineBindingslistofSdkRoutingWaypointReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingOfflineBindingslistofSdkRoutingWaypointReleaseHandleNullable(handle);

final _heresdkRoutingOfflineBindingslistofSdkRoutingZonecategoryCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_ZoneCategory_create_handle'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingZonecategoryReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_ZoneCategory_release_handle'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingZonecategoryInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_ZoneCategory_insert'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingZonecategoryIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_ZoneCategory_iterator'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingZonecategoryIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_ZoneCategory_iterator_release_handle'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingZonecategoryIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_ZoneCategory_iterator_is_valid'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingZonecategoryIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_ZoneCategory_iterator_increment'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingZonecategoryIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_ZoneCategory_iterator_get'));

Pointer<Void> heresdkRoutingOfflineBindingslistofSdkRoutingZonecategoryToFfi(List<ZoneCategory> value) {
  final _result = _heresdkRoutingOfflineBindingslistofSdkRoutingZonecategoryCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingZonecategoryToFfi(element);
    _heresdkRoutingOfflineBindingslistofSdkRoutingZonecategoryInsert(_result, _elementHandle);
    sdkRoutingZonecategoryReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<ZoneCategory> heresdkRoutingOfflineBindingslistofSdkRoutingZonecategoryFromFfi(Pointer<Void> handle) {
  final result = List<ZoneCategory>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingOfflineBindingslistofSdkRoutingZonecategoryIterator(handle);
  while (_heresdkRoutingOfflineBindingslistofSdkRoutingZonecategoryIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingOfflineBindingslistofSdkRoutingZonecategoryIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingZonecategoryFromFfi(_elementHandle));
    } finally {
      sdkRoutingZonecategoryReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingOfflineBindingslistofSdkRoutingZonecategoryIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingOfflineBindingslistofSdkRoutingZonecategoryIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingOfflineBindingslistofSdkRoutingZonecategoryReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingOfflineBindingslistofSdkRoutingZonecategoryReleaseHandle(handle);

final _heresdkRoutingOfflineBindingslistofSdkRoutingZonecategoryCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_ZoneCategory_create_handle_nullable'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingZonecategoryReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_ZoneCategory_release_handle_nullable'));
final _heresdkRoutingOfflineBindingslistofSdkRoutingZonecategoryGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_routing_ZoneCategory_get_value_nullable'));

Pointer<Void> heresdkRoutingOfflineBindingslistofSdkRoutingZonecategoryToFfiNullable(List<ZoneCategory>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingOfflineBindingslistofSdkRoutingZonecategoryToFfi(value);
  final result = _heresdkRoutingOfflineBindingslistofSdkRoutingZonecategoryCreateHandleNullable(_handle);
  heresdkRoutingOfflineBindingslistofSdkRoutingZonecategoryReleaseFfiHandle(_handle);
  return result;
}

List<ZoneCategory>? heresdkRoutingOfflineBindingslistofSdkRoutingZonecategoryFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingOfflineBindingslistofSdkRoutingZonecategoryGetValueNullable(handle);
  final result = heresdkRoutingOfflineBindingslistofSdkRoutingZonecategoryFromFfi(_handle);
  heresdkRoutingOfflineBindingslistofSdkRoutingZonecategoryReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingOfflineBindingslistofSdkRoutingZonecategoryReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingOfflineBindingslistofSdkRoutingZonecategoryReleaseHandleNullable(handle);

final _heresdkRoutingOfflineBindingslistofSdkTransportHazardousmaterialCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_transport_HazardousMaterial_create_handle'));
final _heresdkRoutingOfflineBindingslistofSdkTransportHazardousmaterialReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_transport_HazardousMaterial_release_handle'));
final _heresdkRoutingOfflineBindingslistofSdkTransportHazardousmaterialInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_transport_HazardousMaterial_insert'));
final _heresdkRoutingOfflineBindingslistofSdkTransportHazardousmaterialIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_transport_HazardousMaterial_iterator'));
final _heresdkRoutingOfflineBindingslistofSdkTransportHazardousmaterialIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_transport_HazardousMaterial_iterator_release_handle'));
final _heresdkRoutingOfflineBindingslistofSdkTransportHazardousmaterialIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_transport_HazardousMaterial_iterator_is_valid'));
final _heresdkRoutingOfflineBindingslistofSdkTransportHazardousmaterialIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_transport_HazardousMaterial_iterator_increment'));
final _heresdkRoutingOfflineBindingslistofSdkTransportHazardousmaterialIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_transport_HazardousMaterial_iterator_get'));

Pointer<Void> heresdkRoutingOfflineBindingslistofSdkTransportHazardousmaterialToFfi(List<HazardousMaterial> value) {
  final _result = _heresdkRoutingOfflineBindingslistofSdkTransportHazardousmaterialCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkTransportHazardousmaterialToFfi(element);
    _heresdkRoutingOfflineBindingslistofSdkTransportHazardousmaterialInsert(_result, _elementHandle);
    sdkTransportHazardousmaterialReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<HazardousMaterial> heresdkRoutingOfflineBindingslistofSdkTransportHazardousmaterialFromFfi(Pointer<Void> handle) {
  final result = List<HazardousMaterial>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingOfflineBindingslistofSdkTransportHazardousmaterialIterator(handle);
  while (_heresdkRoutingOfflineBindingslistofSdkTransportHazardousmaterialIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingOfflineBindingslistofSdkTransportHazardousmaterialIteratorGet(_iteratorHandle);
    try {
      result.add(sdkTransportHazardousmaterialFromFfi(_elementHandle));
    } finally {
      sdkTransportHazardousmaterialReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingOfflineBindingslistofSdkTransportHazardousmaterialIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingOfflineBindingslistofSdkTransportHazardousmaterialIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingOfflineBindingslistofSdkTransportHazardousmaterialReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingOfflineBindingslistofSdkTransportHazardousmaterialReleaseHandle(handle);

final _heresdkRoutingOfflineBindingslistofSdkTransportHazardousmaterialCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_transport_HazardousMaterial_create_handle_nullable'));
final _heresdkRoutingOfflineBindingslistofSdkTransportHazardousmaterialReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_transport_HazardousMaterial_release_handle_nullable'));
final _heresdkRoutingOfflineBindingslistofSdkTransportHazardousmaterialGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsListOf_sdk_transport_HazardousMaterial_get_value_nullable'));

Pointer<Void> heresdkRoutingOfflineBindingslistofSdkTransportHazardousmaterialToFfiNullable(List<HazardousMaterial>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingOfflineBindingslistofSdkTransportHazardousmaterialToFfi(value);
  final result = _heresdkRoutingOfflineBindingslistofSdkTransportHazardousmaterialCreateHandleNullable(_handle);
  heresdkRoutingOfflineBindingslistofSdkTransportHazardousmaterialReleaseFfiHandle(_handle);
  return result;
}

List<HazardousMaterial>? heresdkRoutingOfflineBindingslistofSdkTransportHazardousmaterialFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingOfflineBindingslistofSdkTransportHazardousmaterialGetValueNullable(handle);
  final result = heresdkRoutingOfflineBindingslistofSdkTransportHazardousmaterialFromFfi(_handle);
  heresdkRoutingOfflineBindingslistofSdkTransportHazardousmaterialReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingOfflineBindingslistofSdkTransportHazardousmaterialReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingOfflineBindingslistofSdkTransportHazardousmaterialReleaseHandleNullable(handle);

final _heresdkRoutingOfflineBindingsmapofDoubleToDoubleCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_offline_bindingsMapOf_Double_to_Double_create_handle'));
final _heresdkRoutingOfflineBindingsmapofDoubleToDoubleReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsMapOf_Double_to_Double_release_handle'));
final _heresdkRoutingOfflineBindingsmapofDoubleToDoublePut = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Double, Double),
    void Function(Pointer<Void>, double, double)
  >('here_sdk_heresdk_routing_offline_bindingsMapOf_Double_to_Double_put'));
final _heresdkRoutingOfflineBindingsmapofDoubleToDoubleIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsMapOf_Double_to_Double_iterator'));
final _heresdkRoutingOfflineBindingsmapofDoubleToDoubleIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsMapOf_Double_to_Double_iterator_release_handle'));
final _heresdkRoutingOfflineBindingsmapofDoubleToDoubleIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsMapOf_Double_to_Double_iterator_is_valid'));
final _heresdkRoutingOfflineBindingsmapofDoubleToDoubleIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsMapOf_Double_to_Double_iterator_increment'));
final _heresdkRoutingOfflineBindingsmapofDoubleToDoubleIteratorGetKey = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Double Function(Pointer<Void>),
    double Function(Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsMapOf_Double_to_Double_iterator_get_key'));
final _heresdkRoutingOfflineBindingsmapofDoubleToDoubleIteratorGetValue = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Double Function(Pointer<Void>),
    double Function(Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsMapOf_Double_to_Double_iterator_get_value'));

Pointer<Void> heresdkRoutingOfflineBindingsmapofDoubleToDoubleToFfi(Map<double, double> value) {
  final _result = _heresdkRoutingOfflineBindingsmapofDoubleToDoubleCreateHandle();
  for (final entry in value.entries) {
    final _keyHandle = (entry.key);
    final _valueHandle = (entry.value);
    _heresdkRoutingOfflineBindingsmapofDoubleToDoublePut(_result, _keyHandle, _valueHandle);
    
    
  }
  return _result;
}

Map<double, double> heresdkRoutingOfflineBindingsmapofDoubleToDoubleFromFfi(Pointer<Void> handle) {
  final result = Map<double, double>();
  final _iteratorHandle = _heresdkRoutingOfflineBindingsmapofDoubleToDoubleIterator(handle);
  while (_heresdkRoutingOfflineBindingsmapofDoubleToDoubleIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _keyHandle = _heresdkRoutingOfflineBindingsmapofDoubleToDoubleIteratorGetKey(_iteratorHandle);
    final _valueHandle = _heresdkRoutingOfflineBindingsmapofDoubleToDoubleIteratorGetValue(_iteratorHandle);
    try {
      result[(_keyHandle)] =
        (_valueHandle);
    } finally {
      
      
    }
    _heresdkRoutingOfflineBindingsmapofDoubleToDoubleIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingOfflineBindingsmapofDoubleToDoubleIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingOfflineBindingsmapofDoubleToDoubleReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingOfflineBindingsmapofDoubleToDoubleReleaseHandle(handle);

final _heresdkRoutingOfflineBindingsmapofDoubleToDoubleCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsMapOf_Double_to_Double_create_handle_nullable'));
final _heresdkRoutingOfflineBindingsmapofDoubleToDoubleReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsMapOf_Double_to_Double_release_handle_nullable'));
final _heresdkRoutingOfflineBindingsmapofDoubleToDoubleGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsMapOf_Double_to_Double_get_value_nullable'));

Pointer<Void> heresdkRoutingOfflineBindingsmapofDoubleToDoubleToFfiNullable(Map<double, double>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingOfflineBindingsmapofDoubleToDoubleToFfi(value);
  final result = _heresdkRoutingOfflineBindingsmapofDoubleToDoubleCreateHandleNullable(_handle);
  heresdkRoutingOfflineBindingsmapofDoubleToDoubleReleaseFfiHandle(_handle);
  return result;
}

Map<double, double>? heresdkRoutingOfflineBindingsmapofDoubleToDoubleFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingOfflineBindingsmapofDoubleToDoubleGetValueNullable(handle);
  final result = heresdkRoutingOfflineBindingsmapofDoubleToDoubleFromFfi(_handle);
  heresdkRoutingOfflineBindingsmapofDoubleToDoubleReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingOfflineBindingsmapofDoubleToDoubleReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingOfflineBindingsmapofDoubleToDoubleReleaseHandleNullable(handle);

final _heresdkRoutingOfflineBindingsmapofIntToDoubleCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_offline_bindingsMapOf_Int_to_Double_create_handle'));
final _heresdkRoutingOfflineBindingsmapofIntToDoubleReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsMapOf_Int_to_Double_release_handle'));
final _heresdkRoutingOfflineBindingsmapofIntToDoublePut = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Int32, Double),
    void Function(Pointer<Void>, int, double)
  >('here_sdk_heresdk_routing_offline_bindingsMapOf_Int_to_Double_put'));
final _heresdkRoutingOfflineBindingsmapofIntToDoubleIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsMapOf_Int_to_Double_iterator'));
final _heresdkRoutingOfflineBindingsmapofIntToDoubleIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsMapOf_Int_to_Double_iterator_release_handle'));
final _heresdkRoutingOfflineBindingsmapofIntToDoubleIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsMapOf_Int_to_Double_iterator_is_valid'));
final _heresdkRoutingOfflineBindingsmapofIntToDoubleIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsMapOf_Int_to_Double_iterator_increment'));
final _heresdkRoutingOfflineBindingsmapofIntToDoubleIteratorGetKey = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsMapOf_Int_to_Double_iterator_get_key'));
final _heresdkRoutingOfflineBindingsmapofIntToDoubleIteratorGetValue = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Double Function(Pointer<Void>),
    double Function(Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsMapOf_Int_to_Double_iterator_get_value'));

Pointer<Void> heresdkRoutingOfflineBindingsmapofIntToDoubleToFfi(Map<int, double> value) {
  final _result = _heresdkRoutingOfflineBindingsmapofIntToDoubleCreateHandle();
  for (final entry in value.entries) {
    final _keyHandle = (entry.key);
    final _valueHandle = (entry.value);
    _heresdkRoutingOfflineBindingsmapofIntToDoublePut(_result, _keyHandle, _valueHandle);
    
    
  }
  return _result;
}

Map<int, double> heresdkRoutingOfflineBindingsmapofIntToDoubleFromFfi(Pointer<Void> handle) {
  final result = Map<int, double>();
  final _iteratorHandle = _heresdkRoutingOfflineBindingsmapofIntToDoubleIterator(handle);
  while (_heresdkRoutingOfflineBindingsmapofIntToDoubleIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _keyHandle = _heresdkRoutingOfflineBindingsmapofIntToDoubleIteratorGetKey(_iteratorHandle);
    final _valueHandle = _heresdkRoutingOfflineBindingsmapofIntToDoubleIteratorGetValue(_iteratorHandle);
    try {
      result[(_keyHandle)] =
        (_valueHandle);
    } finally {
      
      
    }
    _heresdkRoutingOfflineBindingsmapofIntToDoubleIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingOfflineBindingsmapofIntToDoubleIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingOfflineBindingsmapofIntToDoubleReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingOfflineBindingsmapofIntToDoubleReleaseHandle(handle);

final _heresdkRoutingOfflineBindingsmapofIntToDoubleCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsMapOf_Int_to_Double_create_handle_nullable'));
final _heresdkRoutingOfflineBindingsmapofIntToDoubleReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsMapOf_Int_to_Double_release_handle_nullable'));
final _heresdkRoutingOfflineBindingsmapofIntToDoubleGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsMapOf_Int_to_Double_get_value_nullable'));

Pointer<Void> heresdkRoutingOfflineBindingsmapofIntToDoubleToFfiNullable(Map<int, double>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingOfflineBindingsmapofIntToDoubleToFfi(value);
  final result = _heresdkRoutingOfflineBindingsmapofIntToDoubleCreateHandleNullable(_handle);
  heresdkRoutingOfflineBindingsmapofIntToDoubleReleaseFfiHandle(_handle);
  return result;
}

Map<int, double>? heresdkRoutingOfflineBindingsmapofIntToDoubleFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingOfflineBindingsmapofIntToDoubleGetValueNullable(handle);
  final result = heresdkRoutingOfflineBindingsmapofIntToDoubleFromFfi(_handle);
  heresdkRoutingOfflineBindingsmapofIntToDoubleReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingOfflineBindingsmapofIntToDoubleReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingOfflineBindingsmapofIntToDoubleReleaseHandleNullable(handle);

final _heresdkRoutingOfflineBindingsmapofSdkCoreEngineEnginebaseurlToStringCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_offline_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_create_handle'));
final _heresdkRoutingOfflineBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_release_handle'));
final _heresdkRoutingOfflineBindingsmapofSdkCoreEngineEnginebaseurlToStringPut = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32, Pointer<Void>),
    void Function(Pointer<Void>, int, Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_put'));
final _heresdkRoutingOfflineBindingsmapofSdkCoreEngineEnginebaseurlToStringIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_iterator'));
final _heresdkRoutingOfflineBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_iterator_release_handle'));
final _heresdkRoutingOfflineBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_iterator_is_valid'));
final _heresdkRoutingOfflineBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_iterator_increment'));
final _heresdkRoutingOfflineBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorGetKey = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_iterator_get_key'));
final _heresdkRoutingOfflineBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorGetValue = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_offline_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_iterator_get_value'));

Pointer<Void> heresdkRoutingOfflineBindingsmapofSdkCoreEngineEnginebaseurlToStringToFfi(Map<EngineBaseURL, String> value) {
  final _result = _heresdkRoutingOfflineBindingsmapofSdkCoreEngineEnginebaseurlToStringCreateHandle();
  for (final entry in value.entries) {
    final _keyHandle = sdkCoreEngineEnginebaseurlToFfi(entry.key);
    final _valueHandle = stringToFfi(entry.value);
    _heresdkRoutingOfflineBindingsmapofSdkCoreEngineEnginebaseurlToStringPut(_result, _keyHandle, _valueHandle);
    sdkCoreEngineEnginebaseurlReleaseFfiHandle(_keyHandle);
    stringReleaseFfiHandle(_valueHandle);
  }
  return _result;
}

Map<EngineBaseURL, String> heresdkRoutingOfflineBindingsmapofSdkCoreEngineEnginebaseurlToStringFromFfi(Pointer<Void> handle) {
  final result = Map<EngineBaseURL, String>();
  final _iteratorHandle = _heresdkRoutingOfflineBindingsmapofSdkCoreEngineEnginebaseurlToStringIterator(handle);
  while (_heresdkRoutingOfflineBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _keyHandle = _heresdkRoutingOfflineBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorGetKey(_iteratorHandle);
    final _valueHandle = _heresdkRoutingOfflineBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorGetValue(_iteratorHandle);
    try {
      result[sdkCoreEngineEnginebaseurlFromFfi(_keyHandle)] =
        stringFromFfi(_valueHandle);
    } finally {
      sdkCoreEngineEnginebaseurlReleaseFfiHandle(_keyHandle);
      stringReleaseFfiHandle(_valueHandle);
    }
    _heresdkRoutingOfflineBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingOfflineBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingOfflineBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingOfflineBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseHandle(handle);

final _heresdkRoutingOfflineBindingsmapofSdkCoreEngineEnginebaseurlToStringCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_create_handle_nullable'));
final _heresdkRoutingOfflineBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_release_handle_nullable'));
final _heresdkRoutingOfflineBindingsmapofSdkCoreEngineEnginebaseurlToStringGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_offline_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_get_value_nullable'));

Pointer<Void> heresdkRoutingOfflineBindingsmapofSdkCoreEngineEnginebaseurlToStringToFfiNullable(Map<EngineBaseURL, String>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingOfflineBindingsmapofSdkCoreEngineEnginebaseurlToStringToFfi(value);
  final result = _heresdkRoutingOfflineBindingsmapofSdkCoreEngineEnginebaseurlToStringCreateHandleNullable(_handle);
  heresdkRoutingOfflineBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseFfiHandle(_handle);
  return result;
}

Map<EngineBaseURL, String>? heresdkRoutingOfflineBindingsmapofSdkCoreEngineEnginebaseurlToStringFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingOfflineBindingsmapofSdkCoreEngineEnginebaseurlToStringGetValueNullable(handle);
  final result = heresdkRoutingOfflineBindingsmapofSdkCoreEngineEnginebaseurlToStringFromFfi(_handle);
  heresdkRoutingOfflineBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingOfflineBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingOfflineBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseHandleNullable(handle);


// Copyright (c) 2018-2022 HERE Global B.V. and its affiliate(s).
// All rights reserved.
//
// This software and other materials contain proprietary information
// controlled by HERE and are protected by applicable copyright legislation.
// Any use and utilization of this software and other materials and
// disclosure to any third parties is conditional upon having a separate
// agreement with HERE for the access, use, utilization or disclosure of this
// software. In the absence of such agreement, the use of the software is not
// allowed.
//






































final _heresdkRoutingTransitBindingslistofIntCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindingsListOf_Int_create_handle'));
final _heresdkRoutingTransitBindingslistofIntReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_Int_release_handle'));
final _heresdkRoutingTransitBindingslistofIntInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Int32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_Int_insert'));
final _heresdkRoutingTransitBindingslistofIntIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_Int_iterator'));
final _heresdkRoutingTransitBindingslistofIntIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_Int_iterator_release_handle'));
final _heresdkRoutingTransitBindingslistofIntIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_Int_iterator_is_valid'));
final _heresdkRoutingTransitBindingslistofIntIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_Int_iterator_increment'));
final _heresdkRoutingTransitBindingslistofIntIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_Int_iterator_get'));

Pointer<Void> heresdkRoutingTransitBindingslistofIntToFfi(List<int> value) {
  final _result = _heresdkRoutingTransitBindingslistofIntCreateHandle();
  for (final element in value) {
    final _elementHandle = (element);
    _heresdkRoutingTransitBindingslistofIntInsert(_result, _elementHandle);
    
  }
  return _result;
}

List<int> heresdkRoutingTransitBindingslistofIntFromFfi(Pointer<Void> handle) {
  final result = List<int>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingTransitBindingslistofIntIterator(handle);
  while (_heresdkRoutingTransitBindingslistofIntIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingTransitBindingslistofIntIteratorGet(_iteratorHandle);
    try {
      result.add((_elementHandle));
    } finally {
      
    }
    _heresdkRoutingTransitBindingslistofIntIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingslistofIntIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingslistofIntReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingslistofIntReleaseHandle(handle);

final _heresdkRoutingTransitBindingslistofIntCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_Int_create_handle_nullable'));
final _heresdkRoutingTransitBindingslistofIntReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_Int_release_handle_nullable'));
final _heresdkRoutingTransitBindingslistofIntGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_Int_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingslistofIntToFfiNullable(List<int>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingslistofIntToFfi(value);
  final result = _heresdkRoutingTransitBindingslistofIntCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingslistofIntReleaseFfiHandle(_handle);
  return result;
}

List<int>? heresdkRoutingTransitBindingslistofIntFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingTransitBindingslistofIntGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingslistofIntFromFfi(_handle);
  heresdkRoutingTransitBindingslistofIntReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingslistofIntReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingslistofIntReleaseHandleNullable(handle);

final _heresdkRoutingTransitBindingslistofLocaleCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindingsListOf_Locale_create_handle'));
final _heresdkRoutingTransitBindingslistofLocaleReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_Locale_release_handle'));
final _heresdkRoutingTransitBindingslistofLocaleInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_Locale_insert'));
final _heresdkRoutingTransitBindingslistofLocaleIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_Locale_iterator'));
final _heresdkRoutingTransitBindingslistofLocaleIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_Locale_iterator_release_handle'));
final _heresdkRoutingTransitBindingslistofLocaleIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_Locale_iterator_is_valid'));
final _heresdkRoutingTransitBindingslistofLocaleIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_Locale_iterator_increment'));
final _heresdkRoutingTransitBindingslistofLocaleIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_Locale_iterator_get'));

Pointer<Void> heresdkRoutingTransitBindingslistofLocaleToFfi(List<Locale> value) {
  final _result = _heresdkRoutingTransitBindingslistofLocaleCreateHandle();
  for (final element in value) {
    final _elementHandle = localeToFfi(element);
    _heresdkRoutingTransitBindingslistofLocaleInsert(_result, _elementHandle);
    localeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Locale> heresdkRoutingTransitBindingslistofLocaleFromFfi(Pointer<Void> handle) {
  final result = List<Locale>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingTransitBindingslistofLocaleIterator(handle);
  while (_heresdkRoutingTransitBindingslistofLocaleIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingTransitBindingslistofLocaleIteratorGet(_iteratorHandle);
    try {
      result.add(localeFromFfi(_elementHandle));
    } finally {
      localeReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingTransitBindingslistofLocaleIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingslistofLocaleIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingslistofLocaleReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingslistofLocaleReleaseHandle(handle);

final _heresdkRoutingTransitBindingslistofLocaleCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_Locale_create_handle_nullable'));
final _heresdkRoutingTransitBindingslistofLocaleReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_Locale_release_handle_nullable'));
final _heresdkRoutingTransitBindingslistofLocaleGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_Locale_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingslistofLocaleToFfiNullable(List<Locale>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingslistofLocaleToFfi(value);
  final result = _heresdkRoutingTransitBindingslistofLocaleCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingslistofLocaleReleaseFfiHandle(_handle);
  return result;
}

List<Locale>? heresdkRoutingTransitBindingslistofLocaleFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingTransitBindingslistofLocaleGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingslistofLocaleFromFfi(_handle);
  heresdkRoutingTransitBindingslistofLocaleReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingslistofLocaleReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingslistofLocaleReleaseHandleNullable(handle);

final _heresdkRoutingTransitBindingslistofSdkCoreCountrycodeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_CountryCode_create_handle'));
final _heresdkRoutingTransitBindingslistofSdkCoreCountrycodeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_CountryCode_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkCoreCountrycodeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_CountryCode_insert'));
final _heresdkRoutingTransitBindingslistofSdkCoreCountrycodeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_CountryCode_iterator'));
final _heresdkRoutingTransitBindingslistofSdkCoreCountrycodeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_CountryCode_iterator_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkCoreCountrycodeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_CountryCode_iterator_is_valid'));
final _heresdkRoutingTransitBindingslistofSdkCoreCountrycodeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_CountryCode_iterator_increment'));
final _heresdkRoutingTransitBindingslistofSdkCoreCountrycodeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_CountryCode_iterator_get'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkCoreCountrycodeToFfi(List<CountryCode> value) {
  final _result = _heresdkRoutingTransitBindingslistofSdkCoreCountrycodeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreCountrycodeToFfi(element);
    _heresdkRoutingTransitBindingslistofSdkCoreCountrycodeInsert(_result, _elementHandle);
    sdkCoreCountrycodeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<CountryCode> heresdkRoutingTransitBindingslistofSdkCoreCountrycodeFromFfi(Pointer<Void> handle) {
  final result = List<CountryCode>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingTransitBindingslistofSdkCoreCountrycodeIterator(handle);
  while (_heresdkRoutingTransitBindingslistofSdkCoreCountrycodeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingTransitBindingslistofSdkCoreCountrycodeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreCountrycodeFromFfi(_elementHandle));
    } finally {
      sdkCoreCountrycodeReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingTransitBindingslistofSdkCoreCountrycodeIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingslistofSdkCoreCountrycodeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkCoreCountrycodeReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingslistofSdkCoreCountrycodeReleaseHandle(handle);

final _heresdkRoutingTransitBindingslistofSdkCoreCountrycodeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_CountryCode_create_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkCoreCountrycodeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_CountryCode_release_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkCoreCountrycodeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_CountryCode_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkCoreCountrycodeToFfiNullable(List<CountryCode>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingslistofSdkCoreCountrycodeToFfi(value);
  final result = _heresdkRoutingTransitBindingslistofSdkCoreCountrycodeCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingslistofSdkCoreCountrycodeReleaseFfiHandle(_handle);
  return result;
}

List<CountryCode>? heresdkRoutingTransitBindingslistofSdkCoreCountrycodeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingTransitBindingslistofSdkCoreCountrycodeGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingslistofSdkCoreCountrycodeFromFfi(_handle);
  heresdkRoutingTransitBindingslistofSdkCoreCountrycodeReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkCoreCountrycodeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingslistofSdkCoreCountrycodeReleaseHandleNullable(handle);

final _heresdkRoutingTransitBindingslistofSdkCoreGeoboxCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_GeoBox_create_handle'));
final _heresdkRoutingTransitBindingslistofSdkCoreGeoboxReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_GeoBox_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkCoreGeoboxInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_GeoBox_insert'));
final _heresdkRoutingTransitBindingslistofSdkCoreGeoboxIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_GeoBox_iterator'));
final _heresdkRoutingTransitBindingslistofSdkCoreGeoboxIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_GeoBox_iterator_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkCoreGeoboxIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_GeoBox_iterator_is_valid'));
final _heresdkRoutingTransitBindingslistofSdkCoreGeoboxIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_GeoBox_iterator_increment'));
final _heresdkRoutingTransitBindingslistofSdkCoreGeoboxIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_GeoBox_iterator_get'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkCoreGeoboxToFfi(List<GeoBox> value) {
  final _result = _heresdkRoutingTransitBindingslistofSdkCoreGeoboxCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreGeoboxToFfi(element);
    _heresdkRoutingTransitBindingslistofSdkCoreGeoboxInsert(_result, _elementHandle);
    sdkCoreGeoboxReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoBox> heresdkRoutingTransitBindingslistofSdkCoreGeoboxFromFfi(Pointer<Void> handle) {
  final result = List<GeoBox>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingTransitBindingslistofSdkCoreGeoboxIterator(handle);
  while (_heresdkRoutingTransitBindingslistofSdkCoreGeoboxIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingTransitBindingslistofSdkCoreGeoboxIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreGeoboxFromFfi(_elementHandle));
    } finally {
      sdkCoreGeoboxReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingTransitBindingslistofSdkCoreGeoboxIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingslistofSdkCoreGeoboxIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkCoreGeoboxReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingslistofSdkCoreGeoboxReleaseHandle(handle);

final _heresdkRoutingTransitBindingslistofSdkCoreGeoboxCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_GeoBox_create_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkCoreGeoboxReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_GeoBox_release_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkCoreGeoboxGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_GeoBox_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkCoreGeoboxToFfiNullable(List<GeoBox>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingslistofSdkCoreGeoboxToFfi(value);
  final result = _heresdkRoutingTransitBindingslistofSdkCoreGeoboxCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingslistofSdkCoreGeoboxReleaseFfiHandle(_handle);
  return result;
}

List<GeoBox>? heresdkRoutingTransitBindingslistofSdkCoreGeoboxFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingTransitBindingslistofSdkCoreGeoboxGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingslistofSdkCoreGeoboxFromFfi(_handle);
  heresdkRoutingTransitBindingslistofSdkCoreGeoboxReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkCoreGeoboxReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingslistofSdkCoreGeoboxReleaseHandleNullable(handle);

final _heresdkRoutingTransitBindingslistofSdkCoreGeocoordinatesCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_GeoCoordinates_create_handle'));
final _heresdkRoutingTransitBindingslistofSdkCoreGeocoordinatesReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_GeoCoordinates_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkCoreGeocoordinatesInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_GeoCoordinates_insert'));
final _heresdkRoutingTransitBindingslistofSdkCoreGeocoordinatesIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_GeoCoordinates_iterator'));
final _heresdkRoutingTransitBindingslistofSdkCoreGeocoordinatesIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_GeoCoordinates_iterator_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkCoreGeocoordinatesIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_GeoCoordinates_iterator_is_valid'));
final _heresdkRoutingTransitBindingslistofSdkCoreGeocoordinatesIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_GeoCoordinates_iterator_increment'));
final _heresdkRoutingTransitBindingslistofSdkCoreGeocoordinatesIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_GeoCoordinates_iterator_get'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkCoreGeocoordinatesToFfi(List<GeoCoordinates> value) {
  final _result = _heresdkRoutingTransitBindingslistofSdkCoreGeocoordinatesCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreGeocoordinatesToFfi(element);
    _heresdkRoutingTransitBindingslistofSdkCoreGeocoordinatesInsert(_result, _elementHandle);
    sdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoCoordinates> heresdkRoutingTransitBindingslistofSdkCoreGeocoordinatesFromFfi(Pointer<Void> handle) {
  final result = List<GeoCoordinates>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingTransitBindingslistofSdkCoreGeocoordinatesIterator(handle);
  while (_heresdkRoutingTransitBindingslistofSdkCoreGeocoordinatesIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingTransitBindingslistofSdkCoreGeocoordinatesIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreGeocoordinatesFromFfi(_elementHandle));
    } finally {
      sdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingTransitBindingslistofSdkCoreGeocoordinatesIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingslistofSdkCoreGeocoordinatesIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingslistofSdkCoreGeocoordinatesReleaseHandle(handle);

final _heresdkRoutingTransitBindingslistofSdkCoreGeocoordinatesCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_GeoCoordinates_create_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkCoreGeocoordinatesReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_GeoCoordinates_release_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkCoreGeocoordinatesGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_GeoCoordinates_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkCoreGeocoordinatesToFfiNullable(List<GeoCoordinates>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingslistofSdkCoreGeocoordinatesToFfi(value);
  final result = _heresdkRoutingTransitBindingslistofSdkCoreGeocoordinatesCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

List<GeoCoordinates>? heresdkRoutingTransitBindingslistofSdkCoreGeocoordinatesFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingTransitBindingslistofSdkCoreGeocoordinatesGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingslistofSdkCoreGeocoordinatesFromFfi(_handle);
  heresdkRoutingTransitBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkCoreGeocoordinatesReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingslistofSdkCoreGeocoordinatesReleaseHandleNullable(handle);

final _heresdkRoutingTransitBindingslistofSdkCoreLocalizedtextCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_LocalizedText_create_handle'));
final _heresdkRoutingTransitBindingslistofSdkCoreLocalizedtextReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_LocalizedText_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkCoreLocalizedtextInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_LocalizedText_insert'));
final _heresdkRoutingTransitBindingslistofSdkCoreLocalizedtextIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_LocalizedText_iterator'));
final _heresdkRoutingTransitBindingslistofSdkCoreLocalizedtextIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_LocalizedText_iterator_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkCoreLocalizedtextIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_LocalizedText_iterator_is_valid'));
final _heresdkRoutingTransitBindingslistofSdkCoreLocalizedtextIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_LocalizedText_iterator_increment'));
final _heresdkRoutingTransitBindingslistofSdkCoreLocalizedtextIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_LocalizedText_iterator_get'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkCoreLocalizedtextToFfi(List<LocalizedText> value) {
  final _result = _heresdkRoutingTransitBindingslistofSdkCoreLocalizedtextCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreLocalizedtextToFfi(element);
    _heresdkRoutingTransitBindingslistofSdkCoreLocalizedtextInsert(_result, _elementHandle);
    sdkCoreLocalizedtextReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<LocalizedText> heresdkRoutingTransitBindingslistofSdkCoreLocalizedtextFromFfi(Pointer<Void> handle) {
  final result = List<LocalizedText>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingTransitBindingslistofSdkCoreLocalizedtextIterator(handle);
  while (_heresdkRoutingTransitBindingslistofSdkCoreLocalizedtextIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingTransitBindingslistofSdkCoreLocalizedtextIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreLocalizedtextFromFfi(_elementHandle));
    } finally {
      sdkCoreLocalizedtextReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingTransitBindingslistofSdkCoreLocalizedtextIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingslistofSdkCoreLocalizedtextIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkCoreLocalizedtextReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingslistofSdkCoreLocalizedtextReleaseHandle(handle);

final _heresdkRoutingTransitBindingslistofSdkCoreLocalizedtextCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_LocalizedText_create_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkCoreLocalizedtextReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_LocalizedText_release_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkCoreLocalizedtextGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_LocalizedText_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkCoreLocalizedtextToFfiNullable(List<LocalizedText>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingslistofSdkCoreLocalizedtextToFfi(value);
  final result = _heresdkRoutingTransitBindingslistofSdkCoreLocalizedtextCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingslistofSdkCoreLocalizedtextReleaseFfiHandle(_handle);
  return result;
}

List<LocalizedText>? heresdkRoutingTransitBindingslistofSdkCoreLocalizedtextFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingTransitBindingslistofSdkCoreLocalizedtextGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingslistofSdkCoreLocalizedtextFromFfi(_handle);
  heresdkRoutingTransitBindingslistofSdkCoreLocalizedtextReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkCoreLocalizedtextReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingslistofSdkCoreLocalizedtextReleaseHandleNullable(handle);

final _heresdkRoutingTransitBindingslistofSdkCoreEngineLayerconfigurationFeatureCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_create_handle'));
final _heresdkRoutingTransitBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkCoreEngineLayerconfigurationFeatureInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_insert'));
final _heresdkRoutingTransitBindingslistofSdkCoreEngineLayerconfigurationFeatureIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator'));
final _heresdkRoutingTransitBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator_is_valid'));
final _heresdkRoutingTransitBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator_increment'));
final _heresdkRoutingTransitBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator_get'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkCoreEngineLayerconfigurationFeatureToFfi(List<LayerConfigurationFeature> value) {
  final _result = _heresdkRoutingTransitBindingslistofSdkCoreEngineLayerconfigurationFeatureCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreEngineLayerconfigurationFeatureToFfi(element);
    _heresdkRoutingTransitBindingslistofSdkCoreEngineLayerconfigurationFeatureInsert(_result, _elementHandle);
    sdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<LayerConfigurationFeature> heresdkRoutingTransitBindingslistofSdkCoreEngineLayerconfigurationFeatureFromFfi(Pointer<Void> handle) {
  final result = List<LayerConfigurationFeature>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingTransitBindingslistofSdkCoreEngineLayerconfigurationFeatureIterator(handle);
  while (_heresdkRoutingTransitBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingTransitBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreEngineLayerconfigurationFeatureFromFfi(_elementHandle));
    } finally {
      sdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingTransitBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseHandle(handle);

final _heresdkRoutingTransitBindingslistofSdkCoreEngineLayerconfigurationFeatureCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_create_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_release_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkCoreEngineLayerconfigurationFeatureGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkCoreEngineLayerconfigurationFeatureToFfiNullable(List<LayerConfigurationFeature>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingslistofSdkCoreEngineLayerconfigurationFeatureToFfi(value);
  final result = _heresdkRoutingTransitBindingslistofSdkCoreEngineLayerconfigurationFeatureCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(_handle);
  return result;
}

List<LayerConfigurationFeature>? heresdkRoutingTransitBindingslistofSdkCoreEngineLayerconfigurationFeatureFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingTransitBindingslistofSdkCoreEngineLayerconfigurationFeatureGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingslistofSdkCoreEngineLayerconfigurationFeatureFromFfi(_handle);
  heresdkRoutingTransitBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseHandleNullable(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingAttributionCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Attribution_create_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingAttributionReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Attribution_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingAttributionInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Attribution_insert'));
final _heresdkRoutingTransitBindingslistofSdkRoutingAttributionIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Attribution_iterator'));
final _heresdkRoutingTransitBindingslistofSdkRoutingAttributionIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Attribution_iterator_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingAttributionIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Attribution_iterator_is_valid'));
final _heresdkRoutingTransitBindingslistofSdkRoutingAttributionIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Attribution_iterator_increment'));
final _heresdkRoutingTransitBindingslistofSdkRoutingAttributionIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Attribution_iterator_get'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingAttributionToFfi(List<Attribution> value) {
  final _result = _heresdkRoutingTransitBindingslistofSdkRoutingAttributionCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingAttributionToFfi(element);
    _heresdkRoutingTransitBindingslistofSdkRoutingAttributionInsert(_result, _elementHandle);
    sdkRoutingAttributionReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Attribution> heresdkRoutingTransitBindingslistofSdkRoutingAttributionFromFfi(Pointer<Void> handle) {
  final result = List<Attribution>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingTransitBindingslistofSdkRoutingAttributionIterator(handle);
  while (_heresdkRoutingTransitBindingslistofSdkRoutingAttributionIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingTransitBindingslistofSdkRoutingAttributionIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingAttributionFromFfi(_elementHandle));
    } finally {
      sdkRoutingAttributionReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingTransitBindingslistofSdkRoutingAttributionIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingslistofSdkRoutingAttributionIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingAttributionReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingslistofSdkRoutingAttributionReleaseHandle(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingAttributionCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Attribution_create_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingAttributionReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Attribution_release_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingAttributionGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Attribution_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingAttributionToFfiNullable(List<Attribution>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingslistofSdkRoutingAttributionToFfi(value);
  final result = _heresdkRoutingTransitBindingslistofSdkRoutingAttributionCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingAttributionReleaseFfiHandle(_handle);
  return result;
}

List<Attribution>? heresdkRoutingTransitBindingslistofSdkRoutingAttributionFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingTransitBindingslistofSdkRoutingAttributionGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingslistofSdkRoutingAttributionFromFfi(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingAttributionReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingAttributionReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingslistofSdkRoutingAttributionReleaseHandleNullable(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingChargingconnectortypeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_ChargingConnectorType_create_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingChargingconnectortypeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_ChargingConnectorType_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingChargingconnectortypeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_ChargingConnectorType_insert'));
final _heresdkRoutingTransitBindingslistofSdkRoutingChargingconnectortypeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_ChargingConnectorType_iterator'));
final _heresdkRoutingTransitBindingslistofSdkRoutingChargingconnectortypeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_ChargingConnectorType_iterator_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingChargingconnectortypeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_ChargingConnectorType_iterator_is_valid'));
final _heresdkRoutingTransitBindingslistofSdkRoutingChargingconnectortypeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_ChargingConnectorType_iterator_increment'));
final _heresdkRoutingTransitBindingslistofSdkRoutingChargingconnectortypeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_ChargingConnectorType_iterator_get'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingChargingconnectortypeToFfi(List<ChargingConnectorType> value) {
  final _result = _heresdkRoutingTransitBindingslistofSdkRoutingChargingconnectortypeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingChargingconnectortypeToFfi(element);
    _heresdkRoutingTransitBindingslistofSdkRoutingChargingconnectortypeInsert(_result, _elementHandle);
    sdkRoutingChargingconnectortypeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<ChargingConnectorType> heresdkRoutingTransitBindingslistofSdkRoutingChargingconnectortypeFromFfi(Pointer<Void> handle) {
  final result = List<ChargingConnectorType>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingTransitBindingslistofSdkRoutingChargingconnectortypeIterator(handle);
  while (_heresdkRoutingTransitBindingslistofSdkRoutingChargingconnectortypeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingTransitBindingslistofSdkRoutingChargingconnectortypeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingChargingconnectortypeFromFfi(_elementHandle));
    } finally {
      sdkRoutingChargingconnectortypeReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingTransitBindingslistofSdkRoutingChargingconnectortypeIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingslistofSdkRoutingChargingconnectortypeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingChargingconnectortypeReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingslistofSdkRoutingChargingconnectortypeReleaseHandle(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingChargingconnectortypeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_ChargingConnectorType_create_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingChargingconnectortypeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_ChargingConnectorType_release_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingChargingconnectortypeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_ChargingConnectorType_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingChargingconnectortypeToFfiNullable(List<ChargingConnectorType>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingslistofSdkRoutingChargingconnectortypeToFfi(value);
  final result = _heresdkRoutingTransitBindingslistofSdkRoutingChargingconnectortypeCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingChargingconnectortypeReleaseFfiHandle(_handle);
  return result;
}

List<ChargingConnectorType>? heresdkRoutingTransitBindingslistofSdkRoutingChargingconnectortypeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingTransitBindingslistofSdkRoutingChargingconnectortypeGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingslistofSdkRoutingChargingconnectortypeFromFfi(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingChargingconnectortypeReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingChargingconnectortypeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingslistofSdkRoutingChargingconnectortypeReleaseHandleNullable(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingFareCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Fare_create_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingFareReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Fare_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingFareInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Fare_insert'));
final _heresdkRoutingTransitBindingslistofSdkRoutingFareIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Fare_iterator'));
final _heresdkRoutingTransitBindingslistofSdkRoutingFareIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Fare_iterator_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingFareIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Fare_iterator_is_valid'));
final _heresdkRoutingTransitBindingslistofSdkRoutingFareIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Fare_iterator_increment'));
final _heresdkRoutingTransitBindingslistofSdkRoutingFareIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Fare_iterator_get'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingFareToFfi(List<Fare> value) {
  final _result = _heresdkRoutingTransitBindingslistofSdkRoutingFareCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingFareToFfi(element);
    _heresdkRoutingTransitBindingslistofSdkRoutingFareInsert(_result, _elementHandle);
    sdkRoutingFareReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Fare> heresdkRoutingTransitBindingslistofSdkRoutingFareFromFfi(Pointer<Void> handle) {
  final result = List<Fare>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingTransitBindingslistofSdkRoutingFareIterator(handle);
  while (_heresdkRoutingTransitBindingslistofSdkRoutingFareIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingTransitBindingslistofSdkRoutingFareIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingFareFromFfi(_elementHandle));
    } finally {
      sdkRoutingFareReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingTransitBindingslistofSdkRoutingFareIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingslistofSdkRoutingFareIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingFareReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingslistofSdkRoutingFareReleaseHandle(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingFareCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Fare_create_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingFareReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Fare_release_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingFareGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Fare_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingFareToFfiNullable(List<Fare>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingslistofSdkRoutingFareToFfi(value);
  final result = _heresdkRoutingTransitBindingslistofSdkRoutingFareCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingFareReleaseFfiHandle(_handle);
  return result;
}

List<Fare>? heresdkRoutingTransitBindingslistofSdkRoutingFareFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingTransitBindingslistofSdkRoutingFareGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingslistofSdkRoutingFareFromFfi(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingFareReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingFareReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingslistofSdkRoutingFareReleaseHandleNullable(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingHazardousgoodCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_HazardousGood_create_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingHazardousgoodReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_HazardousGood_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingHazardousgoodInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_HazardousGood_insert'));
final _heresdkRoutingTransitBindingslistofSdkRoutingHazardousgoodIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_HazardousGood_iterator'));
final _heresdkRoutingTransitBindingslistofSdkRoutingHazardousgoodIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_HazardousGood_iterator_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingHazardousgoodIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_HazardousGood_iterator_is_valid'));
final _heresdkRoutingTransitBindingslistofSdkRoutingHazardousgoodIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_HazardousGood_iterator_increment'));
final _heresdkRoutingTransitBindingslistofSdkRoutingHazardousgoodIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_HazardousGood_iterator_get'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingHazardousgoodToFfi(List<HazardousGood> value) {
  final _result = _heresdkRoutingTransitBindingslistofSdkRoutingHazardousgoodCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingHazardousgoodToFfi(element);
    _heresdkRoutingTransitBindingslistofSdkRoutingHazardousgoodInsert(_result, _elementHandle);
    sdkRoutingHazardousgoodReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<HazardousGood> heresdkRoutingTransitBindingslistofSdkRoutingHazardousgoodFromFfi(Pointer<Void> handle) {
  final result = List<HazardousGood>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingTransitBindingslistofSdkRoutingHazardousgoodIterator(handle);
  while (_heresdkRoutingTransitBindingslistofSdkRoutingHazardousgoodIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingTransitBindingslistofSdkRoutingHazardousgoodIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingHazardousgoodFromFfi(_elementHandle));
    } finally {
      sdkRoutingHazardousgoodReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingTransitBindingslistofSdkRoutingHazardousgoodIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingslistofSdkRoutingHazardousgoodIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingHazardousgoodReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingslistofSdkRoutingHazardousgoodReleaseHandle(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingHazardousgoodCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_HazardousGood_create_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingHazardousgoodReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_HazardousGood_release_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingHazardousgoodGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_HazardousGood_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingHazardousgoodToFfiNullable(List<HazardousGood>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingslistofSdkRoutingHazardousgoodToFfi(value);
  final result = _heresdkRoutingTransitBindingslistofSdkRoutingHazardousgoodCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingHazardousgoodReleaseFfiHandle(_handle);
  return result;
}

List<HazardousGood>? heresdkRoutingTransitBindingslistofSdkRoutingHazardousgoodFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingTransitBindingslistofSdkRoutingHazardousgoodGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingslistofSdkRoutingHazardousgoodFromFfi(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingHazardousgoodReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingHazardousgoodReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingslistofSdkRoutingHazardousgoodReleaseHandleNullable(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingManeuverCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Maneuver_create_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingManeuverReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Maneuver_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingManeuverInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Maneuver_insert'));
final _heresdkRoutingTransitBindingslistofSdkRoutingManeuverIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Maneuver_iterator'));
final _heresdkRoutingTransitBindingslistofSdkRoutingManeuverIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Maneuver_iterator_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingManeuverIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Maneuver_iterator_is_valid'));
final _heresdkRoutingTransitBindingslistofSdkRoutingManeuverIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Maneuver_iterator_increment'));
final _heresdkRoutingTransitBindingslistofSdkRoutingManeuverIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Maneuver_iterator_get'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingManeuverToFfi(List<Maneuver> value) {
  final _result = _heresdkRoutingTransitBindingslistofSdkRoutingManeuverCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingManeuverToFfi(element);
    _heresdkRoutingTransitBindingslistofSdkRoutingManeuverInsert(_result, _elementHandle);
    sdkRoutingManeuverReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Maneuver> heresdkRoutingTransitBindingslistofSdkRoutingManeuverFromFfi(Pointer<Void> handle) {
  final result = List<Maneuver>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingTransitBindingslistofSdkRoutingManeuverIterator(handle);
  while (_heresdkRoutingTransitBindingslistofSdkRoutingManeuverIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingTransitBindingslistofSdkRoutingManeuverIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingManeuverFromFfi(_elementHandle));
    } finally {
      sdkRoutingManeuverReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingTransitBindingslistofSdkRoutingManeuverIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingslistofSdkRoutingManeuverIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingManeuverReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingslistofSdkRoutingManeuverReleaseHandle(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingManeuverCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Maneuver_create_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingManeuverReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Maneuver_release_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingManeuverGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Maneuver_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingManeuverToFfiNullable(List<Maneuver>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingslistofSdkRoutingManeuverToFfi(value);
  final result = _heresdkRoutingTransitBindingslistofSdkRoutingManeuverCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingManeuverReleaseFfiHandle(_handle);
  return result;
}

List<Maneuver>? heresdkRoutingTransitBindingslistofSdkRoutingManeuverFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingTransitBindingslistofSdkRoutingManeuverGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingslistofSdkRoutingManeuverFromFfi(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingManeuverReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingManeuverReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingslistofSdkRoutingManeuverReleaseHandleNullable(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingPaymentmethodCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_PaymentMethod_create_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingPaymentmethodReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_PaymentMethod_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingPaymentmethodInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_PaymentMethod_insert'));
final _heresdkRoutingTransitBindingslistofSdkRoutingPaymentmethodIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_PaymentMethod_iterator'));
final _heresdkRoutingTransitBindingslistofSdkRoutingPaymentmethodIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_PaymentMethod_iterator_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingPaymentmethodIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_PaymentMethod_iterator_is_valid'));
final _heresdkRoutingTransitBindingslistofSdkRoutingPaymentmethodIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_PaymentMethod_iterator_increment'));
final _heresdkRoutingTransitBindingslistofSdkRoutingPaymentmethodIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_PaymentMethod_iterator_get'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingPaymentmethodToFfi(List<PaymentMethod> value) {
  final _result = _heresdkRoutingTransitBindingslistofSdkRoutingPaymentmethodCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingPaymentmethodToFfi(element);
    _heresdkRoutingTransitBindingslistofSdkRoutingPaymentmethodInsert(_result, _elementHandle);
    sdkRoutingPaymentmethodReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<PaymentMethod> heresdkRoutingTransitBindingslistofSdkRoutingPaymentmethodFromFfi(Pointer<Void> handle) {
  final result = List<PaymentMethod>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingTransitBindingslistofSdkRoutingPaymentmethodIterator(handle);
  while (_heresdkRoutingTransitBindingslistofSdkRoutingPaymentmethodIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingTransitBindingslistofSdkRoutingPaymentmethodIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingPaymentmethodFromFfi(_elementHandle));
    } finally {
      sdkRoutingPaymentmethodReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingTransitBindingslistofSdkRoutingPaymentmethodIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingslistofSdkRoutingPaymentmethodIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingPaymentmethodReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingslistofSdkRoutingPaymentmethodReleaseHandle(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingPaymentmethodCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_PaymentMethod_create_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingPaymentmethodReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_PaymentMethod_release_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingPaymentmethodGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_PaymentMethod_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingPaymentmethodToFfiNullable(List<PaymentMethod>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingslistofSdkRoutingPaymentmethodToFfi(value);
  final result = _heresdkRoutingTransitBindingslistofSdkRoutingPaymentmethodCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingPaymentmethodReleaseFfiHandle(_handle);
  return result;
}

List<PaymentMethod>? heresdkRoutingTransitBindingslistofSdkRoutingPaymentmethodFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingTransitBindingslistofSdkRoutingPaymentmethodGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingslistofSdkRoutingPaymentmethodFromFfi(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingPaymentmethodReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingPaymentmethodReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingslistofSdkRoutingPaymentmethodReleaseHandleNullable(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingPostactionCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_PostAction_create_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingPostactionReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_PostAction_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingPostactionInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_PostAction_insert'));
final _heresdkRoutingTransitBindingslistofSdkRoutingPostactionIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_PostAction_iterator'));
final _heresdkRoutingTransitBindingslistofSdkRoutingPostactionIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_PostAction_iterator_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingPostactionIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_PostAction_iterator_is_valid'));
final _heresdkRoutingTransitBindingslistofSdkRoutingPostactionIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_PostAction_iterator_increment'));
final _heresdkRoutingTransitBindingslistofSdkRoutingPostactionIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_PostAction_iterator_get'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingPostactionToFfi(List<PostAction> value) {
  final _result = _heresdkRoutingTransitBindingslistofSdkRoutingPostactionCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingPostactionToFfi(element);
    _heresdkRoutingTransitBindingslistofSdkRoutingPostactionInsert(_result, _elementHandle);
    sdkRoutingPostactionReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<PostAction> heresdkRoutingTransitBindingslistofSdkRoutingPostactionFromFfi(Pointer<Void> handle) {
  final result = List<PostAction>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingTransitBindingslistofSdkRoutingPostactionIterator(handle);
  while (_heresdkRoutingTransitBindingslistofSdkRoutingPostactionIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingTransitBindingslistofSdkRoutingPostactionIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingPostactionFromFfi(_elementHandle));
    } finally {
      sdkRoutingPostactionReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingTransitBindingslistofSdkRoutingPostactionIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingslistofSdkRoutingPostactionIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingPostactionReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingslistofSdkRoutingPostactionReleaseHandle(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingPostactionCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_PostAction_create_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingPostactionReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_PostAction_release_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingPostactionGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_PostAction_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingPostactionToFfiNullable(List<PostAction>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingslistofSdkRoutingPostactionToFfi(value);
  final result = _heresdkRoutingTransitBindingslistofSdkRoutingPostactionCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingPostactionReleaseFfiHandle(_handle);
  return result;
}

List<PostAction>? heresdkRoutingTransitBindingslistofSdkRoutingPostactionFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingTransitBindingslistofSdkRoutingPostactionGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingslistofSdkRoutingPostactionFromFfi(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingPostactionReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingPostactionReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingslistofSdkRoutingPostactionReleaseHandleNullable(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingPreactionCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_PreAction_create_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingPreactionReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_PreAction_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingPreactionInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_PreAction_insert'));
final _heresdkRoutingTransitBindingslistofSdkRoutingPreactionIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_PreAction_iterator'));
final _heresdkRoutingTransitBindingslistofSdkRoutingPreactionIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_PreAction_iterator_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingPreactionIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_PreAction_iterator_is_valid'));
final _heresdkRoutingTransitBindingslistofSdkRoutingPreactionIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_PreAction_iterator_increment'));
final _heresdkRoutingTransitBindingslistofSdkRoutingPreactionIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_PreAction_iterator_get'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingPreactionToFfi(List<PreAction> value) {
  final _result = _heresdkRoutingTransitBindingslistofSdkRoutingPreactionCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingPreactionToFfi(element);
    _heresdkRoutingTransitBindingslistofSdkRoutingPreactionInsert(_result, _elementHandle);
    sdkRoutingPreactionReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<PreAction> heresdkRoutingTransitBindingslistofSdkRoutingPreactionFromFfi(Pointer<Void> handle) {
  final result = List<PreAction>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingTransitBindingslistofSdkRoutingPreactionIterator(handle);
  while (_heresdkRoutingTransitBindingslistofSdkRoutingPreactionIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingTransitBindingslistofSdkRoutingPreactionIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingPreactionFromFfi(_elementHandle));
    } finally {
      sdkRoutingPreactionReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingTransitBindingslistofSdkRoutingPreactionIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingslistofSdkRoutingPreactionIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingPreactionReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingslistofSdkRoutingPreactionReleaseHandle(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingPreactionCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_PreAction_create_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingPreactionReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_PreAction_release_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingPreactionGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_PreAction_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingPreactionToFfiNullable(List<PreAction>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingslistofSdkRoutingPreactionToFfi(value);
  final result = _heresdkRoutingTransitBindingslistofSdkRoutingPreactionCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingPreactionReleaseFfiHandle(_handle);
  return result;
}

List<PreAction>? heresdkRoutingTransitBindingslistofSdkRoutingPreactionFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingTransitBindingslistofSdkRoutingPreactionGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingslistofSdkRoutingPreactionFromFfi(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingPreactionReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingPreactionReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingslistofSdkRoutingPreactionReleaseHandleNullable(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingRoadfeaturesCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_RoadFeatures_create_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingRoadfeaturesReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_RoadFeatures_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingRoadfeaturesInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_RoadFeatures_insert'));
final _heresdkRoutingTransitBindingslistofSdkRoutingRoadfeaturesIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_RoadFeatures_iterator'));
final _heresdkRoutingTransitBindingslistofSdkRoutingRoadfeaturesIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_RoadFeatures_iterator_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingRoadfeaturesIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_RoadFeatures_iterator_is_valid'));
final _heresdkRoutingTransitBindingslistofSdkRoutingRoadfeaturesIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_RoadFeatures_iterator_increment'));
final _heresdkRoutingTransitBindingslistofSdkRoutingRoadfeaturesIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_RoadFeatures_iterator_get'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingRoadfeaturesToFfi(List<RoadFeatures> value) {
  final _result = _heresdkRoutingTransitBindingslistofSdkRoutingRoadfeaturesCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingRoadfeaturesToFfi(element);
    _heresdkRoutingTransitBindingslistofSdkRoutingRoadfeaturesInsert(_result, _elementHandle);
    sdkRoutingRoadfeaturesReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<RoadFeatures> heresdkRoutingTransitBindingslistofSdkRoutingRoadfeaturesFromFfi(Pointer<Void> handle) {
  final result = List<RoadFeatures>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingTransitBindingslistofSdkRoutingRoadfeaturesIterator(handle);
  while (_heresdkRoutingTransitBindingslistofSdkRoutingRoadfeaturesIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingTransitBindingslistofSdkRoutingRoadfeaturesIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingRoadfeaturesFromFfi(_elementHandle));
    } finally {
      sdkRoutingRoadfeaturesReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingTransitBindingslistofSdkRoutingRoadfeaturesIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingslistofSdkRoutingRoadfeaturesIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingRoadfeaturesReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingslistofSdkRoutingRoadfeaturesReleaseHandle(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingRoadfeaturesCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_RoadFeatures_create_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingRoadfeaturesReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_RoadFeatures_release_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingRoadfeaturesGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_RoadFeatures_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingRoadfeaturesToFfiNullable(List<RoadFeatures>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingslistofSdkRoutingRoadfeaturesToFfi(value);
  final result = _heresdkRoutingTransitBindingslistofSdkRoutingRoadfeaturesCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingRoadfeaturesReleaseFfiHandle(_handle);
  return result;
}

List<RoadFeatures>? heresdkRoutingTransitBindingslistofSdkRoutingRoadfeaturesFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingTransitBindingslistofSdkRoutingRoadfeaturesGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingslistofSdkRoutingRoadfeaturesFromFfi(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingRoadfeaturesReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingRoadfeaturesReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingslistofSdkRoutingRoadfeaturesReleaseHandleNullable(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingRouteCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Route_create_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingRouteReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Route_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingRouteInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Route_insert'));
final _heresdkRoutingTransitBindingslistofSdkRoutingRouteIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Route_iterator'));
final _heresdkRoutingTransitBindingslistofSdkRoutingRouteIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Route_iterator_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingRouteIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Route_iterator_is_valid'));
final _heresdkRoutingTransitBindingslistofSdkRoutingRouteIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Route_iterator_increment'));
final _heresdkRoutingTransitBindingslistofSdkRoutingRouteIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Route_iterator_get'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingRouteToFfi(List<Route> value) {
  final _result = _heresdkRoutingTransitBindingslistofSdkRoutingRouteCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingRouteToFfi(element);
    _heresdkRoutingTransitBindingslistofSdkRoutingRouteInsert(_result, _elementHandle);
    sdkRoutingRouteReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Route> heresdkRoutingTransitBindingslistofSdkRoutingRouteFromFfi(Pointer<Void> handle) {
  final result = List<Route>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingTransitBindingslistofSdkRoutingRouteIterator(handle);
  while (_heresdkRoutingTransitBindingslistofSdkRoutingRouteIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingTransitBindingslistofSdkRoutingRouteIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingRouteFromFfi(_elementHandle));
    } finally {
      sdkRoutingRouteReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingTransitBindingslistofSdkRoutingRouteIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingslistofSdkRoutingRouteIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingRouteReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingslistofSdkRoutingRouteReleaseHandle(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingRouteCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Route_create_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingRouteReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Route_release_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingRouteGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Route_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingRouteToFfiNullable(List<Route>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingslistofSdkRoutingRouteToFfi(value);
  final result = _heresdkRoutingTransitBindingslistofSdkRoutingRouteCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingRouteReleaseFfiHandle(_handle);
  return result;
}

List<Route>? heresdkRoutingTransitBindingslistofSdkRoutingRouteFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingTransitBindingslistofSdkRoutingRouteGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingslistofSdkRoutingRouteFromFfi(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingRouteReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingRouteReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingslistofSdkRoutingRouteReleaseHandleNullable(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingSectionCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Section_create_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingSectionReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Section_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingSectionInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Section_insert'));
final _heresdkRoutingTransitBindingslistofSdkRoutingSectionIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Section_iterator'));
final _heresdkRoutingTransitBindingslistofSdkRoutingSectionIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Section_iterator_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingSectionIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Section_iterator_is_valid'));
final _heresdkRoutingTransitBindingslistofSdkRoutingSectionIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Section_iterator_increment'));
final _heresdkRoutingTransitBindingslistofSdkRoutingSectionIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Section_iterator_get'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingSectionToFfi(List<Section> value) {
  final _result = _heresdkRoutingTransitBindingslistofSdkRoutingSectionCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingSectionToFfi(element);
    _heresdkRoutingTransitBindingslistofSdkRoutingSectionInsert(_result, _elementHandle);
    sdkRoutingSectionReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Section> heresdkRoutingTransitBindingslistofSdkRoutingSectionFromFfi(Pointer<Void> handle) {
  final result = List<Section>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingTransitBindingslistofSdkRoutingSectionIterator(handle);
  while (_heresdkRoutingTransitBindingslistofSdkRoutingSectionIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingTransitBindingslistofSdkRoutingSectionIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingSectionFromFfi(_elementHandle));
    } finally {
      sdkRoutingSectionReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingTransitBindingslistofSdkRoutingSectionIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingslistofSdkRoutingSectionIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingSectionReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingslistofSdkRoutingSectionReleaseHandle(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingSectionCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Section_create_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingSectionReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Section_release_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingSectionGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Section_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingSectionToFfiNullable(List<Section>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingslistofSdkRoutingSectionToFfi(value);
  final result = _heresdkRoutingTransitBindingslistofSdkRoutingSectionCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingSectionReleaseFfiHandle(_handle);
  return result;
}

List<Section>? heresdkRoutingTransitBindingslistofSdkRoutingSectionFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingTransitBindingslistofSdkRoutingSectionGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingslistofSdkRoutingSectionFromFfi(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingSectionReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingSectionReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingslistofSdkRoutingSectionReleaseHandleNullable(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingSectionnoticeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_SectionNotice_create_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingSectionnoticeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_SectionNotice_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingSectionnoticeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_SectionNotice_insert'));
final _heresdkRoutingTransitBindingslistofSdkRoutingSectionnoticeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_SectionNotice_iterator'));
final _heresdkRoutingTransitBindingslistofSdkRoutingSectionnoticeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_SectionNotice_iterator_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingSectionnoticeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_SectionNotice_iterator_is_valid'));
final _heresdkRoutingTransitBindingslistofSdkRoutingSectionnoticeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_SectionNotice_iterator_increment'));
final _heresdkRoutingTransitBindingslistofSdkRoutingSectionnoticeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_SectionNotice_iterator_get'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingSectionnoticeToFfi(List<SectionNotice> value) {
  final _result = _heresdkRoutingTransitBindingslistofSdkRoutingSectionnoticeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingSectionnoticeToFfi(element);
    _heresdkRoutingTransitBindingslistofSdkRoutingSectionnoticeInsert(_result, _elementHandle);
    sdkRoutingSectionnoticeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<SectionNotice> heresdkRoutingTransitBindingslistofSdkRoutingSectionnoticeFromFfi(Pointer<Void> handle) {
  final result = List<SectionNotice>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingTransitBindingslistofSdkRoutingSectionnoticeIterator(handle);
  while (_heresdkRoutingTransitBindingslistofSdkRoutingSectionnoticeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingTransitBindingslistofSdkRoutingSectionnoticeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingSectionnoticeFromFfi(_elementHandle));
    } finally {
      sdkRoutingSectionnoticeReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingTransitBindingslistofSdkRoutingSectionnoticeIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingslistofSdkRoutingSectionnoticeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingSectionnoticeReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingslistofSdkRoutingSectionnoticeReleaseHandle(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingSectionnoticeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_SectionNotice_create_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingSectionnoticeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_SectionNotice_release_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingSectionnoticeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_SectionNotice_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingSectionnoticeToFfiNullable(List<SectionNotice>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingslistofSdkRoutingSectionnoticeToFfi(value);
  final result = _heresdkRoutingTransitBindingslistofSdkRoutingSectionnoticeCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingSectionnoticeReleaseFfiHandle(_handle);
  return result;
}

List<SectionNotice>? heresdkRoutingTransitBindingslistofSdkRoutingSectionnoticeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingTransitBindingslistofSdkRoutingSectionnoticeGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingslistofSdkRoutingSectionnoticeFromFfi(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingSectionnoticeReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingSectionnoticeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingslistofSdkRoutingSectionnoticeReleaseHandleNullable(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingSegmentreferenceCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_SegmentReference_create_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingSegmentreferenceReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_SegmentReference_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingSegmentreferenceInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_SegmentReference_insert'));
final _heresdkRoutingTransitBindingslistofSdkRoutingSegmentreferenceIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_SegmentReference_iterator'));
final _heresdkRoutingTransitBindingslistofSdkRoutingSegmentreferenceIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_SegmentReference_iterator_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingSegmentreferenceIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_SegmentReference_iterator_is_valid'));
final _heresdkRoutingTransitBindingslistofSdkRoutingSegmentreferenceIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_SegmentReference_iterator_increment'));
final _heresdkRoutingTransitBindingslistofSdkRoutingSegmentreferenceIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_SegmentReference_iterator_get'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingSegmentreferenceToFfi(List<SegmentReference> value) {
  final _result = _heresdkRoutingTransitBindingslistofSdkRoutingSegmentreferenceCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingSegmentreferenceToFfi(element);
    _heresdkRoutingTransitBindingslistofSdkRoutingSegmentreferenceInsert(_result, _elementHandle);
    sdkRoutingSegmentreferenceReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<SegmentReference> heresdkRoutingTransitBindingslistofSdkRoutingSegmentreferenceFromFfi(Pointer<Void> handle) {
  final result = List<SegmentReference>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingTransitBindingslistofSdkRoutingSegmentreferenceIterator(handle);
  while (_heresdkRoutingTransitBindingslistofSdkRoutingSegmentreferenceIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingTransitBindingslistofSdkRoutingSegmentreferenceIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingSegmentreferenceFromFfi(_elementHandle));
    } finally {
      sdkRoutingSegmentreferenceReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingTransitBindingslistofSdkRoutingSegmentreferenceIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingslistofSdkRoutingSegmentreferenceIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingSegmentreferenceReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingslistofSdkRoutingSegmentreferenceReleaseHandle(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingSegmentreferenceCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_SegmentReference_create_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingSegmentreferenceReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_SegmentReference_release_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingSegmentreferenceGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_SegmentReference_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingSegmentreferenceToFfiNullable(List<SegmentReference>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingslistofSdkRoutingSegmentreferenceToFfi(value);
  final result = _heresdkRoutingTransitBindingslistofSdkRoutingSegmentreferenceCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingSegmentreferenceReleaseFfiHandle(_handle);
  return result;
}

List<SegmentReference>? heresdkRoutingTransitBindingslistofSdkRoutingSegmentreferenceFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingTransitBindingslistofSdkRoutingSegmentreferenceGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingslistofSdkRoutingSegmentreferenceFromFfi(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingSegmentreferenceReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingSegmentreferenceReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingslistofSdkRoutingSegmentreferenceReleaseHandleNullable(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingSpanCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Span_create_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingSpanReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Span_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingSpanInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Span_insert'));
final _heresdkRoutingTransitBindingslistofSdkRoutingSpanIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Span_iterator'));
final _heresdkRoutingTransitBindingslistofSdkRoutingSpanIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Span_iterator_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingSpanIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Span_iterator_is_valid'));
final _heresdkRoutingTransitBindingslistofSdkRoutingSpanIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Span_iterator_increment'));
final _heresdkRoutingTransitBindingslistofSdkRoutingSpanIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Span_iterator_get'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingSpanToFfi(List<Span> value) {
  final _result = _heresdkRoutingTransitBindingslistofSdkRoutingSpanCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingSpanToFfi(element);
    _heresdkRoutingTransitBindingslistofSdkRoutingSpanInsert(_result, _elementHandle);
    sdkRoutingSpanReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Span> heresdkRoutingTransitBindingslistofSdkRoutingSpanFromFfi(Pointer<Void> handle) {
  final result = List<Span>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingTransitBindingslistofSdkRoutingSpanIterator(handle);
  while (_heresdkRoutingTransitBindingslistofSdkRoutingSpanIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingTransitBindingslistofSdkRoutingSpanIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingSpanFromFfi(_elementHandle));
    } finally {
      sdkRoutingSpanReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingTransitBindingslistofSdkRoutingSpanIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingslistofSdkRoutingSpanIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingSpanReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingslistofSdkRoutingSpanReleaseHandle(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingSpanCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Span_create_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingSpanReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Span_release_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingSpanGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Span_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingSpanToFfiNullable(List<Span>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingslistofSdkRoutingSpanToFfi(value);
  final result = _heresdkRoutingTransitBindingslistofSdkRoutingSpanCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingSpanReleaseFfiHandle(_handle);
  return result;
}

List<Span>? heresdkRoutingTransitBindingslistofSdkRoutingSpanFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingTransitBindingslistofSdkRoutingSpanGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingslistofSdkRoutingSpanFromFfi(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingSpanReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingSpanReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingslistofSdkRoutingSpanReleaseHandleNullable(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingTollCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Toll_create_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTollReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Toll_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTollInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Toll_insert'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTollIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Toll_iterator'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTollIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Toll_iterator_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTollIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Toll_iterator_is_valid'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTollIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Toll_iterator_increment'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTollIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Toll_iterator_get'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingTollToFfi(List<Toll> value) {
  final _result = _heresdkRoutingTransitBindingslistofSdkRoutingTollCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingTollToFfi(element);
    _heresdkRoutingTransitBindingslistofSdkRoutingTollInsert(_result, _elementHandle);
    sdkRoutingTollReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Toll> heresdkRoutingTransitBindingslistofSdkRoutingTollFromFfi(Pointer<Void> handle) {
  final result = List<Toll>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingTransitBindingslistofSdkRoutingTollIterator(handle);
  while (_heresdkRoutingTransitBindingslistofSdkRoutingTollIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingTransitBindingslistofSdkRoutingTollIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingTollFromFfi(_elementHandle));
    } finally {
      sdkRoutingTollReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingTransitBindingslistofSdkRoutingTollIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingslistofSdkRoutingTollIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingTollReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingslistofSdkRoutingTollReleaseHandle(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingTollCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Toll_create_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTollReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Toll_release_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTollGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Toll_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingTollToFfiNullable(List<Toll>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingslistofSdkRoutingTollToFfi(value);
  final result = _heresdkRoutingTransitBindingslistofSdkRoutingTollCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingTollReleaseFfiHandle(_handle);
  return result;
}

List<Toll>? heresdkRoutingTransitBindingslistofSdkRoutingTollFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingTransitBindingslistofSdkRoutingTollGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingslistofSdkRoutingTollFromFfi(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingTollReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingTollReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingslistofSdkRoutingTollReleaseHandleNullable(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingTollfareCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TollFare_create_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTollfareReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TollFare_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTollfareInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TollFare_insert'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTollfareIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TollFare_iterator'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTollfareIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TollFare_iterator_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTollfareIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TollFare_iterator_is_valid'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTollfareIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TollFare_iterator_increment'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTollfareIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TollFare_iterator_get'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingTollfareToFfi(List<TollFare> value) {
  final _result = _heresdkRoutingTransitBindingslistofSdkRoutingTollfareCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingTollfareToFfi(element);
    _heresdkRoutingTransitBindingslistofSdkRoutingTollfareInsert(_result, _elementHandle);
    sdkRoutingTollfareReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<TollFare> heresdkRoutingTransitBindingslistofSdkRoutingTollfareFromFfi(Pointer<Void> handle) {
  final result = List<TollFare>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingTransitBindingslistofSdkRoutingTollfareIterator(handle);
  while (_heresdkRoutingTransitBindingslistofSdkRoutingTollfareIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingTransitBindingslistofSdkRoutingTollfareIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingTollfareFromFfi(_elementHandle));
    } finally {
      sdkRoutingTollfareReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingTransitBindingslistofSdkRoutingTollfareIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingslistofSdkRoutingTollfareIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingTollfareReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingslistofSdkRoutingTollfareReleaseHandle(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingTollfareCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TollFare_create_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTollfareReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TollFare_release_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTollfareGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TollFare_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingTollfareToFfiNullable(List<TollFare>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingslistofSdkRoutingTollfareToFfi(value);
  final result = _heresdkRoutingTransitBindingslistofSdkRoutingTollfareCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingTollfareReleaseFfiHandle(_handle);
  return result;
}

List<TollFare>? heresdkRoutingTransitBindingslistofSdkRoutingTollfareFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingTransitBindingslistofSdkRoutingTollfareGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingslistofSdkRoutingTollfareFromFfi(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingTollfareReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingTollfareReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingslistofSdkRoutingTollfareReleaseHandleNullable(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingTrafficincidentonrouteCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TrafficIncidentOnRoute_create_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTrafficincidentonrouteReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TrafficIncidentOnRoute_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTrafficincidentonrouteInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TrafficIncidentOnRoute_insert'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTrafficincidentonrouteIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TrafficIncidentOnRoute_iterator'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTrafficincidentonrouteIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TrafficIncidentOnRoute_iterator_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTrafficincidentonrouteIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TrafficIncidentOnRoute_iterator_is_valid'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTrafficincidentonrouteIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TrafficIncidentOnRoute_iterator_increment'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTrafficincidentonrouteIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TrafficIncidentOnRoute_iterator_get'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingTrafficincidentonrouteToFfi(List<TrafficIncidentOnRoute> value) {
  final _result = _heresdkRoutingTransitBindingslistofSdkRoutingTrafficincidentonrouteCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingTrafficincidentonrouteToFfi(element);
    _heresdkRoutingTransitBindingslistofSdkRoutingTrafficincidentonrouteInsert(_result, _elementHandle);
    sdkRoutingTrafficincidentonrouteReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<TrafficIncidentOnRoute> heresdkRoutingTransitBindingslistofSdkRoutingTrafficincidentonrouteFromFfi(Pointer<Void> handle) {
  final result = List<TrafficIncidentOnRoute>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingTransitBindingslistofSdkRoutingTrafficincidentonrouteIterator(handle);
  while (_heresdkRoutingTransitBindingslistofSdkRoutingTrafficincidentonrouteIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingTransitBindingslistofSdkRoutingTrafficincidentonrouteIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingTrafficincidentonrouteFromFfi(_elementHandle));
    } finally {
      sdkRoutingTrafficincidentonrouteReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingTransitBindingslistofSdkRoutingTrafficincidentonrouteIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingslistofSdkRoutingTrafficincidentonrouteIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingTrafficincidentonrouteReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingslistofSdkRoutingTrafficincidentonrouteReleaseHandle(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingTrafficincidentonrouteCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TrafficIncidentOnRoute_create_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTrafficincidentonrouteReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TrafficIncidentOnRoute_release_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTrafficincidentonrouteGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TrafficIncidentOnRoute_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingTrafficincidentonrouteToFfiNullable(List<TrafficIncidentOnRoute>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingslistofSdkRoutingTrafficincidentonrouteToFfi(value);
  final result = _heresdkRoutingTransitBindingslistofSdkRoutingTrafficincidentonrouteCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingTrafficincidentonrouteReleaseFfiHandle(_handle);
  return result;
}

List<TrafficIncidentOnRoute>? heresdkRoutingTransitBindingslistofSdkRoutingTrafficincidentonrouteFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingTransitBindingslistofSdkRoutingTrafficincidentonrouteGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingslistofSdkRoutingTrafficincidentonrouteFromFfi(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingTrafficincidentonrouteReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingTrafficincidentonrouteReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingslistofSdkRoutingTrafficincidentonrouteReleaseHandleNullable(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingTrafficspeedCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TrafficSpeed_create_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTrafficspeedReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TrafficSpeed_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTrafficspeedInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TrafficSpeed_insert'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTrafficspeedIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TrafficSpeed_iterator'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTrafficspeedIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TrafficSpeed_iterator_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTrafficspeedIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TrafficSpeed_iterator_is_valid'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTrafficspeedIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TrafficSpeed_iterator_increment'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTrafficspeedIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TrafficSpeed_iterator_get'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingTrafficspeedToFfi(List<TrafficSpeed> value) {
  final _result = _heresdkRoutingTransitBindingslistofSdkRoutingTrafficspeedCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingTrafficspeedToFfi(element);
    _heresdkRoutingTransitBindingslistofSdkRoutingTrafficspeedInsert(_result, _elementHandle);
    sdkRoutingTrafficspeedReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<TrafficSpeed> heresdkRoutingTransitBindingslistofSdkRoutingTrafficspeedFromFfi(Pointer<Void> handle) {
  final result = List<TrafficSpeed>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingTransitBindingslistofSdkRoutingTrafficspeedIterator(handle);
  while (_heresdkRoutingTransitBindingslistofSdkRoutingTrafficspeedIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingTransitBindingslistofSdkRoutingTrafficspeedIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingTrafficspeedFromFfi(_elementHandle));
    } finally {
      sdkRoutingTrafficspeedReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingTransitBindingslistofSdkRoutingTrafficspeedIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingslistofSdkRoutingTrafficspeedIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingTrafficspeedReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingslistofSdkRoutingTrafficspeedReleaseHandle(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingTrafficspeedCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TrafficSpeed_create_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTrafficspeedReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TrafficSpeed_release_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTrafficspeedGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TrafficSpeed_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingTrafficspeedToFfiNullable(List<TrafficSpeed>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingslistofSdkRoutingTrafficspeedToFfi(value);
  final result = _heresdkRoutingTransitBindingslistofSdkRoutingTrafficspeedCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingTrafficspeedReleaseFfiHandle(_handle);
  return result;
}

List<TrafficSpeed>? heresdkRoutingTransitBindingslistofSdkRoutingTrafficspeedFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingTransitBindingslistofSdkRoutingTrafficspeedGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingslistofSdkRoutingTrafficspeedFromFfi(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingTrafficspeedReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingTrafficspeedReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingslistofSdkRoutingTrafficspeedReleaseHandleNullable(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingTransitincidentCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TransitIncident_create_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTransitincidentReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TransitIncident_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTransitincidentInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TransitIncident_insert'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTransitincidentIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TransitIncident_iterator'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTransitincidentIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TransitIncident_iterator_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTransitincidentIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TransitIncident_iterator_is_valid'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTransitincidentIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TransitIncident_iterator_increment'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTransitincidentIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TransitIncident_iterator_get'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingTransitincidentToFfi(List<TransitIncident> value) {
  final _result = _heresdkRoutingTransitBindingslistofSdkRoutingTransitincidentCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingTransitincidentToFfi(element);
    _heresdkRoutingTransitBindingslistofSdkRoutingTransitincidentInsert(_result, _elementHandle);
    sdkRoutingTransitincidentReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<TransitIncident> heresdkRoutingTransitBindingslistofSdkRoutingTransitincidentFromFfi(Pointer<Void> handle) {
  final result = List<TransitIncident>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingTransitBindingslistofSdkRoutingTransitincidentIterator(handle);
  while (_heresdkRoutingTransitBindingslistofSdkRoutingTransitincidentIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingTransitBindingslistofSdkRoutingTransitincidentIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingTransitincidentFromFfi(_elementHandle));
    } finally {
      sdkRoutingTransitincidentReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingTransitBindingslistofSdkRoutingTransitincidentIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingslistofSdkRoutingTransitincidentIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingTransitincidentReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingslistofSdkRoutingTransitincidentReleaseHandle(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingTransitincidentCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TransitIncident_create_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTransitincidentReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TransitIncident_release_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTransitincidentGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TransitIncident_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingTransitincidentToFfiNullable(List<TransitIncident>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingslistofSdkRoutingTransitincidentToFfi(value);
  final result = _heresdkRoutingTransitBindingslistofSdkRoutingTransitincidentCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingTransitincidentReleaseFfiHandle(_handle);
  return result;
}

List<TransitIncident>? heresdkRoutingTransitBindingslistofSdkRoutingTransitincidentFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingTransitBindingslistofSdkRoutingTransitincidentGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingslistofSdkRoutingTransitincidentFromFfi(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingTransitincidentReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingTransitincidentReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingslistofSdkRoutingTransitincidentReleaseHandleNullable(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingTransitmodeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TransitMode_create_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTransitmodeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TransitMode_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTransitmodeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TransitMode_insert'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTransitmodeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TransitMode_iterator'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTransitmodeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TransitMode_iterator_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTransitmodeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TransitMode_iterator_is_valid'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTransitmodeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TransitMode_iterator_increment'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTransitmodeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TransitMode_iterator_get'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingTransitmodeToFfi(List<TransitMode> value) {
  final _result = _heresdkRoutingTransitBindingslistofSdkRoutingTransitmodeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingTransitmodeToFfi(element);
    _heresdkRoutingTransitBindingslistofSdkRoutingTransitmodeInsert(_result, _elementHandle);
    sdkRoutingTransitmodeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<TransitMode> heresdkRoutingTransitBindingslistofSdkRoutingTransitmodeFromFfi(Pointer<Void> handle) {
  final result = List<TransitMode>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingTransitBindingslistofSdkRoutingTransitmodeIterator(handle);
  while (_heresdkRoutingTransitBindingslistofSdkRoutingTransitmodeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingTransitBindingslistofSdkRoutingTransitmodeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingTransitmodeFromFfi(_elementHandle));
    } finally {
      sdkRoutingTransitmodeReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingTransitBindingslistofSdkRoutingTransitmodeIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingslistofSdkRoutingTransitmodeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingTransitmodeReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingslistofSdkRoutingTransitmodeReleaseHandle(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingTransitmodeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TransitMode_create_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTransitmodeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TransitMode_release_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTransitmodeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TransitMode_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingTransitmodeToFfiNullable(List<TransitMode>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingslistofSdkRoutingTransitmodeToFfi(value);
  final result = _heresdkRoutingTransitBindingslistofSdkRoutingTransitmodeCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingTransitmodeReleaseFfiHandle(_handle);
  return result;
}

List<TransitMode>? heresdkRoutingTransitBindingslistofSdkRoutingTransitmodeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingTransitBindingslistofSdkRoutingTransitmodeGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingslistofSdkRoutingTransitmodeFromFfi(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingTransitmodeReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingTransitmodeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingslistofSdkRoutingTransitmodeReleaseHandleNullable(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingTransitstopCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TransitStop_create_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTransitstopReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TransitStop_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTransitstopInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TransitStop_insert'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTransitstopIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TransitStop_iterator'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTransitstopIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TransitStop_iterator_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTransitstopIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TransitStop_iterator_is_valid'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTransitstopIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TransitStop_iterator_increment'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTransitstopIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TransitStop_iterator_get'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingTransitstopToFfi(List<TransitStop> value) {
  final _result = _heresdkRoutingTransitBindingslistofSdkRoutingTransitstopCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingTransitstopToFfi(element);
    _heresdkRoutingTransitBindingslistofSdkRoutingTransitstopInsert(_result, _elementHandle);
    sdkRoutingTransitstopReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<TransitStop> heresdkRoutingTransitBindingslistofSdkRoutingTransitstopFromFfi(Pointer<Void> handle) {
  final result = List<TransitStop>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingTransitBindingslistofSdkRoutingTransitstopIterator(handle);
  while (_heresdkRoutingTransitBindingslistofSdkRoutingTransitstopIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingTransitBindingslistofSdkRoutingTransitstopIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingTransitstopFromFfi(_elementHandle));
    } finally {
      sdkRoutingTransitstopReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingTransitBindingslistofSdkRoutingTransitstopIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingslistofSdkRoutingTransitstopIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingTransitstopReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingslistofSdkRoutingTransitstopReleaseHandle(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingTransitstopCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TransitStop_create_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTransitstopReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TransitStop_release_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingTransitstopGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_TransitStop_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingTransitstopToFfiNullable(List<TransitStop>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingslistofSdkRoutingTransitstopToFfi(value);
  final result = _heresdkRoutingTransitBindingslistofSdkRoutingTransitstopCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingTransitstopReleaseFfiHandle(_handle);
  return result;
}

List<TransitStop>? heresdkRoutingTransitBindingslistofSdkRoutingTransitstopFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingTransitBindingslistofSdkRoutingTransitstopGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingslistofSdkRoutingTransitstopFromFfi(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingTransitstopReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingTransitstopReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingslistofSdkRoutingTransitstopReleaseHandleNullable(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingWaypointCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Waypoint_create_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingWaypointReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Waypoint_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingWaypointInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Waypoint_insert'));
final _heresdkRoutingTransitBindingslistofSdkRoutingWaypointIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Waypoint_iterator'));
final _heresdkRoutingTransitBindingslistofSdkRoutingWaypointIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Waypoint_iterator_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingWaypointIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Waypoint_iterator_is_valid'));
final _heresdkRoutingTransitBindingslistofSdkRoutingWaypointIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Waypoint_iterator_increment'));
final _heresdkRoutingTransitBindingslistofSdkRoutingWaypointIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Waypoint_iterator_get'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingWaypointToFfi(List<Waypoint> value) {
  final _result = _heresdkRoutingTransitBindingslistofSdkRoutingWaypointCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingWaypointToFfi(element);
    _heresdkRoutingTransitBindingslistofSdkRoutingWaypointInsert(_result, _elementHandle);
    sdkRoutingWaypointReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Waypoint> heresdkRoutingTransitBindingslistofSdkRoutingWaypointFromFfi(Pointer<Void> handle) {
  final result = List<Waypoint>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingTransitBindingslistofSdkRoutingWaypointIterator(handle);
  while (_heresdkRoutingTransitBindingslistofSdkRoutingWaypointIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingTransitBindingslistofSdkRoutingWaypointIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingWaypointFromFfi(_elementHandle));
    } finally {
      sdkRoutingWaypointReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingTransitBindingslistofSdkRoutingWaypointIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingslistofSdkRoutingWaypointIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingWaypointReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingslistofSdkRoutingWaypointReleaseHandle(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingWaypointCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Waypoint_create_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingWaypointReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Waypoint_release_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingWaypointGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_Waypoint_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingWaypointToFfiNullable(List<Waypoint>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingslistofSdkRoutingWaypointToFfi(value);
  final result = _heresdkRoutingTransitBindingslistofSdkRoutingWaypointCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingWaypointReleaseFfiHandle(_handle);
  return result;
}

List<Waypoint>? heresdkRoutingTransitBindingslistofSdkRoutingWaypointFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingTransitBindingslistofSdkRoutingWaypointGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingslistofSdkRoutingWaypointFromFfi(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingWaypointReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingWaypointReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingslistofSdkRoutingWaypointReleaseHandleNullable(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingZonecategoryCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_ZoneCategory_create_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingZonecategoryReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_ZoneCategory_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingZonecategoryInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_ZoneCategory_insert'));
final _heresdkRoutingTransitBindingslistofSdkRoutingZonecategoryIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_ZoneCategory_iterator'));
final _heresdkRoutingTransitBindingslistofSdkRoutingZonecategoryIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_ZoneCategory_iterator_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkRoutingZonecategoryIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_ZoneCategory_iterator_is_valid'));
final _heresdkRoutingTransitBindingslistofSdkRoutingZonecategoryIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_ZoneCategory_iterator_increment'));
final _heresdkRoutingTransitBindingslistofSdkRoutingZonecategoryIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_ZoneCategory_iterator_get'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingZonecategoryToFfi(List<ZoneCategory> value) {
  final _result = _heresdkRoutingTransitBindingslistofSdkRoutingZonecategoryCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingZonecategoryToFfi(element);
    _heresdkRoutingTransitBindingslistofSdkRoutingZonecategoryInsert(_result, _elementHandle);
    sdkRoutingZonecategoryReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<ZoneCategory> heresdkRoutingTransitBindingslistofSdkRoutingZonecategoryFromFfi(Pointer<Void> handle) {
  final result = List<ZoneCategory>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingTransitBindingslistofSdkRoutingZonecategoryIterator(handle);
  while (_heresdkRoutingTransitBindingslistofSdkRoutingZonecategoryIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingTransitBindingslistofSdkRoutingZonecategoryIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingZonecategoryFromFfi(_elementHandle));
    } finally {
      sdkRoutingZonecategoryReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingTransitBindingslistofSdkRoutingZonecategoryIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingslistofSdkRoutingZonecategoryIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingZonecategoryReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingslistofSdkRoutingZonecategoryReleaseHandle(handle);

final _heresdkRoutingTransitBindingslistofSdkRoutingZonecategoryCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_ZoneCategory_create_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingZonecategoryReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_ZoneCategory_release_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkRoutingZonecategoryGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_routing_ZoneCategory_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkRoutingZonecategoryToFfiNullable(List<ZoneCategory>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingslistofSdkRoutingZonecategoryToFfi(value);
  final result = _heresdkRoutingTransitBindingslistofSdkRoutingZonecategoryCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingZonecategoryReleaseFfiHandle(_handle);
  return result;
}

List<ZoneCategory>? heresdkRoutingTransitBindingslistofSdkRoutingZonecategoryFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingTransitBindingslistofSdkRoutingZonecategoryGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingslistofSdkRoutingZonecategoryFromFfi(_handle);
  heresdkRoutingTransitBindingslistofSdkRoutingZonecategoryReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkRoutingZonecategoryReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingslistofSdkRoutingZonecategoryReleaseHandleNullable(handle);

final _heresdkRoutingTransitBindingslistofSdkTransportHazardousmaterialCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_transport_HazardousMaterial_create_handle'));
final _heresdkRoutingTransitBindingslistofSdkTransportHazardousmaterialReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_transport_HazardousMaterial_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkTransportHazardousmaterialInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_transport_HazardousMaterial_insert'));
final _heresdkRoutingTransitBindingslistofSdkTransportHazardousmaterialIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_transport_HazardousMaterial_iterator'));
final _heresdkRoutingTransitBindingslistofSdkTransportHazardousmaterialIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_transport_HazardousMaterial_iterator_release_handle'));
final _heresdkRoutingTransitBindingslistofSdkTransportHazardousmaterialIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_transport_HazardousMaterial_iterator_is_valid'));
final _heresdkRoutingTransitBindingslistofSdkTransportHazardousmaterialIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_transport_HazardousMaterial_iterator_increment'));
final _heresdkRoutingTransitBindingslistofSdkTransportHazardousmaterialIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_transport_HazardousMaterial_iterator_get'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkTransportHazardousmaterialToFfi(List<HazardousMaterial> value) {
  final _result = _heresdkRoutingTransitBindingslistofSdkTransportHazardousmaterialCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkTransportHazardousmaterialToFfi(element);
    _heresdkRoutingTransitBindingslistofSdkTransportHazardousmaterialInsert(_result, _elementHandle);
    sdkTransportHazardousmaterialReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<HazardousMaterial> heresdkRoutingTransitBindingslistofSdkTransportHazardousmaterialFromFfi(Pointer<Void> handle) {
  final result = List<HazardousMaterial>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingTransitBindingslistofSdkTransportHazardousmaterialIterator(handle);
  while (_heresdkRoutingTransitBindingslistofSdkTransportHazardousmaterialIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingTransitBindingslistofSdkTransportHazardousmaterialIteratorGet(_iteratorHandle);
    try {
      result.add(sdkTransportHazardousmaterialFromFfi(_elementHandle));
    } finally {
      sdkTransportHazardousmaterialReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingTransitBindingslistofSdkTransportHazardousmaterialIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingslistofSdkTransportHazardousmaterialIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkTransportHazardousmaterialReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingslistofSdkTransportHazardousmaterialReleaseHandle(handle);

final _heresdkRoutingTransitBindingslistofSdkTransportHazardousmaterialCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_transport_HazardousMaterial_create_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkTransportHazardousmaterialReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_transport_HazardousMaterial_release_handle_nullable'));
final _heresdkRoutingTransitBindingslistofSdkTransportHazardousmaterialGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsListOf_sdk_transport_HazardousMaterial_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingslistofSdkTransportHazardousmaterialToFfiNullable(List<HazardousMaterial>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingslistofSdkTransportHazardousmaterialToFfi(value);
  final result = _heresdkRoutingTransitBindingslistofSdkTransportHazardousmaterialCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingslistofSdkTransportHazardousmaterialReleaseFfiHandle(_handle);
  return result;
}

List<HazardousMaterial>? heresdkRoutingTransitBindingslistofSdkTransportHazardousmaterialFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingTransitBindingslistofSdkTransportHazardousmaterialGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingslistofSdkTransportHazardousmaterialFromFfi(_handle);
  heresdkRoutingTransitBindingslistofSdkTransportHazardousmaterialReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingslistofSdkTransportHazardousmaterialReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingslistofSdkTransportHazardousmaterialReleaseHandleNullable(handle);

final _heresdkRoutingTransitBindingsmapofDoubleToDoubleCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindingsMapOf_Double_to_Double_create_handle'));
final _heresdkRoutingTransitBindingsmapofDoubleToDoubleReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsMapOf_Double_to_Double_release_handle'));
final _heresdkRoutingTransitBindingsmapofDoubleToDoublePut = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Double, Double),
    void Function(Pointer<Void>, double, double)
  >('here_sdk_heresdk_routing_transit_bindingsMapOf_Double_to_Double_put'));
final _heresdkRoutingTransitBindingsmapofDoubleToDoubleIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsMapOf_Double_to_Double_iterator'));
final _heresdkRoutingTransitBindingsmapofDoubleToDoubleIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsMapOf_Double_to_Double_iterator_release_handle'));
final _heresdkRoutingTransitBindingsmapofDoubleToDoubleIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsMapOf_Double_to_Double_iterator_is_valid'));
final _heresdkRoutingTransitBindingsmapofDoubleToDoubleIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsMapOf_Double_to_Double_iterator_increment'));
final _heresdkRoutingTransitBindingsmapofDoubleToDoubleIteratorGetKey = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Double Function(Pointer<Void>),
    double Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsMapOf_Double_to_Double_iterator_get_key'));
final _heresdkRoutingTransitBindingsmapofDoubleToDoubleIteratorGetValue = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Double Function(Pointer<Void>),
    double Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsMapOf_Double_to_Double_iterator_get_value'));

Pointer<Void> heresdkRoutingTransitBindingsmapofDoubleToDoubleToFfi(Map<double, double> value) {
  final _result = _heresdkRoutingTransitBindingsmapofDoubleToDoubleCreateHandle();
  for (final entry in value.entries) {
    final _keyHandle = (entry.key);
    final _valueHandle = (entry.value);
    _heresdkRoutingTransitBindingsmapofDoubleToDoublePut(_result, _keyHandle, _valueHandle);
    
    
  }
  return _result;
}

Map<double, double> heresdkRoutingTransitBindingsmapofDoubleToDoubleFromFfi(Pointer<Void> handle) {
  final result = Map<double, double>();
  final _iteratorHandle = _heresdkRoutingTransitBindingsmapofDoubleToDoubleIterator(handle);
  while (_heresdkRoutingTransitBindingsmapofDoubleToDoubleIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _keyHandle = _heresdkRoutingTransitBindingsmapofDoubleToDoubleIteratorGetKey(_iteratorHandle);
    final _valueHandle = _heresdkRoutingTransitBindingsmapofDoubleToDoubleIteratorGetValue(_iteratorHandle);
    try {
      result[(_keyHandle)] =
        (_valueHandle);
    } finally {
      
      
    }
    _heresdkRoutingTransitBindingsmapofDoubleToDoubleIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingsmapofDoubleToDoubleIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingsmapofDoubleToDoubleReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingsmapofDoubleToDoubleReleaseHandle(handle);

final _heresdkRoutingTransitBindingsmapofDoubleToDoubleCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsMapOf_Double_to_Double_create_handle_nullable'));
final _heresdkRoutingTransitBindingsmapofDoubleToDoubleReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsMapOf_Double_to_Double_release_handle_nullable'));
final _heresdkRoutingTransitBindingsmapofDoubleToDoubleGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsMapOf_Double_to_Double_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingsmapofDoubleToDoubleToFfiNullable(Map<double, double>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingsmapofDoubleToDoubleToFfi(value);
  final result = _heresdkRoutingTransitBindingsmapofDoubleToDoubleCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingsmapofDoubleToDoubleReleaseFfiHandle(_handle);
  return result;
}

Map<double, double>? heresdkRoutingTransitBindingsmapofDoubleToDoubleFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingTransitBindingsmapofDoubleToDoubleGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingsmapofDoubleToDoubleFromFfi(_handle);
  heresdkRoutingTransitBindingsmapofDoubleToDoubleReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingsmapofDoubleToDoubleReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingsmapofDoubleToDoubleReleaseHandleNullable(handle);

final _heresdkRoutingTransitBindingsmapofIntToDoubleCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindingsMapOf_Int_to_Double_create_handle'));
final _heresdkRoutingTransitBindingsmapofIntToDoubleReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsMapOf_Int_to_Double_release_handle'));
final _heresdkRoutingTransitBindingsmapofIntToDoublePut = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Int32, Double),
    void Function(Pointer<Void>, int, double)
  >('here_sdk_heresdk_routing_transit_bindingsMapOf_Int_to_Double_put'));
final _heresdkRoutingTransitBindingsmapofIntToDoubleIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsMapOf_Int_to_Double_iterator'));
final _heresdkRoutingTransitBindingsmapofIntToDoubleIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsMapOf_Int_to_Double_iterator_release_handle'));
final _heresdkRoutingTransitBindingsmapofIntToDoubleIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsMapOf_Int_to_Double_iterator_is_valid'));
final _heresdkRoutingTransitBindingsmapofIntToDoubleIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsMapOf_Int_to_Double_iterator_increment'));
final _heresdkRoutingTransitBindingsmapofIntToDoubleIteratorGetKey = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsMapOf_Int_to_Double_iterator_get_key'));
final _heresdkRoutingTransitBindingsmapofIntToDoubleIteratorGetValue = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Double Function(Pointer<Void>),
    double Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsMapOf_Int_to_Double_iterator_get_value'));

Pointer<Void> heresdkRoutingTransitBindingsmapofIntToDoubleToFfi(Map<int, double> value) {
  final _result = _heresdkRoutingTransitBindingsmapofIntToDoubleCreateHandle();
  for (final entry in value.entries) {
    final _keyHandle = (entry.key);
    final _valueHandle = (entry.value);
    _heresdkRoutingTransitBindingsmapofIntToDoublePut(_result, _keyHandle, _valueHandle);
    
    
  }
  return _result;
}

Map<int, double> heresdkRoutingTransitBindingsmapofIntToDoubleFromFfi(Pointer<Void> handle) {
  final result = Map<int, double>();
  final _iteratorHandle = _heresdkRoutingTransitBindingsmapofIntToDoubleIterator(handle);
  while (_heresdkRoutingTransitBindingsmapofIntToDoubleIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _keyHandle = _heresdkRoutingTransitBindingsmapofIntToDoubleIteratorGetKey(_iteratorHandle);
    final _valueHandle = _heresdkRoutingTransitBindingsmapofIntToDoubleIteratorGetValue(_iteratorHandle);
    try {
      result[(_keyHandle)] =
        (_valueHandle);
    } finally {
      
      
    }
    _heresdkRoutingTransitBindingsmapofIntToDoubleIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingsmapofIntToDoubleIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingsmapofIntToDoubleReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingsmapofIntToDoubleReleaseHandle(handle);

final _heresdkRoutingTransitBindingsmapofIntToDoubleCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsMapOf_Int_to_Double_create_handle_nullable'));
final _heresdkRoutingTransitBindingsmapofIntToDoubleReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsMapOf_Int_to_Double_release_handle_nullable'));
final _heresdkRoutingTransitBindingsmapofIntToDoubleGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsMapOf_Int_to_Double_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingsmapofIntToDoubleToFfiNullable(Map<int, double>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingsmapofIntToDoubleToFfi(value);
  final result = _heresdkRoutingTransitBindingsmapofIntToDoubleCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingsmapofIntToDoubleReleaseFfiHandle(_handle);
  return result;
}

Map<int, double>? heresdkRoutingTransitBindingsmapofIntToDoubleFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingTransitBindingsmapofIntToDoubleGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingsmapofIntToDoubleFromFfi(_handle);
  heresdkRoutingTransitBindingsmapofIntToDoubleReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingsmapofIntToDoubleReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingsmapofIntToDoubleReleaseHandleNullable(handle);

final _heresdkRoutingTransitBindingsmapofSdkCoreEngineEnginebaseurlToStringCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_create_handle'));
final _heresdkRoutingTransitBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_release_handle'));
final _heresdkRoutingTransitBindingsmapofSdkCoreEngineEnginebaseurlToStringPut = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32, Pointer<Void>),
    void Function(Pointer<Void>, int, Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_put'));
final _heresdkRoutingTransitBindingsmapofSdkCoreEngineEnginebaseurlToStringIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_iterator'));
final _heresdkRoutingTransitBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_iterator_release_handle'));
final _heresdkRoutingTransitBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_iterator_is_valid'));
final _heresdkRoutingTransitBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_iterator_increment'));
final _heresdkRoutingTransitBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorGetKey = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_iterator_get_key'));
final _heresdkRoutingTransitBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorGetValue = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_iterator_get_value'));

Pointer<Void> heresdkRoutingTransitBindingsmapofSdkCoreEngineEnginebaseurlToStringToFfi(Map<EngineBaseURL, String> value) {
  final _result = _heresdkRoutingTransitBindingsmapofSdkCoreEngineEnginebaseurlToStringCreateHandle();
  for (final entry in value.entries) {
    final _keyHandle = sdkCoreEngineEnginebaseurlToFfi(entry.key);
    final _valueHandle = stringToFfi(entry.value);
    _heresdkRoutingTransitBindingsmapofSdkCoreEngineEnginebaseurlToStringPut(_result, _keyHandle, _valueHandle);
    sdkCoreEngineEnginebaseurlReleaseFfiHandle(_keyHandle);
    stringReleaseFfiHandle(_valueHandle);
  }
  return _result;
}

Map<EngineBaseURL, String> heresdkRoutingTransitBindingsmapofSdkCoreEngineEnginebaseurlToStringFromFfi(Pointer<Void> handle) {
  final result = Map<EngineBaseURL, String>();
  final _iteratorHandle = _heresdkRoutingTransitBindingsmapofSdkCoreEngineEnginebaseurlToStringIterator(handle);
  while (_heresdkRoutingTransitBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _keyHandle = _heresdkRoutingTransitBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorGetKey(_iteratorHandle);
    final _valueHandle = _heresdkRoutingTransitBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorGetValue(_iteratorHandle);
    try {
      result[sdkCoreEngineEnginebaseurlFromFfi(_keyHandle)] =
        stringFromFfi(_valueHandle);
    } finally {
      sdkCoreEngineEnginebaseurlReleaseFfiHandle(_keyHandle);
      stringReleaseFfiHandle(_valueHandle);
    }
    _heresdkRoutingTransitBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseHandle(handle);

final _heresdkRoutingTransitBindingsmapofSdkCoreEngineEnginebaseurlToStringCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_create_handle_nullable'));
final _heresdkRoutingTransitBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_release_handle_nullable'));
final _heresdkRoutingTransitBindingsmapofSdkCoreEngineEnginebaseurlToStringGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingsmapofSdkCoreEngineEnginebaseurlToStringToFfiNullable(Map<EngineBaseURL, String>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingsmapofSdkCoreEngineEnginebaseurlToStringToFfi(value);
  final result = _heresdkRoutingTransitBindingsmapofSdkCoreEngineEnginebaseurlToStringCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseFfiHandle(_handle);
  return result;
}

Map<EngineBaseURL, String>? heresdkRoutingTransitBindingsmapofSdkCoreEngineEnginebaseurlToStringFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkRoutingTransitBindingsmapofSdkCoreEngineEnginebaseurlToStringGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingsmapofSdkCoreEngineEnginebaseurlToStringFromFfi(_handle);
  heresdkRoutingTransitBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseHandleNullable(handle);


// Copyright (c) 2018-2022 HERE Global B.V. and its affiliate(s).
// All rights reserved.
//
// This software and other materials contain proprietary information
// controlled by HERE and are protected by applicable copyright legislation.
// Any use and utilization of this software and other materials and
// disclosure to any third parties is conditional upon having a separate
// agreement with HERE for the access, use, utilization or disclosure of this
// software. In the absence of such agreement, the use of the software is not
// allowed.
//
































final _heresdkSearchBindingslistofLocaleCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_bindingsListOf_Locale_create_handle'));
final _heresdkSearchBindingslistofLocaleReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_Locale_release_handle'));
final _heresdkSearchBindingslistofLocaleInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_Locale_insert'));
final _heresdkSearchBindingslistofLocaleIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_Locale_iterator'));
final _heresdkSearchBindingslistofLocaleIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_Locale_iterator_release_handle'));
final _heresdkSearchBindingslistofLocaleIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_Locale_iterator_is_valid'));
final _heresdkSearchBindingslistofLocaleIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_Locale_iterator_increment'));
final _heresdkSearchBindingslistofLocaleIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_Locale_iterator_get'));

Pointer<Void> heresdkSearchBindingslistofLocaleToFfi(List<Locale> value) {
  final _result = _heresdkSearchBindingslistofLocaleCreateHandle();
  for (final element in value) {
    final _elementHandle = localeToFfi(element);
    _heresdkSearchBindingslistofLocaleInsert(_result, _elementHandle);
    localeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Locale> heresdkSearchBindingslistofLocaleFromFfi(Pointer<Void> handle) {
  final result = List<Locale>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchBindingslistofLocaleIterator(handle);
  while (_heresdkSearchBindingslistofLocaleIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchBindingslistofLocaleIteratorGet(_iteratorHandle);
    try {
      result.add(localeFromFfi(_elementHandle));
    } finally {
      localeReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchBindingslistofLocaleIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchBindingslistofLocaleIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchBindingslistofLocaleReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchBindingslistofLocaleReleaseHandle(handle);

final _heresdkSearchBindingslistofLocaleCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_Locale_create_handle_nullable'));
final _heresdkSearchBindingslistofLocaleReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_Locale_release_handle_nullable'));
final _heresdkSearchBindingslistofLocaleGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_Locale_get_value_nullable'));

Pointer<Void> heresdkSearchBindingslistofLocaleToFfiNullable(List<Locale>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchBindingslistofLocaleToFfi(value);
  final result = _heresdkSearchBindingslistofLocaleCreateHandleNullable(_handle);
  heresdkSearchBindingslistofLocaleReleaseFfiHandle(_handle);
  return result;
}

List<Locale>? heresdkSearchBindingslistofLocaleFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchBindingslistofLocaleGetValueNullable(handle);
  final result = heresdkSearchBindingslistofLocaleFromFfi(_handle);
  heresdkSearchBindingslistofLocaleReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchBindingslistofLocaleReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchBindingslistofLocaleReleaseHandleNullable(handle);

final _heresdkSearchBindingslistofStringCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_bindingsListOf_String_create_handle'));
final _heresdkSearchBindingslistofStringReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_String_release_handle'));
final _heresdkSearchBindingslistofStringInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_String_insert'));
final _heresdkSearchBindingslistofStringIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_String_iterator'));
final _heresdkSearchBindingslistofStringIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_String_iterator_release_handle'));
final _heresdkSearchBindingslistofStringIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_String_iterator_is_valid'));
final _heresdkSearchBindingslistofStringIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_String_iterator_increment'));
final _heresdkSearchBindingslistofStringIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_String_iterator_get'));

Pointer<Void> heresdkSearchBindingslistofStringToFfi(List<String> value) {
  final _result = _heresdkSearchBindingslistofStringCreateHandle();
  for (final element in value) {
    final _elementHandle = stringToFfi(element);
    _heresdkSearchBindingslistofStringInsert(_result, _elementHandle);
    stringReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<String> heresdkSearchBindingslistofStringFromFfi(Pointer<Void> handle) {
  final result = List<String>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchBindingslistofStringIterator(handle);
  while (_heresdkSearchBindingslistofStringIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchBindingslistofStringIteratorGet(_iteratorHandle);
    try {
      result.add(stringFromFfi(_elementHandle));
    } finally {
      stringReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchBindingslistofStringIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchBindingslistofStringIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchBindingslistofStringReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchBindingslistofStringReleaseHandle(handle);

final _heresdkSearchBindingslistofStringCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_String_create_handle_nullable'));
final _heresdkSearchBindingslistofStringReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_String_release_handle_nullable'));
final _heresdkSearchBindingslistofStringGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_String_get_value_nullable'));

Pointer<Void> heresdkSearchBindingslistofStringToFfiNullable(List<String>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchBindingslistofStringToFfi(value);
  final result = _heresdkSearchBindingslistofStringCreateHandleNullable(_handle);
  heresdkSearchBindingslistofStringReleaseFfiHandle(_handle);
  return result;
}

List<String>? heresdkSearchBindingslistofStringFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchBindingslistofStringGetValueNullable(handle);
  final result = heresdkSearchBindingslistofStringFromFfi(_handle);
  heresdkSearchBindingslistofStringReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchBindingslistofStringReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchBindingslistofStringReleaseHandleNullable(handle);

final _heresdkSearchBindingslistofSdkCoreCountrycodeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_bindingsListOf_sdk_core_CountryCode_create_handle'));
final _heresdkSearchBindingslistofSdkCoreCountrycodeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_core_CountryCode_release_handle'));
final _heresdkSearchBindingslistofSdkCoreCountrycodeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_core_CountryCode_insert'));
final _heresdkSearchBindingslistofSdkCoreCountrycodeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_core_CountryCode_iterator'));
final _heresdkSearchBindingslistofSdkCoreCountrycodeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_core_CountryCode_iterator_release_handle'));
final _heresdkSearchBindingslistofSdkCoreCountrycodeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_core_CountryCode_iterator_is_valid'));
final _heresdkSearchBindingslistofSdkCoreCountrycodeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_core_CountryCode_iterator_increment'));
final _heresdkSearchBindingslistofSdkCoreCountrycodeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_core_CountryCode_iterator_get'));

Pointer<Void> heresdkSearchBindingslistofSdkCoreCountrycodeToFfi(List<CountryCode> value) {
  final _result = _heresdkSearchBindingslistofSdkCoreCountrycodeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreCountrycodeToFfi(element);
    _heresdkSearchBindingslistofSdkCoreCountrycodeInsert(_result, _elementHandle);
    sdkCoreCountrycodeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<CountryCode> heresdkSearchBindingslistofSdkCoreCountrycodeFromFfi(Pointer<Void> handle) {
  final result = List<CountryCode>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchBindingslistofSdkCoreCountrycodeIterator(handle);
  while (_heresdkSearchBindingslistofSdkCoreCountrycodeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchBindingslistofSdkCoreCountrycodeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreCountrycodeFromFfi(_elementHandle));
    } finally {
      sdkCoreCountrycodeReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchBindingslistofSdkCoreCountrycodeIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchBindingslistofSdkCoreCountrycodeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchBindingslistofSdkCoreCountrycodeReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchBindingslistofSdkCoreCountrycodeReleaseHandle(handle);

final _heresdkSearchBindingslistofSdkCoreCountrycodeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_core_CountryCode_create_handle_nullable'));
final _heresdkSearchBindingslistofSdkCoreCountrycodeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_core_CountryCode_release_handle_nullable'));
final _heresdkSearchBindingslistofSdkCoreCountrycodeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_core_CountryCode_get_value_nullable'));

Pointer<Void> heresdkSearchBindingslistofSdkCoreCountrycodeToFfiNullable(List<CountryCode>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchBindingslistofSdkCoreCountrycodeToFfi(value);
  final result = _heresdkSearchBindingslistofSdkCoreCountrycodeCreateHandleNullable(_handle);
  heresdkSearchBindingslistofSdkCoreCountrycodeReleaseFfiHandle(_handle);
  return result;
}

List<CountryCode>? heresdkSearchBindingslistofSdkCoreCountrycodeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchBindingslistofSdkCoreCountrycodeGetValueNullable(handle);
  final result = heresdkSearchBindingslistofSdkCoreCountrycodeFromFfi(_handle);
  heresdkSearchBindingslistofSdkCoreCountrycodeReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchBindingslistofSdkCoreCountrycodeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchBindingslistofSdkCoreCountrycodeReleaseHandleNullable(handle);

final _heresdkSearchBindingslistofSdkCoreExternalidCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_bindingsListOf_sdk_core_ExternalID_create_handle'));
final _heresdkSearchBindingslistofSdkCoreExternalidReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_core_ExternalID_release_handle'));
final _heresdkSearchBindingslistofSdkCoreExternalidInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_core_ExternalID_insert'));
final _heresdkSearchBindingslistofSdkCoreExternalidIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_core_ExternalID_iterator'));
final _heresdkSearchBindingslistofSdkCoreExternalidIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_core_ExternalID_iterator_release_handle'));
final _heresdkSearchBindingslistofSdkCoreExternalidIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_core_ExternalID_iterator_is_valid'));
final _heresdkSearchBindingslistofSdkCoreExternalidIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_core_ExternalID_iterator_increment'));
final _heresdkSearchBindingslistofSdkCoreExternalidIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_core_ExternalID_iterator_get'));

Pointer<Void> heresdkSearchBindingslistofSdkCoreExternalidToFfi(List<ExternalID> value) {
  final _result = _heresdkSearchBindingslistofSdkCoreExternalidCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreExternalidToFfi(element);
    _heresdkSearchBindingslistofSdkCoreExternalidInsert(_result, _elementHandle);
    sdkCoreExternalidReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<ExternalID> heresdkSearchBindingslistofSdkCoreExternalidFromFfi(Pointer<Void> handle) {
  final result = List<ExternalID>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchBindingslistofSdkCoreExternalidIterator(handle);
  while (_heresdkSearchBindingslistofSdkCoreExternalidIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchBindingslistofSdkCoreExternalidIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreExternalidFromFfi(_elementHandle));
    } finally {
      sdkCoreExternalidReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchBindingslistofSdkCoreExternalidIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchBindingslistofSdkCoreExternalidIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchBindingslistofSdkCoreExternalidReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchBindingslistofSdkCoreExternalidReleaseHandle(handle);

final _heresdkSearchBindingslistofSdkCoreExternalidCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_core_ExternalID_create_handle_nullable'));
final _heresdkSearchBindingslistofSdkCoreExternalidReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_core_ExternalID_release_handle_nullable'));
final _heresdkSearchBindingslistofSdkCoreExternalidGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_core_ExternalID_get_value_nullable'));

Pointer<Void> heresdkSearchBindingslistofSdkCoreExternalidToFfiNullable(List<ExternalID>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchBindingslistofSdkCoreExternalidToFfi(value);
  final result = _heresdkSearchBindingslistofSdkCoreExternalidCreateHandleNullable(_handle);
  heresdkSearchBindingslistofSdkCoreExternalidReleaseFfiHandle(_handle);
  return result;
}

List<ExternalID>? heresdkSearchBindingslistofSdkCoreExternalidFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchBindingslistofSdkCoreExternalidGetValueNullable(handle);
  final result = heresdkSearchBindingslistofSdkCoreExternalidFromFfi(_handle);
  heresdkSearchBindingslistofSdkCoreExternalidReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchBindingslistofSdkCoreExternalidReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchBindingslistofSdkCoreExternalidReleaseHandleNullable(handle);

final _heresdkSearchBindingslistofSdkCoreGeocoordinatesCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_bindingsListOf_sdk_core_GeoCoordinates_create_handle'));
final _heresdkSearchBindingslistofSdkCoreGeocoordinatesReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_core_GeoCoordinates_release_handle'));
final _heresdkSearchBindingslistofSdkCoreGeocoordinatesInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_core_GeoCoordinates_insert'));
final _heresdkSearchBindingslistofSdkCoreGeocoordinatesIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_core_GeoCoordinates_iterator'));
final _heresdkSearchBindingslistofSdkCoreGeocoordinatesIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_core_GeoCoordinates_iterator_release_handle'));
final _heresdkSearchBindingslistofSdkCoreGeocoordinatesIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_core_GeoCoordinates_iterator_is_valid'));
final _heresdkSearchBindingslistofSdkCoreGeocoordinatesIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_core_GeoCoordinates_iterator_increment'));
final _heresdkSearchBindingslistofSdkCoreGeocoordinatesIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_core_GeoCoordinates_iterator_get'));

Pointer<Void> heresdkSearchBindingslistofSdkCoreGeocoordinatesToFfi(List<GeoCoordinates> value) {
  final _result = _heresdkSearchBindingslistofSdkCoreGeocoordinatesCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreGeocoordinatesToFfi(element);
    _heresdkSearchBindingslistofSdkCoreGeocoordinatesInsert(_result, _elementHandle);
    sdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoCoordinates> heresdkSearchBindingslistofSdkCoreGeocoordinatesFromFfi(Pointer<Void> handle) {
  final result = List<GeoCoordinates>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchBindingslistofSdkCoreGeocoordinatesIterator(handle);
  while (_heresdkSearchBindingslistofSdkCoreGeocoordinatesIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchBindingslistofSdkCoreGeocoordinatesIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreGeocoordinatesFromFfi(_elementHandle));
    } finally {
      sdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchBindingslistofSdkCoreGeocoordinatesIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchBindingslistofSdkCoreGeocoordinatesIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchBindingslistofSdkCoreGeocoordinatesReleaseHandle(handle);

final _heresdkSearchBindingslistofSdkCoreGeocoordinatesCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_core_GeoCoordinates_create_handle_nullable'));
final _heresdkSearchBindingslistofSdkCoreGeocoordinatesReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_core_GeoCoordinates_release_handle_nullable'));
final _heresdkSearchBindingslistofSdkCoreGeocoordinatesGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_core_GeoCoordinates_get_value_nullable'));

Pointer<Void> heresdkSearchBindingslistofSdkCoreGeocoordinatesToFfiNullable(List<GeoCoordinates>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchBindingslistofSdkCoreGeocoordinatesToFfi(value);
  final result = _heresdkSearchBindingslistofSdkCoreGeocoordinatesCreateHandleNullable(_handle);
  heresdkSearchBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

List<GeoCoordinates>? heresdkSearchBindingslistofSdkCoreGeocoordinatesFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchBindingslistofSdkCoreGeocoordinatesGetValueNullable(handle);
  final result = heresdkSearchBindingslistofSdkCoreGeocoordinatesFromFfi(_handle);
  heresdkSearchBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchBindingslistofSdkCoreGeocoordinatesReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchBindingslistofSdkCoreGeocoordinatesReleaseHandleNullable(handle);

final _heresdkSearchBindingslistofSdkCoreLocalizedtextCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_bindingsListOf_sdk_core_LocalizedText_create_handle'));
final _heresdkSearchBindingslistofSdkCoreLocalizedtextReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_core_LocalizedText_release_handle'));
final _heresdkSearchBindingslistofSdkCoreLocalizedtextInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_core_LocalizedText_insert'));
final _heresdkSearchBindingslistofSdkCoreLocalizedtextIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_core_LocalizedText_iterator'));
final _heresdkSearchBindingslistofSdkCoreLocalizedtextIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_core_LocalizedText_iterator_release_handle'));
final _heresdkSearchBindingslistofSdkCoreLocalizedtextIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_core_LocalizedText_iterator_is_valid'));
final _heresdkSearchBindingslistofSdkCoreLocalizedtextIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_core_LocalizedText_iterator_increment'));
final _heresdkSearchBindingslistofSdkCoreLocalizedtextIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_core_LocalizedText_iterator_get'));

Pointer<Void> heresdkSearchBindingslistofSdkCoreLocalizedtextToFfi(List<LocalizedText> value) {
  final _result = _heresdkSearchBindingslistofSdkCoreLocalizedtextCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreLocalizedtextToFfi(element);
    _heresdkSearchBindingslistofSdkCoreLocalizedtextInsert(_result, _elementHandle);
    sdkCoreLocalizedtextReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<LocalizedText> heresdkSearchBindingslistofSdkCoreLocalizedtextFromFfi(Pointer<Void> handle) {
  final result = List<LocalizedText>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchBindingslistofSdkCoreLocalizedtextIterator(handle);
  while (_heresdkSearchBindingslistofSdkCoreLocalizedtextIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchBindingslistofSdkCoreLocalizedtextIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreLocalizedtextFromFfi(_elementHandle));
    } finally {
      sdkCoreLocalizedtextReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchBindingslistofSdkCoreLocalizedtextIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchBindingslistofSdkCoreLocalizedtextIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchBindingslistofSdkCoreLocalizedtextReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchBindingslistofSdkCoreLocalizedtextReleaseHandle(handle);

final _heresdkSearchBindingslistofSdkCoreLocalizedtextCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_core_LocalizedText_create_handle_nullable'));
final _heresdkSearchBindingslistofSdkCoreLocalizedtextReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_core_LocalizedText_release_handle_nullable'));
final _heresdkSearchBindingslistofSdkCoreLocalizedtextGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_core_LocalizedText_get_value_nullable'));

Pointer<Void> heresdkSearchBindingslistofSdkCoreLocalizedtextToFfiNullable(List<LocalizedText>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchBindingslistofSdkCoreLocalizedtextToFfi(value);
  final result = _heresdkSearchBindingslistofSdkCoreLocalizedtextCreateHandleNullable(_handle);
  heresdkSearchBindingslistofSdkCoreLocalizedtextReleaseFfiHandle(_handle);
  return result;
}

List<LocalizedText>? heresdkSearchBindingslistofSdkCoreLocalizedtextFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchBindingslistofSdkCoreLocalizedtextGetValueNullable(handle);
  final result = heresdkSearchBindingslistofSdkCoreLocalizedtextFromFfi(_handle);
  heresdkSearchBindingslistofSdkCoreLocalizedtextReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchBindingslistofSdkCoreLocalizedtextReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchBindingslistofSdkCoreLocalizedtextReleaseHandleNullable(handle);

final _heresdkSearchBindingslistofSdkCoreEngineLayerconfigurationFeatureCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_create_handle'));
final _heresdkSearchBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_release_handle'));
final _heresdkSearchBindingslistofSdkCoreEngineLayerconfigurationFeatureInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_insert'));
final _heresdkSearchBindingslistofSdkCoreEngineLayerconfigurationFeatureIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator'));
final _heresdkSearchBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator_release_handle'));
final _heresdkSearchBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator_is_valid'));
final _heresdkSearchBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator_increment'));
final _heresdkSearchBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator_get'));

Pointer<Void> heresdkSearchBindingslistofSdkCoreEngineLayerconfigurationFeatureToFfi(List<LayerConfigurationFeature> value) {
  final _result = _heresdkSearchBindingslistofSdkCoreEngineLayerconfigurationFeatureCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreEngineLayerconfigurationFeatureToFfi(element);
    _heresdkSearchBindingslistofSdkCoreEngineLayerconfigurationFeatureInsert(_result, _elementHandle);
    sdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<LayerConfigurationFeature> heresdkSearchBindingslistofSdkCoreEngineLayerconfigurationFeatureFromFfi(Pointer<Void> handle) {
  final result = List<LayerConfigurationFeature>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchBindingslistofSdkCoreEngineLayerconfigurationFeatureIterator(handle);
  while (_heresdkSearchBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreEngineLayerconfigurationFeatureFromFfi(_elementHandle));
    } finally {
      sdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseHandle(handle);

final _heresdkSearchBindingslistofSdkCoreEngineLayerconfigurationFeatureCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_create_handle_nullable'));
final _heresdkSearchBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_release_handle_nullable'));
final _heresdkSearchBindingslistofSdkCoreEngineLayerconfigurationFeatureGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_get_value_nullable'));

Pointer<Void> heresdkSearchBindingslistofSdkCoreEngineLayerconfigurationFeatureToFfiNullable(List<LayerConfigurationFeature>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchBindingslistofSdkCoreEngineLayerconfigurationFeatureToFfi(value);
  final result = _heresdkSearchBindingslistofSdkCoreEngineLayerconfigurationFeatureCreateHandleNullable(_handle);
  heresdkSearchBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(_handle);
  return result;
}

List<LayerConfigurationFeature>? heresdkSearchBindingslistofSdkCoreEngineLayerconfigurationFeatureFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchBindingslistofSdkCoreEngineLayerconfigurationFeatureGetValueNullable(handle);
  final result = heresdkSearchBindingslistofSdkCoreEngineLayerconfigurationFeatureFromFfi(_handle);
  heresdkSearchBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseHandleNullable(handle);

final _heresdkSearchBindingslistofSdkSearchContactCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_Contact_create_handle'));
final _heresdkSearchBindingslistofSdkSearchContactReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_Contact_release_handle'));
final _heresdkSearchBindingslistofSdkSearchContactInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_Contact_insert'));
final _heresdkSearchBindingslistofSdkSearchContactIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_Contact_iterator'));
final _heresdkSearchBindingslistofSdkSearchContactIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_Contact_iterator_release_handle'));
final _heresdkSearchBindingslistofSdkSearchContactIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_Contact_iterator_is_valid'));
final _heresdkSearchBindingslistofSdkSearchContactIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_Contact_iterator_increment'));
final _heresdkSearchBindingslistofSdkSearchContactIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_Contact_iterator_get'));

Pointer<Void> heresdkSearchBindingslistofSdkSearchContactToFfi(List<Contact> value) {
  final _result = _heresdkSearchBindingslistofSdkSearchContactCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchContactToFfi(element);
    _heresdkSearchBindingslistofSdkSearchContactInsert(_result, _elementHandle);
    sdkSearchContactReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Contact> heresdkSearchBindingslistofSdkSearchContactFromFfi(Pointer<Void> handle) {
  final result = List<Contact>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchBindingslistofSdkSearchContactIterator(handle);
  while (_heresdkSearchBindingslistofSdkSearchContactIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchBindingslistofSdkSearchContactIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchContactFromFfi(_elementHandle));
    } finally {
      sdkSearchContactReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchBindingslistofSdkSearchContactIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchBindingslistofSdkSearchContactIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchBindingslistofSdkSearchContactReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchBindingslistofSdkSearchContactReleaseHandle(handle);

final _heresdkSearchBindingslistofSdkSearchContactCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_Contact_create_handle_nullable'));
final _heresdkSearchBindingslistofSdkSearchContactReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_Contact_release_handle_nullable'));
final _heresdkSearchBindingslistofSdkSearchContactGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_Contact_get_value_nullable'));

Pointer<Void> heresdkSearchBindingslistofSdkSearchContactToFfiNullable(List<Contact>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchBindingslistofSdkSearchContactToFfi(value);
  final result = _heresdkSearchBindingslistofSdkSearchContactCreateHandleNullable(_handle);
  heresdkSearchBindingslistofSdkSearchContactReleaseFfiHandle(_handle);
  return result;
}

List<Contact>? heresdkSearchBindingslistofSdkSearchContactFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchBindingslistofSdkSearchContactGetValueNullable(handle);
  final result = heresdkSearchBindingslistofSdkSearchContactFromFfi(_handle);
  heresdkSearchBindingslistofSdkSearchContactReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchBindingslistofSdkSearchContactReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchBindingslistofSdkSearchContactReleaseHandleNullable(handle);

final _heresdkSearchBindingslistofSdkSearchEvchargingstationCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_EVChargingStation_create_handle'));
final _heresdkSearchBindingslistofSdkSearchEvchargingstationReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_EVChargingStation_release_handle'));
final _heresdkSearchBindingslistofSdkSearchEvchargingstationInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_EVChargingStation_insert'));
final _heresdkSearchBindingslistofSdkSearchEvchargingstationIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_EVChargingStation_iterator'));
final _heresdkSearchBindingslistofSdkSearchEvchargingstationIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_EVChargingStation_iterator_release_handle'));
final _heresdkSearchBindingslistofSdkSearchEvchargingstationIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_EVChargingStation_iterator_is_valid'));
final _heresdkSearchBindingslistofSdkSearchEvchargingstationIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_EVChargingStation_iterator_increment'));
final _heresdkSearchBindingslistofSdkSearchEvchargingstationIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_EVChargingStation_iterator_get'));

Pointer<Void> heresdkSearchBindingslistofSdkSearchEvchargingstationToFfi(List<EVChargingStation> value) {
  final _result = _heresdkSearchBindingslistofSdkSearchEvchargingstationCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchEvchargingstationToFfi(element);
    _heresdkSearchBindingslistofSdkSearchEvchargingstationInsert(_result, _elementHandle);
    sdkSearchEvchargingstationReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<EVChargingStation> heresdkSearchBindingslistofSdkSearchEvchargingstationFromFfi(Pointer<Void> handle) {
  final result = List<EVChargingStation>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchBindingslistofSdkSearchEvchargingstationIterator(handle);
  while (_heresdkSearchBindingslistofSdkSearchEvchargingstationIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchBindingslistofSdkSearchEvchargingstationIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchEvchargingstationFromFfi(_elementHandle));
    } finally {
      sdkSearchEvchargingstationReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchBindingslistofSdkSearchEvchargingstationIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchBindingslistofSdkSearchEvchargingstationIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchBindingslistofSdkSearchEvchargingstationReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchBindingslistofSdkSearchEvchargingstationReleaseHandle(handle);

final _heresdkSearchBindingslistofSdkSearchEvchargingstationCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_EVChargingStation_create_handle_nullable'));
final _heresdkSearchBindingslistofSdkSearchEvchargingstationReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_EVChargingStation_release_handle_nullable'));
final _heresdkSearchBindingslistofSdkSearchEvchargingstationGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_EVChargingStation_get_value_nullable'));

Pointer<Void> heresdkSearchBindingslistofSdkSearchEvchargingstationToFfiNullable(List<EVChargingStation>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchBindingslistofSdkSearchEvchargingstationToFfi(value);
  final result = _heresdkSearchBindingslistofSdkSearchEvchargingstationCreateHandleNullable(_handle);
  heresdkSearchBindingslistofSdkSearchEvchargingstationReleaseFfiHandle(_handle);
  return result;
}

List<EVChargingStation>? heresdkSearchBindingslistofSdkSearchEvchargingstationFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchBindingslistofSdkSearchEvchargingstationGetValueNullable(handle);
  final result = heresdkSearchBindingslistofSdkSearchEvchargingstationFromFfi(_handle);
  heresdkSearchBindingslistofSdkSearchEvchargingstationReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchBindingslistofSdkSearchEvchargingstationReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchBindingslistofSdkSearchEvchargingstationReleaseHandleNullable(handle);

final _heresdkSearchBindingslistofSdkSearchEmailaddressCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_EmailAddress_create_handle'));
final _heresdkSearchBindingslistofSdkSearchEmailaddressReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_EmailAddress_release_handle'));
final _heresdkSearchBindingslistofSdkSearchEmailaddressInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_EmailAddress_insert'));
final _heresdkSearchBindingslistofSdkSearchEmailaddressIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_EmailAddress_iterator'));
final _heresdkSearchBindingslistofSdkSearchEmailaddressIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_EmailAddress_iterator_release_handle'));
final _heresdkSearchBindingslistofSdkSearchEmailaddressIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_EmailAddress_iterator_is_valid'));
final _heresdkSearchBindingslistofSdkSearchEmailaddressIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_EmailAddress_iterator_increment'));
final _heresdkSearchBindingslistofSdkSearchEmailaddressIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_EmailAddress_iterator_get'));

Pointer<Void> heresdkSearchBindingslistofSdkSearchEmailaddressToFfi(List<EmailAddress> value) {
  final _result = _heresdkSearchBindingslistofSdkSearchEmailaddressCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchEmailaddressToFfi(element);
    _heresdkSearchBindingslistofSdkSearchEmailaddressInsert(_result, _elementHandle);
    sdkSearchEmailaddressReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<EmailAddress> heresdkSearchBindingslistofSdkSearchEmailaddressFromFfi(Pointer<Void> handle) {
  final result = List<EmailAddress>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchBindingslistofSdkSearchEmailaddressIterator(handle);
  while (_heresdkSearchBindingslistofSdkSearchEmailaddressIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchBindingslistofSdkSearchEmailaddressIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchEmailaddressFromFfi(_elementHandle));
    } finally {
      sdkSearchEmailaddressReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchBindingslistofSdkSearchEmailaddressIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchBindingslistofSdkSearchEmailaddressIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchBindingslistofSdkSearchEmailaddressReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchBindingslistofSdkSearchEmailaddressReleaseHandle(handle);

final _heresdkSearchBindingslistofSdkSearchEmailaddressCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_EmailAddress_create_handle_nullable'));
final _heresdkSearchBindingslistofSdkSearchEmailaddressReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_EmailAddress_release_handle_nullable'));
final _heresdkSearchBindingslistofSdkSearchEmailaddressGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_EmailAddress_get_value_nullable'));

Pointer<Void> heresdkSearchBindingslistofSdkSearchEmailaddressToFfiNullable(List<EmailAddress>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchBindingslistofSdkSearchEmailaddressToFfi(value);
  final result = _heresdkSearchBindingslistofSdkSearchEmailaddressCreateHandleNullable(_handle);
  heresdkSearchBindingslistofSdkSearchEmailaddressReleaseFfiHandle(_handle);
  return result;
}

List<EmailAddress>? heresdkSearchBindingslistofSdkSearchEmailaddressFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchBindingslistofSdkSearchEmailaddressGetValueNullable(handle);
  final result = heresdkSearchBindingslistofSdkSearchEmailaddressFromFfi(_handle);
  heresdkSearchBindingslistofSdkSearchEmailaddressReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchBindingslistofSdkSearchEmailaddressReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchBindingslistofSdkSearchEmailaddressReleaseHandleNullable(handle);

final _heresdkSearchBindingslistofSdkSearchEvconnectorexperimentalCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_EvConnectorExperimental_create_handle'));
final _heresdkSearchBindingslistofSdkSearchEvconnectorexperimentalReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_EvConnectorExperimental_release_handle'));
final _heresdkSearchBindingslistofSdkSearchEvconnectorexperimentalInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_EvConnectorExperimental_insert'));
final _heresdkSearchBindingslistofSdkSearchEvconnectorexperimentalIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_EvConnectorExperimental_iterator'));
final _heresdkSearchBindingslistofSdkSearchEvconnectorexperimentalIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_EvConnectorExperimental_iterator_release_handle'));
final _heresdkSearchBindingslistofSdkSearchEvconnectorexperimentalIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_EvConnectorExperimental_iterator_is_valid'));
final _heresdkSearchBindingslistofSdkSearchEvconnectorexperimentalIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_EvConnectorExperimental_iterator_increment'));
final _heresdkSearchBindingslistofSdkSearchEvconnectorexperimentalIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_EvConnectorExperimental_iterator_get'));

Pointer<Void> heresdkSearchBindingslistofSdkSearchEvconnectorexperimentalToFfi(List<EvConnectorExperimental> value) {
  final _result = _heresdkSearchBindingslistofSdkSearchEvconnectorexperimentalCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchEvconnectorexperimentalToFfi(element);
    _heresdkSearchBindingslistofSdkSearchEvconnectorexperimentalInsert(_result, _elementHandle);
    sdkSearchEvconnectorexperimentalReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<EvConnectorExperimental> heresdkSearchBindingslistofSdkSearchEvconnectorexperimentalFromFfi(Pointer<Void> handle) {
  final result = List<EvConnectorExperimental>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchBindingslistofSdkSearchEvconnectorexperimentalIterator(handle);
  while (_heresdkSearchBindingslistofSdkSearchEvconnectorexperimentalIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchBindingslistofSdkSearchEvconnectorexperimentalIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchEvconnectorexperimentalFromFfi(_elementHandle));
    } finally {
      sdkSearchEvconnectorexperimentalReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchBindingslistofSdkSearchEvconnectorexperimentalIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchBindingslistofSdkSearchEvconnectorexperimentalIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchBindingslistofSdkSearchEvconnectorexperimentalReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchBindingslistofSdkSearchEvconnectorexperimentalReleaseHandle(handle);

final _heresdkSearchBindingslistofSdkSearchEvconnectorexperimentalCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_EvConnectorExperimental_create_handle_nullable'));
final _heresdkSearchBindingslistofSdkSearchEvconnectorexperimentalReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_EvConnectorExperimental_release_handle_nullable'));
final _heresdkSearchBindingslistofSdkSearchEvconnectorexperimentalGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_EvConnectorExperimental_get_value_nullable'));

Pointer<Void> heresdkSearchBindingslistofSdkSearchEvconnectorexperimentalToFfiNullable(List<EvConnectorExperimental>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchBindingslistofSdkSearchEvconnectorexperimentalToFfi(value);
  final result = _heresdkSearchBindingslistofSdkSearchEvconnectorexperimentalCreateHandleNullable(_handle);
  heresdkSearchBindingslistofSdkSearchEvconnectorexperimentalReleaseFfiHandle(_handle);
  return result;
}

List<EvConnectorExperimental>? heresdkSearchBindingslistofSdkSearchEvconnectorexperimentalFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchBindingslistofSdkSearchEvconnectorexperimentalGetValueNullable(handle);
  final result = heresdkSearchBindingslistofSdkSearchEvconnectorexperimentalFromFfi(_handle);
  heresdkSearchBindingslistofSdkSearchEvconnectorexperimentalReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchBindingslistofSdkSearchEvconnectorexperimentalReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchBindingslistofSdkSearchEvconnectorexperimentalReleaseHandleNullable(handle);

final _heresdkSearchBindingslistofSdkSearchIndexrangeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_IndexRange_create_handle'));
final _heresdkSearchBindingslistofSdkSearchIndexrangeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_IndexRange_release_handle'));
final _heresdkSearchBindingslistofSdkSearchIndexrangeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_IndexRange_insert'));
final _heresdkSearchBindingslistofSdkSearchIndexrangeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_IndexRange_iterator'));
final _heresdkSearchBindingslistofSdkSearchIndexrangeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_IndexRange_iterator_release_handle'));
final _heresdkSearchBindingslistofSdkSearchIndexrangeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_IndexRange_iterator_is_valid'));
final _heresdkSearchBindingslistofSdkSearchIndexrangeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_IndexRange_iterator_increment'));
final _heresdkSearchBindingslistofSdkSearchIndexrangeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_IndexRange_iterator_get'));

Pointer<Void> heresdkSearchBindingslistofSdkSearchIndexrangeToFfi(List<IndexRange> value) {
  final _result = _heresdkSearchBindingslistofSdkSearchIndexrangeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchIndexrangeToFfi(element);
    _heresdkSearchBindingslistofSdkSearchIndexrangeInsert(_result, _elementHandle);
    sdkSearchIndexrangeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<IndexRange> heresdkSearchBindingslistofSdkSearchIndexrangeFromFfi(Pointer<Void> handle) {
  final result = List<IndexRange>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchBindingslistofSdkSearchIndexrangeIterator(handle);
  while (_heresdkSearchBindingslistofSdkSearchIndexrangeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchBindingslistofSdkSearchIndexrangeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchIndexrangeFromFfi(_elementHandle));
    } finally {
      sdkSearchIndexrangeReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchBindingslistofSdkSearchIndexrangeIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchBindingslistofSdkSearchIndexrangeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchBindingslistofSdkSearchIndexrangeReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchBindingslistofSdkSearchIndexrangeReleaseHandle(handle);

final _heresdkSearchBindingslistofSdkSearchIndexrangeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_IndexRange_create_handle_nullable'));
final _heresdkSearchBindingslistofSdkSearchIndexrangeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_IndexRange_release_handle_nullable'));
final _heresdkSearchBindingslistofSdkSearchIndexrangeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_IndexRange_get_value_nullable'));

Pointer<Void> heresdkSearchBindingslistofSdkSearchIndexrangeToFfiNullable(List<IndexRange>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchBindingslistofSdkSearchIndexrangeToFfi(value);
  final result = _heresdkSearchBindingslistofSdkSearchIndexrangeCreateHandleNullable(_handle);
  heresdkSearchBindingslistofSdkSearchIndexrangeReleaseFfiHandle(_handle);
  return result;
}

List<IndexRange>? heresdkSearchBindingslistofSdkSearchIndexrangeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchBindingslistofSdkSearchIndexrangeGetValueNullable(handle);
  final result = heresdkSearchBindingslistofSdkSearchIndexrangeFromFfi(_handle);
  heresdkSearchBindingslistofSdkSearchIndexrangeReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchBindingslistofSdkSearchIndexrangeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchBindingslistofSdkSearchIndexrangeReleaseHandleNullable(handle);

final _heresdkSearchBindingslistofSdkSearchLandlinephoneCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_LandlinePhone_create_handle'));
final _heresdkSearchBindingslistofSdkSearchLandlinephoneReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_LandlinePhone_release_handle'));
final _heresdkSearchBindingslistofSdkSearchLandlinephoneInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_LandlinePhone_insert'));
final _heresdkSearchBindingslistofSdkSearchLandlinephoneIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_LandlinePhone_iterator'));
final _heresdkSearchBindingslistofSdkSearchLandlinephoneIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_LandlinePhone_iterator_release_handle'));
final _heresdkSearchBindingslistofSdkSearchLandlinephoneIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_LandlinePhone_iterator_is_valid'));
final _heresdkSearchBindingslistofSdkSearchLandlinephoneIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_LandlinePhone_iterator_increment'));
final _heresdkSearchBindingslistofSdkSearchLandlinephoneIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_LandlinePhone_iterator_get'));

Pointer<Void> heresdkSearchBindingslistofSdkSearchLandlinephoneToFfi(List<LandlinePhone> value) {
  final _result = _heresdkSearchBindingslistofSdkSearchLandlinephoneCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchLandlinephoneToFfi(element);
    _heresdkSearchBindingslistofSdkSearchLandlinephoneInsert(_result, _elementHandle);
    sdkSearchLandlinephoneReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<LandlinePhone> heresdkSearchBindingslistofSdkSearchLandlinephoneFromFfi(Pointer<Void> handle) {
  final result = List<LandlinePhone>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchBindingslistofSdkSearchLandlinephoneIterator(handle);
  while (_heresdkSearchBindingslistofSdkSearchLandlinephoneIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchBindingslistofSdkSearchLandlinephoneIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchLandlinephoneFromFfi(_elementHandle));
    } finally {
      sdkSearchLandlinephoneReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchBindingslistofSdkSearchLandlinephoneIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchBindingslistofSdkSearchLandlinephoneIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchBindingslistofSdkSearchLandlinephoneReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchBindingslistofSdkSearchLandlinephoneReleaseHandle(handle);

final _heresdkSearchBindingslistofSdkSearchLandlinephoneCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_LandlinePhone_create_handle_nullable'));
final _heresdkSearchBindingslistofSdkSearchLandlinephoneReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_LandlinePhone_release_handle_nullable'));
final _heresdkSearchBindingslistofSdkSearchLandlinephoneGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_LandlinePhone_get_value_nullable'));

Pointer<Void> heresdkSearchBindingslistofSdkSearchLandlinephoneToFfiNullable(List<LandlinePhone>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchBindingslistofSdkSearchLandlinephoneToFfi(value);
  final result = _heresdkSearchBindingslistofSdkSearchLandlinephoneCreateHandleNullable(_handle);
  heresdkSearchBindingslistofSdkSearchLandlinephoneReleaseFfiHandle(_handle);
  return result;
}

List<LandlinePhone>? heresdkSearchBindingslistofSdkSearchLandlinephoneFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchBindingslistofSdkSearchLandlinephoneGetValueNullable(handle);
  final result = heresdkSearchBindingslistofSdkSearchLandlinephoneFromFfi(_handle);
  heresdkSearchBindingslistofSdkSearchLandlinephoneReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchBindingslistofSdkSearchLandlinephoneReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchBindingslistofSdkSearchLandlinephoneReleaseHandleNullable(handle);

final _heresdkSearchBindingslistofSdkSearchMobilephoneCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_MobilePhone_create_handle'));
final _heresdkSearchBindingslistofSdkSearchMobilephoneReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_MobilePhone_release_handle'));
final _heresdkSearchBindingslistofSdkSearchMobilephoneInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_MobilePhone_insert'));
final _heresdkSearchBindingslistofSdkSearchMobilephoneIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_MobilePhone_iterator'));
final _heresdkSearchBindingslistofSdkSearchMobilephoneIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_MobilePhone_iterator_release_handle'));
final _heresdkSearchBindingslistofSdkSearchMobilephoneIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_MobilePhone_iterator_is_valid'));
final _heresdkSearchBindingslistofSdkSearchMobilephoneIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_MobilePhone_iterator_increment'));
final _heresdkSearchBindingslistofSdkSearchMobilephoneIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_MobilePhone_iterator_get'));

Pointer<Void> heresdkSearchBindingslistofSdkSearchMobilephoneToFfi(List<MobilePhone> value) {
  final _result = _heresdkSearchBindingslistofSdkSearchMobilephoneCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchMobilephoneToFfi(element);
    _heresdkSearchBindingslistofSdkSearchMobilephoneInsert(_result, _elementHandle);
    sdkSearchMobilephoneReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<MobilePhone> heresdkSearchBindingslistofSdkSearchMobilephoneFromFfi(Pointer<Void> handle) {
  final result = List<MobilePhone>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchBindingslistofSdkSearchMobilephoneIterator(handle);
  while (_heresdkSearchBindingslistofSdkSearchMobilephoneIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchBindingslistofSdkSearchMobilephoneIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchMobilephoneFromFfi(_elementHandle));
    } finally {
      sdkSearchMobilephoneReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchBindingslistofSdkSearchMobilephoneIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchBindingslistofSdkSearchMobilephoneIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchBindingslistofSdkSearchMobilephoneReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchBindingslistofSdkSearchMobilephoneReleaseHandle(handle);

final _heresdkSearchBindingslistofSdkSearchMobilephoneCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_MobilePhone_create_handle_nullable'));
final _heresdkSearchBindingslistofSdkSearchMobilephoneReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_MobilePhone_release_handle_nullable'));
final _heresdkSearchBindingslistofSdkSearchMobilephoneGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_MobilePhone_get_value_nullable'));

Pointer<Void> heresdkSearchBindingslistofSdkSearchMobilephoneToFfiNullable(List<MobilePhone>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchBindingslistofSdkSearchMobilephoneToFfi(value);
  final result = _heresdkSearchBindingslistofSdkSearchMobilephoneCreateHandleNullable(_handle);
  heresdkSearchBindingslistofSdkSearchMobilephoneReleaseFfiHandle(_handle);
  return result;
}

List<MobilePhone>? heresdkSearchBindingslistofSdkSearchMobilephoneFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchBindingslistofSdkSearchMobilephoneGetValueNullable(handle);
  final result = heresdkSearchBindingslistofSdkSearchMobilephoneFromFfi(_handle);
  heresdkSearchBindingslistofSdkSearchMobilephoneReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchBindingslistofSdkSearchMobilephoneReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchBindingslistofSdkSearchMobilephoneReleaseHandleNullable(handle);

final _heresdkSearchBindingslistofSdkSearchOpeninghoursCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_OpeningHours_create_handle'));
final _heresdkSearchBindingslistofSdkSearchOpeninghoursReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_OpeningHours_release_handle'));
final _heresdkSearchBindingslistofSdkSearchOpeninghoursInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_OpeningHours_insert'));
final _heresdkSearchBindingslistofSdkSearchOpeninghoursIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_OpeningHours_iterator'));
final _heresdkSearchBindingslistofSdkSearchOpeninghoursIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_OpeningHours_iterator_release_handle'));
final _heresdkSearchBindingslistofSdkSearchOpeninghoursIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_OpeningHours_iterator_is_valid'));
final _heresdkSearchBindingslistofSdkSearchOpeninghoursIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_OpeningHours_iterator_increment'));
final _heresdkSearchBindingslistofSdkSearchOpeninghoursIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_OpeningHours_iterator_get'));

Pointer<Void> heresdkSearchBindingslistofSdkSearchOpeninghoursToFfi(List<OpeningHours> value) {
  final _result = _heresdkSearchBindingslistofSdkSearchOpeninghoursCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchOpeninghoursToFfi(element);
    _heresdkSearchBindingslistofSdkSearchOpeninghoursInsert(_result, _elementHandle);
    sdkSearchOpeninghoursReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<OpeningHours> heresdkSearchBindingslistofSdkSearchOpeninghoursFromFfi(Pointer<Void> handle) {
  final result = List<OpeningHours>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchBindingslistofSdkSearchOpeninghoursIterator(handle);
  while (_heresdkSearchBindingslistofSdkSearchOpeninghoursIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchBindingslistofSdkSearchOpeninghoursIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchOpeninghoursFromFfi(_elementHandle));
    } finally {
      sdkSearchOpeninghoursReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchBindingslistofSdkSearchOpeninghoursIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchBindingslistofSdkSearchOpeninghoursIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchBindingslistofSdkSearchOpeninghoursReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchBindingslistofSdkSearchOpeninghoursReleaseHandle(handle);

final _heresdkSearchBindingslistofSdkSearchOpeninghoursCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_OpeningHours_create_handle_nullable'));
final _heresdkSearchBindingslistofSdkSearchOpeninghoursReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_OpeningHours_release_handle_nullable'));
final _heresdkSearchBindingslistofSdkSearchOpeninghoursGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_OpeningHours_get_value_nullable'));

Pointer<Void> heresdkSearchBindingslistofSdkSearchOpeninghoursToFfiNullable(List<OpeningHours>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchBindingslistofSdkSearchOpeninghoursToFfi(value);
  final result = _heresdkSearchBindingslistofSdkSearchOpeninghoursCreateHandleNullable(_handle);
  heresdkSearchBindingslistofSdkSearchOpeninghoursReleaseFfiHandle(_handle);
  return result;
}

List<OpeningHours>? heresdkSearchBindingslistofSdkSearchOpeninghoursFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchBindingslistofSdkSearchOpeninghoursGetValueNullable(handle);
  final result = heresdkSearchBindingslistofSdkSearchOpeninghoursFromFfi(_handle);
  heresdkSearchBindingslistofSdkSearchOpeninghoursReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchBindingslistofSdkSearchOpeninghoursReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchBindingslistofSdkSearchOpeninghoursReleaseHandleNullable(handle);

final _heresdkSearchBindingslistofSdkSearchPlaceCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_Place_create_handle'));
final _heresdkSearchBindingslistofSdkSearchPlaceReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_Place_release_handle'));
final _heresdkSearchBindingslistofSdkSearchPlaceInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_Place_insert'));
final _heresdkSearchBindingslistofSdkSearchPlaceIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_Place_iterator'));
final _heresdkSearchBindingslistofSdkSearchPlaceIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_Place_iterator_release_handle'));
final _heresdkSearchBindingslistofSdkSearchPlaceIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_Place_iterator_is_valid'));
final _heresdkSearchBindingslistofSdkSearchPlaceIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_Place_iterator_increment'));
final _heresdkSearchBindingslistofSdkSearchPlaceIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_Place_iterator_get'));

Pointer<Void> heresdkSearchBindingslistofSdkSearchPlaceToFfi(List<Place> value) {
  final _result = _heresdkSearchBindingslistofSdkSearchPlaceCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchPlaceToFfi(element);
    _heresdkSearchBindingslistofSdkSearchPlaceInsert(_result, _elementHandle);
    sdkSearchPlaceReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Place> heresdkSearchBindingslistofSdkSearchPlaceFromFfi(Pointer<Void> handle) {
  final result = List<Place>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchBindingslistofSdkSearchPlaceIterator(handle);
  while (_heresdkSearchBindingslistofSdkSearchPlaceIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchBindingslistofSdkSearchPlaceIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchPlaceFromFfi(_elementHandle));
    } finally {
      sdkSearchPlaceReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchBindingslistofSdkSearchPlaceIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchBindingslistofSdkSearchPlaceIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchBindingslistofSdkSearchPlaceReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchBindingslistofSdkSearchPlaceReleaseHandle(handle);

final _heresdkSearchBindingslistofSdkSearchPlaceCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_Place_create_handle_nullable'));
final _heresdkSearchBindingslistofSdkSearchPlaceReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_Place_release_handle_nullable'));
final _heresdkSearchBindingslistofSdkSearchPlaceGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_Place_get_value_nullable'));

Pointer<Void> heresdkSearchBindingslistofSdkSearchPlaceToFfiNullable(List<Place>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchBindingslistofSdkSearchPlaceToFfi(value);
  final result = _heresdkSearchBindingslistofSdkSearchPlaceCreateHandleNullable(_handle);
  heresdkSearchBindingslistofSdkSearchPlaceReleaseFfiHandle(_handle);
  return result;
}

List<Place>? heresdkSearchBindingslistofSdkSearchPlaceFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchBindingslistofSdkSearchPlaceGetValueNullable(handle);
  final result = heresdkSearchBindingslistofSdkSearchPlaceFromFfi(_handle);
  heresdkSearchBindingslistofSdkSearchPlaceReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchBindingslistofSdkSearchPlaceReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchBindingslistofSdkSearchPlaceReleaseHandleNullable(handle);

final _heresdkSearchBindingslistofSdkSearchPlacecategoryCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_PlaceCategory_create_handle'));
final _heresdkSearchBindingslistofSdkSearchPlacecategoryReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_PlaceCategory_release_handle'));
final _heresdkSearchBindingslistofSdkSearchPlacecategoryInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_PlaceCategory_insert'));
final _heresdkSearchBindingslistofSdkSearchPlacecategoryIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_PlaceCategory_iterator'));
final _heresdkSearchBindingslistofSdkSearchPlacecategoryIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_PlaceCategory_iterator_release_handle'));
final _heresdkSearchBindingslistofSdkSearchPlacecategoryIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_PlaceCategory_iterator_is_valid'));
final _heresdkSearchBindingslistofSdkSearchPlacecategoryIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_PlaceCategory_iterator_increment'));
final _heresdkSearchBindingslistofSdkSearchPlacecategoryIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_PlaceCategory_iterator_get'));

Pointer<Void> heresdkSearchBindingslistofSdkSearchPlacecategoryToFfi(List<PlaceCategory> value) {
  final _result = _heresdkSearchBindingslistofSdkSearchPlacecategoryCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchPlacecategoryToFfi(element);
    _heresdkSearchBindingslistofSdkSearchPlacecategoryInsert(_result, _elementHandle);
    sdkSearchPlacecategoryReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<PlaceCategory> heresdkSearchBindingslistofSdkSearchPlacecategoryFromFfi(Pointer<Void> handle) {
  final result = List<PlaceCategory>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchBindingslistofSdkSearchPlacecategoryIterator(handle);
  while (_heresdkSearchBindingslistofSdkSearchPlacecategoryIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchBindingslistofSdkSearchPlacecategoryIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchPlacecategoryFromFfi(_elementHandle));
    } finally {
      sdkSearchPlacecategoryReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchBindingslistofSdkSearchPlacecategoryIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchBindingslistofSdkSearchPlacecategoryIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchBindingslistofSdkSearchPlacecategoryReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchBindingslistofSdkSearchPlacecategoryReleaseHandle(handle);

final _heresdkSearchBindingslistofSdkSearchPlacecategoryCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_PlaceCategory_create_handle_nullable'));
final _heresdkSearchBindingslistofSdkSearchPlacecategoryReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_PlaceCategory_release_handle_nullable'));
final _heresdkSearchBindingslistofSdkSearchPlacecategoryGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_PlaceCategory_get_value_nullable'));

Pointer<Void> heresdkSearchBindingslistofSdkSearchPlacecategoryToFfiNullable(List<PlaceCategory>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchBindingslistofSdkSearchPlacecategoryToFfi(value);
  final result = _heresdkSearchBindingslistofSdkSearchPlacecategoryCreateHandleNullable(_handle);
  heresdkSearchBindingslistofSdkSearchPlacecategoryReleaseFfiHandle(_handle);
  return result;
}

List<PlaceCategory>? heresdkSearchBindingslistofSdkSearchPlacecategoryFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchBindingslistofSdkSearchPlacecategoryGetValueNullable(handle);
  final result = heresdkSearchBindingslistofSdkSearchPlacecategoryFromFfi(_handle);
  heresdkSearchBindingslistofSdkSearchPlacecategoryReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchBindingslistofSdkSearchPlacecategoryReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchBindingslistofSdkSearchPlacecategoryReleaseHandleNullable(handle);

final _heresdkSearchBindingslistofSdkSearchScheduledetailsCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_ScheduleDetails_create_handle'));
final _heresdkSearchBindingslistofSdkSearchScheduledetailsReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_ScheduleDetails_release_handle'));
final _heresdkSearchBindingslistofSdkSearchScheduledetailsInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_ScheduleDetails_insert'));
final _heresdkSearchBindingslistofSdkSearchScheduledetailsIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_ScheduleDetails_iterator'));
final _heresdkSearchBindingslistofSdkSearchScheduledetailsIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_ScheduleDetails_iterator_release_handle'));
final _heresdkSearchBindingslistofSdkSearchScheduledetailsIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_ScheduleDetails_iterator_is_valid'));
final _heresdkSearchBindingslistofSdkSearchScheduledetailsIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_ScheduleDetails_iterator_increment'));
final _heresdkSearchBindingslistofSdkSearchScheduledetailsIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_ScheduleDetails_iterator_get'));

Pointer<Void> heresdkSearchBindingslistofSdkSearchScheduledetailsToFfi(List<ScheduleDetails> value) {
  final _result = _heresdkSearchBindingslistofSdkSearchScheduledetailsCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchScheduledetailsToFfi(element);
    _heresdkSearchBindingslistofSdkSearchScheduledetailsInsert(_result, _elementHandle);
    sdkSearchScheduledetailsReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<ScheduleDetails> heresdkSearchBindingslistofSdkSearchScheduledetailsFromFfi(Pointer<Void> handle) {
  final result = List<ScheduleDetails>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchBindingslistofSdkSearchScheduledetailsIterator(handle);
  while (_heresdkSearchBindingslistofSdkSearchScheduledetailsIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchBindingslistofSdkSearchScheduledetailsIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchScheduledetailsFromFfi(_elementHandle));
    } finally {
      sdkSearchScheduledetailsReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchBindingslistofSdkSearchScheduledetailsIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchBindingslistofSdkSearchScheduledetailsIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchBindingslistofSdkSearchScheduledetailsReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchBindingslistofSdkSearchScheduledetailsReleaseHandle(handle);

final _heresdkSearchBindingslistofSdkSearchScheduledetailsCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_ScheduleDetails_create_handle_nullable'));
final _heresdkSearchBindingslistofSdkSearchScheduledetailsReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_ScheduleDetails_release_handle_nullable'));
final _heresdkSearchBindingslistofSdkSearchScheduledetailsGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_ScheduleDetails_get_value_nullable'));

Pointer<Void> heresdkSearchBindingslistofSdkSearchScheduledetailsToFfiNullable(List<ScheduleDetails>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchBindingslistofSdkSearchScheduledetailsToFfi(value);
  final result = _heresdkSearchBindingslistofSdkSearchScheduledetailsCreateHandleNullable(_handle);
  heresdkSearchBindingslistofSdkSearchScheduledetailsReleaseFfiHandle(_handle);
  return result;
}

List<ScheduleDetails>? heresdkSearchBindingslistofSdkSearchScheduledetailsFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchBindingslistofSdkSearchScheduledetailsGetValueNullable(handle);
  final result = heresdkSearchBindingslistofSdkSearchScheduledetailsFromFfi(_handle);
  heresdkSearchBindingslistofSdkSearchScheduledetailsReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchBindingslistofSdkSearchScheduledetailsReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchBindingslistofSdkSearchScheduledetailsReleaseHandleNullable(handle);

final _heresdkSearchBindingslistofSdkSearchSuggestionCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_Suggestion_create_handle'));
final _heresdkSearchBindingslistofSdkSearchSuggestionReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_Suggestion_release_handle'));
final _heresdkSearchBindingslistofSdkSearchSuggestionInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_Suggestion_insert'));
final _heresdkSearchBindingslistofSdkSearchSuggestionIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_Suggestion_iterator'));
final _heresdkSearchBindingslistofSdkSearchSuggestionIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_Suggestion_iterator_release_handle'));
final _heresdkSearchBindingslistofSdkSearchSuggestionIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_Suggestion_iterator_is_valid'));
final _heresdkSearchBindingslistofSdkSearchSuggestionIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_Suggestion_iterator_increment'));
final _heresdkSearchBindingslistofSdkSearchSuggestionIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_Suggestion_iterator_get'));

Pointer<Void> heresdkSearchBindingslistofSdkSearchSuggestionToFfi(List<Suggestion> value) {
  final _result = _heresdkSearchBindingslistofSdkSearchSuggestionCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchSuggestionToFfi(element);
    _heresdkSearchBindingslistofSdkSearchSuggestionInsert(_result, _elementHandle);
    sdkSearchSuggestionReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Suggestion> heresdkSearchBindingslistofSdkSearchSuggestionFromFfi(Pointer<Void> handle) {
  final result = List<Suggestion>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchBindingslistofSdkSearchSuggestionIterator(handle);
  while (_heresdkSearchBindingslistofSdkSearchSuggestionIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchBindingslistofSdkSearchSuggestionIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchSuggestionFromFfi(_elementHandle));
    } finally {
      sdkSearchSuggestionReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchBindingslistofSdkSearchSuggestionIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchBindingslistofSdkSearchSuggestionIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchBindingslistofSdkSearchSuggestionReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchBindingslistofSdkSearchSuggestionReleaseHandle(handle);

final _heresdkSearchBindingslistofSdkSearchSuggestionCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_Suggestion_create_handle_nullable'));
final _heresdkSearchBindingslistofSdkSearchSuggestionReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_Suggestion_release_handle_nullable'));
final _heresdkSearchBindingslistofSdkSearchSuggestionGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_Suggestion_get_value_nullable'));

Pointer<Void> heresdkSearchBindingslistofSdkSearchSuggestionToFfiNullable(List<Suggestion>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchBindingslistofSdkSearchSuggestionToFfi(value);
  final result = _heresdkSearchBindingslistofSdkSearchSuggestionCreateHandleNullable(_handle);
  heresdkSearchBindingslistofSdkSearchSuggestionReleaseFfiHandle(_handle);
  return result;
}

List<Suggestion>? heresdkSearchBindingslistofSdkSearchSuggestionFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchBindingslistofSdkSearchSuggestionGetValueNullable(handle);
  final result = heresdkSearchBindingslistofSdkSearchSuggestionFromFfi(_handle);
  heresdkSearchBindingslistofSdkSearchSuggestionReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchBindingslistofSdkSearchSuggestionReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchBindingslistofSdkSearchSuggestionReleaseHandleNullable(handle);

final _heresdkSearchBindingslistofSdkSearchSupplierreferenceCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_SupplierReference_create_handle'));
final _heresdkSearchBindingslistofSdkSearchSupplierreferenceReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_SupplierReference_release_handle'));
final _heresdkSearchBindingslistofSdkSearchSupplierreferenceInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_SupplierReference_insert'));
final _heresdkSearchBindingslistofSdkSearchSupplierreferenceIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_SupplierReference_iterator'));
final _heresdkSearchBindingslistofSdkSearchSupplierreferenceIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_SupplierReference_iterator_release_handle'));
final _heresdkSearchBindingslistofSdkSearchSupplierreferenceIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_SupplierReference_iterator_is_valid'));
final _heresdkSearchBindingslistofSdkSearchSupplierreferenceIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_SupplierReference_iterator_increment'));
final _heresdkSearchBindingslistofSdkSearchSupplierreferenceIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_SupplierReference_iterator_get'));

Pointer<Void> heresdkSearchBindingslistofSdkSearchSupplierreferenceToFfi(List<SupplierReference> value) {
  final _result = _heresdkSearchBindingslistofSdkSearchSupplierreferenceCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchSupplierreferenceToFfi(element);
    _heresdkSearchBindingslistofSdkSearchSupplierreferenceInsert(_result, _elementHandle);
    sdkSearchSupplierreferenceReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<SupplierReference> heresdkSearchBindingslistofSdkSearchSupplierreferenceFromFfi(Pointer<Void> handle) {
  final result = List<SupplierReference>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchBindingslistofSdkSearchSupplierreferenceIterator(handle);
  while (_heresdkSearchBindingslistofSdkSearchSupplierreferenceIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchBindingslistofSdkSearchSupplierreferenceIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchSupplierreferenceFromFfi(_elementHandle));
    } finally {
      sdkSearchSupplierreferenceReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchBindingslistofSdkSearchSupplierreferenceIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchBindingslistofSdkSearchSupplierreferenceIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchBindingslistofSdkSearchSupplierreferenceReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchBindingslistofSdkSearchSupplierreferenceReleaseHandle(handle);

final _heresdkSearchBindingslistofSdkSearchSupplierreferenceCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_SupplierReference_create_handle_nullable'));
final _heresdkSearchBindingslistofSdkSearchSupplierreferenceReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_SupplierReference_release_handle_nullable'));
final _heresdkSearchBindingslistofSdkSearchSupplierreferenceGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_SupplierReference_get_value_nullable'));

Pointer<Void> heresdkSearchBindingslistofSdkSearchSupplierreferenceToFfiNullable(List<SupplierReference>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchBindingslistofSdkSearchSupplierreferenceToFfi(value);
  final result = _heresdkSearchBindingslistofSdkSearchSupplierreferenceCreateHandleNullable(_handle);
  heresdkSearchBindingslistofSdkSearchSupplierreferenceReleaseFfiHandle(_handle);
  return result;
}

List<SupplierReference>? heresdkSearchBindingslistofSdkSearchSupplierreferenceFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchBindingslistofSdkSearchSupplierreferenceGetValueNullable(handle);
  final result = heresdkSearchBindingslistofSdkSearchSupplierreferenceFromFfi(_handle);
  heresdkSearchBindingslistofSdkSearchSupplierreferenceReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchBindingslistofSdkSearchSupplierreferenceReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchBindingslistofSdkSearchSupplierreferenceReleaseHandleNullable(handle);

final _heresdkSearchBindingslistofSdkSearchWebeditorialCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_WebEditorial_create_handle'));
final _heresdkSearchBindingslistofSdkSearchWebeditorialReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_WebEditorial_release_handle'));
final _heresdkSearchBindingslistofSdkSearchWebeditorialInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_WebEditorial_insert'));
final _heresdkSearchBindingslistofSdkSearchWebeditorialIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_WebEditorial_iterator'));
final _heresdkSearchBindingslistofSdkSearchWebeditorialIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_WebEditorial_iterator_release_handle'));
final _heresdkSearchBindingslistofSdkSearchWebeditorialIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_WebEditorial_iterator_is_valid'));
final _heresdkSearchBindingslistofSdkSearchWebeditorialIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_WebEditorial_iterator_increment'));
final _heresdkSearchBindingslistofSdkSearchWebeditorialIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_WebEditorial_iterator_get'));

Pointer<Void> heresdkSearchBindingslistofSdkSearchWebeditorialToFfi(List<WebEditorial> value) {
  final _result = _heresdkSearchBindingslistofSdkSearchWebeditorialCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchWebeditorialToFfi(element);
    _heresdkSearchBindingslistofSdkSearchWebeditorialInsert(_result, _elementHandle);
    sdkSearchWebeditorialReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<WebEditorial> heresdkSearchBindingslistofSdkSearchWebeditorialFromFfi(Pointer<Void> handle) {
  final result = List<WebEditorial>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchBindingslistofSdkSearchWebeditorialIterator(handle);
  while (_heresdkSearchBindingslistofSdkSearchWebeditorialIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchBindingslistofSdkSearchWebeditorialIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchWebeditorialFromFfi(_elementHandle));
    } finally {
      sdkSearchWebeditorialReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchBindingslistofSdkSearchWebeditorialIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchBindingslistofSdkSearchWebeditorialIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchBindingslistofSdkSearchWebeditorialReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchBindingslistofSdkSearchWebeditorialReleaseHandle(handle);

final _heresdkSearchBindingslistofSdkSearchWebeditorialCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_WebEditorial_create_handle_nullable'));
final _heresdkSearchBindingslistofSdkSearchWebeditorialReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_WebEditorial_release_handle_nullable'));
final _heresdkSearchBindingslistofSdkSearchWebeditorialGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_WebEditorial_get_value_nullable'));

Pointer<Void> heresdkSearchBindingslistofSdkSearchWebeditorialToFfiNullable(List<WebEditorial>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchBindingslistofSdkSearchWebeditorialToFfi(value);
  final result = _heresdkSearchBindingslistofSdkSearchWebeditorialCreateHandleNullable(_handle);
  heresdkSearchBindingslistofSdkSearchWebeditorialReleaseFfiHandle(_handle);
  return result;
}

List<WebEditorial>? heresdkSearchBindingslistofSdkSearchWebeditorialFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchBindingslistofSdkSearchWebeditorialGetValueNullable(handle);
  final result = heresdkSearchBindingslistofSdkSearchWebeditorialFromFfi(_handle);
  heresdkSearchBindingslistofSdkSearchWebeditorialReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchBindingslistofSdkSearchWebeditorialReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchBindingslistofSdkSearchWebeditorialReleaseHandleNullable(handle);

final _heresdkSearchBindingslistofSdkSearchWebimageCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_WebImage_create_handle'));
final _heresdkSearchBindingslistofSdkSearchWebimageReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_WebImage_release_handle'));
final _heresdkSearchBindingslistofSdkSearchWebimageInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_WebImage_insert'));
final _heresdkSearchBindingslistofSdkSearchWebimageIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_WebImage_iterator'));
final _heresdkSearchBindingslistofSdkSearchWebimageIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_WebImage_iterator_release_handle'));
final _heresdkSearchBindingslistofSdkSearchWebimageIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_WebImage_iterator_is_valid'));
final _heresdkSearchBindingslistofSdkSearchWebimageIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_WebImage_iterator_increment'));
final _heresdkSearchBindingslistofSdkSearchWebimageIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_WebImage_iterator_get'));

Pointer<Void> heresdkSearchBindingslistofSdkSearchWebimageToFfi(List<WebImage> value) {
  final _result = _heresdkSearchBindingslistofSdkSearchWebimageCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchWebimageToFfi(element);
    _heresdkSearchBindingslistofSdkSearchWebimageInsert(_result, _elementHandle);
    sdkSearchWebimageReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<WebImage> heresdkSearchBindingslistofSdkSearchWebimageFromFfi(Pointer<Void> handle) {
  final result = List<WebImage>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchBindingslistofSdkSearchWebimageIterator(handle);
  while (_heresdkSearchBindingslistofSdkSearchWebimageIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchBindingslistofSdkSearchWebimageIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchWebimageFromFfi(_elementHandle));
    } finally {
      sdkSearchWebimageReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchBindingslistofSdkSearchWebimageIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchBindingslistofSdkSearchWebimageIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchBindingslistofSdkSearchWebimageReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchBindingslistofSdkSearchWebimageReleaseHandle(handle);

final _heresdkSearchBindingslistofSdkSearchWebimageCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_WebImage_create_handle_nullable'));
final _heresdkSearchBindingslistofSdkSearchWebimageReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_WebImage_release_handle_nullable'));
final _heresdkSearchBindingslistofSdkSearchWebimageGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_WebImage_get_value_nullable'));

Pointer<Void> heresdkSearchBindingslistofSdkSearchWebimageToFfiNullable(List<WebImage>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchBindingslistofSdkSearchWebimageToFfi(value);
  final result = _heresdkSearchBindingslistofSdkSearchWebimageCreateHandleNullable(_handle);
  heresdkSearchBindingslistofSdkSearchWebimageReleaseFfiHandle(_handle);
  return result;
}

List<WebImage>? heresdkSearchBindingslistofSdkSearchWebimageFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchBindingslistofSdkSearchWebimageGetValueNullable(handle);
  final result = heresdkSearchBindingslistofSdkSearchWebimageFromFfi(_handle);
  heresdkSearchBindingslistofSdkSearchWebimageReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchBindingslistofSdkSearchWebimageReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchBindingslistofSdkSearchWebimageReleaseHandleNullable(handle);

final _heresdkSearchBindingslistofSdkSearchWebratingCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_WebRating_create_handle'));
final _heresdkSearchBindingslistofSdkSearchWebratingReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_WebRating_release_handle'));
final _heresdkSearchBindingslistofSdkSearchWebratingInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_WebRating_insert'));
final _heresdkSearchBindingslistofSdkSearchWebratingIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_WebRating_iterator'));
final _heresdkSearchBindingslistofSdkSearchWebratingIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_WebRating_iterator_release_handle'));
final _heresdkSearchBindingslistofSdkSearchWebratingIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_WebRating_iterator_is_valid'));
final _heresdkSearchBindingslistofSdkSearchWebratingIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_WebRating_iterator_increment'));
final _heresdkSearchBindingslistofSdkSearchWebratingIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_WebRating_iterator_get'));

Pointer<Void> heresdkSearchBindingslistofSdkSearchWebratingToFfi(List<WebRating> value) {
  final _result = _heresdkSearchBindingslistofSdkSearchWebratingCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchWebratingToFfi(element);
    _heresdkSearchBindingslistofSdkSearchWebratingInsert(_result, _elementHandle);
    sdkSearchWebratingReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<WebRating> heresdkSearchBindingslistofSdkSearchWebratingFromFfi(Pointer<Void> handle) {
  final result = List<WebRating>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchBindingslistofSdkSearchWebratingIterator(handle);
  while (_heresdkSearchBindingslistofSdkSearchWebratingIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchBindingslistofSdkSearchWebratingIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchWebratingFromFfi(_elementHandle));
    } finally {
      sdkSearchWebratingReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchBindingslistofSdkSearchWebratingIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchBindingslistofSdkSearchWebratingIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchBindingslistofSdkSearchWebratingReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchBindingslistofSdkSearchWebratingReleaseHandle(handle);

final _heresdkSearchBindingslistofSdkSearchWebratingCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_WebRating_create_handle_nullable'));
final _heresdkSearchBindingslistofSdkSearchWebratingReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_WebRating_release_handle_nullable'));
final _heresdkSearchBindingslistofSdkSearchWebratingGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_WebRating_get_value_nullable'));

Pointer<Void> heresdkSearchBindingslistofSdkSearchWebratingToFfiNullable(List<WebRating>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchBindingslistofSdkSearchWebratingToFfi(value);
  final result = _heresdkSearchBindingslistofSdkSearchWebratingCreateHandleNullable(_handle);
  heresdkSearchBindingslistofSdkSearchWebratingReleaseFfiHandle(_handle);
  return result;
}

List<WebRating>? heresdkSearchBindingslistofSdkSearchWebratingFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchBindingslistofSdkSearchWebratingGetValueNullable(handle);
  final result = heresdkSearchBindingslistofSdkSearchWebratingFromFfi(_handle);
  heresdkSearchBindingslistofSdkSearchWebratingReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchBindingslistofSdkSearchWebratingReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchBindingslistofSdkSearchWebratingReleaseHandleNullable(handle);

final _heresdkSearchBindingslistofSdkSearchWebsiteaddressCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_WebsiteAddress_create_handle'));
final _heresdkSearchBindingslistofSdkSearchWebsiteaddressReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_WebsiteAddress_release_handle'));
final _heresdkSearchBindingslistofSdkSearchWebsiteaddressInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_WebsiteAddress_insert'));
final _heresdkSearchBindingslistofSdkSearchWebsiteaddressIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_WebsiteAddress_iterator'));
final _heresdkSearchBindingslistofSdkSearchWebsiteaddressIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_WebsiteAddress_iterator_release_handle'));
final _heresdkSearchBindingslistofSdkSearchWebsiteaddressIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_WebsiteAddress_iterator_is_valid'));
final _heresdkSearchBindingslistofSdkSearchWebsiteaddressIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_WebsiteAddress_iterator_increment'));
final _heresdkSearchBindingslistofSdkSearchWebsiteaddressIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsListOf_sdk_search_WebsiteAddress_iterator_get'));

Pointer<Void> heresdkSearchBindingslistofSdkSearchWebsiteaddressToFfi(List<WebsiteAddress> value) {
  final _result = _heresdkSearchBindingslistofSdkSearchWebsiteaddressCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchWebsiteaddressToFfi(element);
    _heresdkSearchBindingslistofSdkSearchWebsiteaddressInsert(_result, _elementHandle);
    sdkSearchWebsiteaddressReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<WebsiteAddress> heresdkSearchBindingslistofSdkSearchWebsiteaddressFromFfi(Pointer<Void> handle) {
  final result = List<WebsiteAddress>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchBindingslistofSdkSearchWebsiteaddressIterator(handle);
  while (_heresdkSearchBindingslistofSdkSearchWebsiteaddressIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchBindingslistofSdkSearchWebsiteaddressIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchWebsiteaddressFromFfi(_elementHandle));
    } finally {
      sdkSearchWebsiteaddressReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchBindingslistofSdkSearchWebsiteaddressIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchBindingslistofSdkSearchWebsiteaddressIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchBindingslistofSdkSearchWebsiteaddressReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchBindingslistofSdkSearchWebsiteaddressReleaseHandle(handle);

final _heresdkSearchBindingslistofSdkSearchWebsiteaddressCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_WebsiteAddress_create_handle_nullable'));
final _heresdkSearchBindingslistofSdkSearchWebsiteaddressReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_WebsiteAddress_release_handle_nullable'));
final _heresdkSearchBindingslistofSdkSearchWebsiteaddressGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsListOf_sdk_search_WebsiteAddress_get_value_nullable'));

Pointer<Void> heresdkSearchBindingslistofSdkSearchWebsiteaddressToFfiNullable(List<WebsiteAddress>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchBindingslistofSdkSearchWebsiteaddressToFfi(value);
  final result = _heresdkSearchBindingslistofSdkSearchWebsiteaddressCreateHandleNullable(_handle);
  heresdkSearchBindingslistofSdkSearchWebsiteaddressReleaseFfiHandle(_handle);
  return result;
}

List<WebsiteAddress>? heresdkSearchBindingslistofSdkSearchWebsiteaddressFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchBindingslistofSdkSearchWebsiteaddressGetValueNullable(handle);
  final result = heresdkSearchBindingslistofSdkSearchWebsiteaddressFromFfi(_handle);
  heresdkSearchBindingslistofSdkSearchWebsiteaddressReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchBindingslistofSdkSearchWebsiteaddressReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchBindingslistofSdkSearchWebsiteaddressReleaseHandleNullable(handle);

final _heresdkSearchBindingsmapofSdkCoreEngineEnginebaseurlToStringCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_create_handle'));
final _heresdkSearchBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_release_handle'));
final _heresdkSearchBindingsmapofSdkCoreEngineEnginebaseurlToStringPut = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32, Pointer<Void>),
    void Function(Pointer<Void>, int, Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_put'));
final _heresdkSearchBindingsmapofSdkCoreEngineEnginebaseurlToStringIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_iterator'));
final _heresdkSearchBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_iterator_release_handle'));
final _heresdkSearchBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_iterator_is_valid'));
final _heresdkSearchBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_iterator_increment'));
final _heresdkSearchBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorGetKey = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_iterator_get_key'));
final _heresdkSearchBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorGetValue = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_iterator_get_value'));

Pointer<Void> heresdkSearchBindingsmapofSdkCoreEngineEnginebaseurlToStringToFfi(Map<EngineBaseURL, String> value) {
  final _result = _heresdkSearchBindingsmapofSdkCoreEngineEnginebaseurlToStringCreateHandle();
  for (final entry in value.entries) {
    final _keyHandle = sdkCoreEngineEnginebaseurlToFfi(entry.key);
    final _valueHandle = stringToFfi(entry.value);
    _heresdkSearchBindingsmapofSdkCoreEngineEnginebaseurlToStringPut(_result, _keyHandle, _valueHandle);
    sdkCoreEngineEnginebaseurlReleaseFfiHandle(_keyHandle);
    stringReleaseFfiHandle(_valueHandle);
  }
  return _result;
}

Map<EngineBaseURL, String> heresdkSearchBindingsmapofSdkCoreEngineEnginebaseurlToStringFromFfi(Pointer<Void> handle) {
  final result = Map<EngineBaseURL, String>();
  final _iteratorHandle = _heresdkSearchBindingsmapofSdkCoreEngineEnginebaseurlToStringIterator(handle);
  while (_heresdkSearchBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _keyHandle = _heresdkSearchBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorGetKey(_iteratorHandle);
    final _valueHandle = _heresdkSearchBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorGetValue(_iteratorHandle);
    try {
      result[sdkCoreEngineEnginebaseurlFromFfi(_keyHandle)] =
        stringFromFfi(_valueHandle);
    } finally {
      sdkCoreEngineEnginebaseurlReleaseFfiHandle(_keyHandle);
      stringReleaseFfiHandle(_valueHandle);
    }
    _heresdkSearchBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseHandle(handle);

final _heresdkSearchBindingsmapofSdkCoreEngineEnginebaseurlToStringCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_create_handle_nullable'));
final _heresdkSearchBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_release_handle_nullable'));
final _heresdkSearchBindingsmapofSdkCoreEngineEnginebaseurlToStringGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_get_value_nullable'));

Pointer<Void> heresdkSearchBindingsmapofSdkCoreEngineEnginebaseurlToStringToFfiNullable(Map<EngineBaseURL, String>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchBindingsmapofSdkCoreEngineEnginebaseurlToStringToFfi(value);
  final result = _heresdkSearchBindingsmapofSdkCoreEngineEnginebaseurlToStringCreateHandleNullable(_handle);
  heresdkSearchBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseFfiHandle(_handle);
  return result;
}

Map<EngineBaseURL, String>? heresdkSearchBindingsmapofSdkCoreEngineEnginebaseurlToStringFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchBindingsmapofSdkCoreEngineEnginebaseurlToStringGetValueNullable(handle);
  final result = heresdkSearchBindingsmapofSdkCoreEngineEnginebaseurlToStringFromFfi(_handle);
  heresdkSearchBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseHandleNullable(handle);

final _heresdkSearchBindingsmapofSdkSearchHighlighttypeToHeresdkSearchBindingslistofSdkSearchIndexrangeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_bindingsMapOf_sdk_search_HighlightType_to_heresdk_search_bindingsListOf_sdk_search_IndexRange_create_handle'));
final _heresdkSearchBindingsmapofSdkSearchHighlighttypeToHeresdkSearchBindingslistofSdkSearchIndexrangeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsMapOf_sdk_search_HighlightType_to_heresdk_search_bindingsListOf_sdk_search_IndexRange_release_handle'));
final _heresdkSearchBindingsmapofSdkSearchHighlighttypeToHeresdkSearchBindingslistofSdkSearchIndexrangePut = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32, Pointer<Void>),
    void Function(Pointer<Void>, int, Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsMapOf_sdk_search_HighlightType_to_heresdk_search_bindingsListOf_sdk_search_IndexRange_put'));
final _heresdkSearchBindingsmapofSdkSearchHighlighttypeToHeresdkSearchBindingslistofSdkSearchIndexrangeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsMapOf_sdk_search_HighlightType_to_heresdk_search_bindingsListOf_sdk_search_IndexRange_iterator'));
final _heresdkSearchBindingsmapofSdkSearchHighlighttypeToHeresdkSearchBindingslistofSdkSearchIndexrangeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsMapOf_sdk_search_HighlightType_to_heresdk_search_bindingsListOf_sdk_search_IndexRange_iterator_release_handle'));
final _heresdkSearchBindingsmapofSdkSearchHighlighttypeToHeresdkSearchBindingslistofSdkSearchIndexrangeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_bindingsMapOf_sdk_search_HighlightType_to_heresdk_search_bindingsListOf_sdk_search_IndexRange_iterator_is_valid'));
final _heresdkSearchBindingsmapofSdkSearchHighlighttypeToHeresdkSearchBindingslistofSdkSearchIndexrangeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsMapOf_sdk_search_HighlightType_to_heresdk_search_bindingsListOf_sdk_search_IndexRange_iterator_increment'));
final _heresdkSearchBindingsmapofSdkSearchHighlighttypeToHeresdkSearchBindingslistofSdkSearchIndexrangeIteratorGetKey = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsMapOf_sdk_search_HighlightType_to_heresdk_search_bindingsListOf_sdk_search_IndexRange_iterator_get_key'));
final _heresdkSearchBindingsmapofSdkSearchHighlighttypeToHeresdkSearchBindingslistofSdkSearchIndexrangeIteratorGetValue = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindingsMapOf_sdk_search_HighlightType_to_heresdk_search_bindingsListOf_sdk_search_IndexRange_iterator_get_value'));

Pointer<Void> heresdkSearchBindingsmapofSdkSearchHighlighttypeToHeresdkSearchBindingslistofSdkSearchIndexrangeToFfi(Map<HighlightType, List<IndexRange>> value) {
  final _result = _heresdkSearchBindingsmapofSdkSearchHighlighttypeToHeresdkSearchBindingslistofSdkSearchIndexrangeCreateHandle();
  for (final entry in value.entries) {
    final _keyHandle = sdkSearchHighlighttypeToFfi(entry.key);
    final _valueHandle = heresdkSearchBindingslistofSdkSearchIndexrangeToFfi(entry.value);
    _heresdkSearchBindingsmapofSdkSearchHighlighttypeToHeresdkSearchBindingslistofSdkSearchIndexrangePut(_result, _keyHandle, _valueHandle);
    sdkSearchHighlighttypeReleaseFfiHandle(_keyHandle);
    heresdkSearchBindingslistofSdkSearchIndexrangeReleaseFfiHandle(_valueHandle);
  }
  return _result;
}

Map<HighlightType, List<IndexRange>> heresdkSearchBindingsmapofSdkSearchHighlighttypeToHeresdkSearchBindingslistofSdkSearchIndexrangeFromFfi(Pointer<Void> handle) {
  final result = Map<HighlightType, List<IndexRange>>();
  final _iteratorHandle = _heresdkSearchBindingsmapofSdkSearchHighlighttypeToHeresdkSearchBindingslistofSdkSearchIndexrangeIterator(handle);
  while (_heresdkSearchBindingsmapofSdkSearchHighlighttypeToHeresdkSearchBindingslistofSdkSearchIndexrangeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _keyHandle = _heresdkSearchBindingsmapofSdkSearchHighlighttypeToHeresdkSearchBindingslistofSdkSearchIndexrangeIteratorGetKey(_iteratorHandle);
    final _valueHandle = _heresdkSearchBindingsmapofSdkSearchHighlighttypeToHeresdkSearchBindingslistofSdkSearchIndexrangeIteratorGetValue(_iteratorHandle);
    try {
      result[sdkSearchHighlighttypeFromFfi(_keyHandle)] =
        heresdkSearchBindingslistofSdkSearchIndexrangeFromFfi(_valueHandle);
    } finally {
      sdkSearchHighlighttypeReleaseFfiHandle(_keyHandle);
      heresdkSearchBindingslistofSdkSearchIndexrangeReleaseFfiHandle(_valueHandle);
    }
    _heresdkSearchBindingsmapofSdkSearchHighlighttypeToHeresdkSearchBindingslistofSdkSearchIndexrangeIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchBindingsmapofSdkSearchHighlighttypeToHeresdkSearchBindingslistofSdkSearchIndexrangeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchBindingsmapofSdkSearchHighlighttypeToHeresdkSearchBindingslistofSdkSearchIndexrangeReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchBindingsmapofSdkSearchHighlighttypeToHeresdkSearchBindingslistofSdkSearchIndexrangeReleaseHandle(handle);

final _heresdkSearchBindingsmapofSdkSearchHighlighttypeToHeresdkSearchBindingslistofSdkSearchIndexrangeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsMapOf_sdk_search_HighlightType_to_heresdk_search_bindingsListOf_sdk_search_IndexRange_create_handle_nullable'));
final _heresdkSearchBindingsmapofSdkSearchHighlighttypeToHeresdkSearchBindingslistofSdkSearchIndexrangeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsMapOf_sdk_search_HighlightType_to_heresdk_search_bindingsListOf_sdk_search_IndexRange_release_handle_nullable'));
final _heresdkSearchBindingsmapofSdkSearchHighlighttypeToHeresdkSearchBindingslistofSdkSearchIndexrangeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindingsMapOf_sdk_search_HighlightType_to_heresdk_search_bindingsListOf_sdk_search_IndexRange_get_value_nullable'));

Pointer<Void> heresdkSearchBindingsmapofSdkSearchHighlighttypeToHeresdkSearchBindingslistofSdkSearchIndexrangeToFfiNullable(Map<HighlightType, List<IndexRange>>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchBindingsmapofSdkSearchHighlighttypeToHeresdkSearchBindingslistofSdkSearchIndexrangeToFfi(value);
  final result = _heresdkSearchBindingsmapofSdkSearchHighlighttypeToHeresdkSearchBindingslistofSdkSearchIndexrangeCreateHandleNullable(_handle);
  heresdkSearchBindingsmapofSdkSearchHighlighttypeToHeresdkSearchBindingslistofSdkSearchIndexrangeReleaseFfiHandle(_handle);
  return result;
}

Map<HighlightType, List<IndexRange>>? heresdkSearchBindingsmapofSdkSearchHighlighttypeToHeresdkSearchBindingslistofSdkSearchIndexrangeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchBindingsmapofSdkSearchHighlighttypeToHeresdkSearchBindingslistofSdkSearchIndexrangeGetValueNullable(handle);
  final result = heresdkSearchBindingsmapofSdkSearchHighlighttypeToHeresdkSearchBindingslistofSdkSearchIndexrangeFromFfi(_handle);
  heresdkSearchBindingsmapofSdkSearchHighlighttypeToHeresdkSearchBindingslistofSdkSearchIndexrangeReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchBindingsmapofSdkSearchHighlighttypeToHeresdkSearchBindingslistofSdkSearchIndexrangeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchBindingsmapofSdkSearchHighlighttypeToHeresdkSearchBindingslistofSdkSearchIndexrangeReleaseHandleNullable(handle);


// Copyright (c) 2018-2022 HERE Global B.V. and its affiliate(s).
// All rights reserved.
//
// This software and other materials contain proprietary information
// controlled by HERE and are protected by applicable copyright legislation.
// Any use and utilization of this software and other materials and
// disclosure to any third parties is conditional upon having a separate
// agreement with HERE for the access, use, utilization or disclosure of this
// software. In the absence of such agreement, the use of the software is not
// allowed.
//
































final _heresdkSearchCommonBindingslistofLocaleCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_common_bindingsListOf_Locale_create_handle'));
final _heresdkSearchCommonBindingslistofLocaleReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_Locale_release_handle'));
final _heresdkSearchCommonBindingslistofLocaleInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_Locale_insert'));
final _heresdkSearchCommonBindingslistofLocaleIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_Locale_iterator'));
final _heresdkSearchCommonBindingslistofLocaleIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_Locale_iterator_release_handle'));
final _heresdkSearchCommonBindingslistofLocaleIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_Locale_iterator_is_valid'));
final _heresdkSearchCommonBindingslistofLocaleIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_Locale_iterator_increment'));
final _heresdkSearchCommonBindingslistofLocaleIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_Locale_iterator_get'));

Pointer<Void> heresdkSearchCommonBindingslistofLocaleToFfi(List<Locale> value) {
  final _result = _heresdkSearchCommonBindingslistofLocaleCreateHandle();
  for (final element in value) {
    final _elementHandle = localeToFfi(element);
    _heresdkSearchCommonBindingslistofLocaleInsert(_result, _elementHandle);
    localeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Locale> heresdkSearchCommonBindingslistofLocaleFromFfi(Pointer<Void> handle) {
  final result = List<Locale>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchCommonBindingslistofLocaleIterator(handle);
  while (_heresdkSearchCommonBindingslistofLocaleIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchCommonBindingslistofLocaleIteratorGet(_iteratorHandle);
    try {
      result.add(localeFromFfi(_elementHandle));
    } finally {
      localeReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchCommonBindingslistofLocaleIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchCommonBindingslistofLocaleIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchCommonBindingslistofLocaleReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchCommonBindingslistofLocaleReleaseHandle(handle);

final _heresdkSearchCommonBindingslistofLocaleCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_Locale_create_handle_nullable'));
final _heresdkSearchCommonBindingslistofLocaleReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_Locale_release_handle_nullable'));
final _heresdkSearchCommonBindingslistofLocaleGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_Locale_get_value_nullable'));

Pointer<Void> heresdkSearchCommonBindingslistofLocaleToFfiNullable(List<Locale>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchCommonBindingslistofLocaleToFfi(value);
  final result = _heresdkSearchCommonBindingslistofLocaleCreateHandleNullable(_handle);
  heresdkSearchCommonBindingslistofLocaleReleaseFfiHandle(_handle);
  return result;
}

List<Locale>? heresdkSearchCommonBindingslistofLocaleFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchCommonBindingslistofLocaleGetValueNullable(handle);
  final result = heresdkSearchCommonBindingslistofLocaleFromFfi(_handle);
  heresdkSearchCommonBindingslistofLocaleReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchCommonBindingslistofLocaleReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchCommonBindingslistofLocaleReleaseHandleNullable(handle);

final _heresdkSearchCommonBindingslistofStringCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_common_bindingsListOf_String_create_handle'));
final _heresdkSearchCommonBindingslistofStringReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_String_release_handle'));
final _heresdkSearchCommonBindingslistofStringInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_String_insert'));
final _heresdkSearchCommonBindingslistofStringIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_String_iterator'));
final _heresdkSearchCommonBindingslistofStringIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_String_iterator_release_handle'));
final _heresdkSearchCommonBindingslistofStringIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_String_iterator_is_valid'));
final _heresdkSearchCommonBindingslistofStringIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_String_iterator_increment'));
final _heresdkSearchCommonBindingslistofStringIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_String_iterator_get'));

Pointer<Void> heresdkSearchCommonBindingslistofStringToFfi(List<String> value) {
  final _result = _heresdkSearchCommonBindingslistofStringCreateHandle();
  for (final element in value) {
    final _elementHandle = stringToFfi(element);
    _heresdkSearchCommonBindingslistofStringInsert(_result, _elementHandle);
    stringReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<String> heresdkSearchCommonBindingslistofStringFromFfi(Pointer<Void> handle) {
  final result = List<String>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchCommonBindingslistofStringIterator(handle);
  while (_heresdkSearchCommonBindingslistofStringIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchCommonBindingslistofStringIteratorGet(_iteratorHandle);
    try {
      result.add(stringFromFfi(_elementHandle));
    } finally {
      stringReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchCommonBindingslistofStringIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchCommonBindingslistofStringIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchCommonBindingslistofStringReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchCommonBindingslistofStringReleaseHandle(handle);

final _heresdkSearchCommonBindingslistofStringCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_String_create_handle_nullable'));
final _heresdkSearchCommonBindingslistofStringReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_String_release_handle_nullable'));
final _heresdkSearchCommonBindingslistofStringGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_String_get_value_nullable'));

Pointer<Void> heresdkSearchCommonBindingslistofStringToFfiNullable(List<String>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchCommonBindingslistofStringToFfi(value);
  final result = _heresdkSearchCommonBindingslistofStringCreateHandleNullable(_handle);
  heresdkSearchCommonBindingslistofStringReleaseFfiHandle(_handle);
  return result;
}

List<String>? heresdkSearchCommonBindingslistofStringFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchCommonBindingslistofStringGetValueNullable(handle);
  final result = heresdkSearchCommonBindingslistofStringFromFfi(_handle);
  heresdkSearchCommonBindingslistofStringReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchCommonBindingslistofStringReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchCommonBindingslistofStringReleaseHandleNullable(handle);

final _heresdkSearchCommonBindingslistofSdkCoreCountrycodeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_CountryCode_create_handle'));
final _heresdkSearchCommonBindingslistofSdkCoreCountrycodeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_CountryCode_release_handle'));
final _heresdkSearchCommonBindingslistofSdkCoreCountrycodeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_CountryCode_insert'));
final _heresdkSearchCommonBindingslistofSdkCoreCountrycodeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_CountryCode_iterator'));
final _heresdkSearchCommonBindingslistofSdkCoreCountrycodeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_CountryCode_iterator_release_handle'));
final _heresdkSearchCommonBindingslistofSdkCoreCountrycodeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_CountryCode_iterator_is_valid'));
final _heresdkSearchCommonBindingslistofSdkCoreCountrycodeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_CountryCode_iterator_increment'));
final _heresdkSearchCommonBindingslistofSdkCoreCountrycodeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_CountryCode_iterator_get'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkCoreCountrycodeToFfi(List<CountryCode> value) {
  final _result = _heresdkSearchCommonBindingslistofSdkCoreCountrycodeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreCountrycodeToFfi(element);
    _heresdkSearchCommonBindingslistofSdkCoreCountrycodeInsert(_result, _elementHandle);
    sdkCoreCountrycodeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<CountryCode> heresdkSearchCommonBindingslistofSdkCoreCountrycodeFromFfi(Pointer<Void> handle) {
  final result = List<CountryCode>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchCommonBindingslistofSdkCoreCountrycodeIterator(handle);
  while (_heresdkSearchCommonBindingslistofSdkCoreCountrycodeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchCommonBindingslistofSdkCoreCountrycodeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreCountrycodeFromFfi(_elementHandle));
    } finally {
      sdkCoreCountrycodeReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchCommonBindingslistofSdkCoreCountrycodeIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchCommonBindingslistofSdkCoreCountrycodeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkCoreCountrycodeReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchCommonBindingslistofSdkCoreCountrycodeReleaseHandle(handle);

final _heresdkSearchCommonBindingslistofSdkCoreCountrycodeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_CountryCode_create_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkCoreCountrycodeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_CountryCode_release_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkCoreCountrycodeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_CountryCode_get_value_nullable'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkCoreCountrycodeToFfiNullable(List<CountryCode>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchCommonBindingslistofSdkCoreCountrycodeToFfi(value);
  final result = _heresdkSearchCommonBindingslistofSdkCoreCountrycodeCreateHandleNullable(_handle);
  heresdkSearchCommonBindingslistofSdkCoreCountrycodeReleaseFfiHandle(_handle);
  return result;
}

List<CountryCode>? heresdkSearchCommonBindingslistofSdkCoreCountrycodeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchCommonBindingslistofSdkCoreCountrycodeGetValueNullable(handle);
  final result = heresdkSearchCommonBindingslistofSdkCoreCountrycodeFromFfi(_handle);
  heresdkSearchCommonBindingslistofSdkCoreCountrycodeReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkCoreCountrycodeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchCommonBindingslistofSdkCoreCountrycodeReleaseHandleNullable(handle);

final _heresdkSearchCommonBindingslistofSdkCoreExternalidCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_ExternalID_create_handle'));
final _heresdkSearchCommonBindingslistofSdkCoreExternalidReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_ExternalID_release_handle'));
final _heresdkSearchCommonBindingslistofSdkCoreExternalidInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_ExternalID_insert'));
final _heresdkSearchCommonBindingslistofSdkCoreExternalidIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_ExternalID_iterator'));
final _heresdkSearchCommonBindingslistofSdkCoreExternalidIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_ExternalID_iterator_release_handle'));
final _heresdkSearchCommonBindingslistofSdkCoreExternalidIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_ExternalID_iterator_is_valid'));
final _heresdkSearchCommonBindingslistofSdkCoreExternalidIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_ExternalID_iterator_increment'));
final _heresdkSearchCommonBindingslistofSdkCoreExternalidIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_ExternalID_iterator_get'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkCoreExternalidToFfi(List<ExternalID> value) {
  final _result = _heresdkSearchCommonBindingslistofSdkCoreExternalidCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreExternalidToFfi(element);
    _heresdkSearchCommonBindingslistofSdkCoreExternalidInsert(_result, _elementHandle);
    sdkCoreExternalidReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<ExternalID> heresdkSearchCommonBindingslistofSdkCoreExternalidFromFfi(Pointer<Void> handle) {
  final result = List<ExternalID>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchCommonBindingslistofSdkCoreExternalidIterator(handle);
  while (_heresdkSearchCommonBindingslistofSdkCoreExternalidIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchCommonBindingslistofSdkCoreExternalidIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreExternalidFromFfi(_elementHandle));
    } finally {
      sdkCoreExternalidReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchCommonBindingslistofSdkCoreExternalidIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchCommonBindingslistofSdkCoreExternalidIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkCoreExternalidReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchCommonBindingslistofSdkCoreExternalidReleaseHandle(handle);

final _heresdkSearchCommonBindingslistofSdkCoreExternalidCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_ExternalID_create_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkCoreExternalidReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_ExternalID_release_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkCoreExternalidGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_ExternalID_get_value_nullable'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkCoreExternalidToFfiNullable(List<ExternalID>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchCommonBindingslistofSdkCoreExternalidToFfi(value);
  final result = _heresdkSearchCommonBindingslistofSdkCoreExternalidCreateHandleNullable(_handle);
  heresdkSearchCommonBindingslistofSdkCoreExternalidReleaseFfiHandle(_handle);
  return result;
}

List<ExternalID>? heresdkSearchCommonBindingslistofSdkCoreExternalidFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchCommonBindingslistofSdkCoreExternalidGetValueNullable(handle);
  final result = heresdkSearchCommonBindingslistofSdkCoreExternalidFromFfi(_handle);
  heresdkSearchCommonBindingslistofSdkCoreExternalidReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkCoreExternalidReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchCommonBindingslistofSdkCoreExternalidReleaseHandleNullable(handle);

final _heresdkSearchCommonBindingslistofSdkCoreGeocoordinatesCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_GeoCoordinates_create_handle'));
final _heresdkSearchCommonBindingslistofSdkCoreGeocoordinatesReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_GeoCoordinates_release_handle'));
final _heresdkSearchCommonBindingslistofSdkCoreGeocoordinatesInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_GeoCoordinates_insert'));
final _heresdkSearchCommonBindingslistofSdkCoreGeocoordinatesIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_GeoCoordinates_iterator'));
final _heresdkSearchCommonBindingslistofSdkCoreGeocoordinatesIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_GeoCoordinates_iterator_release_handle'));
final _heresdkSearchCommonBindingslistofSdkCoreGeocoordinatesIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_GeoCoordinates_iterator_is_valid'));
final _heresdkSearchCommonBindingslistofSdkCoreGeocoordinatesIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_GeoCoordinates_iterator_increment'));
final _heresdkSearchCommonBindingslistofSdkCoreGeocoordinatesIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_GeoCoordinates_iterator_get'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkCoreGeocoordinatesToFfi(List<GeoCoordinates> value) {
  final _result = _heresdkSearchCommonBindingslistofSdkCoreGeocoordinatesCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreGeocoordinatesToFfi(element);
    _heresdkSearchCommonBindingslistofSdkCoreGeocoordinatesInsert(_result, _elementHandle);
    sdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoCoordinates> heresdkSearchCommonBindingslistofSdkCoreGeocoordinatesFromFfi(Pointer<Void> handle) {
  final result = List<GeoCoordinates>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchCommonBindingslistofSdkCoreGeocoordinatesIterator(handle);
  while (_heresdkSearchCommonBindingslistofSdkCoreGeocoordinatesIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchCommonBindingslistofSdkCoreGeocoordinatesIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreGeocoordinatesFromFfi(_elementHandle));
    } finally {
      sdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchCommonBindingslistofSdkCoreGeocoordinatesIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchCommonBindingslistofSdkCoreGeocoordinatesIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchCommonBindingslistofSdkCoreGeocoordinatesReleaseHandle(handle);

final _heresdkSearchCommonBindingslistofSdkCoreGeocoordinatesCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_GeoCoordinates_create_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkCoreGeocoordinatesReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_GeoCoordinates_release_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkCoreGeocoordinatesGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_GeoCoordinates_get_value_nullable'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkCoreGeocoordinatesToFfiNullable(List<GeoCoordinates>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchCommonBindingslistofSdkCoreGeocoordinatesToFfi(value);
  final result = _heresdkSearchCommonBindingslistofSdkCoreGeocoordinatesCreateHandleNullable(_handle);
  heresdkSearchCommonBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

List<GeoCoordinates>? heresdkSearchCommonBindingslistofSdkCoreGeocoordinatesFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchCommonBindingslistofSdkCoreGeocoordinatesGetValueNullable(handle);
  final result = heresdkSearchCommonBindingslistofSdkCoreGeocoordinatesFromFfi(_handle);
  heresdkSearchCommonBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkCoreGeocoordinatesReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchCommonBindingslistofSdkCoreGeocoordinatesReleaseHandleNullable(handle);

final _heresdkSearchCommonBindingslistofSdkCoreLocalizedtextCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_LocalizedText_create_handle'));
final _heresdkSearchCommonBindingslistofSdkCoreLocalizedtextReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_LocalizedText_release_handle'));
final _heresdkSearchCommonBindingslistofSdkCoreLocalizedtextInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_LocalizedText_insert'));
final _heresdkSearchCommonBindingslistofSdkCoreLocalizedtextIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_LocalizedText_iterator'));
final _heresdkSearchCommonBindingslistofSdkCoreLocalizedtextIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_LocalizedText_iterator_release_handle'));
final _heresdkSearchCommonBindingslistofSdkCoreLocalizedtextIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_LocalizedText_iterator_is_valid'));
final _heresdkSearchCommonBindingslistofSdkCoreLocalizedtextIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_LocalizedText_iterator_increment'));
final _heresdkSearchCommonBindingslistofSdkCoreLocalizedtextIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_LocalizedText_iterator_get'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkCoreLocalizedtextToFfi(List<LocalizedText> value) {
  final _result = _heresdkSearchCommonBindingslistofSdkCoreLocalizedtextCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreLocalizedtextToFfi(element);
    _heresdkSearchCommonBindingslistofSdkCoreLocalizedtextInsert(_result, _elementHandle);
    sdkCoreLocalizedtextReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<LocalizedText> heresdkSearchCommonBindingslistofSdkCoreLocalizedtextFromFfi(Pointer<Void> handle) {
  final result = List<LocalizedText>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchCommonBindingslistofSdkCoreLocalizedtextIterator(handle);
  while (_heresdkSearchCommonBindingslistofSdkCoreLocalizedtextIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchCommonBindingslistofSdkCoreLocalizedtextIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreLocalizedtextFromFfi(_elementHandle));
    } finally {
      sdkCoreLocalizedtextReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchCommonBindingslistofSdkCoreLocalizedtextIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchCommonBindingslistofSdkCoreLocalizedtextIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkCoreLocalizedtextReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchCommonBindingslistofSdkCoreLocalizedtextReleaseHandle(handle);

final _heresdkSearchCommonBindingslistofSdkCoreLocalizedtextCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_LocalizedText_create_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkCoreLocalizedtextReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_LocalizedText_release_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkCoreLocalizedtextGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_LocalizedText_get_value_nullable'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkCoreLocalizedtextToFfiNullable(List<LocalizedText>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchCommonBindingslistofSdkCoreLocalizedtextToFfi(value);
  final result = _heresdkSearchCommonBindingslistofSdkCoreLocalizedtextCreateHandleNullable(_handle);
  heresdkSearchCommonBindingslistofSdkCoreLocalizedtextReleaseFfiHandle(_handle);
  return result;
}

List<LocalizedText>? heresdkSearchCommonBindingslistofSdkCoreLocalizedtextFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchCommonBindingslistofSdkCoreLocalizedtextGetValueNullable(handle);
  final result = heresdkSearchCommonBindingslistofSdkCoreLocalizedtextFromFfi(_handle);
  heresdkSearchCommonBindingslistofSdkCoreLocalizedtextReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkCoreLocalizedtextReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchCommonBindingslistofSdkCoreLocalizedtextReleaseHandleNullable(handle);

final _heresdkSearchCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_create_handle'));
final _heresdkSearchCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_release_handle'));
final _heresdkSearchCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_insert'));
final _heresdkSearchCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator'));
final _heresdkSearchCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator_release_handle'));
final _heresdkSearchCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator_is_valid'));
final _heresdkSearchCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator_increment'));
final _heresdkSearchCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator_get'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureToFfi(List<LayerConfigurationFeature> value) {
  final _result = _heresdkSearchCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreEngineLayerconfigurationFeatureToFfi(element);
    _heresdkSearchCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureInsert(_result, _elementHandle);
    sdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<LayerConfigurationFeature> heresdkSearchCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureFromFfi(Pointer<Void> handle) {
  final result = List<LayerConfigurationFeature>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureIterator(handle);
  while (_heresdkSearchCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreEngineLayerconfigurationFeatureFromFfi(_elementHandle));
    } finally {
      sdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseHandle(handle);

final _heresdkSearchCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_create_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_release_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_get_value_nullable'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureToFfiNullable(List<LayerConfigurationFeature>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureToFfi(value);
  final result = _heresdkSearchCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureCreateHandleNullable(_handle);
  heresdkSearchCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(_handle);
  return result;
}

List<LayerConfigurationFeature>? heresdkSearchCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureGetValueNullable(handle);
  final result = heresdkSearchCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureFromFfi(_handle);
  heresdkSearchCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseHandleNullable(handle);

final _heresdkSearchCommonBindingslistofSdkSearchContactCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_Contact_create_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchContactReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_Contact_release_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchContactInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_Contact_insert'));
final _heresdkSearchCommonBindingslistofSdkSearchContactIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_Contact_iterator'));
final _heresdkSearchCommonBindingslistofSdkSearchContactIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_Contact_iterator_release_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchContactIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_Contact_iterator_is_valid'));
final _heresdkSearchCommonBindingslistofSdkSearchContactIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_Contact_iterator_increment'));
final _heresdkSearchCommonBindingslistofSdkSearchContactIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_Contact_iterator_get'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkSearchContactToFfi(List<Contact> value) {
  final _result = _heresdkSearchCommonBindingslistofSdkSearchContactCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchContactToFfi(element);
    _heresdkSearchCommonBindingslistofSdkSearchContactInsert(_result, _elementHandle);
    sdkSearchContactReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Contact> heresdkSearchCommonBindingslistofSdkSearchContactFromFfi(Pointer<Void> handle) {
  final result = List<Contact>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchCommonBindingslistofSdkSearchContactIterator(handle);
  while (_heresdkSearchCommonBindingslistofSdkSearchContactIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchCommonBindingslistofSdkSearchContactIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchContactFromFfi(_elementHandle));
    } finally {
      sdkSearchContactReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchCommonBindingslistofSdkSearchContactIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchCommonBindingslistofSdkSearchContactIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkSearchContactReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchCommonBindingslistofSdkSearchContactReleaseHandle(handle);

final _heresdkSearchCommonBindingslistofSdkSearchContactCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_Contact_create_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkSearchContactReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_Contact_release_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkSearchContactGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_Contact_get_value_nullable'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkSearchContactToFfiNullable(List<Contact>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchCommonBindingslistofSdkSearchContactToFfi(value);
  final result = _heresdkSearchCommonBindingslistofSdkSearchContactCreateHandleNullable(_handle);
  heresdkSearchCommonBindingslistofSdkSearchContactReleaseFfiHandle(_handle);
  return result;
}

List<Contact>? heresdkSearchCommonBindingslistofSdkSearchContactFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchCommonBindingslistofSdkSearchContactGetValueNullable(handle);
  final result = heresdkSearchCommonBindingslistofSdkSearchContactFromFfi(_handle);
  heresdkSearchCommonBindingslistofSdkSearchContactReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkSearchContactReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchCommonBindingslistofSdkSearchContactReleaseHandleNullable(handle);

final _heresdkSearchCommonBindingslistofSdkSearchEvchargingstationCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_EVChargingStation_create_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchEvchargingstationReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_EVChargingStation_release_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchEvchargingstationInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_EVChargingStation_insert'));
final _heresdkSearchCommonBindingslistofSdkSearchEvchargingstationIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_EVChargingStation_iterator'));
final _heresdkSearchCommonBindingslistofSdkSearchEvchargingstationIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_EVChargingStation_iterator_release_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchEvchargingstationIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_EVChargingStation_iterator_is_valid'));
final _heresdkSearchCommonBindingslistofSdkSearchEvchargingstationIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_EVChargingStation_iterator_increment'));
final _heresdkSearchCommonBindingslistofSdkSearchEvchargingstationIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_EVChargingStation_iterator_get'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkSearchEvchargingstationToFfi(List<EVChargingStation> value) {
  final _result = _heresdkSearchCommonBindingslistofSdkSearchEvchargingstationCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchEvchargingstationToFfi(element);
    _heresdkSearchCommonBindingslistofSdkSearchEvchargingstationInsert(_result, _elementHandle);
    sdkSearchEvchargingstationReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<EVChargingStation> heresdkSearchCommonBindingslistofSdkSearchEvchargingstationFromFfi(Pointer<Void> handle) {
  final result = List<EVChargingStation>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchCommonBindingslistofSdkSearchEvchargingstationIterator(handle);
  while (_heresdkSearchCommonBindingslistofSdkSearchEvchargingstationIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchCommonBindingslistofSdkSearchEvchargingstationIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchEvchargingstationFromFfi(_elementHandle));
    } finally {
      sdkSearchEvchargingstationReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchCommonBindingslistofSdkSearchEvchargingstationIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchCommonBindingslistofSdkSearchEvchargingstationIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkSearchEvchargingstationReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchCommonBindingslistofSdkSearchEvchargingstationReleaseHandle(handle);

final _heresdkSearchCommonBindingslistofSdkSearchEvchargingstationCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_EVChargingStation_create_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkSearchEvchargingstationReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_EVChargingStation_release_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkSearchEvchargingstationGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_EVChargingStation_get_value_nullable'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkSearchEvchargingstationToFfiNullable(List<EVChargingStation>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchCommonBindingslistofSdkSearchEvchargingstationToFfi(value);
  final result = _heresdkSearchCommonBindingslistofSdkSearchEvchargingstationCreateHandleNullable(_handle);
  heresdkSearchCommonBindingslistofSdkSearchEvchargingstationReleaseFfiHandle(_handle);
  return result;
}

List<EVChargingStation>? heresdkSearchCommonBindingslistofSdkSearchEvchargingstationFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchCommonBindingslistofSdkSearchEvchargingstationGetValueNullable(handle);
  final result = heresdkSearchCommonBindingslistofSdkSearchEvchargingstationFromFfi(_handle);
  heresdkSearchCommonBindingslistofSdkSearchEvchargingstationReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkSearchEvchargingstationReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchCommonBindingslistofSdkSearchEvchargingstationReleaseHandleNullable(handle);

final _heresdkSearchCommonBindingslistofSdkSearchEmailaddressCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_EmailAddress_create_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchEmailaddressReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_EmailAddress_release_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchEmailaddressInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_EmailAddress_insert'));
final _heresdkSearchCommonBindingslistofSdkSearchEmailaddressIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_EmailAddress_iterator'));
final _heresdkSearchCommonBindingslistofSdkSearchEmailaddressIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_EmailAddress_iterator_release_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchEmailaddressIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_EmailAddress_iterator_is_valid'));
final _heresdkSearchCommonBindingslistofSdkSearchEmailaddressIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_EmailAddress_iterator_increment'));
final _heresdkSearchCommonBindingslistofSdkSearchEmailaddressIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_EmailAddress_iterator_get'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkSearchEmailaddressToFfi(List<EmailAddress> value) {
  final _result = _heresdkSearchCommonBindingslistofSdkSearchEmailaddressCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchEmailaddressToFfi(element);
    _heresdkSearchCommonBindingslistofSdkSearchEmailaddressInsert(_result, _elementHandle);
    sdkSearchEmailaddressReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<EmailAddress> heresdkSearchCommonBindingslistofSdkSearchEmailaddressFromFfi(Pointer<Void> handle) {
  final result = List<EmailAddress>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchCommonBindingslistofSdkSearchEmailaddressIterator(handle);
  while (_heresdkSearchCommonBindingslistofSdkSearchEmailaddressIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchCommonBindingslistofSdkSearchEmailaddressIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchEmailaddressFromFfi(_elementHandle));
    } finally {
      sdkSearchEmailaddressReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchCommonBindingslistofSdkSearchEmailaddressIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchCommonBindingslistofSdkSearchEmailaddressIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkSearchEmailaddressReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchCommonBindingslistofSdkSearchEmailaddressReleaseHandle(handle);

final _heresdkSearchCommonBindingslistofSdkSearchEmailaddressCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_EmailAddress_create_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkSearchEmailaddressReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_EmailAddress_release_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkSearchEmailaddressGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_EmailAddress_get_value_nullable'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkSearchEmailaddressToFfiNullable(List<EmailAddress>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchCommonBindingslistofSdkSearchEmailaddressToFfi(value);
  final result = _heresdkSearchCommonBindingslistofSdkSearchEmailaddressCreateHandleNullable(_handle);
  heresdkSearchCommonBindingslistofSdkSearchEmailaddressReleaseFfiHandle(_handle);
  return result;
}

List<EmailAddress>? heresdkSearchCommonBindingslistofSdkSearchEmailaddressFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchCommonBindingslistofSdkSearchEmailaddressGetValueNullable(handle);
  final result = heresdkSearchCommonBindingslistofSdkSearchEmailaddressFromFfi(_handle);
  heresdkSearchCommonBindingslistofSdkSearchEmailaddressReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkSearchEmailaddressReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchCommonBindingslistofSdkSearchEmailaddressReleaseHandleNullable(handle);

final _heresdkSearchCommonBindingslistofSdkSearchEvconnectorexperimentalCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_EvConnectorExperimental_create_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchEvconnectorexperimentalReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_EvConnectorExperimental_release_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchEvconnectorexperimentalInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_EvConnectorExperimental_insert'));
final _heresdkSearchCommonBindingslistofSdkSearchEvconnectorexperimentalIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_EvConnectorExperimental_iterator'));
final _heresdkSearchCommonBindingslistofSdkSearchEvconnectorexperimentalIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_EvConnectorExperimental_iterator_release_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchEvconnectorexperimentalIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_EvConnectorExperimental_iterator_is_valid'));
final _heresdkSearchCommonBindingslistofSdkSearchEvconnectorexperimentalIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_EvConnectorExperimental_iterator_increment'));
final _heresdkSearchCommonBindingslistofSdkSearchEvconnectorexperimentalIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_EvConnectorExperimental_iterator_get'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkSearchEvconnectorexperimentalToFfi(List<EvConnectorExperimental> value) {
  final _result = _heresdkSearchCommonBindingslistofSdkSearchEvconnectorexperimentalCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchEvconnectorexperimentalToFfi(element);
    _heresdkSearchCommonBindingslistofSdkSearchEvconnectorexperimentalInsert(_result, _elementHandle);
    sdkSearchEvconnectorexperimentalReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<EvConnectorExperimental> heresdkSearchCommonBindingslistofSdkSearchEvconnectorexperimentalFromFfi(Pointer<Void> handle) {
  final result = List<EvConnectorExperimental>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchCommonBindingslistofSdkSearchEvconnectorexperimentalIterator(handle);
  while (_heresdkSearchCommonBindingslistofSdkSearchEvconnectorexperimentalIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchCommonBindingslistofSdkSearchEvconnectorexperimentalIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchEvconnectorexperimentalFromFfi(_elementHandle));
    } finally {
      sdkSearchEvconnectorexperimentalReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchCommonBindingslistofSdkSearchEvconnectorexperimentalIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchCommonBindingslistofSdkSearchEvconnectorexperimentalIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkSearchEvconnectorexperimentalReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchCommonBindingslistofSdkSearchEvconnectorexperimentalReleaseHandle(handle);

final _heresdkSearchCommonBindingslistofSdkSearchEvconnectorexperimentalCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_EvConnectorExperimental_create_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkSearchEvconnectorexperimentalReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_EvConnectorExperimental_release_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkSearchEvconnectorexperimentalGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_EvConnectorExperimental_get_value_nullable'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkSearchEvconnectorexperimentalToFfiNullable(List<EvConnectorExperimental>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchCommonBindingslistofSdkSearchEvconnectorexperimentalToFfi(value);
  final result = _heresdkSearchCommonBindingslistofSdkSearchEvconnectorexperimentalCreateHandleNullable(_handle);
  heresdkSearchCommonBindingslistofSdkSearchEvconnectorexperimentalReleaseFfiHandle(_handle);
  return result;
}

List<EvConnectorExperimental>? heresdkSearchCommonBindingslistofSdkSearchEvconnectorexperimentalFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchCommonBindingslistofSdkSearchEvconnectorexperimentalGetValueNullable(handle);
  final result = heresdkSearchCommonBindingslistofSdkSearchEvconnectorexperimentalFromFfi(_handle);
  heresdkSearchCommonBindingslistofSdkSearchEvconnectorexperimentalReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkSearchEvconnectorexperimentalReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchCommonBindingslistofSdkSearchEvconnectorexperimentalReleaseHandleNullable(handle);

final _heresdkSearchCommonBindingslistofSdkSearchIndexrangeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_IndexRange_create_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchIndexrangeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_IndexRange_release_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchIndexrangeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_IndexRange_insert'));
final _heresdkSearchCommonBindingslistofSdkSearchIndexrangeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_IndexRange_iterator'));
final _heresdkSearchCommonBindingslistofSdkSearchIndexrangeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_IndexRange_iterator_release_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchIndexrangeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_IndexRange_iterator_is_valid'));
final _heresdkSearchCommonBindingslistofSdkSearchIndexrangeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_IndexRange_iterator_increment'));
final _heresdkSearchCommonBindingslistofSdkSearchIndexrangeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_IndexRange_iterator_get'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkSearchIndexrangeToFfi(List<IndexRange> value) {
  final _result = _heresdkSearchCommonBindingslistofSdkSearchIndexrangeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchIndexrangeToFfi(element);
    _heresdkSearchCommonBindingslistofSdkSearchIndexrangeInsert(_result, _elementHandle);
    sdkSearchIndexrangeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<IndexRange> heresdkSearchCommonBindingslistofSdkSearchIndexrangeFromFfi(Pointer<Void> handle) {
  final result = List<IndexRange>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchCommonBindingslistofSdkSearchIndexrangeIterator(handle);
  while (_heresdkSearchCommonBindingslistofSdkSearchIndexrangeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchCommonBindingslistofSdkSearchIndexrangeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchIndexrangeFromFfi(_elementHandle));
    } finally {
      sdkSearchIndexrangeReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchCommonBindingslistofSdkSearchIndexrangeIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchCommonBindingslistofSdkSearchIndexrangeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkSearchIndexrangeReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchCommonBindingslistofSdkSearchIndexrangeReleaseHandle(handle);

final _heresdkSearchCommonBindingslistofSdkSearchIndexrangeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_IndexRange_create_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkSearchIndexrangeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_IndexRange_release_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkSearchIndexrangeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_IndexRange_get_value_nullable'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkSearchIndexrangeToFfiNullable(List<IndexRange>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchCommonBindingslistofSdkSearchIndexrangeToFfi(value);
  final result = _heresdkSearchCommonBindingslistofSdkSearchIndexrangeCreateHandleNullable(_handle);
  heresdkSearchCommonBindingslistofSdkSearchIndexrangeReleaseFfiHandle(_handle);
  return result;
}

List<IndexRange>? heresdkSearchCommonBindingslistofSdkSearchIndexrangeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchCommonBindingslistofSdkSearchIndexrangeGetValueNullable(handle);
  final result = heresdkSearchCommonBindingslistofSdkSearchIndexrangeFromFfi(_handle);
  heresdkSearchCommonBindingslistofSdkSearchIndexrangeReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkSearchIndexrangeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchCommonBindingslistofSdkSearchIndexrangeReleaseHandleNullable(handle);

final _heresdkSearchCommonBindingslistofSdkSearchLandlinephoneCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_LandlinePhone_create_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchLandlinephoneReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_LandlinePhone_release_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchLandlinephoneInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_LandlinePhone_insert'));
final _heresdkSearchCommonBindingslistofSdkSearchLandlinephoneIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_LandlinePhone_iterator'));
final _heresdkSearchCommonBindingslistofSdkSearchLandlinephoneIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_LandlinePhone_iterator_release_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchLandlinephoneIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_LandlinePhone_iterator_is_valid'));
final _heresdkSearchCommonBindingslistofSdkSearchLandlinephoneIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_LandlinePhone_iterator_increment'));
final _heresdkSearchCommonBindingslistofSdkSearchLandlinephoneIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_LandlinePhone_iterator_get'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkSearchLandlinephoneToFfi(List<LandlinePhone> value) {
  final _result = _heresdkSearchCommonBindingslistofSdkSearchLandlinephoneCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchLandlinephoneToFfi(element);
    _heresdkSearchCommonBindingslistofSdkSearchLandlinephoneInsert(_result, _elementHandle);
    sdkSearchLandlinephoneReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<LandlinePhone> heresdkSearchCommonBindingslistofSdkSearchLandlinephoneFromFfi(Pointer<Void> handle) {
  final result = List<LandlinePhone>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchCommonBindingslistofSdkSearchLandlinephoneIterator(handle);
  while (_heresdkSearchCommonBindingslistofSdkSearchLandlinephoneIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchCommonBindingslistofSdkSearchLandlinephoneIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchLandlinephoneFromFfi(_elementHandle));
    } finally {
      sdkSearchLandlinephoneReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchCommonBindingslistofSdkSearchLandlinephoneIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchCommonBindingslistofSdkSearchLandlinephoneIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkSearchLandlinephoneReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchCommonBindingslistofSdkSearchLandlinephoneReleaseHandle(handle);

final _heresdkSearchCommonBindingslistofSdkSearchLandlinephoneCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_LandlinePhone_create_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkSearchLandlinephoneReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_LandlinePhone_release_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkSearchLandlinephoneGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_LandlinePhone_get_value_nullable'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkSearchLandlinephoneToFfiNullable(List<LandlinePhone>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchCommonBindingslistofSdkSearchLandlinephoneToFfi(value);
  final result = _heresdkSearchCommonBindingslistofSdkSearchLandlinephoneCreateHandleNullable(_handle);
  heresdkSearchCommonBindingslistofSdkSearchLandlinephoneReleaseFfiHandle(_handle);
  return result;
}

List<LandlinePhone>? heresdkSearchCommonBindingslistofSdkSearchLandlinephoneFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchCommonBindingslistofSdkSearchLandlinephoneGetValueNullable(handle);
  final result = heresdkSearchCommonBindingslistofSdkSearchLandlinephoneFromFfi(_handle);
  heresdkSearchCommonBindingslistofSdkSearchLandlinephoneReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkSearchLandlinephoneReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchCommonBindingslistofSdkSearchLandlinephoneReleaseHandleNullable(handle);

final _heresdkSearchCommonBindingslistofSdkSearchMobilephoneCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_MobilePhone_create_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchMobilephoneReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_MobilePhone_release_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchMobilephoneInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_MobilePhone_insert'));
final _heresdkSearchCommonBindingslistofSdkSearchMobilephoneIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_MobilePhone_iterator'));
final _heresdkSearchCommonBindingslistofSdkSearchMobilephoneIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_MobilePhone_iterator_release_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchMobilephoneIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_MobilePhone_iterator_is_valid'));
final _heresdkSearchCommonBindingslistofSdkSearchMobilephoneIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_MobilePhone_iterator_increment'));
final _heresdkSearchCommonBindingslistofSdkSearchMobilephoneIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_MobilePhone_iterator_get'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkSearchMobilephoneToFfi(List<MobilePhone> value) {
  final _result = _heresdkSearchCommonBindingslistofSdkSearchMobilephoneCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchMobilephoneToFfi(element);
    _heresdkSearchCommonBindingslistofSdkSearchMobilephoneInsert(_result, _elementHandle);
    sdkSearchMobilephoneReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<MobilePhone> heresdkSearchCommonBindingslistofSdkSearchMobilephoneFromFfi(Pointer<Void> handle) {
  final result = List<MobilePhone>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchCommonBindingslistofSdkSearchMobilephoneIterator(handle);
  while (_heresdkSearchCommonBindingslistofSdkSearchMobilephoneIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchCommonBindingslistofSdkSearchMobilephoneIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchMobilephoneFromFfi(_elementHandle));
    } finally {
      sdkSearchMobilephoneReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchCommonBindingslistofSdkSearchMobilephoneIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchCommonBindingslistofSdkSearchMobilephoneIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkSearchMobilephoneReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchCommonBindingslistofSdkSearchMobilephoneReleaseHandle(handle);

final _heresdkSearchCommonBindingslistofSdkSearchMobilephoneCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_MobilePhone_create_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkSearchMobilephoneReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_MobilePhone_release_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkSearchMobilephoneGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_MobilePhone_get_value_nullable'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkSearchMobilephoneToFfiNullable(List<MobilePhone>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchCommonBindingslistofSdkSearchMobilephoneToFfi(value);
  final result = _heresdkSearchCommonBindingslistofSdkSearchMobilephoneCreateHandleNullable(_handle);
  heresdkSearchCommonBindingslistofSdkSearchMobilephoneReleaseFfiHandle(_handle);
  return result;
}

List<MobilePhone>? heresdkSearchCommonBindingslistofSdkSearchMobilephoneFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchCommonBindingslistofSdkSearchMobilephoneGetValueNullable(handle);
  final result = heresdkSearchCommonBindingslistofSdkSearchMobilephoneFromFfi(_handle);
  heresdkSearchCommonBindingslistofSdkSearchMobilephoneReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkSearchMobilephoneReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchCommonBindingslistofSdkSearchMobilephoneReleaseHandleNullable(handle);

final _heresdkSearchCommonBindingslistofSdkSearchOpeninghoursCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_OpeningHours_create_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchOpeninghoursReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_OpeningHours_release_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchOpeninghoursInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_OpeningHours_insert'));
final _heresdkSearchCommonBindingslistofSdkSearchOpeninghoursIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_OpeningHours_iterator'));
final _heresdkSearchCommonBindingslistofSdkSearchOpeninghoursIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_OpeningHours_iterator_release_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchOpeninghoursIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_OpeningHours_iterator_is_valid'));
final _heresdkSearchCommonBindingslistofSdkSearchOpeninghoursIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_OpeningHours_iterator_increment'));
final _heresdkSearchCommonBindingslistofSdkSearchOpeninghoursIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_OpeningHours_iterator_get'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkSearchOpeninghoursToFfi(List<OpeningHours> value) {
  final _result = _heresdkSearchCommonBindingslistofSdkSearchOpeninghoursCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchOpeninghoursToFfi(element);
    _heresdkSearchCommonBindingslistofSdkSearchOpeninghoursInsert(_result, _elementHandle);
    sdkSearchOpeninghoursReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<OpeningHours> heresdkSearchCommonBindingslistofSdkSearchOpeninghoursFromFfi(Pointer<Void> handle) {
  final result = List<OpeningHours>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchCommonBindingslistofSdkSearchOpeninghoursIterator(handle);
  while (_heresdkSearchCommonBindingslistofSdkSearchOpeninghoursIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchCommonBindingslistofSdkSearchOpeninghoursIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchOpeninghoursFromFfi(_elementHandle));
    } finally {
      sdkSearchOpeninghoursReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchCommonBindingslistofSdkSearchOpeninghoursIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchCommonBindingslistofSdkSearchOpeninghoursIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkSearchOpeninghoursReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchCommonBindingslistofSdkSearchOpeninghoursReleaseHandle(handle);

final _heresdkSearchCommonBindingslistofSdkSearchOpeninghoursCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_OpeningHours_create_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkSearchOpeninghoursReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_OpeningHours_release_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkSearchOpeninghoursGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_OpeningHours_get_value_nullable'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkSearchOpeninghoursToFfiNullable(List<OpeningHours>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchCommonBindingslistofSdkSearchOpeninghoursToFfi(value);
  final result = _heresdkSearchCommonBindingslistofSdkSearchOpeninghoursCreateHandleNullable(_handle);
  heresdkSearchCommonBindingslistofSdkSearchOpeninghoursReleaseFfiHandle(_handle);
  return result;
}

List<OpeningHours>? heresdkSearchCommonBindingslistofSdkSearchOpeninghoursFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchCommonBindingslistofSdkSearchOpeninghoursGetValueNullable(handle);
  final result = heresdkSearchCommonBindingslistofSdkSearchOpeninghoursFromFfi(_handle);
  heresdkSearchCommonBindingslistofSdkSearchOpeninghoursReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkSearchOpeninghoursReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchCommonBindingslistofSdkSearchOpeninghoursReleaseHandleNullable(handle);

final _heresdkSearchCommonBindingslistofSdkSearchPlaceCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_Place_create_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchPlaceReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_Place_release_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchPlaceInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_Place_insert'));
final _heresdkSearchCommonBindingslistofSdkSearchPlaceIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_Place_iterator'));
final _heresdkSearchCommonBindingslistofSdkSearchPlaceIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_Place_iterator_release_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchPlaceIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_Place_iterator_is_valid'));
final _heresdkSearchCommonBindingslistofSdkSearchPlaceIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_Place_iterator_increment'));
final _heresdkSearchCommonBindingslistofSdkSearchPlaceIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_Place_iterator_get'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkSearchPlaceToFfi(List<Place> value) {
  final _result = _heresdkSearchCommonBindingslistofSdkSearchPlaceCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchPlaceToFfi(element);
    _heresdkSearchCommonBindingslistofSdkSearchPlaceInsert(_result, _elementHandle);
    sdkSearchPlaceReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Place> heresdkSearchCommonBindingslistofSdkSearchPlaceFromFfi(Pointer<Void> handle) {
  final result = List<Place>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchCommonBindingslistofSdkSearchPlaceIterator(handle);
  while (_heresdkSearchCommonBindingslistofSdkSearchPlaceIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchCommonBindingslistofSdkSearchPlaceIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchPlaceFromFfi(_elementHandle));
    } finally {
      sdkSearchPlaceReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchCommonBindingslistofSdkSearchPlaceIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchCommonBindingslistofSdkSearchPlaceIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkSearchPlaceReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchCommonBindingslistofSdkSearchPlaceReleaseHandle(handle);

final _heresdkSearchCommonBindingslistofSdkSearchPlaceCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_Place_create_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkSearchPlaceReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_Place_release_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkSearchPlaceGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_Place_get_value_nullable'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkSearchPlaceToFfiNullable(List<Place>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchCommonBindingslistofSdkSearchPlaceToFfi(value);
  final result = _heresdkSearchCommonBindingslistofSdkSearchPlaceCreateHandleNullable(_handle);
  heresdkSearchCommonBindingslistofSdkSearchPlaceReleaseFfiHandle(_handle);
  return result;
}

List<Place>? heresdkSearchCommonBindingslistofSdkSearchPlaceFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchCommonBindingslistofSdkSearchPlaceGetValueNullable(handle);
  final result = heresdkSearchCommonBindingslistofSdkSearchPlaceFromFfi(_handle);
  heresdkSearchCommonBindingslistofSdkSearchPlaceReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkSearchPlaceReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchCommonBindingslistofSdkSearchPlaceReleaseHandleNullable(handle);

final _heresdkSearchCommonBindingslistofSdkSearchPlacecategoryCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_PlaceCategory_create_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchPlacecategoryReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_PlaceCategory_release_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchPlacecategoryInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_PlaceCategory_insert'));
final _heresdkSearchCommonBindingslistofSdkSearchPlacecategoryIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_PlaceCategory_iterator'));
final _heresdkSearchCommonBindingslistofSdkSearchPlacecategoryIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_PlaceCategory_iterator_release_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchPlacecategoryIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_PlaceCategory_iterator_is_valid'));
final _heresdkSearchCommonBindingslistofSdkSearchPlacecategoryIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_PlaceCategory_iterator_increment'));
final _heresdkSearchCommonBindingslistofSdkSearchPlacecategoryIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_PlaceCategory_iterator_get'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkSearchPlacecategoryToFfi(List<PlaceCategory> value) {
  final _result = _heresdkSearchCommonBindingslistofSdkSearchPlacecategoryCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchPlacecategoryToFfi(element);
    _heresdkSearchCommonBindingslistofSdkSearchPlacecategoryInsert(_result, _elementHandle);
    sdkSearchPlacecategoryReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<PlaceCategory> heresdkSearchCommonBindingslistofSdkSearchPlacecategoryFromFfi(Pointer<Void> handle) {
  final result = List<PlaceCategory>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchCommonBindingslistofSdkSearchPlacecategoryIterator(handle);
  while (_heresdkSearchCommonBindingslistofSdkSearchPlacecategoryIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchCommonBindingslistofSdkSearchPlacecategoryIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchPlacecategoryFromFfi(_elementHandle));
    } finally {
      sdkSearchPlacecategoryReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchCommonBindingslistofSdkSearchPlacecategoryIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchCommonBindingslistofSdkSearchPlacecategoryIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkSearchPlacecategoryReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchCommonBindingslistofSdkSearchPlacecategoryReleaseHandle(handle);

final _heresdkSearchCommonBindingslistofSdkSearchPlacecategoryCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_PlaceCategory_create_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkSearchPlacecategoryReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_PlaceCategory_release_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkSearchPlacecategoryGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_PlaceCategory_get_value_nullable'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkSearchPlacecategoryToFfiNullable(List<PlaceCategory>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchCommonBindingslistofSdkSearchPlacecategoryToFfi(value);
  final result = _heresdkSearchCommonBindingslistofSdkSearchPlacecategoryCreateHandleNullable(_handle);
  heresdkSearchCommonBindingslistofSdkSearchPlacecategoryReleaseFfiHandle(_handle);
  return result;
}

List<PlaceCategory>? heresdkSearchCommonBindingslistofSdkSearchPlacecategoryFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchCommonBindingslistofSdkSearchPlacecategoryGetValueNullable(handle);
  final result = heresdkSearchCommonBindingslistofSdkSearchPlacecategoryFromFfi(_handle);
  heresdkSearchCommonBindingslistofSdkSearchPlacecategoryReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkSearchPlacecategoryReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchCommonBindingslistofSdkSearchPlacecategoryReleaseHandleNullable(handle);

final _heresdkSearchCommonBindingslistofSdkSearchScheduledetailsCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_ScheduleDetails_create_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchScheduledetailsReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_ScheduleDetails_release_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchScheduledetailsInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_ScheduleDetails_insert'));
final _heresdkSearchCommonBindingslistofSdkSearchScheduledetailsIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_ScheduleDetails_iterator'));
final _heresdkSearchCommonBindingslistofSdkSearchScheduledetailsIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_ScheduleDetails_iterator_release_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchScheduledetailsIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_ScheduleDetails_iterator_is_valid'));
final _heresdkSearchCommonBindingslistofSdkSearchScheduledetailsIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_ScheduleDetails_iterator_increment'));
final _heresdkSearchCommonBindingslistofSdkSearchScheduledetailsIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_ScheduleDetails_iterator_get'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkSearchScheduledetailsToFfi(List<ScheduleDetails> value) {
  final _result = _heresdkSearchCommonBindingslistofSdkSearchScheduledetailsCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchScheduledetailsToFfi(element);
    _heresdkSearchCommonBindingslistofSdkSearchScheduledetailsInsert(_result, _elementHandle);
    sdkSearchScheduledetailsReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<ScheduleDetails> heresdkSearchCommonBindingslistofSdkSearchScheduledetailsFromFfi(Pointer<Void> handle) {
  final result = List<ScheduleDetails>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchCommonBindingslistofSdkSearchScheduledetailsIterator(handle);
  while (_heresdkSearchCommonBindingslistofSdkSearchScheduledetailsIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchCommonBindingslistofSdkSearchScheduledetailsIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchScheduledetailsFromFfi(_elementHandle));
    } finally {
      sdkSearchScheduledetailsReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchCommonBindingslistofSdkSearchScheduledetailsIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchCommonBindingslistofSdkSearchScheduledetailsIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkSearchScheduledetailsReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchCommonBindingslistofSdkSearchScheduledetailsReleaseHandle(handle);

final _heresdkSearchCommonBindingslistofSdkSearchScheduledetailsCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_ScheduleDetails_create_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkSearchScheduledetailsReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_ScheduleDetails_release_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkSearchScheduledetailsGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_ScheduleDetails_get_value_nullable'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkSearchScheduledetailsToFfiNullable(List<ScheduleDetails>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchCommonBindingslistofSdkSearchScheduledetailsToFfi(value);
  final result = _heresdkSearchCommonBindingslistofSdkSearchScheduledetailsCreateHandleNullable(_handle);
  heresdkSearchCommonBindingslistofSdkSearchScheduledetailsReleaseFfiHandle(_handle);
  return result;
}

List<ScheduleDetails>? heresdkSearchCommonBindingslistofSdkSearchScheduledetailsFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchCommonBindingslistofSdkSearchScheduledetailsGetValueNullable(handle);
  final result = heresdkSearchCommonBindingslistofSdkSearchScheduledetailsFromFfi(_handle);
  heresdkSearchCommonBindingslistofSdkSearchScheduledetailsReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkSearchScheduledetailsReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchCommonBindingslistofSdkSearchScheduledetailsReleaseHandleNullable(handle);

final _heresdkSearchCommonBindingslistofSdkSearchSuggestionCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_Suggestion_create_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchSuggestionReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_Suggestion_release_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchSuggestionInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_Suggestion_insert'));
final _heresdkSearchCommonBindingslistofSdkSearchSuggestionIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_Suggestion_iterator'));
final _heresdkSearchCommonBindingslistofSdkSearchSuggestionIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_Suggestion_iterator_release_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchSuggestionIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_Suggestion_iterator_is_valid'));
final _heresdkSearchCommonBindingslistofSdkSearchSuggestionIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_Suggestion_iterator_increment'));
final _heresdkSearchCommonBindingslistofSdkSearchSuggestionIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_Suggestion_iterator_get'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkSearchSuggestionToFfi(List<Suggestion> value) {
  final _result = _heresdkSearchCommonBindingslistofSdkSearchSuggestionCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchSuggestionToFfi(element);
    _heresdkSearchCommonBindingslistofSdkSearchSuggestionInsert(_result, _elementHandle);
    sdkSearchSuggestionReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Suggestion> heresdkSearchCommonBindingslistofSdkSearchSuggestionFromFfi(Pointer<Void> handle) {
  final result = List<Suggestion>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchCommonBindingslistofSdkSearchSuggestionIterator(handle);
  while (_heresdkSearchCommonBindingslistofSdkSearchSuggestionIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchCommonBindingslistofSdkSearchSuggestionIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchSuggestionFromFfi(_elementHandle));
    } finally {
      sdkSearchSuggestionReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchCommonBindingslistofSdkSearchSuggestionIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchCommonBindingslistofSdkSearchSuggestionIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkSearchSuggestionReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchCommonBindingslistofSdkSearchSuggestionReleaseHandle(handle);

final _heresdkSearchCommonBindingslistofSdkSearchSuggestionCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_Suggestion_create_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkSearchSuggestionReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_Suggestion_release_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkSearchSuggestionGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_Suggestion_get_value_nullable'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkSearchSuggestionToFfiNullable(List<Suggestion>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchCommonBindingslistofSdkSearchSuggestionToFfi(value);
  final result = _heresdkSearchCommonBindingslistofSdkSearchSuggestionCreateHandleNullable(_handle);
  heresdkSearchCommonBindingslistofSdkSearchSuggestionReleaseFfiHandle(_handle);
  return result;
}

List<Suggestion>? heresdkSearchCommonBindingslistofSdkSearchSuggestionFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchCommonBindingslistofSdkSearchSuggestionGetValueNullable(handle);
  final result = heresdkSearchCommonBindingslistofSdkSearchSuggestionFromFfi(_handle);
  heresdkSearchCommonBindingslistofSdkSearchSuggestionReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkSearchSuggestionReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchCommonBindingslistofSdkSearchSuggestionReleaseHandleNullable(handle);

final _heresdkSearchCommonBindingslistofSdkSearchSupplierreferenceCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_SupplierReference_create_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchSupplierreferenceReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_SupplierReference_release_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchSupplierreferenceInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_SupplierReference_insert'));
final _heresdkSearchCommonBindingslistofSdkSearchSupplierreferenceIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_SupplierReference_iterator'));
final _heresdkSearchCommonBindingslistofSdkSearchSupplierreferenceIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_SupplierReference_iterator_release_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchSupplierreferenceIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_SupplierReference_iterator_is_valid'));
final _heresdkSearchCommonBindingslistofSdkSearchSupplierreferenceIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_SupplierReference_iterator_increment'));
final _heresdkSearchCommonBindingslistofSdkSearchSupplierreferenceIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_SupplierReference_iterator_get'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkSearchSupplierreferenceToFfi(List<SupplierReference> value) {
  final _result = _heresdkSearchCommonBindingslistofSdkSearchSupplierreferenceCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchSupplierreferenceToFfi(element);
    _heresdkSearchCommonBindingslistofSdkSearchSupplierreferenceInsert(_result, _elementHandle);
    sdkSearchSupplierreferenceReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<SupplierReference> heresdkSearchCommonBindingslistofSdkSearchSupplierreferenceFromFfi(Pointer<Void> handle) {
  final result = List<SupplierReference>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchCommonBindingslistofSdkSearchSupplierreferenceIterator(handle);
  while (_heresdkSearchCommonBindingslistofSdkSearchSupplierreferenceIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchCommonBindingslistofSdkSearchSupplierreferenceIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchSupplierreferenceFromFfi(_elementHandle));
    } finally {
      sdkSearchSupplierreferenceReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchCommonBindingslistofSdkSearchSupplierreferenceIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchCommonBindingslistofSdkSearchSupplierreferenceIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkSearchSupplierreferenceReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchCommonBindingslistofSdkSearchSupplierreferenceReleaseHandle(handle);

final _heresdkSearchCommonBindingslistofSdkSearchSupplierreferenceCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_SupplierReference_create_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkSearchSupplierreferenceReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_SupplierReference_release_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkSearchSupplierreferenceGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_SupplierReference_get_value_nullable'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkSearchSupplierreferenceToFfiNullable(List<SupplierReference>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchCommonBindingslistofSdkSearchSupplierreferenceToFfi(value);
  final result = _heresdkSearchCommonBindingslistofSdkSearchSupplierreferenceCreateHandleNullable(_handle);
  heresdkSearchCommonBindingslistofSdkSearchSupplierreferenceReleaseFfiHandle(_handle);
  return result;
}

List<SupplierReference>? heresdkSearchCommonBindingslistofSdkSearchSupplierreferenceFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchCommonBindingslistofSdkSearchSupplierreferenceGetValueNullable(handle);
  final result = heresdkSearchCommonBindingslistofSdkSearchSupplierreferenceFromFfi(_handle);
  heresdkSearchCommonBindingslistofSdkSearchSupplierreferenceReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkSearchSupplierreferenceReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchCommonBindingslistofSdkSearchSupplierreferenceReleaseHandleNullable(handle);

final _heresdkSearchCommonBindingslistofSdkSearchWebeditorialCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_WebEditorial_create_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchWebeditorialReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_WebEditorial_release_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchWebeditorialInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_WebEditorial_insert'));
final _heresdkSearchCommonBindingslistofSdkSearchWebeditorialIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_WebEditorial_iterator'));
final _heresdkSearchCommonBindingslistofSdkSearchWebeditorialIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_WebEditorial_iterator_release_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchWebeditorialIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_WebEditorial_iterator_is_valid'));
final _heresdkSearchCommonBindingslistofSdkSearchWebeditorialIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_WebEditorial_iterator_increment'));
final _heresdkSearchCommonBindingslistofSdkSearchWebeditorialIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_WebEditorial_iterator_get'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkSearchWebeditorialToFfi(List<WebEditorial> value) {
  final _result = _heresdkSearchCommonBindingslistofSdkSearchWebeditorialCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchWebeditorialToFfi(element);
    _heresdkSearchCommonBindingslistofSdkSearchWebeditorialInsert(_result, _elementHandle);
    sdkSearchWebeditorialReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<WebEditorial> heresdkSearchCommonBindingslistofSdkSearchWebeditorialFromFfi(Pointer<Void> handle) {
  final result = List<WebEditorial>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchCommonBindingslistofSdkSearchWebeditorialIterator(handle);
  while (_heresdkSearchCommonBindingslistofSdkSearchWebeditorialIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchCommonBindingslistofSdkSearchWebeditorialIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchWebeditorialFromFfi(_elementHandle));
    } finally {
      sdkSearchWebeditorialReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchCommonBindingslistofSdkSearchWebeditorialIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchCommonBindingslistofSdkSearchWebeditorialIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkSearchWebeditorialReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchCommonBindingslistofSdkSearchWebeditorialReleaseHandle(handle);

final _heresdkSearchCommonBindingslistofSdkSearchWebeditorialCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_WebEditorial_create_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkSearchWebeditorialReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_WebEditorial_release_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkSearchWebeditorialGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_WebEditorial_get_value_nullable'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkSearchWebeditorialToFfiNullable(List<WebEditorial>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchCommonBindingslistofSdkSearchWebeditorialToFfi(value);
  final result = _heresdkSearchCommonBindingslistofSdkSearchWebeditorialCreateHandleNullable(_handle);
  heresdkSearchCommonBindingslistofSdkSearchWebeditorialReleaseFfiHandle(_handle);
  return result;
}

List<WebEditorial>? heresdkSearchCommonBindingslistofSdkSearchWebeditorialFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchCommonBindingslistofSdkSearchWebeditorialGetValueNullable(handle);
  final result = heresdkSearchCommonBindingslistofSdkSearchWebeditorialFromFfi(_handle);
  heresdkSearchCommonBindingslistofSdkSearchWebeditorialReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkSearchWebeditorialReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchCommonBindingslistofSdkSearchWebeditorialReleaseHandleNullable(handle);

final _heresdkSearchCommonBindingslistofSdkSearchWebimageCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_WebImage_create_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchWebimageReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_WebImage_release_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchWebimageInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_WebImage_insert'));
final _heresdkSearchCommonBindingslistofSdkSearchWebimageIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_WebImage_iterator'));
final _heresdkSearchCommonBindingslistofSdkSearchWebimageIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_WebImage_iterator_release_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchWebimageIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_WebImage_iterator_is_valid'));
final _heresdkSearchCommonBindingslistofSdkSearchWebimageIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_WebImage_iterator_increment'));
final _heresdkSearchCommonBindingslistofSdkSearchWebimageIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_WebImage_iterator_get'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkSearchWebimageToFfi(List<WebImage> value) {
  final _result = _heresdkSearchCommonBindingslistofSdkSearchWebimageCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchWebimageToFfi(element);
    _heresdkSearchCommonBindingslistofSdkSearchWebimageInsert(_result, _elementHandle);
    sdkSearchWebimageReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<WebImage> heresdkSearchCommonBindingslistofSdkSearchWebimageFromFfi(Pointer<Void> handle) {
  final result = List<WebImage>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchCommonBindingslistofSdkSearchWebimageIterator(handle);
  while (_heresdkSearchCommonBindingslistofSdkSearchWebimageIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchCommonBindingslistofSdkSearchWebimageIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchWebimageFromFfi(_elementHandle));
    } finally {
      sdkSearchWebimageReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchCommonBindingslistofSdkSearchWebimageIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchCommonBindingslistofSdkSearchWebimageIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkSearchWebimageReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchCommonBindingslistofSdkSearchWebimageReleaseHandle(handle);

final _heresdkSearchCommonBindingslistofSdkSearchWebimageCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_WebImage_create_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkSearchWebimageReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_WebImage_release_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkSearchWebimageGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_WebImage_get_value_nullable'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkSearchWebimageToFfiNullable(List<WebImage>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchCommonBindingslistofSdkSearchWebimageToFfi(value);
  final result = _heresdkSearchCommonBindingslistofSdkSearchWebimageCreateHandleNullable(_handle);
  heresdkSearchCommonBindingslistofSdkSearchWebimageReleaseFfiHandle(_handle);
  return result;
}

List<WebImage>? heresdkSearchCommonBindingslistofSdkSearchWebimageFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchCommonBindingslistofSdkSearchWebimageGetValueNullable(handle);
  final result = heresdkSearchCommonBindingslistofSdkSearchWebimageFromFfi(_handle);
  heresdkSearchCommonBindingslistofSdkSearchWebimageReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkSearchWebimageReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchCommonBindingslistofSdkSearchWebimageReleaseHandleNullable(handle);

final _heresdkSearchCommonBindingslistofSdkSearchWebratingCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_WebRating_create_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchWebratingReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_WebRating_release_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchWebratingInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_WebRating_insert'));
final _heresdkSearchCommonBindingslistofSdkSearchWebratingIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_WebRating_iterator'));
final _heresdkSearchCommonBindingslistofSdkSearchWebratingIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_WebRating_iterator_release_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchWebratingIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_WebRating_iterator_is_valid'));
final _heresdkSearchCommonBindingslistofSdkSearchWebratingIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_WebRating_iterator_increment'));
final _heresdkSearchCommonBindingslistofSdkSearchWebratingIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_WebRating_iterator_get'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkSearchWebratingToFfi(List<WebRating> value) {
  final _result = _heresdkSearchCommonBindingslistofSdkSearchWebratingCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchWebratingToFfi(element);
    _heresdkSearchCommonBindingslistofSdkSearchWebratingInsert(_result, _elementHandle);
    sdkSearchWebratingReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<WebRating> heresdkSearchCommonBindingslistofSdkSearchWebratingFromFfi(Pointer<Void> handle) {
  final result = List<WebRating>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchCommonBindingslistofSdkSearchWebratingIterator(handle);
  while (_heresdkSearchCommonBindingslistofSdkSearchWebratingIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchCommonBindingslistofSdkSearchWebratingIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchWebratingFromFfi(_elementHandle));
    } finally {
      sdkSearchWebratingReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchCommonBindingslistofSdkSearchWebratingIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchCommonBindingslistofSdkSearchWebratingIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkSearchWebratingReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchCommonBindingslistofSdkSearchWebratingReleaseHandle(handle);

final _heresdkSearchCommonBindingslistofSdkSearchWebratingCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_WebRating_create_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkSearchWebratingReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_WebRating_release_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkSearchWebratingGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_WebRating_get_value_nullable'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkSearchWebratingToFfiNullable(List<WebRating>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchCommonBindingslistofSdkSearchWebratingToFfi(value);
  final result = _heresdkSearchCommonBindingslistofSdkSearchWebratingCreateHandleNullable(_handle);
  heresdkSearchCommonBindingslistofSdkSearchWebratingReleaseFfiHandle(_handle);
  return result;
}

List<WebRating>? heresdkSearchCommonBindingslistofSdkSearchWebratingFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchCommonBindingslistofSdkSearchWebratingGetValueNullable(handle);
  final result = heresdkSearchCommonBindingslistofSdkSearchWebratingFromFfi(_handle);
  heresdkSearchCommonBindingslistofSdkSearchWebratingReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkSearchWebratingReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchCommonBindingslistofSdkSearchWebratingReleaseHandleNullable(handle);

final _heresdkSearchCommonBindingslistofSdkSearchWebsiteaddressCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_WebsiteAddress_create_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchWebsiteaddressReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_WebsiteAddress_release_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchWebsiteaddressInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_WebsiteAddress_insert'));
final _heresdkSearchCommonBindingslistofSdkSearchWebsiteaddressIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_WebsiteAddress_iterator'));
final _heresdkSearchCommonBindingslistofSdkSearchWebsiteaddressIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_WebsiteAddress_iterator_release_handle'));
final _heresdkSearchCommonBindingslistofSdkSearchWebsiteaddressIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_WebsiteAddress_iterator_is_valid'));
final _heresdkSearchCommonBindingslistofSdkSearchWebsiteaddressIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_WebsiteAddress_iterator_increment'));
final _heresdkSearchCommonBindingslistofSdkSearchWebsiteaddressIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_WebsiteAddress_iterator_get'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkSearchWebsiteaddressToFfi(List<WebsiteAddress> value) {
  final _result = _heresdkSearchCommonBindingslistofSdkSearchWebsiteaddressCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchWebsiteaddressToFfi(element);
    _heresdkSearchCommonBindingslistofSdkSearchWebsiteaddressInsert(_result, _elementHandle);
    sdkSearchWebsiteaddressReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<WebsiteAddress> heresdkSearchCommonBindingslistofSdkSearchWebsiteaddressFromFfi(Pointer<Void> handle) {
  final result = List<WebsiteAddress>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchCommonBindingslistofSdkSearchWebsiteaddressIterator(handle);
  while (_heresdkSearchCommonBindingslistofSdkSearchWebsiteaddressIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchCommonBindingslistofSdkSearchWebsiteaddressIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchWebsiteaddressFromFfi(_elementHandle));
    } finally {
      sdkSearchWebsiteaddressReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchCommonBindingslistofSdkSearchWebsiteaddressIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchCommonBindingslistofSdkSearchWebsiteaddressIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkSearchWebsiteaddressReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchCommonBindingslistofSdkSearchWebsiteaddressReleaseHandle(handle);

final _heresdkSearchCommonBindingslistofSdkSearchWebsiteaddressCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_WebsiteAddress_create_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkSearchWebsiteaddressReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_WebsiteAddress_release_handle_nullable'));
final _heresdkSearchCommonBindingslistofSdkSearchWebsiteaddressGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsListOf_sdk_search_WebsiteAddress_get_value_nullable'));

Pointer<Void> heresdkSearchCommonBindingslistofSdkSearchWebsiteaddressToFfiNullable(List<WebsiteAddress>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchCommonBindingslistofSdkSearchWebsiteaddressToFfi(value);
  final result = _heresdkSearchCommonBindingslistofSdkSearchWebsiteaddressCreateHandleNullable(_handle);
  heresdkSearchCommonBindingslistofSdkSearchWebsiteaddressReleaseFfiHandle(_handle);
  return result;
}

List<WebsiteAddress>? heresdkSearchCommonBindingslistofSdkSearchWebsiteaddressFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchCommonBindingslistofSdkSearchWebsiteaddressGetValueNullable(handle);
  final result = heresdkSearchCommonBindingslistofSdkSearchWebsiteaddressFromFfi(_handle);
  heresdkSearchCommonBindingslistofSdkSearchWebsiteaddressReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchCommonBindingslistofSdkSearchWebsiteaddressReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchCommonBindingslistofSdkSearchWebsiteaddressReleaseHandleNullable(handle);

final _heresdkSearchCommonBindingsmapofSdkCoreEngineEnginebaseurlToStringCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_common_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_create_handle'));
final _heresdkSearchCommonBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_release_handle'));
final _heresdkSearchCommonBindingsmapofSdkCoreEngineEnginebaseurlToStringPut = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32, Pointer<Void>),
    void Function(Pointer<Void>, int, Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_put'));
final _heresdkSearchCommonBindingsmapofSdkCoreEngineEnginebaseurlToStringIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_iterator'));
final _heresdkSearchCommonBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_iterator_release_handle'));
final _heresdkSearchCommonBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_iterator_is_valid'));
final _heresdkSearchCommonBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_iterator_increment'));
final _heresdkSearchCommonBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorGetKey = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_iterator_get_key'));
final _heresdkSearchCommonBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorGetValue = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_iterator_get_value'));

Pointer<Void> heresdkSearchCommonBindingsmapofSdkCoreEngineEnginebaseurlToStringToFfi(Map<EngineBaseURL, String> value) {
  final _result = _heresdkSearchCommonBindingsmapofSdkCoreEngineEnginebaseurlToStringCreateHandle();
  for (final entry in value.entries) {
    final _keyHandle = sdkCoreEngineEnginebaseurlToFfi(entry.key);
    final _valueHandle = stringToFfi(entry.value);
    _heresdkSearchCommonBindingsmapofSdkCoreEngineEnginebaseurlToStringPut(_result, _keyHandle, _valueHandle);
    sdkCoreEngineEnginebaseurlReleaseFfiHandle(_keyHandle);
    stringReleaseFfiHandle(_valueHandle);
  }
  return _result;
}

Map<EngineBaseURL, String> heresdkSearchCommonBindingsmapofSdkCoreEngineEnginebaseurlToStringFromFfi(Pointer<Void> handle) {
  final result = Map<EngineBaseURL, String>();
  final _iteratorHandle = _heresdkSearchCommonBindingsmapofSdkCoreEngineEnginebaseurlToStringIterator(handle);
  while (_heresdkSearchCommonBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _keyHandle = _heresdkSearchCommonBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorGetKey(_iteratorHandle);
    final _valueHandle = _heresdkSearchCommonBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorGetValue(_iteratorHandle);
    try {
      result[sdkCoreEngineEnginebaseurlFromFfi(_keyHandle)] =
        stringFromFfi(_valueHandle);
    } finally {
      sdkCoreEngineEnginebaseurlReleaseFfiHandle(_keyHandle);
      stringReleaseFfiHandle(_valueHandle);
    }
    _heresdkSearchCommonBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchCommonBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchCommonBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchCommonBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseHandle(handle);

final _heresdkSearchCommonBindingsmapofSdkCoreEngineEnginebaseurlToStringCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_create_handle_nullable'));
final _heresdkSearchCommonBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_release_handle_nullable'));
final _heresdkSearchCommonBindingsmapofSdkCoreEngineEnginebaseurlToStringGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_get_value_nullable'));

Pointer<Void> heresdkSearchCommonBindingsmapofSdkCoreEngineEnginebaseurlToStringToFfiNullable(Map<EngineBaseURL, String>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchCommonBindingsmapofSdkCoreEngineEnginebaseurlToStringToFfi(value);
  final result = _heresdkSearchCommonBindingsmapofSdkCoreEngineEnginebaseurlToStringCreateHandleNullable(_handle);
  heresdkSearchCommonBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseFfiHandle(_handle);
  return result;
}

Map<EngineBaseURL, String>? heresdkSearchCommonBindingsmapofSdkCoreEngineEnginebaseurlToStringFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchCommonBindingsmapofSdkCoreEngineEnginebaseurlToStringGetValueNullable(handle);
  final result = heresdkSearchCommonBindingsmapofSdkCoreEngineEnginebaseurlToStringFromFfi(_handle);
  heresdkSearchCommonBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchCommonBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchCommonBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseHandleNullable(handle);

final _heresdkSearchCommonBindingsmapofSdkSearchHighlighttypeToHeresdkSearchCommonBindingslistofSdkSearchIndexrangeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_common_bindingsMapOf_sdk_search_HighlightType_to_heresdk_search_common_bindingsListOf_sdk_search_IndexRange_create_handle'));
final _heresdkSearchCommonBindingsmapofSdkSearchHighlighttypeToHeresdkSearchCommonBindingslistofSdkSearchIndexrangeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsMapOf_sdk_search_HighlightType_to_heresdk_search_common_bindingsListOf_sdk_search_IndexRange_release_handle'));
final _heresdkSearchCommonBindingsmapofSdkSearchHighlighttypeToHeresdkSearchCommonBindingslistofSdkSearchIndexrangePut = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32, Pointer<Void>),
    void Function(Pointer<Void>, int, Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsMapOf_sdk_search_HighlightType_to_heresdk_search_common_bindingsListOf_sdk_search_IndexRange_put'));
final _heresdkSearchCommonBindingsmapofSdkSearchHighlighttypeToHeresdkSearchCommonBindingslistofSdkSearchIndexrangeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsMapOf_sdk_search_HighlightType_to_heresdk_search_common_bindingsListOf_sdk_search_IndexRange_iterator'));
final _heresdkSearchCommonBindingsmapofSdkSearchHighlighttypeToHeresdkSearchCommonBindingslistofSdkSearchIndexrangeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsMapOf_sdk_search_HighlightType_to_heresdk_search_common_bindingsListOf_sdk_search_IndexRange_iterator_release_handle'));
final _heresdkSearchCommonBindingsmapofSdkSearchHighlighttypeToHeresdkSearchCommonBindingslistofSdkSearchIndexrangeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsMapOf_sdk_search_HighlightType_to_heresdk_search_common_bindingsListOf_sdk_search_IndexRange_iterator_is_valid'));
final _heresdkSearchCommonBindingsmapofSdkSearchHighlighttypeToHeresdkSearchCommonBindingslistofSdkSearchIndexrangeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsMapOf_sdk_search_HighlightType_to_heresdk_search_common_bindingsListOf_sdk_search_IndexRange_iterator_increment'));
final _heresdkSearchCommonBindingsmapofSdkSearchHighlighttypeToHeresdkSearchCommonBindingslistofSdkSearchIndexrangeIteratorGetKey = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsMapOf_sdk_search_HighlightType_to_heresdk_search_common_bindingsListOf_sdk_search_IndexRange_iterator_get_key'));
final _heresdkSearchCommonBindingsmapofSdkSearchHighlighttypeToHeresdkSearchCommonBindingslistofSdkSearchIndexrangeIteratorGetValue = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindingsMapOf_sdk_search_HighlightType_to_heresdk_search_common_bindingsListOf_sdk_search_IndexRange_iterator_get_value'));

Pointer<Void> heresdkSearchCommonBindingsmapofSdkSearchHighlighttypeToHeresdkSearchCommonBindingslistofSdkSearchIndexrangeToFfi(Map<HighlightType, List<IndexRange>> value) {
  final _result = _heresdkSearchCommonBindingsmapofSdkSearchHighlighttypeToHeresdkSearchCommonBindingslistofSdkSearchIndexrangeCreateHandle();
  for (final entry in value.entries) {
    final _keyHandle = sdkSearchHighlighttypeToFfi(entry.key);
    final _valueHandle = heresdkSearchCommonBindingslistofSdkSearchIndexrangeToFfi(entry.value);
    _heresdkSearchCommonBindingsmapofSdkSearchHighlighttypeToHeresdkSearchCommonBindingslistofSdkSearchIndexrangePut(_result, _keyHandle, _valueHandle);
    sdkSearchHighlighttypeReleaseFfiHandle(_keyHandle);
    heresdkSearchCommonBindingslistofSdkSearchIndexrangeReleaseFfiHandle(_valueHandle);
  }
  return _result;
}

Map<HighlightType, List<IndexRange>> heresdkSearchCommonBindingsmapofSdkSearchHighlighttypeToHeresdkSearchCommonBindingslistofSdkSearchIndexrangeFromFfi(Pointer<Void> handle) {
  final result = Map<HighlightType, List<IndexRange>>();
  final _iteratorHandle = _heresdkSearchCommonBindingsmapofSdkSearchHighlighttypeToHeresdkSearchCommonBindingslistofSdkSearchIndexrangeIterator(handle);
  while (_heresdkSearchCommonBindingsmapofSdkSearchHighlighttypeToHeresdkSearchCommonBindingslistofSdkSearchIndexrangeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _keyHandle = _heresdkSearchCommonBindingsmapofSdkSearchHighlighttypeToHeresdkSearchCommonBindingslistofSdkSearchIndexrangeIteratorGetKey(_iteratorHandle);
    final _valueHandle = _heresdkSearchCommonBindingsmapofSdkSearchHighlighttypeToHeresdkSearchCommonBindingslistofSdkSearchIndexrangeIteratorGetValue(_iteratorHandle);
    try {
      result[sdkSearchHighlighttypeFromFfi(_keyHandle)] =
        heresdkSearchCommonBindingslistofSdkSearchIndexrangeFromFfi(_valueHandle);
    } finally {
      sdkSearchHighlighttypeReleaseFfiHandle(_keyHandle);
      heresdkSearchCommonBindingslistofSdkSearchIndexrangeReleaseFfiHandle(_valueHandle);
    }
    _heresdkSearchCommonBindingsmapofSdkSearchHighlighttypeToHeresdkSearchCommonBindingslistofSdkSearchIndexrangeIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchCommonBindingsmapofSdkSearchHighlighttypeToHeresdkSearchCommonBindingslistofSdkSearchIndexrangeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchCommonBindingsmapofSdkSearchHighlighttypeToHeresdkSearchCommonBindingslistofSdkSearchIndexrangeReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchCommonBindingsmapofSdkSearchHighlighttypeToHeresdkSearchCommonBindingslistofSdkSearchIndexrangeReleaseHandle(handle);

final _heresdkSearchCommonBindingsmapofSdkSearchHighlighttypeToHeresdkSearchCommonBindingslistofSdkSearchIndexrangeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsMapOf_sdk_search_HighlightType_to_heresdk_search_common_bindingsListOf_sdk_search_IndexRange_create_handle_nullable'));
final _heresdkSearchCommonBindingsmapofSdkSearchHighlighttypeToHeresdkSearchCommonBindingslistofSdkSearchIndexrangeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsMapOf_sdk_search_HighlightType_to_heresdk_search_common_bindingsListOf_sdk_search_IndexRange_release_handle_nullable'));
final _heresdkSearchCommonBindingsmapofSdkSearchHighlighttypeToHeresdkSearchCommonBindingslistofSdkSearchIndexrangeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindingsMapOf_sdk_search_HighlightType_to_heresdk_search_common_bindingsListOf_sdk_search_IndexRange_get_value_nullable'));

Pointer<Void> heresdkSearchCommonBindingsmapofSdkSearchHighlighttypeToHeresdkSearchCommonBindingslistofSdkSearchIndexrangeToFfiNullable(Map<HighlightType, List<IndexRange>>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchCommonBindingsmapofSdkSearchHighlighttypeToHeresdkSearchCommonBindingslistofSdkSearchIndexrangeToFfi(value);
  final result = _heresdkSearchCommonBindingsmapofSdkSearchHighlighttypeToHeresdkSearchCommonBindingslistofSdkSearchIndexrangeCreateHandleNullable(_handle);
  heresdkSearchCommonBindingsmapofSdkSearchHighlighttypeToHeresdkSearchCommonBindingslistofSdkSearchIndexrangeReleaseFfiHandle(_handle);
  return result;
}

Map<HighlightType, List<IndexRange>>? heresdkSearchCommonBindingsmapofSdkSearchHighlighttypeToHeresdkSearchCommonBindingslistofSdkSearchIndexrangeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchCommonBindingsmapofSdkSearchHighlighttypeToHeresdkSearchCommonBindingslistofSdkSearchIndexrangeGetValueNullable(handle);
  final result = heresdkSearchCommonBindingsmapofSdkSearchHighlighttypeToHeresdkSearchCommonBindingslistofSdkSearchIndexrangeFromFfi(_handle);
  heresdkSearchCommonBindingsmapofSdkSearchHighlighttypeToHeresdkSearchCommonBindingslistofSdkSearchIndexrangeReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchCommonBindingsmapofSdkSearchHighlighttypeToHeresdkSearchCommonBindingslistofSdkSearchIndexrangeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchCommonBindingsmapofSdkSearchHighlighttypeToHeresdkSearchCommonBindingslistofSdkSearchIndexrangeReleaseHandleNullable(handle);


// Copyright (c) 2018-2022 HERE Global B.V. and its affiliate(s).
// All rights reserved.
//
// This software and other materials contain proprietary information
// controlled by HERE and are protected by applicable copyright legislation.
// Any use and utilization of this software and other materials and
// disclosure to any third parties is conditional upon having a separate
// agreement with HERE for the access, use, utilization or disclosure of this
// software. In the absence of such agreement, the use of the software is not
// allowed.
//

































final _heresdkSearchOfflineBindingslistofLocaleCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_offline_bindingsListOf_Locale_create_handle'));
final _heresdkSearchOfflineBindingslistofLocaleReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_offline_bindingsListOf_Locale_release_handle'));
final _heresdkSearchOfflineBindingslistofLocaleInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_offline_bindingsListOf_Locale_insert'));
final _heresdkSearchOfflineBindingslistofLocaleIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_offline_bindingsListOf_Locale_iterator'));
final _heresdkSearchOfflineBindingslistofLocaleIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_offline_bindingsListOf_Locale_iterator_release_handle'));
final _heresdkSearchOfflineBindingslistofLocaleIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_offline_bindingsListOf_Locale_iterator_is_valid'));
final _heresdkSearchOfflineBindingslistofLocaleIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_offline_bindingsListOf_Locale_iterator_increment'));
final _heresdkSearchOfflineBindingslistofLocaleIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_offline_bindingsListOf_Locale_iterator_get'));

Pointer<Void> heresdkSearchOfflineBindingslistofLocaleToFfi(List<Locale> value) {
  final _result = _heresdkSearchOfflineBindingslistofLocaleCreateHandle();
  for (final element in value) {
    final _elementHandle = localeToFfi(element);
    _heresdkSearchOfflineBindingslistofLocaleInsert(_result, _elementHandle);
    localeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Locale> heresdkSearchOfflineBindingslistofLocaleFromFfi(Pointer<Void> handle) {
  final result = List<Locale>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchOfflineBindingslistofLocaleIterator(handle);
  while (_heresdkSearchOfflineBindingslistofLocaleIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchOfflineBindingslistofLocaleIteratorGet(_iteratorHandle);
    try {
      result.add(localeFromFfi(_elementHandle));
    } finally {
      localeReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchOfflineBindingslistofLocaleIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchOfflineBindingslistofLocaleIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchOfflineBindingslistofLocaleReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchOfflineBindingslistofLocaleReleaseHandle(handle);

final _heresdkSearchOfflineBindingslistofLocaleCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_offline_bindingsListOf_Locale_create_handle_nullable'));
final _heresdkSearchOfflineBindingslistofLocaleReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_offline_bindingsListOf_Locale_release_handle_nullable'));
final _heresdkSearchOfflineBindingslistofLocaleGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_offline_bindingsListOf_Locale_get_value_nullable'));

Pointer<Void> heresdkSearchOfflineBindingslistofLocaleToFfiNullable(List<Locale>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchOfflineBindingslistofLocaleToFfi(value);
  final result = _heresdkSearchOfflineBindingslistofLocaleCreateHandleNullable(_handle);
  heresdkSearchOfflineBindingslistofLocaleReleaseFfiHandle(_handle);
  return result;
}

List<Locale>? heresdkSearchOfflineBindingslistofLocaleFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchOfflineBindingslistofLocaleGetValueNullable(handle);
  final result = heresdkSearchOfflineBindingslistofLocaleFromFfi(_handle);
  heresdkSearchOfflineBindingslistofLocaleReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchOfflineBindingslistofLocaleReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchOfflineBindingslistofLocaleReleaseHandleNullable(handle);

final _heresdkSearchOfflineBindingslistofStringCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_offline_bindingsListOf_String_create_handle'));
final _heresdkSearchOfflineBindingslistofStringReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_offline_bindingsListOf_String_release_handle'));
final _heresdkSearchOfflineBindingslistofStringInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_offline_bindingsListOf_String_insert'));
final _heresdkSearchOfflineBindingslistofStringIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_offline_bindingsListOf_String_iterator'));
final _heresdkSearchOfflineBindingslistofStringIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_offline_bindingsListOf_String_iterator_release_handle'));
final _heresdkSearchOfflineBindingslistofStringIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_offline_bindingsListOf_String_iterator_is_valid'));
final _heresdkSearchOfflineBindingslistofStringIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_offline_bindingsListOf_String_iterator_increment'));
final _heresdkSearchOfflineBindingslistofStringIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_offline_bindingsListOf_String_iterator_get'));

Pointer<Void> heresdkSearchOfflineBindingslistofStringToFfi(List<String> value) {
  final _result = _heresdkSearchOfflineBindingslistofStringCreateHandle();
  for (final element in value) {
    final _elementHandle = stringToFfi(element);
    _heresdkSearchOfflineBindingslistofStringInsert(_result, _elementHandle);
    stringReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<String> heresdkSearchOfflineBindingslistofStringFromFfi(Pointer<Void> handle) {
  final result = List<String>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchOfflineBindingslistofStringIterator(handle);
  while (_heresdkSearchOfflineBindingslistofStringIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchOfflineBindingslistofStringIteratorGet(_iteratorHandle);
    try {
      result.add(stringFromFfi(_elementHandle));
    } finally {
      stringReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchOfflineBindingslistofStringIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchOfflineBindingslistofStringIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchOfflineBindingslistofStringReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchOfflineBindingslistofStringReleaseHandle(handle);

final _heresdkSearchOfflineBindingslistofStringCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_offline_bindingsListOf_String_create_handle_nullable'));
final _heresdkSearchOfflineBindingslistofStringReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_offline_bindingsListOf_String_release_handle_nullable'));
final _heresdkSearchOfflineBindingslistofStringGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_offline_bindingsListOf_String_get_value_nullable'));

Pointer<Void> heresdkSearchOfflineBindingslistofStringToFfiNullable(List<String>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchOfflineBindingslistofStringToFfi(value);
  final result = _heresdkSearchOfflineBindingslistofStringCreateHandleNullable(_handle);
  heresdkSearchOfflineBindingslistofStringReleaseFfiHandle(_handle);
  return result;
}

List<String>? heresdkSearchOfflineBindingslistofStringFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchOfflineBindingslistofStringGetValueNullable(handle);
  final result = heresdkSearchOfflineBindingslistofStringFromFfi(_handle);
  heresdkSearchOfflineBindingslistofStringReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchOfflineBindingslistofStringReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchOfflineBindingslistofStringReleaseHandleNullable(handle);

final _heresdkSearchOfflineBindingslistofSdkCoreCountrycodeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_offline_bindingsListOf_sdk_core_CountryCode_create_handle'));
final _heresdkSearchOfflineBindingslistofSdkCoreCountrycodeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_offline_bindingsListOf_sdk_core_CountryCode_release_handle'));
final _heresdkSearchOfflineBindingslistofSdkCoreCountrycodeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_search_offline_bindingsListOf_sdk_core_CountryCode_insert'));
final _heresdkSearchOfflineBindingslistofSdkCoreCountrycodeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_offline_bindingsListOf_sdk_core_CountryCode_iterator'));
final _heresdkSearchOfflineBindingslistofSdkCoreCountrycodeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_offline_bindingsListOf_sdk_core_CountryCode_iterator_release_handle'));
final _heresdkSearchOfflineBindingslistofSdkCoreCountrycodeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_offline_bindingsListOf_sdk_core_CountryCode_iterator_is_valid'));
final _heresdkSearchOfflineBindingslistofSdkCoreCountrycodeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_offline_bindingsListOf_sdk_core_CountryCode_iterator_increment'));
final _heresdkSearchOfflineBindingslistofSdkCoreCountrycodeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_search_offline_bindingsListOf_sdk_core_CountryCode_iterator_get'));

Pointer<Void> heresdkSearchOfflineBindingslistofSdkCoreCountrycodeToFfi(List<CountryCode> value) {
  final _result = _heresdkSearchOfflineBindingslistofSdkCoreCountrycodeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreCountrycodeToFfi(element);
    _heresdkSearchOfflineBindingslistofSdkCoreCountrycodeInsert(_result, _elementHandle);
    sdkCoreCountrycodeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<CountryCode> heresdkSearchOfflineBindingslistofSdkCoreCountrycodeFromFfi(Pointer<Void> handle) {
  final result = List<CountryCode>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchOfflineBindingslistofSdkCoreCountrycodeIterator(handle);
  while (_heresdkSearchOfflineBindingslistofSdkCoreCountrycodeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchOfflineBindingslistofSdkCoreCountrycodeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreCountrycodeFromFfi(_elementHandle));
    } finally {
      sdkCoreCountrycodeReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchOfflineBindingslistofSdkCoreCountrycodeIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchOfflineBindingslistofSdkCoreCountrycodeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchOfflineBindingslistofSdkCoreCountrycodeReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchOfflineBindingslistofSdkCoreCountrycodeReleaseHandle(handle);

final _heresdkSearchOfflineBindingslistofSdkCoreCountrycodeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_offline_bindingsListOf_sdk_core_CountryCode_create_handle_nullable'));
final _heresdkSearchOfflineBindingslistofSdkCoreCountrycodeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_offline_bindingsListOf_sdk_core_CountryCode_release_handle_nullable'));
final _heresdkSearchOfflineBindingslistofSdkCoreCountrycodeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_offline_bindingsListOf_sdk_core_CountryCode_get_value_nullable'));

Pointer<Void> heresdkSearchOfflineBindingslistofSdkCoreCountrycodeToFfiNullable(List<CountryCode>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchOfflineBindingslistofSdkCoreCountrycodeToFfi(value);
  final result = _heresdkSearchOfflineBindingslistofSdkCoreCountrycodeCreateHandleNullable(_handle);
  heresdkSearchOfflineBindingslistofSdkCoreCountrycodeReleaseFfiHandle(_handle);
  return result;
}

List<CountryCode>? heresdkSearchOfflineBindingslistofSdkCoreCountrycodeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchOfflineBindingslistofSdkCoreCountrycodeGetValueNullable(handle);
  final result = heresdkSearchOfflineBindingslistofSdkCoreCountrycodeFromFfi(_handle);
  heresdkSearchOfflineBindingslistofSdkCoreCountrycodeReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchOfflineBindingslistofSdkCoreCountrycodeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchOfflineBindingslistofSdkCoreCountrycodeReleaseHandleNullable(handle);

final _heresdkSearchOfflineBindingslistofSdkCoreExternalidCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_offline_bindingsListOf_sdk_core_ExternalID_create_handle'));
final _heresdkSearchOfflineBindingslistofSdkCoreExternalidReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_offline_bindingsListOf_sdk_core_ExternalID_release_handle'));
final _heresdkSearchOfflineBindingslistofSdkCoreExternalidInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_offline_bindingsListOf_sdk_core_ExternalID_insert'));
final _heresdkSearchOfflineBindingslistofSdkCoreExternalidIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_offline_bindingsListOf_sdk_core_ExternalID_iterator'));
final _heresdkSearchOfflineBindingslistofSdkCoreExternalidIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_offline_bindingsListOf_sdk_core_ExternalID_iterator_release_handle'));
final _heresdkSearchOfflineBindingslistofSdkCoreExternalidIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_offline_bindingsListOf_sdk_core_ExternalID_iterator_is_valid'));
final _heresdkSearchOfflineBindingslistofSdkCoreExternalidIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_offline_bindingsListOf_sdk_core_ExternalID_iterator_increment'));
final _heresdkSearchOfflineBindingslistofSdkCoreExternalidIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_offline_bindingsListOf_sdk_core_ExternalID_iterator_get'));

Pointer<Void> heresdkSearchOfflineBindingslistofSdkCoreExternalidToFfi(List<ExternalID> value) {
  final _result = _heresdkSearchOfflineBindingslistofSdkCoreExternalidCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreExternalidToFfi(element);
    _heresdkSearchOfflineBindingslistofSdkCoreExternalidInsert(_result, _elementHandle);
    sdkCoreExternalidReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<ExternalID> heresdkSearchOfflineBindingslistofSdkCoreExternalidFromFfi(Pointer<Void> handle) {
  final result = List<ExternalID>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchOfflineBindingslistofSdkCoreExternalidIterator(handle);
  while (_heresdkSearchOfflineBindingslistofSdkCoreExternalidIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchOfflineBindingslistofSdkCoreExternalidIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreExternalidFromFfi(_elementHandle));
    } finally {
      sdkCoreExternalidReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchOfflineBindingslistofSdkCoreExternalidIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchOfflineBindingslistofSdkCoreExternalidIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchOfflineBindingslistofSdkCoreExternalidReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchOfflineBindingslistofSdkCoreExternalidReleaseHandle(handle);

final _heresdkSearchOfflineBindingslistofSdkCoreExternalidCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_offline_bindingsListOf_sdk_core_ExternalID_create_handle_nullable'));
final _heresdkSearchOfflineBindingslistofSdkCoreExternalidReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_offline_bindingsListOf_sdk_core_ExternalID_release_handle_nullable'));
final _heresdkSearchOfflineBindingslistofSdkCoreExternalidGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_offline_bindingsListOf_sdk_core_ExternalID_get_value_nullable'));

Pointer<Void> heresdkSearchOfflineBindingslistofSdkCoreExternalidToFfiNullable(List<ExternalID>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchOfflineBindingslistofSdkCoreExternalidToFfi(value);
  final result = _heresdkSearchOfflineBindingslistofSdkCoreExternalidCreateHandleNullable(_handle);
  heresdkSearchOfflineBindingslistofSdkCoreExternalidReleaseFfiHandle(_handle);
  return result;
}

List<ExternalID>? heresdkSearchOfflineBindingslistofSdkCoreExternalidFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchOfflineBindingslistofSdkCoreExternalidGetValueNullable(handle);
  final result = heresdkSearchOfflineBindingslistofSdkCoreExternalidFromFfi(_handle);
  heresdkSearchOfflineBindingslistofSdkCoreExternalidReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchOfflineBindingslistofSdkCoreExternalidReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchOfflineBindingslistofSdkCoreExternalidReleaseHandleNullable(handle);

final _heresdkSearchOfflineBindingslistofSdkCoreGeocoordinatesCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_offline_bindingsListOf_sdk_core_GeoCoordinates_create_handle'));
final _heresdkSearchOfflineBindingslistofSdkCoreGeocoordinatesReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_offline_bindingsListOf_sdk_core_GeoCoordinates_release_handle'));
final _heresdkSearchOfflineBindingslistofSdkCoreGeocoordinatesInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_offline_bindingsListOf_sdk_core_GeoCoordinates_insert'));
final _heresdkSearchOfflineBindingslistofSdkCoreGeocoordinatesIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_offline_bindingsListOf_sdk_core_GeoCoordinates_iterator'));
final _heresdkSearchOfflineBindingslistofSdkCoreGeocoordinatesIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_offline_bindingsListOf_sdk_core_GeoCoordinates_iterator_release_handle'));
final _heresdkSearchOfflineBindingslistofSdkCoreGeocoordinatesIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_offline_bindingsListOf_sdk_core_GeoCoordinates_iterator_is_valid'));
final _heresdkSearchOfflineBindingslistofSdkCoreGeocoordinatesIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_offline_bindingsListOf_sdk_core_GeoCoordinates_iterator_increment'));
final _heresdkSearchOfflineBindingslistofSdkCoreGeocoordinatesIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_offline_bindingsListOf_sdk_core_GeoCoordinates_iterator_get'));

Pointer<Void> heresdkSearchOfflineBindingslistofSdkCoreGeocoordinatesToFfi(List<GeoCoordinates> value) {
  final _result = _heresdkSearchOfflineBindingslistofSdkCoreGeocoordinatesCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreGeocoordinatesToFfi(element);
    _heresdkSearchOfflineBindingslistofSdkCoreGeocoordinatesInsert(_result, _elementHandle);
    sdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoCoordinates> heresdkSearchOfflineBindingslistofSdkCoreGeocoordinatesFromFfi(Pointer<Void> handle) {
  final result = List<GeoCoordinates>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchOfflineBindingslistofSdkCoreGeocoordinatesIterator(handle);
  while (_heresdkSearchOfflineBindingslistofSdkCoreGeocoordinatesIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchOfflineBindingslistofSdkCoreGeocoordinatesIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreGeocoordinatesFromFfi(_elementHandle));
    } finally {
      sdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchOfflineBindingslistofSdkCoreGeocoordinatesIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchOfflineBindingslistofSdkCoreGeocoordinatesIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchOfflineBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchOfflineBindingslistofSdkCoreGeocoordinatesReleaseHandle(handle);

final _heresdkSearchOfflineBindingslistofSdkCoreGeocoordinatesCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_offline_bindingsListOf_sdk_core_GeoCoordinates_create_handle_nullable'));
final _heresdkSearchOfflineBindingslistofSdkCoreGeocoordinatesReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_offline_bindingsListOf_sdk_core_GeoCoordinates_release_handle_nullable'));
final _heresdkSearchOfflineBindingslistofSdkCoreGeocoordinatesGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_offline_bindingsListOf_sdk_core_GeoCoordinates_get_value_nullable'));

Pointer<Void> heresdkSearchOfflineBindingslistofSdkCoreGeocoordinatesToFfiNullable(List<GeoCoordinates>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchOfflineBindingslistofSdkCoreGeocoordinatesToFfi(value);
  final result = _heresdkSearchOfflineBindingslistofSdkCoreGeocoordinatesCreateHandleNullable(_handle);
  heresdkSearchOfflineBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

List<GeoCoordinates>? heresdkSearchOfflineBindingslistofSdkCoreGeocoordinatesFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchOfflineBindingslistofSdkCoreGeocoordinatesGetValueNullable(handle);
  final result = heresdkSearchOfflineBindingslistofSdkCoreGeocoordinatesFromFfi(_handle);
  heresdkSearchOfflineBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchOfflineBindingslistofSdkCoreGeocoordinatesReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchOfflineBindingslistofSdkCoreGeocoordinatesReleaseHandleNullable(handle);

final _heresdkSearchOfflineBindingslistofSdkCoreLocalizedtextCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_offline_bindingsListOf_sdk_core_LocalizedText_create_handle'));
final _heresdkSearchOfflineBindingslistofSdkCoreLocalizedtextReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_offline_bindingsListOf_sdk_core_LocalizedText_release_handle'));
final _heresdkSearchOfflineBindingslistofSdkCoreLocalizedtextInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_offline_bindingsListOf_sdk_core_LocalizedText_insert'));
final _heresdkSearchOfflineBindingslistofSdkCoreLocalizedtextIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_offline_bindingsListOf_sdk_core_LocalizedText_iterator'));
final _heresdkSearchOfflineBindingslistofSdkCoreLocalizedtextIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_offline_bindingsListOf_sdk_core_LocalizedText_iterator_release_handle'));
final _heresdkSearchOfflineBindingslistofSdkCoreLocalizedtextIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_offline_bindingsListOf_sdk_core_LocalizedText_iterator_is_valid'));
final _heresdkSearchOfflineBindingslistofSdkCoreLocalizedtextIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_offline_bindingsListOf_sdk_core_LocalizedText_iterator_increment'));
final _heresdkSearchOfflineBindingslistofSdkCoreLocalizedtextIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_offline_bindingsListOf_sdk_core_LocalizedText_iterator_get'));

Pointer<Void> heresdkSearchOfflineBindingslistofSdkCoreLocalizedtextToFfi(List<LocalizedText> value) {
  final _result = _heresdkSearchOfflineBindingslistofSdkCoreLocalizedtextCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreLocalizedtextToFfi(element);
    _heresdkSearchOfflineBindingslistofSdkCoreLocalizedtextInsert(_result, _elementHandle);
    sdkCoreLocalizedtextReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<LocalizedText> heresdkSearchOfflineBindingslistofSdkCoreLocalizedtextFromFfi(Pointer<Void> handle) {
  final result = List<LocalizedText>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchOfflineBindingslistofSdkCoreLocalizedtextIterator(handle);
  while (_heresdkSearchOfflineBindingslistofSdkCoreLocalizedtextIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchOfflineBindingslistofSdkCoreLocalizedtextIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreLocalizedtextFromFfi(_elementHandle));
    } finally {
      sdkCoreLocalizedtextReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchOfflineBindingslistofSdkCoreLocalizedtextIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchOfflineBindingslistofSdkCoreLocalizedtextIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchOfflineBindingslistofSdkCoreLocalizedtextReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchOfflineBindingslistofSdkCoreLocalizedtextReleaseHandle(handle);

final _heresdkSearchOfflineBindingslistofSdkCoreLocalizedtextCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_offline_bindingsListOf_sdk_core_LocalizedText_create_handle_nullable'));
final _heresdkSearchOfflineBindingslistofSdkCoreLocalizedtextReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_offline_bindingsListOf_sdk_core_LocalizedText_release_handle_nullable'));
final _heresdkSearchOfflineBindingslistofSdkCoreLocalizedtextGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_offline_bindingsListOf_sdk_core_LocalizedText_get_value_nullable'));

Pointer<Void> heresdkSearchOfflineBindingslistofSdkCoreLocalizedtextToFfiNullable(List<LocalizedText>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchOfflineBindingslistofSdkCoreLocalizedtextToFfi(value);
  final result = _heresdkSearchOfflineBindingslistofSdkCoreLocalizedtextCreateHandleNullable(_handle);
  heresdkSearchOfflineBindingslistofSdkCoreLocalizedtextReleaseFfiHandle(_handle);
  return result;
}

List<LocalizedText>? heresdkSearchOfflineBindingslistofSdkCoreLocalizedtextFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchOfflineBindingslistofSdkCoreLocalizedtextGetValueNullable(handle);
  final result = heresdkSearchOfflineBindingslistofSdkCoreLocalizedtextFromFfi(_handle);
  heresdkSearchOfflineBindingslistofSdkCoreLocalizedtextReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchOfflineBindingslistofSdkCoreLocalizedtextReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchOfflineBindingslistofSdkCoreLocalizedtextReleaseHandleNullable(handle);

final _heresdkSearchOfflineBindingslistofSdkCoreEngineLayerconfigurationFeatureCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_offline_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_create_handle'));
final _heresdkSearchOfflineBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_offline_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_release_handle'));
final _heresdkSearchOfflineBindingslistofSdkCoreEngineLayerconfigurationFeatureInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_search_offline_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_insert'));
final _heresdkSearchOfflineBindingslistofSdkCoreEngineLayerconfigurationFeatureIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_offline_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator'));
final _heresdkSearchOfflineBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_offline_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator_release_handle'));
final _heresdkSearchOfflineBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_offline_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator_is_valid'));
final _heresdkSearchOfflineBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_offline_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator_increment'));
final _heresdkSearchOfflineBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_search_offline_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator_get'));

Pointer<Void> heresdkSearchOfflineBindingslistofSdkCoreEngineLayerconfigurationFeatureToFfi(List<LayerConfigurationFeature> value) {
  final _result = _heresdkSearchOfflineBindingslistofSdkCoreEngineLayerconfigurationFeatureCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreEngineLayerconfigurationFeatureToFfi(element);
    _heresdkSearchOfflineBindingslistofSdkCoreEngineLayerconfigurationFeatureInsert(_result, _elementHandle);
    sdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<LayerConfigurationFeature> heresdkSearchOfflineBindingslistofSdkCoreEngineLayerconfigurationFeatureFromFfi(Pointer<Void> handle) {
  final result = List<LayerConfigurationFeature>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchOfflineBindingslistofSdkCoreEngineLayerconfigurationFeatureIterator(handle);
  while (_heresdkSearchOfflineBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchOfflineBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreEngineLayerconfigurationFeatureFromFfi(_elementHandle));
    } finally {
      sdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchOfflineBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchOfflineBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchOfflineBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchOfflineBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseHandle(handle);

final _heresdkSearchOfflineBindingslistofSdkCoreEngineLayerconfigurationFeatureCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_offline_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_create_handle_nullable'));
final _heresdkSearchOfflineBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_offline_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_release_handle_nullable'));
final _heresdkSearchOfflineBindingslistofSdkCoreEngineLayerconfigurationFeatureGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_offline_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_get_value_nullable'));

Pointer<Void> heresdkSearchOfflineBindingslistofSdkCoreEngineLayerconfigurationFeatureToFfiNullable(List<LayerConfigurationFeature>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchOfflineBindingslistofSdkCoreEngineLayerconfigurationFeatureToFfi(value);
  final result = _heresdkSearchOfflineBindingslistofSdkCoreEngineLayerconfigurationFeatureCreateHandleNullable(_handle);
  heresdkSearchOfflineBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(_handle);
  return result;
}

List<LayerConfigurationFeature>? heresdkSearchOfflineBindingslistofSdkCoreEngineLayerconfigurationFeatureFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchOfflineBindingslistofSdkCoreEngineLayerconfigurationFeatureGetValueNullable(handle);
  final result = heresdkSearchOfflineBindingslistofSdkCoreEngineLayerconfigurationFeatureFromFfi(_handle);
  heresdkSearchOfflineBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchOfflineBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchOfflineBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseHandleNullable(handle);

final _heresdkSearchOfflineBindingslistofSdkSearchContactCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_Contact_create_handle'));
final _heresdkSearchOfflineBindingslistofSdkSearchContactReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_Contact_release_handle'));
final _heresdkSearchOfflineBindingslistofSdkSearchContactInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_Contact_insert'));
final _heresdkSearchOfflineBindingslistofSdkSearchContactIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_Contact_iterator'));
final _heresdkSearchOfflineBindingslistofSdkSearchContactIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_Contact_iterator_release_handle'));
final _heresdkSearchOfflineBindingslistofSdkSearchContactIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_Contact_iterator_is_valid'));
final _heresdkSearchOfflineBindingslistofSdkSearchContactIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_Contact_iterator_increment'));
final _heresdkSearchOfflineBindingslistofSdkSearchContactIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_Contact_iterator_get'));

Pointer<Void> heresdkSearchOfflineBindingslistofSdkSearchContactToFfi(List<Contact> value) {
  final _result = _heresdkSearchOfflineBindingslistofSdkSearchContactCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchContactToFfi(element);
    _heresdkSearchOfflineBindingslistofSdkSearchContactInsert(_result, _elementHandle);
    sdkSearchContactReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Contact> heresdkSearchOfflineBindingslistofSdkSearchContactFromFfi(Pointer<Void> handle) {
  final result = List<Contact>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchOfflineBindingslistofSdkSearchContactIterator(handle);
  while (_heresdkSearchOfflineBindingslistofSdkSearchContactIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchOfflineBindingslistofSdkSearchContactIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchContactFromFfi(_elementHandle));
    } finally {
      sdkSearchContactReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchOfflineBindingslistofSdkSearchContactIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchOfflineBindingslistofSdkSearchContactIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchOfflineBindingslistofSdkSearchContactReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchOfflineBindingslistofSdkSearchContactReleaseHandle(handle);

final _heresdkSearchOfflineBindingslistofSdkSearchContactCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_Contact_create_handle_nullable'));
final _heresdkSearchOfflineBindingslistofSdkSearchContactReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_Contact_release_handle_nullable'));
final _heresdkSearchOfflineBindingslistofSdkSearchContactGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_Contact_get_value_nullable'));

Pointer<Void> heresdkSearchOfflineBindingslistofSdkSearchContactToFfiNullable(List<Contact>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchOfflineBindingslistofSdkSearchContactToFfi(value);
  final result = _heresdkSearchOfflineBindingslistofSdkSearchContactCreateHandleNullable(_handle);
  heresdkSearchOfflineBindingslistofSdkSearchContactReleaseFfiHandle(_handle);
  return result;
}

List<Contact>? heresdkSearchOfflineBindingslistofSdkSearchContactFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchOfflineBindingslistofSdkSearchContactGetValueNullable(handle);
  final result = heresdkSearchOfflineBindingslistofSdkSearchContactFromFfi(_handle);
  heresdkSearchOfflineBindingslistofSdkSearchContactReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchOfflineBindingslistofSdkSearchContactReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchOfflineBindingslistofSdkSearchContactReleaseHandleNullable(handle);

final _heresdkSearchOfflineBindingslistofSdkSearchEvchargingstationCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_EVChargingStation_create_handle'));
final _heresdkSearchOfflineBindingslistofSdkSearchEvchargingstationReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_EVChargingStation_release_handle'));
final _heresdkSearchOfflineBindingslistofSdkSearchEvchargingstationInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_EVChargingStation_insert'));
final _heresdkSearchOfflineBindingslistofSdkSearchEvchargingstationIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_EVChargingStation_iterator'));
final _heresdkSearchOfflineBindingslistofSdkSearchEvchargingstationIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_EVChargingStation_iterator_release_handle'));
final _heresdkSearchOfflineBindingslistofSdkSearchEvchargingstationIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_EVChargingStation_iterator_is_valid'));
final _heresdkSearchOfflineBindingslistofSdkSearchEvchargingstationIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_EVChargingStation_iterator_increment'));
final _heresdkSearchOfflineBindingslistofSdkSearchEvchargingstationIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_EVChargingStation_iterator_get'));

Pointer<Void> heresdkSearchOfflineBindingslistofSdkSearchEvchargingstationToFfi(List<EVChargingStation> value) {
  final _result = _heresdkSearchOfflineBindingslistofSdkSearchEvchargingstationCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchEvchargingstationToFfi(element);
    _heresdkSearchOfflineBindingslistofSdkSearchEvchargingstationInsert(_result, _elementHandle);
    sdkSearchEvchargingstationReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<EVChargingStation> heresdkSearchOfflineBindingslistofSdkSearchEvchargingstationFromFfi(Pointer<Void> handle) {
  final result = List<EVChargingStation>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchOfflineBindingslistofSdkSearchEvchargingstationIterator(handle);
  while (_heresdkSearchOfflineBindingslistofSdkSearchEvchargingstationIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchOfflineBindingslistofSdkSearchEvchargingstationIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchEvchargingstationFromFfi(_elementHandle));
    } finally {
      sdkSearchEvchargingstationReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchOfflineBindingslistofSdkSearchEvchargingstationIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchOfflineBindingslistofSdkSearchEvchargingstationIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchOfflineBindingslistofSdkSearchEvchargingstationReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchOfflineBindingslistofSdkSearchEvchargingstationReleaseHandle(handle);

final _heresdkSearchOfflineBindingslistofSdkSearchEvchargingstationCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_EVChargingStation_create_handle_nullable'));
final _heresdkSearchOfflineBindingslistofSdkSearchEvchargingstationReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_EVChargingStation_release_handle_nullable'));
final _heresdkSearchOfflineBindingslistofSdkSearchEvchargingstationGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_EVChargingStation_get_value_nullable'));

Pointer<Void> heresdkSearchOfflineBindingslistofSdkSearchEvchargingstationToFfiNullable(List<EVChargingStation>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchOfflineBindingslistofSdkSearchEvchargingstationToFfi(value);
  final result = _heresdkSearchOfflineBindingslistofSdkSearchEvchargingstationCreateHandleNullable(_handle);
  heresdkSearchOfflineBindingslistofSdkSearchEvchargingstationReleaseFfiHandle(_handle);
  return result;
}

List<EVChargingStation>? heresdkSearchOfflineBindingslistofSdkSearchEvchargingstationFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchOfflineBindingslistofSdkSearchEvchargingstationGetValueNullable(handle);
  final result = heresdkSearchOfflineBindingslistofSdkSearchEvchargingstationFromFfi(_handle);
  heresdkSearchOfflineBindingslistofSdkSearchEvchargingstationReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchOfflineBindingslistofSdkSearchEvchargingstationReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchOfflineBindingslistofSdkSearchEvchargingstationReleaseHandleNullable(handle);

final _heresdkSearchOfflineBindingslistofSdkSearchEmailaddressCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_EmailAddress_create_handle'));
final _heresdkSearchOfflineBindingslistofSdkSearchEmailaddressReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_EmailAddress_release_handle'));
final _heresdkSearchOfflineBindingslistofSdkSearchEmailaddressInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_EmailAddress_insert'));
final _heresdkSearchOfflineBindingslistofSdkSearchEmailaddressIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_EmailAddress_iterator'));
final _heresdkSearchOfflineBindingslistofSdkSearchEmailaddressIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_EmailAddress_iterator_release_handle'));
final _heresdkSearchOfflineBindingslistofSdkSearchEmailaddressIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_EmailAddress_iterator_is_valid'));
final _heresdkSearchOfflineBindingslistofSdkSearchEmailaddressIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_EmailAddress_iterator_increment'));
final _heresdkSearchOfflineBindingslistofSdkSearchEmailaddressIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_EmailAddress_iterator_get'));

Pointer<Void> heresdkSearchOfflineBindingslistofSdkSearchEmailaddressToFfi(List<EmailAddress> value) {
  final _result = _heresdkSearchOfflineBindingslistofSdkSearchEmailaddressCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchEmailaddressToFfi(element);
    _heresdkSearchOfflineBindingslistofSdkSearchEmailaddressInsert(_result, _elementHandle);
    sdkSearchEmailaddressReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<EmailAddress> heresdkSearchOfflineBindingslistofSdkSearchEmailaddressFromFfi(Pointer<Void> handle) {
  final result = List<EmailAddress>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchOfflineBindingslistofSdkSearchEmailaddressIterator(handle);
  while (_heresdkSearchOfflineBindingslistofSdkSearchEmailaddressIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchOfflineBindingslistofSdkSearchEmailaddressIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchEmailaddressFromFfi(_elementHandle));
    } finally {
      sdkSearchEmailaddressReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchOfflineBindingslistofSdkSearchEmailaddressIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchOfflineBindingslistofSdkSearchEmailaddressIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchOfflineBindingslistofSdkSearchEmailaddressReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchOfflineBindingslistofSdkSearchEmailaddressReleaseHandle(handle);

final _heresdkSearchOfflineBindingslistofSdkSearchEmailaddressCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_EmailAddress_create_handle_nullable'));
final _heresdkSearchOfflineBindingslistofSdkSearchEmailaddressReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_EmailAddress_release_handle_nullable'));
final _heresdkSearchOfflineBindingslistofSdkSearchEmailaddressGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_EmailAddress_get_value_nullable'));

Pointer<Void> heresdkSearchOfflineBindingslistofSdkSearchEmailaddressToFfiNullable(List<EmailAddress>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchOfflineBindingslistofSdkSearchEmailaddressToFfi(value);
  final result = _heresdkSearchOfflineBindingslistofSdkSearchEmailaddressCreateHandleNullable(_handle);
  heresdkSearchOfflineBindingslistofSdkSearchEmailaddressReleaseFfiHandle(_handle);
  return result;
}

List<EmailAddress>? heresdkSearchOfflineBindingslistofSdkSearchEmailaddressFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchOfflineBindingslistofSdkSearchEmailaddressGetValueNullable(handle);
  final result = heresdkSearchOfflineBindingslistofSdkSearchEmailaddressFromFfi(_handle);
  heresdkSearchOfflineBindingslistofSdkSearchEmailaddressReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchOfflineBindingslistofSdkSearchEmailaddressReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchOfflineBindingslistofSdkSearchEmailaddressReleaseHandleNullable(handle);

final _heresdkSearchOfflineBindingslistofSdkSearchEvconnectorexperimentalCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_EvConnectorExperimental_create_handle'));
final _heresdkSearchOfflineBindingslistofSdkSearchEvconnectorexperimentalReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_EvConnectorExperimental_release_handle'));
final _heresdkSearchOfflineBindingslistofSdkSearchEvconnectorexperimentalInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_EvConnectorExperimental_insert'));
final _heresdkSearchOfflineBindingslistofSdkSearchEvconnectorexperimentalIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_EvConnectorExperimental_iterator'));
final _heresdkSearchOfflineBindingslistofSdkSearchEvconnectorexperimentalIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_EvConnectorExperimental_iterator_release_handle'));
final _heresdkSearchOfflineBindingslistofSdkSearchEvconnectorexperimentalIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_EvConnectorExperimental_iterator_is_valid'));
final _heresdkSearchOfflineBindingslistofSdkSearchEvconnectorexperimentalIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_EvConnectorExperimental_iterator_increment'));
final _heresdkSearchOfflineBindingslistofSdkSearchEvconnectorexperimentalIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_EvConnectorExperimental_iterator_get'));

Pointer<Void> heresdkSearchOfflineBindingslistofSdkSearchEvconnectorexperimentalToFfi(List<EvConnectorExperimental> value) {
  final _result = _heresdkSearchOfflineBindingslistofSdkSearchEvconnectorexperimentalCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchEvconnectorexperimentalToFfi(element);
    _heresdkSearchOfflineBindingslistofSdkSearchEvconnectorexperimentalInsert(_result, _elementHandle);
    sdkSearchEvconnectorexperimentalReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<EvConnectorExperimental> heresdkSearchOfflineBindingslistofSdkSearchEvconnectorexperimentalFromFfi(Pointer<Void> handle) {
  final result = List<EvConnectorExperimental>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchOfflineBindingslistofSdkSearchEvconnectorexperimentalIterator(handle);
  while (_heresdkSearchOfflineBindingslistofSdkSearchEvconnectorexperimentalIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchOfflineBindingslistofSdkSearchEvconnectorexperimentalIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchEvconnectorexperimentalFromFfi(_elementHandle));
    } finally {
      sdkSearchEvconnectorexperimentalReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchOfflineBindingslistofSdkSearchEvconnectorexperimentalIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchOfflineBindingslistofSdkSearchEvconnectorexperimentalIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchOfflineBindingslistofSdkSearchEvconnectorexperimentalReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchOfflineBindingslistofSdkSearchEvconnectorexperimentalReleaseHandle(handle);

final _heresdkSearchOfflineBindingslistofSdkSearchEvconnectorexperimentalCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_EvConnectorExperimental_create_handle_nullable'));
final _heresdkSearchOfflineBindingslistofSdkSearchEvconnectorexperimentalReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_EvConnectorExperimental_release_handle_nullable'));
final _heresdkSearchOfflineBindingslistofSdkSearchEvconnectorexperimentalGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_EvConnectorExperimental_get_value_nullable'));

Pointer<Void> heresdkSearchOfflineBindingslistofSdkSearchEvconnectorexperimentalToFfiNullable(List<EvConnectorExperimental>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchOfflineBindingslistofSdkSearchEvconnectorexperimentalToFfi(value);
  final result = _heresdkSearchOfflineBindingslistofSdkSearchEvconnectorexperimentalCreateHandleNullable(_handle);
  heresdkSearchOfflineBindingslistofSdkSearchEvconnectorexperimentalReleaseFfiHandle(_handle);
  return result;
}

List<EvConnectorExperimental>? heresdkSearchOfflineBindingslistofSdkSearchEvconnectorexperimentalFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchOfflineBindingslistofSdkSearchEvconnectorexperimentalGetValueNullable(handle);
  final result = heresdkSearchOfflineBindingslistofSdkSearchEvconnectorexperimentalFromFfi(_handle);
  heresdkSearchOfflineBindingslistofSdkSearchEvconnectorexperimentalReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchOfflineBindingslistofSdkSearchEvconnectorexperimentalReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchOfflineBindingslistofSdkSearchEvconnectorexperimentalReleaseHandleNullable(handle);

final _heresdkSearchOfflineBindingslistofSdkSearchGeoplaceCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_GeoPlace_create_handle'));
final _heresdkSearchOfflineBindingslistofSdkSearchGeoplaceReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_GeoPlace_release_handle'));
final _heresdkSearchOfflineBindingslistofSdkSearchGeoplaceInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_GeoPlace_insert'));
final _heresdkSearchOfflineBindingslistofSdkSearchGeoplaceIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_GeoPlace_iterator'));
final _heresdkSearchOfflineBindingslistofSdkSearchGeoplaceIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_GeoPlace_iterator_release_handle'));
final _heresdkSearchOfflineBindingslistofSdkSearchGeoplaceIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_GeoPlace_iterator_is_valid'));
final _heresdkSearchOfflineBindingslistofSdkSearchGeoplaceIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_GeoPlace_iterator_increment'));
final _heresdkSearchOfflineBindingslistofSdkSearchGeoplaceIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_GeoPlace_iterator_get'));

Pointer<Void> heresdkSearchOfflineBindingslistofSdkSearchGeoplaceToFfi(List<GeoPlace> value) {
  final _result = _heresdkSearchOfflineBindingslistofSdkSearchGeoplaceCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchGeoplaceToFfi(element);
    _heresdkSearchOfflineBindingslistofSdkSearchGeoplaceInsert(_result, _elementHandle);
    sdkSearchGeoplaceReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoPlace> heresdkSearchOfflineBindingslistofSdkSearchGeoplaceFromFfi(Pointer<Void> handle) {
  final result = List<GeoPlace>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchOfflineBindingslistofSdkSearchGeoplaceIterator(handle);
  while (_heresdkSearchOfflineBindingslistofSdkSearchGeoplaceIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchOfflineBindingslistofSdkSearchGeoplaceIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchGeoplaceFromFfi(_elementHandle));
    } finally {
      sdkSearchGeoplaceReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchOfflineBindingslistofSdkSearchGeoplaceIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchOfflineBindingslistofSdkSearchGeoplaceIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchOfflineBindingslistofSdkSearchGeoplaceReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchOfflineBindingslistofSdkSearchGeoplaceReleaseHandle(handle);

final _heresdkSearchOfflineBindingslistofSdkSearchGeoplaceCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_GeoPlace_create_handle_nullable'));
final _heresdkSearchOfflineBindingslistofSdkSearchGeoplaceReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_GeoPlace_release_handle_nullable'));
final _heresdkSearchOfflineBindingslistofSdkSearchGeoplaceGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_GeoPlace_get_value_nullable'));

Pointer<Void> heresdkSearchOfflineBindingslistofSdkSearchGeoplaceToFfiNullable(List<GeoPlace>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchOfflineBindingslistofSdkSearchGeoplaceToFfi(value);
  final result = _heresdkSearchOfflineBindingslistofSdkSearchGeoplaceCreateHandleNullable(_handle);
  heresdkSearchOfflineBindingslistofSdkSearchGeoplaceReleaseFfiHandle(_handle);
  return result;
}

List<GeoPlace>? heresdkSearchOfflineBindingslistofSdkSearchGeoplaceFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchOfflineBindingslistofSdkSearchGeoplaceGetValueNullable(handle);
  final result = heresdkSearchOfflineBindingslistofSdkSearchGeoplaceFromFfi(_handle);
  heresdkSearchOfflineBindingslistofSdkSearchGeoplaceReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchOfflineBindingslistofSdkSearchGeoplaceReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchOfflineBindingslistofSdkSearchGeoplaceReleaseHandleNullable(handle);

final _heresdkSearchOfflineBindingslistofSdkSearchIndexrangeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_IndexRange_create_handle'));
final _heresdkSearchOfflineBindingslistofSdkSearchIndexrangeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_IndexRange_release_handle'));
final _heresdkSearchOfflineBindingslistofSdkSearchIndexrangeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_IndexRange_insert'));
final _heresdkSearchOfflineBindingslistofSdkSearchIndexrangeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_IndexRange_iterator'));
final _heresdkSearchOfflineBindingslistofSdkSearchIndexrangeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_IndexRange_iterator_release_handle'));
final _heresdkSearchOfflineBindingslistofSdkSearchIndexrangeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_IndexRange_iterator_is_valid'));
final _heresdkSearchOfflineBindingslistofSdkSearchIndexrangeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_IndexRange_iterator_increment'));
final _heresdkSearchOfflineBindingslistofSdkSearchIndexrangeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_IndexRange_iterator_get'));

Pointer<Void> heresdkSearchOfflineBindingslistofSdkSearchIndexrangeToFfi(List<IndexRange> value) {
  final _result = _heresdkSearchOfflineBindingslistofSdkSearchIndexrangeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchIndexrangeToFfi(element);
    _heresdkSearchOfflineBindingslistofSdkSearchIndexrangeInsert(_result, _elementHandle);
    sdkSearchIndexrangeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<IndexRange> heresdkSearchOfflineBindingslistofSdkSearchIndexrangeFromFfi(Pointer<Void> handle) {
  final result = List<IndexRange>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchOfflineBindingslistofSdkSearchIndexrangeIterator(handle);
  while (_heresdkSearchOfflineBindingslistofSdkSearchIndexrangeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchOfflineBindingslistofSdkSearchIndexrangeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchIndexrangeFromFfi(_elementHandle));
    } finally {
      sdkSearchIndexrangeReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchOfflineBindingslistofSdkSearchIndexrangeIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchOfflineBindingslistofSdkSearchIndexrangeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchOfflineBindingslistofSdkSearchIndexrangeReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchOfflineBindingslistofSdkSearchIndexrangeReleaseHandle(handle);

final _heresdkSearchOfflineBindingslistofSdkSearchIndexrangeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_IndexRange_create_handle_nullable'));
final _heresdkSearchOfflineBindingslistofSdkSearchIndexrangeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_IndexRange_release_handle_nullable'));
final _heresdkSearchOfflineBindingslistofSdkSearchIndexrangeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_IndexRange_get_value_nullable'));

Pointer<Void> heresdkSearchOfflineBindingslistofSdkSearchIndexrangeToFfiNullable(List<IndexRange>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchOfflineBindingslistofSdkSearchIndexrangeToFfi(value);
  final result = _heresdkSearchOfflineBindingslistofSdkSearchIndexrangeCreateHandleNullable(_handle);
  heresdkSearchOfflineBindingslistofSdkSearchIndexrangeReleaseFfiHandle(_handle);
  return result;
}

List<IndexRange>? heresdkSearchOfflineBindingslistofSdkSearchIndexrangeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchOfflineBindingslistofSdkSearchIndexrangeGetValueNullable(handle);
  final result = heresdkSearchOfflineBindingslistofSdkSearchIndexrangeFromFfi(_handle);
  heresdkSearchOfflineBindingslistofSdkSearchIndexrangeReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchOfflineBindingslistofSdkSearchIndexrangeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchOfflineBindingslistofSdkSearchIndexrangeReleaseHandleNullable(handle);

final _heresdkSearchOfflineBindingslistofSdkSearchLandlinephoneCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_LandlinePhone_create_handle'));
final _heresdkSearchOfflineBindingslistofSdkSearchLandlinephoneReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_LandlinePhone_release_handle'));
final _heresdkSearchOfflineBindingslistofSdkSearchLandlinephoneInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_LandlinePhone_insert'));
final _heresdkSearchOfflineBindingslistofSdkSearchLandlinephoneIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_LandlinePhone_iterator'));
final _heresdkSearchOfflineBindingslistofSdkSearchLandlinephoneIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_LandlinePhone_iterator_release_handle'));
final _heresdkSearchOfflineBindingslistofSdkSearchLandlinephoneIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_LandlinePhone_iterator_is_valid'));
final _heresdkSearchOfflineBindingslistofSdkSearchLandlinephoneIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_LandlinePhone_iterator_increment'));
final _heresdkSearchOfflineBindingslistofSdkSearchLandlinephoneIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_LandlinePhone_iterator_get'));

Pointer<Void> heresdkSearchOfflineBindingslistofSdkSearchLandlinephoneToFfi(List<LandlinePhone> value) {
  final _result = _heresdkSearchOfflineBindingslistofSdkSearchLandlinephoneCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchLandlinephoneToFfi(element);
    _heresdkSearchOfflineBindingslistofSdkSearchLandlinephoneInsert(_result, _elementHandle);
    sdkSearchLandlinephoneReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<LandlinePhone> heresdkSearchOfflineBindingslistofSdkSearchLandlinephoneFromFfi(Pointer<Void> handle) {
  final result = List<LandlinePhone>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchOfflineBindingslistofSdkSearchLandlinephoneIterator(handle);
  while (_heresdkSearchOfflineBindingslistofSdkSearchLandlinephoneIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchOfflineBindingslistofSdkSearchLandlinephoneIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchLandlinephoneFromFfi(_elementHandle));
    } finally {
      sdkSearchLandlinephoneReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchOfflineBindingslistofSdkSearchLandlinephoneIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchOfflineBindingslistofSdkSearchLandlinephoneIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchOfflineBindingslistofSdkSearchLandlinephoneReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchOfflineBindingslistofSdkSearchLandlinephoneReleaseHandle(handle);

final _heresdkSearchOfflineBindingslistofSdkSearchLandlinephoneCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_LandlinePhone_create_handle_nullable'));
final _heresdkSearchOfflineBindingslistofSdkSearchLandlinephoneReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_LandlinePhone_release_handle_nullable'));
final _heresdkSearchOfflineBindingslistofSdkSearchLandlinephoneGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_LandlinePhone_get_value_nullable'));

Pointer<Void> heresdkSearchOfflineBindingslistofSdkSearchLandlinephoneToFfiNullable(List<LandlinePhone>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchOfflineBindingslistofSdkSearchLandlinephoneToFfi(value);
  final result = _heresdkSearchOfflineBindingslistofSdkSearchLandlinephoneCreateHandleNullable(_handle);
  heresdkSearchOfflineBindingslistofSdkSearchLandlinephoneReleaseFfiHandle(_handle);
  return result;
}

List<LandlinePhone>? heresdkSearchOfflineBindingslistofSdkSearchLandlinephoneFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchOfflineBindingslistofSdkSearchLandlinephoneGetValueNullable(handle);
  final result = heresdkSearchOfflineBindingslistofSdkSearchLandlinephoneFromFfi(_handle);
  heresdkSearchOfflineBindingslistofSdkSearchLandlinephoneReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchOfflineBindingslistofSdkSearchLandlinephoneReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchOfflineBindingslistofSdkSearchLandlinephoneReleaseHandleNullable(handle);

final _heresdkSearchOfflineBindingslistofSdkSearchMobilephoneCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_MobilePhone_create_handle'));
final _heresdkSearchOfflineBindingslistofSdkSearchMobilephoneReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_MobilePhone_release_handle'));
final _heresdkSearchOfflineBindingslistofSdkSearchMobilephoneInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_MobilePhone_insert'));
final _heresdkSearchOfflineBindingslistofSdkSearchMobilephoneIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_MobilePhone_iterator'));
final _heresdkSearchOfflineBindingslistofSdkSearchMobilephoneIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_MobilePhone_iterator_release_handle'));
final _heresdkSearchOfflineBindingslistofSdkSearchMobilephoneIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_MobilePhone_iterator_is_valid'));
final _heresdkSearchOfflineBindingslistofSdkSearchMobilephoneIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_MobilePhone_iterator_increment'));
final _heresdkSearchOfflineBindingslistofSdkSearchMobilephoneIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_MobilePhone_iterator_get'));

Pointer<Void> heresdkSearchOfflineBindingslistofSdkSearchMobilephoneToFfi(List<MobilePhone> value) {
  final _result = _heresdkSearchOfflineBindingslistofSdkSearchMobilephoneCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchMobilephoneToFfi(element);
    _heresdkSearchOfflineBindingslistofSdkSearchMobilephoneInsert(_result, _elementHandle);
    sdkSearchMobilephoneReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<MobilePhone> heresdkSearchOfflineBindingslistofSdkSearchMobilephoneFromFfi(Pointer<Void> handle) {
  final result = List<MobilePhone>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchOfflineBindingslistofSdkSearchMobilephoneIterator(handle);
  while (_heresdkSearchOfflineBindingslistofSdkSearchMobilephoneIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchOfflineBindingslistofSdkSearchMobilephoneIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchMobilephoneFromFfi(_elementHandle));
    } finally {
      sdkSearchMobilephoneReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchOfflineBindingslistofSdkSearchMobilephoneIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchOfflineBindingslistofSdkSearchMobilephoneIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchOfflineBindingslistofSdkSearchMobilephoneReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchOfflineBindingslistofSdkSearchMobilephoneReleaseHandle(handle);

final _heresdkSearchOfflineBindingslistofSdkSearchMobilephoneCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_MobilePhone_create_handle_nullable'));
final _heresdkSearchOfflineBindingslistofSdkSearchMobilephoneReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_MobilePhone_release_handle_nullable'));
final _heresdkSearchOfflineBindingslistofSdkSearchMobilephoneGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_MobilePhone_get_value_nullable'));

Pointer<Void> heresdkSearchOfflineBindingslistofSdkSearchMobilephoneToFfiNullable(List<MobilePhone>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchOfflineBindingslistofSdkSearchMobilephoneToFfi(value);
  final result = _heresdkSearchOfflineBindingslistofSdkSearchMobilephoneCreateHandleNullable(_handle);
  heresdkSearchOfflineBindingslistofSdkSearchMobilephoneReleaseFfiHandle(_handle);
  return result;
}

List<MobilePhone>? heresdkSearchOfflineBindingslistofSdkSearchMobilephoneFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchOfflineBindingslistofSdkSearchMobilephoneGetValueNullable(handle);
  final result = heresdkSearchOfflineBindingslistofSdkSearchMobilephoneFromFfi(_handle);
  heresdkSearchOfflineBindingslistofSdkSearchMobilephoneReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchOfflineBindingslistofSdkSearchMobilephoneReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchOfflineBindingslistofSdkSearchMobilephoneReleaseHandleNullable(handle);

final _heresdkSearchOfflineBindingslistofSdkSearchOpeninghoursCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_OpeningHours_create_handle'));
final _heresdkSearchOfflineBindingslistofSdkSearchOpeninghoursReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_OpeningHours_release_handle'));
final _heresdkSearchOfflineBindingslistofSdkSearchOpeninghoursInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_OpeningHours_insert'));
final _heresdkSearchOfflineBindingslistofSdkSearchOpeninghoursIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_OpeningHours_iterator'));
final _heresdkSearchOfflineBindingslistofSdkSearchOpeninghoursIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_OpeningHours_iterator_release_handle'));
final _heresdkSearchOfflineBindingslistofSdkSearchOpeninghoursIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_OpeningHours_iterator_is_valid'));
final _heresdkSearchOfflineBindingslistofSdkSearchOpeninghoursIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_OpeningHours_iterator_increment'));
final _heresdkSearchOfflineBindingslistofSdkSearchOpeninghoursIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_OpeningHours_iterator_get'));

Pointer<Void> heresdkSearchOfflineBindingslistofSdkSearchOpeninghoursToFfi(List<OpeningHours> value) {
  final _result = _heresdkSearchOfflineBindingslistofSdkSearchOpeninghoursCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchOpeninghoursToFfi(element);
    _heresdkSearchOfflineBindingslistofSdkSearchOpeninghoursInsert(_result, _elementHandle);
    sdkSearchOpeninghoursReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<OpeningHours> heresdkSearchOfflineBindingslistofSdkSearchOpeninghoursFromFfi(Pointer<Void> handle) {
  final result = List<OpeningHours>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchOfflineBindingslistofSdkSearchOpeninghoursIterator(handle);
  while (_heresdkSearchOfflineBindingslistofSdkSearchOpeninghoursIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchOfflineBindingslistofSdkSearchOpeninghoursIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchOpeninghoursFromFfi(_elementHandle));
    } finally {
      sdkSearchOpeninghoursReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchOfflineBindingslistofSdkSearchOpeninghoursIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchOfflineBindingslistofSdkSearchOpeninghoursIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchOfflineBindingslistofSdkSearchOpeninghoursReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchOfflineBindingslistofSdkSearchOpeninghoursReleaseHandle(handle);

final _heresdkSearchOfflineBindingslistofSdkSearchOpeninghoursCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_OpeningHours_create_handle_nullable'));
final _heresdkSearchOfflineBindingslistofSdkSearchOpeninghoursReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_OpeningHours_release_handle_nullable'));
final _heresdkSearchOfflineBindingslistofSdkSearchOpeninghoursGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_OpeningHours_get_value_nullable'));

Pointer<Void> heresdkSearchOfflineBindingslistofSdkSearchOpeninghoursToFfiNullable(List<OpeningHours>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchOfflineBindingslistofSdkSearchOpeninghoursToFfi(value);
  final result = _heresdkSearchOfflineBindingslistofSdkSearchOpeninghoursCreateHandleNullable(_handle);
  heresdkSearchOfflineBindingslistofSdkSearchOpeninghoursReleaseFfiHandle(_handle);
  return result;
}

List<OpeningHours>? heresdkSearchOfflineBindingslistofSdkSearchOpeninghoursFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchOfflineBindingslistofSdkSearchOpeninghoursGetValueNullable(handle);
  final result = heresdkSearchOfflineBindingslistofSdkSearchOpeninghoursFromFfi(_handle);
  heresdkSearchOfflineBindingslistofSdkSearchOpeninghoursReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchOfflineBindingslistofSdkSearchOpeninghoursReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchOfflineBindingslistofSdkSearchOpeninghoursReleaseHandleNullable(handle);

final _heresdkSearchOfflineBindingslistofSdkSearchPlaceCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_Place_create_handle'));
final _heresdkSearchOfflineBindingslistofSdkSearchPlaceReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_Place_release_handle'));
final _heresdkSearchOfflineBindingslistofSdkSearchPlaceInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_Place_insert'));
final _heresdkSearchOfflineBindingslistofSdkSearchPlaceIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_Place_iterator'));
final _heresdkSearchOfflineBindingslistofSdkSearchPlaceIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_Place_iterator_release_handle'));
final _heresdkSearchOfflineBindingslistofSdkSearchPlaceIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_Place_iterator_is_valid'));
final _heresdkSearchOfflineBindingslistofSdkSearchPlaceIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_Place_iterator_increment'));
final _heresdkSearchOfflineBindingslistofSdkSearchPlaceIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_Place_iterator_get'));

Pointer<Void> heresdkSearchOfflineBindingslistofSdkSearchPlaceToFfi(List<Place> value) {
  final _result = _heresdkSearchOfflineBindingslistofSdkSearchPlaceCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchPlaceToFfi(element);
    _heresdkSearchOfflineBindingslistofSdkSearchPlaceInsert(_result, _elementHandle);
    sdkSearchPlaceReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Place> heresdkSearchOfflineBindingslistofSdkSearchPlaceFromFfi(Pointer<Void> handle) {
  final result = List<Place>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchOfflineBindingslistofSdkSearchPlaceIterator(handle);
  while (_heresdkSearchOfflineBindingslistofSdkSearchPlaceIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchOfflineBindingslistofSdkSearchPlaceIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchPlaceFromFfi(_elementHandle));
    } finally {
      sdkSearchPlaceReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchOfflineBindingslistofSdkSearchPlaceIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchOfflineBindingslistofSdkSearchPlaceIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchOfflineBindingslistofSdkSearchPlaceReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchOfflineBindingslistofSdkSearchPlaceReleaseHandle(handle);

final _heresdkSearchOfflineBindingslistofSdkSearchPlaceCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_Place_create_handle_nullable'));
final _heresdkSearchOfflineBindingslistofSdkSearchPlaceReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_Place_release_handle_nullable'));
final _heresdkSearchOfflineBindingslistofSdkSearchPlaceGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_Place_get_value_nullable'));

Pointer<Void> heresdkSearchOfflineBindingslistofSdkSearchPlaceToFfiNullable(List<Place>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchOfflineBindingslistofSdkSearchPlaceToFfi(value);
  final result = _heresdkSearchOfflineBindingslistofSdkSearchPlaceCreateHandleNullable(_handle);
  heresdkSearchOfflineBindingslistofSdkSearchPlaceReleaseFfiHandle(_handle);
  return result;
}

List<Place>? heresdkSearchOfflineBindingslistofSdkSearchPlaceFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchOfflineBindingslistofSdkSearchPlaceGetValueNullable(handle);
  final result = heresdkSearchOfflineBindingslistofSdkSearchPlaceFromFfi(_handle);
  heresdkSearchOfflineBindingslistofSdkSearchPlaceReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchOfflineBindingslistofSdkSearchPlaceReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchOfflineBindingslistofSdkSearchPlaceReleaseHandleNullable(handle);

final _heresdkSearchOfflineBindingslistofSdkSearchPlacecategoryCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_PlaceCategory_create_handle'));
final _heresdkSearchOfflineBindingslistofSdkSearchPlacecategoryReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_PlaceCategory_release_handle'));
final _heresdkSearchOfflineBindingslistofSdkSearchPlacecategoryInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_PlaceCategory_insert'));
final _heresdkSearchOfflineBindingslistofSdkSearchPlacecategoryIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_PlaceCategory_iterator'));
final _heresdkSearchOfflineBindingslistofSdkSearchPlacecategoryIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_PlaceCategory_iterator_release_handle'));
final _heresdkSearchOfflineBindingslistofSdkSearchPlacecategoryIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_PlaceCategory_iterator_is_valid'));
final _heresdkSearchOfflineBindingslistofSdkSearchPlacecategoryIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_PlaceCategory_iterator_increment'));
final _heresdkSearchOfflineBindingslistofSdkSearchPlacecategoryIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_PlaceCategory_iterator_get'));

Pointer<Void> heresdkSearchOfflineBindingslistofSdkSearchPlacecategoryToFfi(List<PlaceCategory> value) {
  final _result = _heresdkSearchOfflineBindingslistofSdkSearchPlacecategoryCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchPlacecategoryToFfi(element);
    _heresdkSearchOfflineBindingslistofSdkSearchPlacecategoryInsert(_result, _elementHandle);
    sdkSearchPlacecategoryReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<PlaceCategory> heresdkSearchOfflineBindingslistofSdkSearchPlacecategoryFromFfi(Pointer<Void> handle) {
  final result = List<PlaceCategory>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchOfflineBindingslistofSdkSearchPlacecategoryIterator(handle);
  while (_heresdkSearchOfflineBindingslistofSdkSearchPlacecategoryIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchOfflineBindingslistofSdkSearchPlacecategoryIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchPlacecategoryFromFfi(_elementHandle));
    } finally {
      sdkSearchPlacecategoryReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchOfflineBindingslistofSdkSearchPlacecategoryIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchOfflineBindingslistofSdkSearchPlacecategoryIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchOfflineBindingslistofSdkSearchPlacecategoryReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchOfflineBindingslistofSdkSearchPlacecategoryReleaseHandle(handle);

final _heresdkSearchOfflineBindingslistofSdkSearchPlacecategoryCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_PlaceCategory_create_handle_nullable'));
final _heresdkSearchOfflineBindingslistofSdkSearchPlacecategoryReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_PlaceCategory_release_handle_nullable'));
final _heresdkSearchOfflineBindingslistofSdkSearchPlacecategoryGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_PlaceCategory_get_value_nullable'));

Pointer<Void> heresdkSearchOfflineBindingslistofSdkSearchPlacecategoryToFfiNullable(List<PlaceCategory>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchOfflineBindingslistofSdkSearchPlacecategoryToFfi(value);
  final result = _heresdkSearchOfflineBindingslistofSdkSearchPlacecategoryCreateHandleNullable(_handle);
  heresdkSearchOfflineBindingslistofSdkSearchPlacecategoryReleaseFfiHandle(_handle);
  return result;
}

List<PlaceCategory>? heresdkSearchOfflineBindingslistofSdkSearchPlacecategoryFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchOfflineBindingslistofSdkSearchPlacecategoryGetValueNullable(handle);
  final result = heresdkSearchOfflineBindingslistofSdkSearchPlacecategoryFromFfi(_handle);
  heresdkSearchOfflineBindingslistofSdkSearchPlacecategoryReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchOfflineBindingslistofSdkSearchPlacecategoryReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchOfflineBindingslistofSdkSearchPlacecategoryReleaseHandleNullable(handle);

final _heresdkSearchOfflineBindingslistofSdkSearchScheduledetailsCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_ScheduleDetails_create_handle'));
final _heresdkSearchOfflineBindingslistofSdkSearchScheduledetailsReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_ScheduleDetails_release_handle'));
final _heresdkSearchOfflineBindingslistofSdkSearchScheduledetailsInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_ScheduleDetails_insert'));
final _heresdkSearchOfflineBindingslistofSdkSearchScheduledetailsIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_ScheduleDetails_iterator'));
final _heresdkSearchOfflineBindingslistofSdkSearchScheduledetailsIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_ScheduleDetails_iterator_release_handle'));
final _heresdkSearchOfflineBindingslistofSdkSearchScheduledetailsIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_ScheduleDetails_iterator_is_valid'));
final _heresdkSearchOfflineBindingslistofSdkSearchScheduledetailsIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_ScheduleDetails_iterator_increment'));
final _heresdkSearchOfflineBindingslistofSdkSearchScheduledetailsIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_ScheduleDetails_iterator_get'));

Pointer<Void> heresdkSearchOfflineBindingslistofSdkSearchScheduledetailsToFfi(List<ScheduleDetails> value) {
  final _result = _heresdkSearchOfflineBindingslistofSdkSearchScheduledetailsCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchScheduledetailsToFfi(element);
    _heresdkSearchOfflineBindingslistofSdkSearchScheduledetailsInsert(_result, _elementHandle);
    sdkSearchScheduledetailsReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<ScheduleDetails> heresdkSearchOfflineBindingslistofSdkSearchScheduledetailsFromFfi(Pointer<Void> handle) {
  final result = List<ScheduleDetails>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchOfflineBindingslistofSdkSearchScheduledetailsIterator(handle);
  while (_heresdkSearchOfflineBindingslistofSdkSearchScheduledetailsIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchOfflineBindingslistofSdkSearchScheduledetailsIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchScheduledetailsFromFfi(_elementHandle));
    } finally {
      sdkSearchScheduledetailsReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchOfflineBindingslistofSdkSearchScheduledetailsIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchOfflineBindingslistofSdkSearchScheduledetailsIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchOfflineBindingslistofSdkSearchScheduledetailsReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchOfflineBindingslistofSdkSearchScheduledetailsReleaseHandle(handle);

final _heresdkSearchOfflineBindingslistofSdkSearchScheduledetailsCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_ScheduleDetails_create_handle_nullable'));
final _heresdkSearchOfflineBindingslistofSdkSearchScheduledetailsReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_ScheduleDetails_release_handle_nullable'));
final _heresdkSearchOfflineBindingslistofSdkSearchScheduledetailsGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_ScheduleDetails_get_value_nullable'));

Pointer<Void> heresdkSearchOfflineBindingslistofSdkSearchScheduledetailsToFfiNullable(List<ScheduleDetails>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchOfflineBindingslistofSdkSearchScheduledetailsToFfi(value);
  final result = _heresdkSearchOfflineBindingslistofSdkSearchScheduledetailsCreateHandleNullable(_handle);
  heresdkSearchOfflineBindingslistofSdkSearchScheduledetailsReleaseFfiHandle(_handle);
  return result;
}

List<ScheduleDetails>? heresdkSearchOfflineBindingslistofSdkSearchScheduledetailsFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchOfflineBindingslistofSdkSearchScheduledetailsGetValueNullable(handle);
  final result = heresdkSearchOfflineBindingslistofSdkSearchScheduledetailsFromFfi(_handle);
  heresdkSearchOfflineBindingslistofSdkSearchScheduledetailsReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchOfflineBindingslistofSdkSearchScheduledetailsReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchOfflineBindingslistofSdkSearchScheduledetailsReleaseHandleNullable(handle);

final _heresdkSearchOfflineBindingslistofSdkSearchSuggestionCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_Suggestion_create_handle'));
final _heresdkSearchOfflineBindingslistofSdkSearchSuggestionReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_Suggestion_release_handle'));
final _heresdkSearchOfflineBindingslistofSdkSearchSuggestionInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_Suggestion_insert'));
final _heresdkSearchOfflineBindingslistofSdkSearchSuggestionIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_Suggestion_iterator'));
final _heresdkSearchOfflineBindingslistofSdkSearchSuggestionIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_Suggestion_iterator_release_handle'));
final _heresdkSearchOfflineBindingslistofSdkSearchSuggestionIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_Suggestion_iterator_is_valid'));
final _heresdkSearchOfflineBindingslistofSdkSearchSuggestionIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_Suggestion_iterator_increment'));
final _heresdkSearchOfflineBindingslistofSdkSearchSuggestionIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_Suggestion_iterator_get'));

Pointer<Void> heresdkSearchOfflineBindingslistofSdkSearchSuggestionToFfi(List<Suggestion> value) {
  final _result = _heresdkSearchOfflineBindingslistofSdkSearchSuggestionCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchSuggestionToFfi(element);
    _heresdkSearchOfflineBindingslistofSdkSearchSuggestionInsert(_result, _elementHandle);
    sdkSearchSuggestionReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Suggestion> heresdkSearchOfflineBindingslistofSdkSearchSuggestionFromFfi(Pointer<Void> handle) {
  final result = List<Suggestion>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchOfflineBindingslistofSdkSearchSuggestionIterator(handle);
  while (_heresdkSearchOfflineBindingslistofSdkSearchSuggestionIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchOfflineBindingslistofSdkSearchSuggestionIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchSuggestionFromFfi(_elementHandle));
    } finally {
      sdkSearchSuggestionReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchOfflineBindingslistofSdkSearchSuggestionIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchOfflineBindingslistofSdkSearchSuggestionIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchOfflineBindingslistofSdkSearchSuggestionReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchOfflineBindingslistofSdkSearchSuggestionReleaseHandle(handle);

final _heresdkSearchOfflineBindingslistofSdkSearchSuggestionCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_Suggestion_create_handle_nullable'));
final _heresdkSearchOfflineBindingslistofSdkSearchSuggestionReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_Suggestion_release_handle_nullable'));
final _heresdkSearchOfflineBindingslistofSdkSearchSuggestionGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_Suggestion_get_value_nullable'));

Pointer<Void> heresdkSearchOfflineBindingslistofSdkSearchSuggestionToFfiNullable(List<Suggestion>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchOfflineBindingslistofSdkSearchSuggestionToFfi(value);
  final result = _heresdkSearchOfflineBindingslistofSdkSearchSuggestionCreateHandleNullable(_handle);
  heresdkSearchOfflineBindingslistofSdkSearchSuggestionReleaseFfiHandle(_handle);
  return result;
}

List<Suggestion>? heresdkSearchOfflineBindingslistofSdkSearchSuggestionFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchOfflineBindingslistofSdkSearchSuggestionGetValueNullable(handle);
  final result = heresdkSearchOfflineBindingslistofSdkSearchSuggestionFromFfi(_handle);
  heresdkSearchOfflineBindingslistofSdkSearchSuggestionReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchOfflineBindingslistofSdkSearchSuggestionReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchOfflineBindingslistofSdkSearchSuggestionReleaseHandleNullable(handle);

final _heresdkSearchOfflineBindingslistofSdkSearchSupplierreferenceCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_SupplierReference_create_handle'));
final _heresdkSearchOfflineBindingslistofSdkSearchSupplierreferenceReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_SupplierReference_release_handle'));
final _heresdkSearchOfflineBindingslistofSdkSearchSupplierreferenceInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_SupplierReference_insert'));
final _heresdkSearchOfflineBindingslistofSdkSearchSupplierreferenceIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_SupplierReference_iterator'));
final _heresdkSearchOfflineBindingslistofSdkSearchSupplierreferenceIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_SupplierReference_iterator_release_handle'));
final _heresdkSearchOfflineBindingslistofSdkSearchSupplierreferenceIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_SupplierReference_iterator_is_valid'));
final _heresdkSearchOfflineBindingslistofSdkSearchSupplierreferenceIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_SupplierReference_iterator_increment'));
final _heresdkSearchOfflineBindingslistofSdkSearchSupplierreferenceIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_SupplierReference_iterator_get'));

Pointer<Void> heresdkSearchOfflineBindingslistofSdkSearchSupplierreferenceToFfi(List<SupplierReference> value) {
  final _result = _heresdkSearchOfflineBindingslistofSdkSearchSupplierreferenceCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchSupplierreferenceToFfi(element);
    _heresdkSearchOfflineBindingslistofSdkSearchSupplierreferenceInsert(_result, _elementHandle);
    sdkSearchSupplierreferenceReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<SupplierReference> heresdkSearchOfflineBindingslistofSdkSearchSupplierreferenceFromFfi(Pointer<Void> handle) {
  final result = List<SupplierReference>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchOfflineBindingslistofSdkSearchSupplierreferenceIterator(handle);
  while (_heresdkSearchOfflineBindingslistofSdkSearchSupplierreferenceIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchOfflineBindingslistofSdkSearchSupplierreferenceIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchSupplierreferenceFromFfi(_elementHandle));
    } finally {
      sdkSearchSupplierreferenceReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchOfflineBindingslistofSdkSearchSupplierreferenceIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchOfflineBindingslistofSdkSearchSupplierreferenceIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchOfflineBindingslistofSdkSearchSupplierreferenceReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchOfflineBindingslistofSdkSearchSupplierreferenceReleaseHandle(handle);

final _heresdkSearchOfflineBindingslistofSdkSearchSupplierreferenceCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_SupplierReference_create_handle_nullable'));
final _heresdkSearchOfflineBindingslistofSdkSearchSupplierreferenceReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_SupplierReference_release_handle_nullable'));
final _heresdkSearchOfflineBindingslistofSdkSearchSupplierreferenceGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_SupplierReference_get_value_nullable'));

Pointer<Void> heresdkSearchOfflineBindingslistofSdkSearchSupplierreferenceToFfiNullable(List<SupplierReference>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchOfflineBindingslistofSdkSearchSupplierreferenceToFfi(value);
  final result = _heresdkSearchOfflineBindingslistofSdkSearchSupplierreferenceCreateHandleNullable(_handle);
  heresdkSearchOfflineBindingslistofSdkSearchSupplierreferenceReleaseFfiHandle(_handle);
  return result;
}

List<SupplierReference>? heresdkSearchOfflineBindingslistofSdkSearchSupplierreferenceFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchOfflineBindingslistofSdkSearchSupplierreferenceGetValueNullable(handle);
  final result = heresdkSearchOfflineBindingslistofSdkSearchSupplierreferenceFromFfi(_handle);
  heresdkSearchOfflineBindingslistofSdkSearchSupplierreferenceReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchOfflineBindingslistofSdkSearchSupplierreferenceReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchOfflineBindingslistofSdkSearchSupplierreferenceReleaseHandleNullable(handle);

final _heresdkSearchOfflineBindingslistofSdkSearchWebeditorialCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_WebEditorial_create_handle'));
final _heresdkSearchOfflineBindingslistofSdkSearchWebeditorialReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_WebEditorial_release_handle'));
final _heresdkSearchOfflineBindingslistofSdkSearchWebeditorialInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_WebEditorial_insert'));
final _heresdkSearchOfflineBindingslistofSdkSearchWebeditorialIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_WebEditorial_iterator'));
final _heresdkSearchOfflineBindingslistofSdkSearchWebeditorialIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_WebEditorial_iterator_release_handle'));
final _heresdkSearchOfflineBindingslistofSdkSearchWebeditorialIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_WebEditorial_iterator_is_valid'));
final _heresdkSearchOfflineBindingslistofSdkSearchWebeditorialIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_WebEditorial_iterator_increment'));
final _heresdkSearchOfflineBindingslistofSdkSearchWebeditorialIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_WebEditorial_iterator_get'));

Pointer<Void> heresdkSearchOfflineBindingslistofSdkSearchWebeditorialToFfi(List<WebEditorial> value) {
  final _result = _heresdkSearchOfflineBindingslistofSdkSearchWebeditorialCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchWebeditorialToFfi(element);
    _heresdkSearchOfflineBindingslistofSdkSearchWebeditorialInsert(_result, _elementHandle);
    sdkSearchWebeditorialReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<WebEditorial> heresdkSearchOfflineBindingslistofSdkSearchWebeditorialFromFfi(Pointer<Void> handle) {
  final result = List<WebEditorial>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchOfflineBindingslistofSdkSearchWebeditorialIterator(handle);
  while (_heresdkSearchOfflineBindingslistofSdkSearchWebeditorialIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchOfflineBindingslistofSdkSearchWebeditorialIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchWebeditorialFromFfi(_elementHandle));
    } finally {
      sdkSearchWebeditorialReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchOfflineBindingslistofSdkSearchWebeditorialIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchOfflineBindingslistofSdkSearchWebeditorialIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchOfflineBindingslistofSdkSearchWebeditorialReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchOfflineBindingslistofSdkSearchWebeditorialReleaseHandle(handle);

final _heresdkSearchOfflineBindingslistofSdkSearchWebeditorialCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_WebEditorial_create_handle_nullable'));
final _heresdkSearchOfflineBindingslistofSdkSearchWebeditorialReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_WebEditorial_release_handle_nullable'));
final _heresdkSearchOfflineBindingslistofSdkSearchWebeditorialGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_WebEditorial_get_value_nullable'));

Pointer<Void> heresdkSearchOfflineBindingslistofSdkSearchWebeditorialToFfiNullable(List<WebEditorial>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchOfflineBindingslistofSdkSearchWebeditorialToFfi(value);
  final result = _heresdkSearchOfflineBindingslistofSdkSearchWebeditorialCreateHandleNullable(_handle);
  heresdkSearchOfflineBindingslistofSdkSearchWebeditorialReleaseFfiHandle(_handle);
  return result;
}

List<WebEditorial>? heresdkSearchOfflineBindingslistofSdkSearchWebeditorialFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchOfflineBindingslistofSdkSearchWebeditorialGetValueNullable(handle);
  final result = heresdkSearchOfflineBindingslistofSdkSearchWebeditorialFromFfi(_handle);
  heresdkSearchOfflineBindingslistofSdkSearchWebeditorialReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchOfflineBindingslistofSdkSearchWebeditorialReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchOfflineBindingslistofSdkSearchWebeditorialReleaseHandleNullable(handle);

final _heresdkSearchOfflineBindingslistofSdkSearchWebimageCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_WebImage_create_handle'));
final _heresdkSearchOfflineBindingslistofSdkSearchWebimageReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_WebImage_release_handle'));
final _heresdkSearchOfflineBindingslistofSdkSearchWebimageInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_WebImage_insert'));
final _heresdkSearchOfflineBindingslistofSdkSearchWebimageIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_WebImage_iterator'));
final _heresdkSearchOfflineBindingslistofSdkSearchWebimageIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_WebImage_iterator_release_handle'));
final _heresdkSearchOfflineBindingslistofSdkSearchWebimageIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_WebImage_iterator_is_valid'));
final _heresdkSearchOfflineBindingslistofSdkSearchWebimageIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_WebImage_iterator_increment'));
final _heresdkSearchOfflineBindingslistofSdkSearchWebimageIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_WebImage_iterator_get'));

Pointer<Void> heresdkSearchOfflineBindingslistofSdkSearchWebimageToFfi(List<WebImage> value) {
  final _result = _heresdkSearchOfflineBindingslistofSdkSearchWebimageCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchWebimageToFfi(element);
    _heresdkSearchOfflineBindingslistofSdkSearchWebimageInsert(_result, _elementHandle);
    sdkSearchWebimageReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<WebImage> heresdkSearchOfflineBindingslistofSdkSearchWebimageFromFfi(Pointer<Void> handle) {
  final result = List<WebImage>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchOfflineBindingslistofSdkSearchWebimageIterator(handle);
  while (_heresdkSearchOfflineBindingslistofSdkSearchWebimageIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchOfflineBindingslistofSdkSearchWebimageIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchWebimageFromFfi(_elementHandle));
    } finally {
      sdkSearchWebimageReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchOfflineBindingslistofSdkSearchWebimageIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchOfflineBindingslistofSdkSearchWebimageIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchOfflineBindingslistofSdkSearchWebimageReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchOfflineBindingslistofSdkSearchWebimageReleaseHandle(handle);

final _heresdkSearchOfflineBindingslistofSdkSearchWebimageCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_WebImage_create_handle_nullable'));
final _heresdkSearchOfflineBindingslistofSdkSearchWebimageReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_WebImage_release_handle_nullable'));
final _heresdkSearchOfflineBindingslistofSdkSearchWebimageGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_WebImage_get_value_nullable'));

Pointer<Void> heresdkSearchOfflineBindingslistofSdkSearchWebimageToFfiNullable(List<WebImage>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchOfflineBindingslistofSdkSearchWebimageToFfi(value);
  final result = _heresdkSearchOfflineBindingslistofSdkSearchWebimageCreateHandleNullable(_handle);
  heresdkSearchOfflineBindingslistofSdkSearchWebimageReleaseFfiHandle(_handle);
  return result;
}

List<WebImage>? heresdkSearchOfflineBindingslistofSdkSearchWebimageFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchOfflineBindingslistofSdkSearchWebimageGetValueNullable(handle);
  final result = heresdkSearchOfflineBindingslistofSdkSearchWebimageFromFfi(_handle);
  heresdkSearchOfflineBindingslistofSdkSearchWebimageReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchOfflineBindingslistofSdkSearchWebimageReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchOfflineBindingslistofSdkSearchWebimageReleaseHandleNullable(handle);

final _heresdkSearchOfflineBindingslistofSdkSearchWebratingCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_WebRating_create_handle'));
final _heresdkSearchOfflineBindingslistofSdkSearchWebratingReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_WebRating_release_handle'));
final _heresdkSearchOfflineBindingslistofSdkSearchWebratingInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_WebRating_insert'));
final _heresdkSearchOfflineBindingslistofSdkSearchWebratingIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_WebRating_iterator'));
final _heresdkSearchOfflineBindingslistofSdkSearchWebratingIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_WebRating_iterator_release_handle'));
final _heresdkSearchOfflineBindingslistofSdkSearchWebratingIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_WebRating_iterator_is_valid'));
final _heresdkSearchOfflineBindingslistofSdkSearchWebratingIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_WebRating_iterator_increment'));
final _heresdkSearchOfflineBindingslistofSdkSearchWebratingIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_WebRating_iterator_get'));

Pointer<Void> heresdkSearchOfflineBindingslistofSdkSearchWebratingToFfi(List<WebRating> value) {
  final _result = _heresdkSearchOfflineBindingslistofSdkSearchWebratingCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchWebratingToFfi(element);
    _heresdkSearchOfflineBindingslistofSdkSearchWebratingInsert(_result, _elementHandle);
    sdkSearchWebratingReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<WebRating> heresdkSearchOfflineBindingslistofSdkSearchWebratingFromFfi(Pointer<Void> handle) {
  final result = List<WebRating>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchOfflineBindingslistofSdkSearchWebratingIterator(handle);
  while (_heresdkSearchOfflineBindingslistofSdkSearchWebratingIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchOfflineBindingslistofSdkSearchWebratingIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchWebratingFromFfi(_elementHandle));
    } finally {
      sdkSearchWebratingReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchOfflineBindingslistofSdkSearchWebratingIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchOfflineBindingslistofSdkSearchWebratingIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchOfflineBindingslistofSdkSearchWebratingReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchOfflineBindingslistofSdkSearchWebratingReleaseHandle(handle);

final _heresdkSearchOfflineBindingslistofSdkSearchWebratingCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_WebRating_create_handle_nullable'));
final _heresdkSearchOfflineBindingslistofSdkSearchWebratingReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_WebRating_release_handle_nullable'));
final _heresdkSearchOfflineBindingslistofSdkSearchWebratingGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_WebRating_get_value_nullable'));

Pointer<Void> heresdkSearchOfflineBindingslistofSdkSearchWebratingToFfiNullable(List<WebRating>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchOfflineBindingslistofSdkSearchWebratingToFfi(value);
  final result = _heresdkSearchOfflineBindingslistofSdkSearchWebratingCreateHandleNullable(_handle);
  heresdkSearchOfflineBindingslistofSdkSearchWebratingReleaseFfiHandle(_handle);
  return result;
}

List<WebRating>? heresdkSearchOfflineBindingslistofSdkSearchWebratingFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchOfflineBindingslistofSdkSearchWebratingGetValueNullable(handle);
  final result = heresdkSearchOfflineBindingslistofSdkSearchWebratingFromFfi(_handle);
  heresdkSearchOfflineBindingslistofSdkSearchWebratingReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchOfflineBindingslistofSdkSearchWebratingReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchOfflineBindingslistofSdkSearchWebratingReleaseHandleNullable(handle);

final _heresdkSearchOfflineBindingslistofSdkSearchWebsiteaddressCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_WebsiteAddress_create_handle'));
final _heresdkSearchOfflineBindingslistofSdkSearchWebsiteaddressReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_WebsiteAddress_release_handle'));
final _heresdkSearchOfflineBindingslistofSdkSearchWebsiteaddressInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_WebsiteAddress_insert'));
final _heresdkSearchOfflineBindingslistofSdkSearchWebsiteaddressIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_WebsiteAddress_iterator'));
final _heresdkSearchOfflineBindingslistofSdkSearchWebsiteaddressIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_WebsiteAddress_iterator_release_handle'));
final _heresdkSearchOfflineBindingslistofSdkSearchWebsiteaddressIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_WebsiteAddress_iterator_is_valid'));
final _heresdkSearchOfflineBindingslistofSdkSearchWebsiteaddressIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_WebsiteAddress_iterator_increment'));
final _heresdkSearchOfflineBindingslistofSdkSearchWebsiteaddressIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_WebsiteAddress_iterator_get'));

Pointer<Void> heresdkSearchOfflineBindingslistofSdkSearchWebsiteaddressToFfi(List<WebsiteAddress> value) {
  final _result = _heresdkSearchOfflineBindingslistofSdkSearchWebsiteaddressCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchWebsiteaddressToFfi(element);
    _heresdkSearchOfflineBindingslistofSdkSearchWebsiteaddressInsert(_result, _elementHandle);
    sdkSearchWebsiteaddressReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<WebsiteAddress> heresdkSearchOfflineBindingslistofSdkSearchWebsiteaddressFromFfi(Pointer<Void> handle) {
  final result = List<WebsiteAddress>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchOfflineBindingslistofSdkSearchWebsiteaddressIterator(handle);
  while (_heresdkSearchOfflineBindingslistofSdkSearchWebsiteaddressIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchOfflineBindingslistofSdkSearchWebsiteaddressIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchWebsiteaddressFromFfi(_elementHandle));
    } finally {
      sdkSearchWebsiteaddressReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchOfflineBindingslistofSdkSearchWebsiteaddressIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchOfflineBindingslistofSdkSearchWebsiteaddressIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchOfflineBindingslistofSdkSearchWebsiteaddressReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchOfflineBindingslistofSdkSearchWebsiteaddressReleaseHandle(handle);

final _heresdkSearchOfflineBindingslistofSdkSearchWebsiteaddressCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_WebsiteAddress_create_handle_nullable'));
final _heresdkSearchOfflineBindingslistofSdkSearchWebsiteaddressReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_WebsiteAddress_release_handle_nullable'));
final _heresdkSearchOfflineBindingslistofSdkSearchWebsiteaddressGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_offline_bindingsListOf_sdk_search_WebsiteAddress_get_value_nullable'));

Pointer<Void> heresdkSearchOfflineBindingslistofSdkSearchWebsiteaddressToFfiNullable(List<WebsiteAddress>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchOfflineBindingslistofSdkSearchWebsiteaddressToFfi(value);
  final result = _heresdkSearchOfflineBindingslistofSdkSearchWebsiteaddressCreateHandleNullable(_handle);
  heresdkSearchOfflineBindingslistofSdkSearchWebsiteaddressReleaseFfiHandle(_handle);
  return result;
}

List<WebsiteAddress>? heresdkSearchOfflineBindingslistofSdkSearchWebsiteaddressFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchOfflineBindingslistofSdkSearchWebsiteaddressGetValueNullable(handle);
  final result = heresdkSearchOfflineBindingslistofSdkSearchWebsiteaddressFromFfi(_handle);
  heresdkSearchOfflineBindingslistofSdkSearchWebsiteaddressReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchOfflineBindingslistofSdkSearchWebsiteaddressReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchOfflineBindingslistofSdkSearchWebsiteaddressReleaseHandleNullable(handle);

final _heresdkSearchOfflineBindingsmapofSdkCoreEngineEnginebaseurlToStringCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_offline_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_create_handle'));
final _heresdkSearchOfflineBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_offline_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_release_handle'));
final _heresdkSearchOfflineBindingsmapofSdkCoreEngineEnginebaseurlToStringPut = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32, Pointer<Void>),
    void Function(Pointer<Void>, int, Pointer<Void>)
  >('here_sdk_heresdk_search_offline_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_put'));
final _heresdkSearchOfflineBindingsmapofSdkCoreEngineEnginebaseurlToStringIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_offline_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_iterator'));
final _heresdkSearchOfflineBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_offline_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_iterator_release_handle'));
final _heresdkSearchOfflineBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_offline_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_iterator_is_valid'));
final _heresdkSearchOfflineBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_offline_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_iterator_increment'));
final _heresdkSearchOfflineBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorGetKey = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_search_offline_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_iterator_get_key'));
final _heresdkSearchOfflineBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorGetValue = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_offline_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_iterator_get_value'));

Pointer<Void> heresdkSearchOfflineBindingsmapofSdkCoreEngineEnginebaseurlToStringToFfi(Map<EngineBaseURL, String> value) {
  final _result = _heresdkSearchOfflineBindingsmapofSdkCoreEngineEnginebaseurlToStringCreateHandle();
  for (final entry in value.entries) {
    final _keyHandle = sdkCoreEngineEnginebaseurlToFfi(entry.key);
    final _valueHandle = stringToFfi(entry.value);
    _heresdkSearchOfflineBindingsmapofSdkCoreEngineEnginebaseurlToStringPut(_result, _keyHandle, _valueHandle);
    sdkCoreEngineEnginebaseurlReleaseFfiHandle(_keyHandle);
    stringReleaseFfiHandle(_valueHandle);
  }
  return _result;
}

Map<EngineBaseURL, String> heresdkSearchOfflineBindingsmapofSdkCoreEngineEnginebaseurlToStringFromFfi(Pointer<Void> handle) {
  final result = Map<EngineBaseURL, String>();
  final _iteratorHandle = _heresdkSearchOfflineBindingsmapofSdkCoreEngineEnginebaseurlToStringIterator(handle);
  while (_heresdkSearchOfflineBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _keyHandle = _heresdkSearchOfflineBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorGetKey(_iteratorHandle);
    final _valueHandle = _heresdkSearchOfflineBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorGetValue(_iteratorHandle);
    try {
      result[sdkCoreEngineEnginebaseurlFromFfi(_keyHandle)] =
        stringFromFfi(_valueHandle);
    } finally {
      sdkCoreEngineEnginebaseurlReleaseFfiHandle(_keyHandle);
      stringReleaseFfiHandle(_valueHandle);
    }
    _heresdkSearchOfflineBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchOfflineBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchOfflineBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchOfflineBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseHandle(handle);

final _heresdkSearchOfflineBindingsmapofSdkCoreEngineEnginebaseurlToStringCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_offline_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_create_handle_nullable'));
final _heresdkSearchOfflineBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_offline_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_release_handle_nullable'));
final _heresdkSearchOfflineBindingsmapofSdkCoreEngineEnginebaseurlToStringGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_offline_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_get_value_nullable'));

Pointer<Void> heresdkSearchOfflineBindingsmapofSdkCoreEngineEnginebaseurlToStringToFfiNullable(Map<EngineBaseURL, String>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchOfflineBindingsmapofSdkCoreEngineEnginebaseurlToStringToFfi(value);
  final result = _heresdkSearchOfflineBindingsmapofSdkCoreEngineEnginebaseurlToStringCreateHandleNullable(_handle);
  heresdkSearchOfflineBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseFfiHandle(_handle);
  return result;
}

Map<EngineBaseURL, String>? heresdkSearchOfflineBindingsmapofSdkCoreEngineEnginebaseurlToStringFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchOfflineBindingsmapofSdkCoreEngineEnginebaseurlToStringGetValueNullable(handle);
  final result = heresdkSearchOfflineBindingsmapofSdkCoreEngineEnginebaseurlToStringFromFfi(_handle);
  heresdkSearchOfflineBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchOfflineBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchOfflineBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseHandleNullable(handle);

final _heresdkSearchOfflineBindingsmapofSdkSearchHighlighttypeToHeresdkSearchOfflineBindingslistofSdkSearchIndexrangeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_offline_bindingsMapOf_sdk_search_HighlightType_to_heresdk_search_offline_bindingsListOf_sdk_search_IndexRange_create_handle'));
final _heresdkSearchOfflineBindingsmapofSdkSearchHighlighttypeToHeresdkSearchOfflineBindingslistofSdkSearchIndexrangeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_offline_bindingsMapOf_sdk_search_HighlightType_to_heresdk_search_offline_bindingsListOf_sdk_search_IndexRange_release_handle'));
final _heresdkSearchOfflineBindingsmapofSdkSearchHighlighttypeToHeresdkSearchOfflineBindingslistofSdkSearchIndexrangePut = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32, Pointer<Void>),
    void Function(Pointer<Void>, int, Pointer<Void>)
  >('here_sdk_heresdk_search_offline_bindingsMapOf_sdk_search_HighlightType_to_heresdk_search_offline_bindingsListOf_sdk_search_IndexRange_put'));
final _heresdkSearchOfflineBindingsmapofSdkSearchHighlighttypeToHeresdkSearchOfflineBindingslistofSdkSearchIndexrangeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_offline_bindingsMapOf_sdk_search_HighlightType_to_heresdk_search_offline_bindingsListOf_sdk_search_IndexRange_iterator'));
final _heresdkSearchOfflineBindingsmapofSdkSearchHighlighttypeToHeresdkSearchOfflineBindingslistofSdkSearchIndexrangeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_offline_bindingsMapOf_sdk_search_HighlightType_to_heresdk_search_offline_bindingsListOf_sdk_search_IndexRange_iterator_release_handle'));
final _heresdkSearchOfflineBindingsmapofSdkSearchHighlighttypeToHeresdkSearchOfflineBindingslistofSdkSearchIndexrangeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_offline_bindingsMapOf_sdk_search_HighlightType_to_heresdk_search_offline_bindingsListOf_sdk_search_IndexRange_iterator_is_valid'));
final _heresdkSearchOfflineBindingsmapofSdkSearchHighlighttypeToHeresdkSearchOfflineBindingslistofSdkSearchIndexrangeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_offline_bindingsMapOf_sdk_search_HighlightType_to_heresdk_search_offline_bindingsListOf_sdk_search_IndexRange_iterator_increment'));
final _heresdkSearchOfflineBindingsmapofSdkSearchHighlighttypeToHeresdkSearchOfflineBindingslistofSdkSearchIndexrangeIteratorGetKey = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_search_offline_bindingsMapOf_sdk_search_HighlightType_to_heresdk_search_offline_bindingsListOf_sdk_search_IndexRange_iterator_get_key'));
final _heresdkSearchOfflineBindingsmapofSdkSearchHighlighttypeToHeresdkSearchOfflineBindingslistofSdkSearchIndexrangeIteratorGetValue = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_offline_bindingsMapOf_sdk_search_HighlightType_to_heresdk_search_offline_bindingsListOf_sdk_search_IndexRange_iterator_get_value'));

Pointer<Void> heresdkSearchOfflineBindingsmapofSdkSearchHighlighttypeToHeresdkSearchOfflineBindingslistofSdkSearchIndexrangeToFfi(Map<HighlightType, List<IndexRange>> value) {
  final _result = _heresdkSearchOfflineBindingsmapofSdkSearchHighlighttypeToHeresdkSearchOfflineBindingslistofSdkSearchIndexrangeCreateHandle();
  for (final entry in value.entries) {
    final _keyHandle = sdkSearchHighlighttypeToFfi(entry.key);
    final _valueHandle = heresdkSearchOfflineBindingslistofSdkSearchIndexrangeToFfi(entry.value);
    _heresdkSearchOfflineBindingsmapofSdkSearchHighlighttypeToHeresdkSearchOfflineBindingslistofSdkSearchIndexrangePut(_result, _keyHandle, _valueHandle);
    sdkSearchHighlighttypeReleaseFfiHandle(_keyHandle);
    heresdkSearchOfflineBindingslistofSdkSearchIndexrangeReleaseFfiHandle(_valueHandle);
  }
  return _result;
}

Map<HighlightType, List<IndexRange>> heresdkSearchOfflineBindingsmapofSdkSearchHighlighttypeToHeresdkSearchOfflineBindingslistofSdkSearchIndexrangeFromFfi(Pointer<Void> handle) {
  final result = Map<HighlightType, List<IndexRange>>();
  final _iteratorHandle = _heresdkSearchOfflineBindingsmapofSdkSearchHighlighttypeToHeresdkSearchOfflineBindingslistofSdkSearchIndexrangeIterator(handle);
  while (_heresdkSearchOfflineBindingsmapofSdkSearchHighlighttypeToHeresdkSearchOfflineBindingslistofSdkSearchIndexrangeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _keyHandle = _heresdkSearchOfflineBindingsmapofSdkSearchHighlighttypeToHeresdkSearchOfflineBindingslistofSdkSearchIndexrangeIteratorGetKey(_iteratorHandle);
    final _valueHandle = _heresdkSearchOfflineBindingsmapofSdkSearchHighlighttypeToHeresdkSearchOfflineBindingslistofSdkSearchIndexrangeIteratorGetValue(_iteratorHandle);
    try {
      result[sdkSearchHighlighttypeFromFfi(_keyHandle)] =
        heresdkSearchOfflineBindingslistofSdkSearchIndexrangeFromFfi(_valueHandle);
    } finally {
      sdkSearchHighlighttypeReleaseFfiHandle(_keyHandle);
      heresdkSearchOfflineBindingslistofSdkSearchIndexrangeReleaseFfiHandle(_valueHandle);
    }
    _heresdkSearchOfflineBindingsmapofSdkSearchHighlighttypeToHeresdkSearchOfflineBindingslistofSdkSearchIndexrangeIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchOfflineBindingsmapofSdkSearchHighlighttypeToHeresdkSearchOfflineBindingslistofSdkSearchIndexrangeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchOfflineBindingsmapofSdkSearchHighlighttypeToHeresdkSearchOfflineBindingslistofSdkSearchIndexrangeReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchOfflineBindingsmapofSdkSearchHighlighttypeToHeresdkSearchOfflineBindingslistofSdkSearchIndexrangeReleaseHandle(handle);

final _heresdkSearchOfflineBindingsmapofSdkSearchHighlighttypeToHeresdkSearchOfflineBindingslistofSdkSearchIndexrangeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_offline_bindingsMapOf_sdk_search_HighlightType_to_heresdk_search_offline_bindingsListOf_sdk_search_IndexRange_create_handle_nullable'));
final _heresdkSearchOfflineBindingsmapofSdkSearchHighlighttypeToHeresdkSearchOfflineBindingslistofSdkSearchIndexrangeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_offline_bindingsMapOf_sdk_search_HighlightType_to_heresdk_search_offline_bindingsListOf_sdk_search_IndexRange_release_handle_nullable'));
final _heresdkSearchOfflineBindingsmapofSdkSearchHighlighttypeToHeresdkSearchOfflineBindingslistofSdkSearchIndexrangeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_offline_bindingsMapOf_sdk_search_HighlightType_to_heresdk_search_offline_bindingsListOf_sdk_search_IndexRange_get_value_nullable'));

Pointer<Void> heresdkSearchOfflineBindingsmapofSdkSearchHighlighttypeToHeresdkSearchOfflineBindingslistofSdkSearchIndexrangeToFfiNullable(Map<HighlightType, List<IndexRange>>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchOfflineBindingsmapofSdkSearchHighlighttypeToHeresdkSearchOfflineBindingslistofSdkSearchIndexrangeToFfi(value);
  final result = _heresdkSearchOfflineBindingsmapofSdkSearchHighlighttypeToHeresdkSearchOfflineBindingslistofSdkSearchIndexrangeCreateHandleNullable(_handle);
  heresdkSearchOfflineBindingsmapofSdkSearchHighlighttypeToHeresdkSearchOfflineBindingslistofSdkSearchIndexrangeReleaseFfiHandle(_handle);
  return result;
}

Map<HighlightType, List<IndexRange>>? heresdkSearchOfflineBindingsmapofSdkSearchHighlighttypeToHeresdkSearchOfflineBindingslistofSdkSearchIndexrangeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkSearchOfflineBindingsmapofSdkSearchHighlighttypeToHeresdkSearchOfflineBindingslistofSdkSearchIndexrangeGetValueNullable(handle);
  final result = heresdkSearchOfflineBindingsmapofSdkSearchHighlighttypeToHeresdkSearchOfflineBindingslistofSdkSearchIndexrangeFromFfi(_handle);
  heresdkSearchOfflineBindingsmapofSdkSearchHighlighttypeToHeresdkSearchOfflineBindingslistofSdkSearchIndexrangeReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchOfflineBindingsmapofSdkSearchHighlighttypeToHeresdkSearchOfflineBindingslistofSdkSearchIndexrangeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchOfflineBindingsmapofSdkSearchHighlighttypeToHeresdkSearchOfflineBindingslistofSdkSearchIndexrangeReleaseHandleNullable(handle);


// Copyright (c) 2018-2022 HERE Global B.V. and its affiliate(s).
// All rights reserved.
//
// This software and other materials contain proprietary information
// controlled by HERE and are protected by applicable copyright legislation.
// Any use and utilization of this software and other materials and
// disclosure to any third parties is conditional upon having a separate
// agreement with HERE for the access, use, utilization or disclosure of this
// software. In the absence of such agreement, the use of the software is not
// allowed.
//

















































final _heresdkTrafficAwareNavigationBindingslistofIntCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_Int_create_handle'));
final _heresdkTrafficAwareNavigationBindingslistofIntReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_Int_release_handle'));
final _heresdkTrafficAwareNavigationBindingslistofIntInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Int32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_Int_insert'));
final _heresdkTrafficAwareNavigationBindingslistofIntIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_Int_iterator'));
final _heresdkTrafficAwareNavigationBindingslistofIntIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_Int_iterator_release_handle'));
final _heresdkTrafficAwareNavigationBindingslistofIntIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_Int_iterator_is_valid'));
final _heresdkTrafficAwareNavigationBindingslistofIntIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_Int_iterator_increment'));
final _heresdkTrafficAwareNavigationBindingslistofIntIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_Int_iterator_get'));

Pointer<Void> heresdkTrafficAwareNavigationBindingslistofIntToFfi(List<int> value) {
  final _result = _heresdkTrafficAwareNavigationBindingslistofIntCreateHandle();
  for (final element in value) {
    final _elementHandle = (element);
    _heresdkTrafficAwareNavigationBindingslistofIntInsert(_result, _elementHandle);
    
  }
  return _result;
}

List<int> heresdkTrafficAwareNavigationBindingslistofIntFromFfi(Pointer<Void> handle) {
  final result = List<int>.empty(growable: true);
  final _iteratorHandle = _heresdkTrafficAwareNavigationBindingslistofIntIterator(handle);
  while (_heresdkTrafficAwareNavigationBindingslistofIntIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkTrafficAwareNavigationBindingslistofIntIteratorGet(_iteratorHandle);
    try {
      result.add((_elementHandle));
    } finally {
      
    }
    _heresdkTrafficAwareNavigationBindingslistofIntIteratorIncrement(_iteratorHandle);
  }
  _heresdkTrafficAwareNavigationBindingslistofIntIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkTrafficAwareNavigationBindingslistofIntReleaseFfiHandle(Pointer<Void> handle) => _heresdkTrafficAwareNavigationBindingslistofIntReleaseHandle(handle);

final _heresdkTrafficAwareNavigationBindingslistofIntCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_Int_create_handle_nullable'));
final _heresdkTrafficAwareNavigationBindingslistofIntReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_Int_release_handle_nullable'));
final _heresdkTrafficAwareNavigationBindingslistofIntGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_Int_get_value_nullable'));

Pointer<Void> heresdkTrafficAwareNavigationBindingslistofIntToFfiNullable(List<int>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkTrafficAwareNavigationBindingslistofIntToFfi(value);
  final result = _heresdkTrafficAwareNavigationBindingslistofIntCreateHandleNullable(_handle);
  heresdkTrafficAwareNavigationBindingslistofIntReleaseFfiHandle(_handle);
  return result;
}

List<int>? heresdkTrafficAwareNavigationBindingslistofIntFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkTrafficAwareNavigationBindingslistofIntGetValueNullable(handle);
  final result = heresdkTrafficAwareNavigationBindingslistofIntFromFfi(_handle);
  heresdkTrafficAwareNavigationBindingslistofIntReleaseFfiHandle(_handle);
  return result;
}

void heresdkTrafficAwareNavigationBindingslistofIntReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkTrafficAwareNavigationBindingslistofIntReleaseHandleNullable(handle);

final _heresdkTrafficAwareNavigationBindingslistofLocaleCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_Locale_create_handle'));
final _heresdkTrafficAwareNavigationBindingslistofLocaleReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_Locale_release_handle'));
final _heresdkTrafficAwareNavigationBindingslistofLocaleInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_Locale_insert'));
final _heresdkTrafficAwareNavigationBindingslistofLocaleIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_Locale_iterator'));
final _heresdkTrafficAwareNavigationBindingslistofLocaleIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_Locale_iterator_release_handle'));
final _heresdkTrafficAwareNavigationBindingslistofLocaleIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_Locale_iterator_is_valid'));
final _heresdkTrafficAwareNavigationBindingslistofLocaleIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_Locale_iterator_increment'));
final _heresdkTrafficAwareNavigationBindingslistofLocaleIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_Locale_iterator_get'));

Pointer<Void> heresdkTrafficAwareNavigationBindingslistofLocaleToFfi(List<Locale> value) {
  final _result = _heresdkTrafficAwareNavigationBindingslistofLocaleCreateHandle();
  for (final element in value) {
    final _elementHandle = localeToFfi(element);
    _heresdkTrafficAwareNavigationBindingslistofLocaleInsert(_result, _elementHandle);
    localeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Locale> heresdkTrafficAwareNavigationBindingslistofLocaleFromFfi(Pointer<Void> handle) {
  final result = List<Locale>.empty(growable: true);
  final _iteratorHandle = _heresdkTrafficAwareNavigationBindingslistofLocaleIterator(handle);
  while (_heresdkTrafficAwareNavigationBindingslistofLocaleIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkTrafficAwareNavigationBindingslistofLocaleIteratorGet(_iteratorHandle);
    try {
      result.add(localeFromFfi(_elementHandle));
    } finally {
      localeReleaseFfiHandle(_elementHandle);
    }
    _heresdkTrafficAwareNavigationBindingslistofLocaleIteratorIncrement(_iteratorHandle);
  }
  _heresdkTrafficAwareNavigationBindingslistofLocaleIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkTrafficAwareNavigationBindingslistofLocaleReleaseFfiHandle(Pointer<Void> handle) => _heresdkTrafficAwareNavigationBindingslistofLocaleReleaseHandle(handle);

final _heresdkTrafficAwareNavigationBindingslistofLocaleCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_Locale_create_handle_nullable'));
final _heresdkTrafficAwareNavigationBindingslistofLocaleReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_Locale_release_handle_nullable'));
final _heresdkTrafficAwareNavigationBindingslistofLocaleGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_Locale_get_value_nullable'));

Pointer<Void> heresdkTrafficAwareNavigationBindingslistofLocaleToFfiNullable(List<Locale>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkTrafficAwareNavigationBindingslistofLocaleToFfi(value);
  final result = _heresdkTrafficAwareNavigationBindingslistofLocaleCreateHandleNullable(_handle);
  heresdkTrafficAwareNavigationBindingslistofLocaleReleaseFfiHandle(_handle);
  return result;
}

List<Locale>? heresdkTrafficAwareNavigationBindingslistofLocaleFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkTrafficAwareNavigationBindingslistofLocaleGetValueNullable(handle);
  final result = heresdkTrafficAwareNavigationBindingslistofLocaleFromFfi(_handle);
  heresdkTrafficAwareNavigationBindingslistofLocaleReleaseFfiHandle(_handle);
  return result;
}

void heresdkTrafficAwareNavigationBindingslistofLocaleReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkTrafficAwareNavigationBindingslistofLocaleReleaseHandleNullable(handle);

final _heresdkTrafficAwareNavigationBindingslistofSdkCoreCountrycodeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_core_CountryCode_create_handle'));
final _heresdkTrafficAwareNavigationBindingslistofSdkCoreCountrycodeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_core_CountryCode_release_handle'));
final _heresdkTrafficAwareNavigationBindingslistofSdkCoreCountrycodeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_core_CountryCode_insert'));
final _heresdkTrafficAwareNavigationBindingslistofSdkCoreCountrycodeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_core_CountryCode_iterator'));
final _heresdkTrafficAwareNavigationBindingslistofSdkCoreCountrycodeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_core_CountryCode_iterator_release_handle'));
final _heresdkTrafficAwareNavigationBindingslistofSdkCoreCountrycodeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_core_CountryCode_iterator_is_valid'));
final _heresdkTrafficAwareNavigationBindingslistofSdkCoreCountrycodeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_core_CountryCode_iterator_increment'));
final _heresdkTrafficAwareNavigationBindingslistofSdkCoreCountrycodeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_core_CountryCode_iterator_get'));

Pointer<Void> heresdkTrafficAwareNavigationBindingslistofSdkCoreCountrycodeToFfi(List<CountryCode> value) {
  final _result = _heresdkTrafficAwareNavigationBindingslistofSdkCoreCountrycodeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreCountrycodeToFfi(element);
    _heresdkTrafficAwareNavigationBindingslistofSdkCoreCountrycodeInsert(_result, _elementHandle);
    sdkCoreCountrycodeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<CountryCode> heresdkTrafficAwareNavigationBindingslistofSdkCoreCountrycodeFromFfi(Pointer<Void> handle) {
  final result = List<CountryCode>.empty(growable: true);
  final _iteratorHandle = _heresdkTrafficAwareNavigationBindingslistofSdkCoreCountrycodeIterator(handle);
  while (_heresdkTrafficAwareNavigationBindingslistofSdkCoreCountrycodeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkTrafficAwareNavigationBindingslistofSdkCoreCountrycodeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreCountrycodeFromFfi(_elementHandle));
    } finally {
      sdkCoreCountrycodeReleaseFfiHandle(_elementHandle);
    }
    _heresdkTrafficAwareNavigationBindingslistofSdkCoreCountrycodeIteratorIncrement(_iteratorHandle);
  }
  _heresdkTrafficAwareNavigationBindingslistofSdkCoreCountrycodeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkTrafficAwareNavigationBindingslistofSdkCoreCountrycodeReleaseFfiHandle(Pointer<Void> handle) => _heresdkTrafficAwareNavigationBindingslistofSdkCoreCountrycodeReleaseHandle(handle);

final _heresdkTrafficAwareNavigationBindingslistofSdkCoreCountrycodeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_core_CountryCode_create_handle_nullable'));
final _heresdkTrafficAwareNavigationBindingslistofSdkCoreCountrycodeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_core_CountryCode_release_handle_nullable'));
final _heresdkTrafficAwareNavigationBindingslistofSdkCoreCountrycodeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_core_CountryCode_get_value_nullable'));

Pointer<Void> heresdkTrafficAwareNavigationBindingslistofSdkCoreCountrycodeToFfiNullable(List<CountryCode>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkTrafficAwareNavigationBindingslistofSdkCoreCountrycodeToFfi(value);
  final result = _heresdkTrafficAwareNavigationBindingslistofSdkCoreCountrycodeCreateHandleNullable(_handle);
  heresdkTrafficAwareNavigationBindingslistofSdkCoreCountrycodeReleaseFfiHandle(_handle);
  return result;
}

List<CountryCode>? heresdkTrafficAwareNavigationBindingslistofSdkCoreCountrycodeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkTrafficAwareNavigationBindingslistofSdkCoreCountrycodeGetValueNullable(handle);
  final result = heresdkTrafficAwareNavigationBindingslistofSdkCoreCountrycodeFromFfi(_handle);
  heresdkTrafficAwareNavigationBindingslistofSdkCoreCountrycodeReleaseFfiHandle(_handle);
  return result;
}

void heresdkTrafficAwareNavigationBindingslistofSdkCoreCountrycodeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkTrafficAwareNavigationBindingslistofSdkCoreCountrycodeReleaseHandleNullable(handle);

final _heresdkTrafficAwareNavigationBindingslistofSdkCoreGeoboxCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_core_GeoBox_create_handle'));
final _heresdkTrafficAwareNavigationBindingslistofSdkCoreGeoboxReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_core_GeoBox_release_handle'));
final _heresdkTrafficAwareNavigationBindingslistofSdkCoreGeoboxInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_core_GeoBox_insert'));
final _heresdkTrafficAwareNavigationBindingslistofSdkCoreGeoboxIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_core_GeoBox_iterator'));
final _heresdkTrafficAwareNavigationBindingslistofSdkCoreGeoboxIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_core_GeoBox_iterator_release_handle'));
final _heresdkTrafficAwareNavigationBindingslistofSdkCoreGeoboxIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_core_GeoBox_iterator_is_valid'));
final _heresdkTrafficAwareNavigationBindingslistofSdkCoreGeoboxIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_core_GeoBox_iterator_increment'));
final _heresdkTrafficAwareNavigationBindingslistofSdkCoreGeoboxIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_core_GeoBox_iterator_get'));

Pointer<Void> heresdkTrafficAwareNavigationBindingslistofSdkCoreGeoboxToFfi(List<GeoBox> value) {
  final _result = _heresdkTrafficAwareNavigationBindingslistofSdkCoreGeoboxCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreGeoboxToFfi(element);
    _heresdkTrafficAwareNavigationBindingslistofSdkCoreGeoboxInsert(_result, _elementHandle);
    sdkCoreGeoboxReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoBox> heresdkTrafficAwareNavigationBindingslistofSdkCoreGeoboxFromFfi(Pointer<Void> handle) {
  final result = List<GeoBox>.empty(growable: true);
  final _iteratorHandle = _heresdkTrafficAwareNavigationBindingslistofSdkCoreGeoboxIterator(handle);
  while (_heresdkTrafficAwareNavigationBindingslistofSdkCoreGeoboxIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkTrafficAwareNavigationBindingslistofSdkCoreGeoboxIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreGeoboxFromFfi(_elementHandle));
    } finally {
      sdkCoreGeoboxReleaseFfiHandle(_elementHandle);
    }
    _heresdkTrafficAwareNavigationBindingslistofSdkCoreGeoboxIteratorIncrement(_iteratorHandle);
  }
  _heresdkTrafficAwareNavigationBindingslistofSdkCoreGeoboxIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkTrafficAwareNavigationBindingslistofSdkCoreGeoboxReleaseFfiHandle(Pointer<Void> handle) => _heresdkTrafficAwareNavigationBindingslistofSdkCoreGeoboxReleaseHandle(handle);

final _heresdkTrafficAwareNavigationBindingslistofSdkCoreGeoboxCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_core_GeoBox_create_handle_nullable'));
final _heresdkTrafficAwareNavigationBindingslistofSdkCoreGeoboxReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_core_GeoBox_release_handle_nullable'));
final _heresdkTrafficAwareNavigationBindingslistofSdkCoreGeoboxGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_core_GeoBox_get_value_nullable'));

Pointer<Void> heresdkTrafficAwareNavigationBindingslistofSdkCoreGeoboxToFfiNullable(List<GeoBox>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkTrafficAwareNavigationBindingslistofSdkCoreGeoboxToFfi(value);
  final result = _heresdkTrafficAwareNavigationBindingslistofSdkCoreGeoboxCreateHandleNullable(_handle);
  heresdkTrafficAwareNavigationBindingslistofSdkCoreGeoboxReleaseFfiHandle(_handle);
  return result;
}

List<GeoBox>? heresdkTrafficAwareNavigationBindingslistofSdkCoreGeoboxFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkTrafficAwareNavigationBindingslistofSdkCoreGeoboxGetValueNullable(handle);
  final result = heresdkTrafficAwareNavigationBindingslistofSdkCoreGeoboxFromFfi(_handle);
  heresdkTrafficAwareNavigationBindingslistofSdkCoreGeoboxReleaseFfiHandle(_handle);
  return result;
}

void heresdkTrafficAwareNavigationBindingslistofSdkCoreGeoboxReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkTrafficAwareNavigationBindingslistofSdkCoreGeoboxReleaseHandleNullable(handle);

final _heresdkTrafficAwareNavigationBindingslistofSdkCoreGeocoordinatesCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_core_GeoCoordinates_create_handle'));
final _heresdkTrafficAwareNavigationBindingslistofSdkCoreGeocoordinatesReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_core_GeoCoordinates_release_handle'));
final _heresdkTrafficAwareNavigationBindingslistofSdkCoreGeocoordinatesInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_core_GeoCoordinates_insert'));
final _heresdkTrafficAwareNavigationBindingslistofSdkCoreGeocoordinatesIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_core_GeoCoordinates_iterator'));
final _heresdkTrafficAwareNavigationBindingslistofSdkCoreGeocoordinatesIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_core_GeoCoordinates_iterator_release_handle'));
final _heresdkTrafficAwareNavigationBindingslistofSdkCoreGeocoordinatesIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_core_GeoCoordinates_iterator_is_valid'));
final _heresdkTrafficAwareNavigationBindingslistofSdkCoreGeocoordinatesIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_core_GeoCoordinates_iterator_increment'));
final _heresdkTrafficAwareNavigationBindingslistofSdkCoreGeocoordinatesIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_core_GeoCoordinates_iterator_get'));

Pointer<Void> heresdkTrafficAwareNavigationBindingslistofSdkCoreGeocoordinatesToFfi(List<GeoCoordinates> value) {
  final _result = _heresdkTrafficAwareNavigationBindingslistofSdkCoreGeocoordinatesCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreGeocoordinatesToFfi(element);
    _heresdkTrafficAwareNavigationBindingslistofSdkCoreGeocoordinatesInsert(_result, _elementHandle);
    sdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoCoordinates> heresdkTrafficAwareNavigationBindingslistofSdkCoreGeocoordinatesFromFfi(Pointer<Void> handle) {
  final result = List<GeoCoordinates>.empty(growable: true);
  final _iteratorHandle = _heresdkTrafficAwareNavigationBindingslistofSdkCoreGeocoordinatesIterator(handle);
  while (_heresdkTrafficAwareNavigationBindingslistofSdkCoreGeocoordinatesIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkTrafficAwareNavigationBindingslistofSdkCoreGeocoordinatesIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreGeocoordinatesFromFfi(_elementHandle));
    } finally {
      sdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
    }
    _heresdkTrafficAwareNavigationBindingslistofSdkCoreGeocoordinatesIteratorIncrement(_iteratorHandle);
  }
  _heresdkTrafficAwareNavigationBindingslistofSdkCoreGeocoordinatesIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkTrafficAwareNavigationBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(Pointer<Void> handle) => _heresdkTrafficAwareNavigationBindingslistofSdkCoreGeocoordinatesReleaseHandle(handle);

final _heresdkTrafficAwareNavigationBindingslistofSdkCoreGeocoordinatesCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_core_GeoCoordinates_create_handle_nullable'));
final _heresdkTrafficAwareNavigationBindingslistofSdkCoreGeocoordinatesReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_core_GeoCoordinates_release_handle_nullable'));
final _heresdkTrafficAwareNavigationBindingslistofSdkCoreGeocoordinatesGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_core_GeoCoordinates_get_value_nullable'));

Pointer<Void> heresdkTrafficAwareNavigationBindingslistofSdkCoreGeocoordinatesToFfiNullable(List<GeoCoordinates>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkTrafficAwareNavigationBindingslistofSdkCoreGeocoordinatesToFfi(value);
  final result = _heresdkTrafficAwareNavigationBindingslistofSdkCoreGeocoordinatesCreateHandleNullable(_handle);
  heresdkTrafficAwareNavigationBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

List<GeoCoordinates>? heresdkTrafficAwareNavigationBindingslistofSdkCoreGeocoordinatesFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkTrafficAwareNavigationBindingslistofSdkCoreGeocoordinatesGetValueNullable(handle);
  final result = heresdkTrafficAwareNavigationBindingslistofSdkCoreGeocoordinatesFromFfi(_handle);
  heresdkTrafficAwareNavigationBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

void heresdkTrafficAwareNavigationBindingslistofSdkCoreGeocoordinatesReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkTrafficAwareNavigationBindingslistofSdkCoreGeocoordinatesReleaseHandleNullable(handle);

final _heresdkTrafficAwareNavigationBindingslistofSdkCoreGeopolygonCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_core_GeoPolygon_create_handle'));
final _heresdkTrafficAwareNavigationBindingslistofSdkCoreGeopolygonReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_core_GeoPolygon_release_handle'));
final _heresdkTrafficAwareNavigationBindingslistofSdkCoreGeopolygonInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_core_GeoPolygon_insert'));
final _heresdkTrafficAwareNavigationBindingslistofSdkCoreGeopolygonIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_core_GeoPolygon_iterator'));
final _heresdkTrafficAwareNavigationBindingslistofSdkCoreGeopolygonIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_core_GeoPolygon_iterator_release_handle'));
final _heresdkTrafficAwareNavigationBindingslistofSdkCoreGeopolygonIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_core_GeoPolygon_iterator_is_valid'));
final _heresdkTrafficAwareNavigationBindingslistofSdkCoreGeopolygonIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_core_GeoPolygon_iterator_increment'));
final _heresdkTrafficAwareNavigationBindingslistofSdkCoreGeopolygonIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_core_GeoPolygon_iterator_get'));

Pointer<Void> heresdkTrafficAwareNavigationBindingslistofSdkCoreGeopolygonToFfi(List<GeoPolygon> value) {
  final _result = _heresdkTrafficAwareNavigationBindingslistofSdkCoreGeopolygonCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreGeopolygonToFfi(element);
    _heresdkTrafficAwareNavigationBindingslistofSdkCoreGeopolygonInsert(_result, _elementHandle);
    sdkCoreGeopolygonReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoPolygon> heresdkTrafficAwareNavigationBindingslistofSdkCoreGeopolygonFromFfi(Pointer<Void> handle) {
  final result = List<GeoPolygon>.empty(growable: true);
  final _iteratorHandle = _heresdkTrafficAwareNavigationBindingslistofSdkCoreGeopolygonIterator(handle);
  while (_heresdkTrafficAwareNavigationBindingslistofSdkCoreGeopolygonIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkTrafficAwareNavigationBindingslistofSdkCoreGeopolygonIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreGeopolygonFromFfi(_elementHandle));
    } finally {
      sdkCoreGeopolygonReleaseFfiHandle(_elementHandle);
    }
    _heresdkTrafficAwareNavigationBindingslistofSdkCoreGeopolygonIteratorIncrement(_iteratorHandle);
  }
  _heresdkTrafficAwareNavigationBindingslistofSdkCoreGeopolygonIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkTrafficAwareNavigationBindingslistofSdkCoreGeopolygonReleaseFfiHandle(Pointer<Void> handle) => _heresdkTrafficAwareNavigationBindingslistofSdkCoreGeopolygonReleaseHandle(handle);

final _heresdkTrafficAwareNavigationBindingslistofSdkCoreGeopolygonCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_core_GeoPolygon_create_handle_nullable'));
final _heresdkTrafficAwareNavigationBindingslistofSdkCoreGeopolygonReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_core_GeoPolygon_release_handle_nullable'));
final _heresdkTrafficAwareNavigationBindingslistofSdkCoreGeopolygonGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_core_GeoPolygon_get_value_nullable'));

Pointer<Void> heresdkTrafficAwareNavigationBindingslistofSdkCoreGeopolygonToFfiNullable(List<GeoPolygon>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkTrafficAwareNavigationBindingslistofSdkCoreGeopolygonToFfi(value);
  final result = _heresdkTrafficAwareNavigationBindingslistofSdkCoreGeopolygonCreateHandleNullable(_handle);
  heresdkTrafficAwareNavigationBindingslistofSdkCoreGeopolygonReleaseFfiHandle(_handle);
  return result;
}

List<GeoPolygon>? heresdkTrafficAwareNavigationBindingslistofSdkCoreGeopolygonFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkTrafficAwareNavigationBindingslistofSdkCoreGeopolygonGetValueNullable(handle);
  final result = heresdkTrafficAwareNavigationBindingslistofSdkCoreGeopolygonFromFfi(_handle);
  heresdkTrafficAwareNavigationBindingslistofSdkCoreGeopolygonReleaseFfiHandle(_handle);
  return result;
}

void heresdkTrafficAwareNavigationBindingslistofSdkCoreGeopolygonReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkTrafficAwareNavigationBindingslistofSdkCoreGeopolygonReleaseHandleNullable(handle);

final _heresdkTrafficAwareNavigationBindingslistofSdkCoreLanguagecodeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_core_LanguageCode_create_handle'));
final _heresdkTrafficAwareNavigationBindingslistofSdkCoreLanguagecodeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_core_LanguageCode_release_handle'));
final _heresdkTrafficAwareNavigationBindingslistofSdkCoreLanguagecodeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_core_LanguageCode_insert'));
final _heresdkTrafficAwareNavigationBindingslistofSdkCoreLanguagecodeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_core_LanguageCode_iterator'));
final _heresdkTrafficAwareNavigationBindingslistofSdkCoreLanguagecodeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_core_LanguageCode_iterator_release_handle'));
final _heresdkTrafficAwareNavigationBindingslistofSdkCoreLanguagecodeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_core_LanguageCode_iterator_is_valid'));
final _heresdkTrafficAwareNavigationBindingslistofSdkCoreLanguagecodeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_core_LanguageCode_iterator_increment'));
final _heresdkTrafficAwareNavigationBindingslistofSdkCoreLanguagecodeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_core_LanguageCode_iterator_get'));

Pointer<Void> heresdkTrafficAwareNavigationBindingslistofSdkCoreLanguagecodeToFfi(List<LanguageCode> value) {
  final _result = _heresdkTrafficAwareNavigationBindingslistofSdkCoreLanguagecodeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreLanguagecodeToFfi(element);
    _heresdkTrafficAwareNavigationBindingslistofSdkCoreLanguagecodeInsert(_result, _elementHandle);
    sdkCoreLanguagecodeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<LanguageCode> heresdkTrafficAwareNavigationBindingslistofSdkCoreLanguagecodeFromFfi(Pointer<Void> handle) {
  final result = List<LanguageCode>.empty(growable: true);
  final _iteratorHandle = _heresdkTrafficAwareNavigationBindingslistofSdkCoreLanguagecodeIterator(handle);
  while (_heresdkTrafficAwareNavigationBindingslistofSdkCoreLanguagecodeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkTrafficAwareNavigationBindingslistofSdkCoreLanguagecodeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreLanguagecodeFromFfi(_elementHandle));
    } finally {
      sdkCoreLanguagecodeReleaseFfiHandle(_elementHandle);
    }
    _heresdkTrafficAwareNavigationBindingslistofSdkCoreLanguagecodeIteratorIncrement(_iteratorHandle);
  }
  _heresdkTrafficAwareNavigationBindingslistofSdkCoreLanguagecodeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkTrafficAwareNavigationBindingslistofSdkCoreLanguagecodeReleaseFfiHandle(Pointer<Void> handle) => _heresdkTrafficAwareNavigationBindingslistofSdkCoreLanguagecodeReleaseHandle(handle);

final _heresdkTrafficAwareNavigationBindingslistofSdkCoreLanguagecodeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_core_LanguageCode_create_handle_nullable'));
final _heresdkTrafficAwareNavigationBindingslistofSdkCoreLanguagecodeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_core_LanguageCode_release_handle_nullable'));
final _heresdkTrafficAwareNavigationBindingslistofSdkCoreLanguagecodeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_core_LanguageCode_get_value_nullable'));

Pointer<Void> heresdkTrafficAwareNavigationBindingslistofSdkCoreLanguagecodeToFfiNullable(List<LanguageCode>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkTrafficAwareNavigationBindingslistofSdkCoreLanguagecodeToFfi(value);
  final result = _heresdkTrafficAwareNavigationBindingslistofSdkCoreLanguagecodeCreateHandleNullable(_handle);
  heresdkTrafficAwareNavigationBindingslistofSdkCoreLanguagecodeReleaseFfiHandle(_handle);
  return result;
}

List<LanguageCode>? heresdkTrafficAwareNavigationBindingslistofSdkCoreLanguagecodeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkTrafficAwareNavigationBindingslistofSdkCoreLanguagecodeGetValueNullable(handle);
  final result = heresdkTrafficAwareNavigationBindingslistofSdkCoreLanguagecodeFromFfi(_handle);
  heresdkTrafficAwareNavigationBindingslistofSdkCoreLanguagecodeReleaseFfiHandle(_handle);
  return result;
}

void heresdkTrafficAwareNavigationBindingslistofSdkCoreLanguagecodeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkTrafficAwareNavigationBindingslistofSdkCoreLanguagecodeReleaseHandleNullable(handle);

final _heresdkTrafficAwareNavigationBindingslistofSdkCoreLocalizedtextCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_core_LocalizedText_create_handle'));
final _heresdkTrafficAwareNavigationBindingslistofSdkCoreLocalizedtextReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_core_LocalizedText_release_handle'));
final _heresdkTrafficAwareNavigationBindingslistofSdkCoreLocalizedtextInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_core_LocalizedText_insert'));
final _heresdkTrafficAwareNavigationBindingslistofSdkCoreLocalizedtextIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_core_LocalizedText_iterator'));
final _heresdkTrafficAwareNavigationBindingslistofSdkCoreLocalizedtextIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_core_LocalizedText_iterator_release_handle'));
final _heresdkTrafficAwareNavigationBindingslistofSdkCoreLocalizedtextIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_core_LocalizedText_iterator_is_valid'));
final _heresdkTrafficAwareNavigationBindingslistofSdkCoreLocalizedtextIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_core_LocalizedText_iterator_increment'));
final _heresdkTrafficAwareNavigationBindingslistofSdkCoreLocalizedtextIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_core_LocalizedText_iterator_get'));

Pointer<Void> heresdkTrafficAwareNavigationBindingslistofSdkCoreLocalizedtextToFfi(List<LocalizedText> value) {
  final _result = _heresdkTrafficAwareNavigationBindingslistofSdkCoreLocalizedtextCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreLocalizedtextToFfi(element);
    _heresdkTrafficAwareNavigationBindingslistofSdkCoreLocalizedtextInsert(_result, _elementHandle);
    sdkCoreLocalizedtextReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<LocalizedText> heresdkTrafficAwareNavigationBindingslistofSdkCoreLocalizedtextFromFfi(Pointer<Void> handle) {
  final result = List<LocalizedText>.empty(growable: true);
  final _iteratorHandle = _heresdkTrafficAwareNavigationBindingslistofSdkCoreLocalizedtextIterator(handle);
  while (_heresdkTrafficAwareNavigationBindingslistofSdkCoreLocalizedtextIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkTrafficAwareNavigationBindingslistofSdkCoreLocalizedtextIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreLocalizedtextFromFfi(_elementHandle));
    } finally {
      sdkCoreLocalizedtextReleaseFfiHandle(_elementHandle);
    }
    _heresdkTrafficAwareNavigationBindingslistofSdkCoreLocalizedtextIteratorIncrement(_iteratorHandle);
  }
  _heresdkTrafficAwareNavigationBindingslistofSdkCoreLocalizedtextIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkTrafficAwareNavigationBindingslistofSdkCoreLocalizedtextReleaseFfiHandle(Pointer<Void> handle) => _heresdkTrafficAwareNavigationBindingslistofSdkCoreLocalizedtextReleaseHandle(handle);

final _heresdkTrafficAwareNavigationBindingslistofSdkCoreLocalizedtextCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_core_LocalizedText_create_handle_nullable'));
final _heresdkTrafficAwareNavigationBindingslistofSdkCoreLocalizedtextReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_core_LocalizedText_release_handle_nullable'));
final _heresdkTrafficAwareNavigationBindingslistofSdkCoreLocalizedtextGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_core_LocalizedText_get_value_nullable'));

Pointer<Void> heresdkTrafficAwareNavigationBindingslistofSdkCoreLocalizedtextToFfiNullable(List<LocalizedText>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkTrafficAwareNavigationBindingslistofSdkCoreLocalizedtextToFfi(value);
  final result = _heresdkTrafficAwareNavigationBindingslistofSdkCoreLocalizedtextCreateHandleNullable(_handle);
  heresdkTrafficAwareNavigationBindingslistofSdkCoreLocalizedtextReleaseFfiHandle(_handle);
  return result;
}

List<LocalizedText>? heresdkTrafficAwareNavigationBindingslistofSdkCoreLocalizedtextFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkTrafficAwareNavigationBindingslistofSdkCoreLocalizedtextGetValueNullable(handle);
  final result = heresdkTrafficAwareNavigationBindingslistofSdkCoreLocalizedtextFromFfi(_handle);
  heresdkTrafficAwareNavigationBindingslistofSdkCoreLocalizedtextReleaseFfiHandle(_handle);
  return result;
}

void heresdkTrafficAwareNavigationBindingslistofSdkCoreLocalizedtextReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkTrafficAwareNavigationBindingslistofSdkCoreLocalizedtextReleaseHandleNullable(handle);

final _heresdkTrafficAwareNavigationBindingslistofSdkCoreLocationCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_core_Location_create_handle'));
final _heresdkTrafficAwareNavigationBindingslistofSdkCoreLocationReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_core_Location_release_handle'));
final _heresdkTrafficAwareNavigationBindingslistofSdkCoreLocationInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_core_Location_insert'));
final _heresdkTrafficAwareNavigationBindingslistofSdkCoreLocationIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_core_Location_iterator'));
final _heresdkTrafficAwareNavigationBindingslistofSdkCoreLocationIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_core_Location_iterator_release_handle'));
final _heresdkTrafficAwareNavigationBindingslistofSdkCoreLocationIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_core_Location_iterator_is_valid'));
final _heresdkTrafficAwareNavigationBindingslistofSdkCoreLocationIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_core_Location_iterator_increment'));
final _heresdkTrafficAwareNavigationBindingslistofSdkCoreLocationIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_core_Location_iterator_get'));

Pointer<Void> heresdkTrafficAwareNavigationBindingslistofSdkCoreLocationToFfi(List<location_impl.Location> value) {
  final _result = _heresdkTrafficAwareNavigationBindingslistofSdkCoreLocationCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreLocationToFfi(element);
    _heresdkTrafficAwareNavigationBindingslistofSdkCoreLocationInsert(_result, _elementHandle);
    sdkCoreLocationReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<location_impl.Location> heresdkTrafficAwareNavigationBindingslistofSdkCoreLocationFromFfi(Pointer<Void> handle) {
  final result = List<location_impl.Location>.empty(growable: true);
  final _iteratorHandle = _heresdkTrafficAwareNavigationBindingslistofSdkCoreLocationIterator(handle);
  while (_heresdkTrafficAwareNavigationBindingslistofSdkCoreLocationIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkTrafficAwareNavigationBindingslistofSdkCoreLocationIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreLocationFromFfi(_elementHandle));
    } finally {
      sdkCoreLocationReleaseFfiHandle(_elementHandle);
    }
    _heresdkTrafficAwareNavigationBindingslistofSdkCoreLocationIteratorIncrement(_iteratorHandle);
  }
  _heresdkTrafficAwareNavigationBindingslistofSdkCoreLocationIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkTrafficAwareNavigationBindingslistofSdkCoreLocationReleaseFfiHandle(Pointer<Void> handle) => _heresdkTrafficAwareNavigationBindingslistofSdkCoreLocationReleaseHandle(handle);

final _heresdkTrafficAwareNavigationBindingslistofSdkCoreLocationCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_core_Location_create_handle_nullable'));
final _heresdkTrafficAwareNavigationBindingslistofSdkCoreLocationReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_core_Location_release_handle_nullable'));
final _heresdkTrafficAwareNavigationBindingslistofSdkCoreLocationGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_core_Location_get_value_nullable'));

Pointer<Void> heresdkTrafficAwareNavigationBindingslistofSdkCoreLocationToFfiNullable(List<location_impl.Location>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkTrafficAwareNavigationBindingslistofSdkCoreLocationToFfi(value);
  final result = _heresdkTrafficAwareNavigationBindingslistofSdkCoreLocationCreateHandleNullable(_handle);
  heresdkTrafficAwareNavigationBindingslistofSdkCoreLocationReleaseFfiHandle(_handle);
  return result;
}

List<location_impl.Location>? heresdkTrafficAwareNavigationBindingslistofSdkCoreLocationFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkTrafficAwareNavigationBindingslistofSdkCoreLocationGetValueNullable(handle);
  final result = heresdkTrafficAwareNavigationBindingslistofSdkCoreLocationFromFfi(_handle);
  heresdkTrafficAwareNavigationBindingslistofSdkCoreLocationReleaseFfiHandle(_handle);
  return result;
}

void heresdkTrafficAwareNavigationBindingslistofSdkCoreLocationReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkTrafficAwareNavigationBindingslistofSdkCoreLocationReleaseHandleNullable(handle);

final _heresdkTrafficAwareNavigationBindingslistofSdkCoreEngineLayerconfigurationFeatureCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_create_handle'));
final _heresdkTrafficAwareNavigationBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_release_handle'));
final _heresdkTrafficAwareNavigationBindingslistofSdkCoreEngineLayerconfigurationFeatureInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_insert'));
final _heresdkTrafficAwareNavigationBindingslistofSdkCoreEngineLayerconfigurationFeatureIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator'));
final _heresdkTrafficAwareNavigationBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator_release_handle'));
final _heresdkTrafficAwareNavigationBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator_is_valid'));
final _heresdkTrafficAwareNavigationBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator_increment'));
final _heresdkTrafficAwareNavigationBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator_get'));

Pointer<Void> heresdkTrafficAwareNavigationBindingslistofSdkCoreEngineLayerconfigurationFeatureToFfi(List<LayerConfigurationFeature> value) {
  final _result = _heresdkTrafficAwareNavigationBindingslistofSdkCoreEngineLayerconfigurationFeatureCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreEngineLayerconfigurationFeatureToFfi(element);
    _heresdkTrafficAwareNavigationBindingslistofSdkCoreEngineLayerconfigurationFeatureInsert(_result, _elementHandle);
    sdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<LayerConfigurationFeature> heresdkTrafficAwareNavigationBindingslistofSdkCoreEngineLayerconfigurationFeatureFromFfi(Pointer<Void> handle) {
  final result = List<LayerConfigurationFeature>.empty(growable: true);
  final _iteratorHandle = _heresdkTrafficAwareNavigationBindingslistofSdkCoreEngineLayerconfigurationFeatureIterator(handle);
  while (_heresdkTrafficAwareNavigationBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkTrafficAwareNavigationBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreEngineLayerconfigurationFeatureFromFfi(_elementHandle));
    } finally {
      sdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(_elementHandle);
    }
    _heresdkTrafficAwareNavigationBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorIncrement(_iteratorHandle);
  }
  _heresdkTrafficAwareNavigationBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkTrafficAwareNavigationBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(Pointer<Void> handle) => _heresdkTrafficAwareNavigationBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseHandle(handle);

final _heresdkTrafficAwareNavigationBindingslistofSdkCoreEngineLayerconfigurationFeatureCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_create_handle_nullable'));
final _heresdkTrafficAwareNavigationBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_release_handle_nullable'));
final _heresdkTrafficAwareNavigationBindingslistofSdkCoreEngineLayerconfigurationFeatureGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_get_value_nullable'));

Pointer<Void> heresdkTrafficAwareNavigationBindingslistofSdkCoreEngineLayerconfigurationFeatureToFfiNullable(List<LayerConfigurationFeature>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkTrafficAwareNavigationBindingslistofSdkCoreEngineLayerconfigurationFeatureToFfi(value);
  final result = _heresdkTrafficAwareNavigationBindingslistofSdkCoreEngineLayerconfigurationFeatureCreateHandleNullable(_handle);
  heresdkTrafficAwareNavigationBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(_handle);
  return result;
}

List<LayerConfigurationFeature>? heresdkTrafficAwareNavigationBindingslistofSdkCoreEngineLayerconfigurationFeatureFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkTrafficAwareNavigationBindingslistofSdkCoreEngineLayerconfigurationFeatureGetValueNullable(handle);
  final result = heresdkTrafficAwareNavigationBindingslistofSdkCoreEngineLayerconfigurationFeatureFromFfi(_handle);
  heresdkTrafficAwareNavigationBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(_handle);
  return result;
}

void heresdkTrafficAwareNavigationBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkTrafficAwareNavigationBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseHandleNullable(handle);

final _heresdkTrafficAwareNavigationBindingslistofSdkNavigationGpxtrackCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_navigation_GPXTrack_create_handle'));
final _heresdkTrafficAwareNavigationBindingslistofSdkNavigationGpxtrackReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_navigation_GPXTrack_release_handle'));
final _heresdkTrafficAwareNavigationBindingslistofSdkNavigationGpxtrackInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_navigation_GPXTrack_insert'));
final _heresdkTrafficAwareNavigationBindingslistofSdkNavigationGpxtrackIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_navigation_GPXTrack_iterator'));
final _heresdkTrafficAwareNavigationBindingslistofSdkNavigationGpxtrackIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_navigation_GPXTrack_iterator_release_handle'));
final _heresdkTrafficAwareNavigationBindingslistofSdkNavigationGpxtrackIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_navigation_GPXTrack_iterator_is_valid'));
final _heresdkTrafficAwareNavigationBindingslistofSdkNavigationGpxtrackIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_navigation_GPXTrack_iterator_increment'));
final _heresdkTrafficAwareNavigationBindingslistofSdkNavigationGpxtrackIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_navigation_GPXTrack_iterator_get'));

Pointer<Void> heresdkTrafficAwareNavigationBindingslistofSdkNavigationGpxtrackToFfi(List<GPXTrack> value) {
  final _result = _heresdkTrafficAwareNavigationBindingslistofSdkNavigationGpxtrackCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkNavigationGpxtrackToFfi(element);
    _heresdkTrafficAwareNavigationBindingslistofSdkNavigationGpxtrackInsert(_result, _elementHandle);
    sdkNavigationGpxtrackReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GPXTrack> heresdkTrafficAwareNavigationBindingslistofSdkNavigationGpxtrackFromFfi(Pointer<Void> handle) {
  final result = List<GPXTrack>.empty(growable: true);
  final _iteratorHandle = _heresdkTrafficAwareNavigationBindingslistofSdkNavigationGpxtrackIterator(handle);
  while (_heresdkTrafficAwareNavigationBindingslistofSdkNavigationGpxtrackIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkTrafficAwareNavigationBindingslistofSdkNavigationGpxtrackIteratorGet(_iteratorHandle);
    try {
      result.add(sdkNavigationGpxtrackFromFfi(_elementHandle));
    } finally {
      sdkNavigationGpxtrackReleaseFfiHandle(_elementHandle);
    }
    _heresdkTrafficAwareNavigationBindingslistofSdkNavigationGpxtrackIteratorIncrement(_iteratorHandle);
  }
  _heresdkTrafficAwareNavigationBindingslistofSdkNavigationGpxtrackIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkTrafficAwareNavigationBindingslistofSdkNavigationGpxtrackReleaseFfiHandle(Pointer<Void> handle) => _heresdkTrafficAwareNavigationBindingslistofSdkNavigationGpxtrackReleaseHandle(handle);

final _heresdkTrafficAwareNavigationBindingslistofSdkNavigationGpxtrackCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_navigation_GPXTrack_create_handle_nullable'));
final _heresdkTrafficAwareNavigationBindingslistofSdkNavigationGpxtrackReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_navigation_GPXTrack_release_handle_nullable'));
final _heresdkTrafficAwareNavigationBindingslistofSdkNavigationGpxtrackGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_navigation_GPXTrack_get_value_nullable'));

Pointer<Void> heresdkTrafficAwareNavigationBindingslistofSdkNavigationGpxtrackToFfiNullable(List<GPXTrack>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkTrafficAwareNavigationBindingslistofSdkNavigationGpxtrackToFfi(value);
  final result = _heresdkTrafficAwareNavigationBindingslistofSdkNavigationGpxtrackCreateHandleNullable(_handle);
  heresdkTrafficAwareNavigationBindingslistofSdkNavigationGpxtrackReleaseFfiHandle(_handle);
  return result;
}

List<GPXTrack>? heresdkTrafficAwareNavigationBindingslistofSdkNavigationGpxtrackFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkTrafficAwareNavigationBindingslistofSdkNavigationGpxtrackGetValueNullable(handle);
  final result = heresdkTrafficAwareNavigationBindingslistofSdkNavigationGpxtrackFromFfi(_handle);
  heresdkTrafficAwareNavigationBindingslistofSdkNavigationGpxtrackReleaseFfiHandle(_handle);
  return result;
}

void heresdkTrafficAwareNavigationBindingslistofSdkNavigationGpxtrackReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkTrafficAwareNavigationBindingslistofSdkNavigationGpxtrackReleaseHandleNullable(handle);

final _heresdkTrafficAwareNavigationBindingslistofSdkNavigationLaneCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_navigation_Lane_create_handle'));
final _heresdkTrafficAwareNavigationBindingslistofSdkNavigationLaneReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_navigation_Lane_release_handle'));
final _heresdkTrafficAwareNavigationBindingslistofSdkNavigationLaneInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_navigation_Lane_insert'));
final _heresdkTrafficAwareNavigationBindingslistofSdkNavigationLaneIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_navigation_Lane_iterator'));
final _heresdkTrafficAwareNavigationBindingslistofSdkNavigationLaneIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_navigation_Lane_iterator_release_handle'));
final _heresdkTrafficAwareNavigationBindingslistofSdkNavigationLaneIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_navigation_Lane_iterator_is_valid'));
final _heresdkTrafficAwareNavigationBindingslistofSdkNavigationLaneIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_navigation_Lane_iterator_increment'));
final _heresdkTrafficAwareNavigationBindingslistofSdkNavigationLaneIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_navigation_Lane_iterator_get'));

Pointer<Void> heresdkTrafficAwareNavigationBindingslistofSdkNavigationLaneToFfi(List<Lane> value) {
  final _result = _heresdkTrafficAwareNavigationBindingslistofSdkNavigationLaneCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkNavigationLaneToFfi(element);
    _heresdkTrafficAwareNavigationBindingslistofSdkNavigationLaneInsert(_result, _elementHandle);
    sdkNavigationLaneReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Lane> heresdkTrafficAwareNavigationBindingslistofSdkNavigationLaneFromFfi(Pointer<Void> handle) {
  final result = List<Lane>.empty(growable: true);
  final _iteratorHandle = _heresdkTrafficAwareNavigationBindingslistofSdkNavigationLaneIterator(handle);
  while (_heresdkTrafficAwareNavigationBindingslistofSdkNavigationLaneIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkTrafficAwareNavigationBindingslistofSdkNavigationLaneIteratorGet(_iteratorHandle);
    try {
      result.add(sdkNavigationLaneFromFfi(_elementHandle));
    } finally {
      sdkNavigationLaneReleaseFfiHandle(_elementHandle);
    }
    _heresdkTrafficAwareNavigationBindingslistofSdkNavigationLaneIteratorIncrement(_iteratorHandle);
  }
  _heresdkTrafficAwareNavigationBindingslistofSdkNavigationLaneIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkTrafficAwareNavigationBindingslistofSdkNavigationLaneReleaseFfiHandle(Pointer<Void> handle) => _heresdkTrafficAwareNavigationBindingslistofSdkNavigationLaneReleaseHandle(handle);

final _heresdkTrafficAwareNavigationBindingslistofSdkNavigationLaneCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_navigation_Lane_create_handle_nullable'));
final _heresdkTrafficAwareNavigationBindingslistofSdkNavigationLaneReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_navigation_Lane_release_handle_nullable'));
final _heresdkTrafficAwareNavigationBindingslistofSdkNavigationLaneGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_navigation_Lane_get_value_nullable'));

Pointer<Void> heresdkTrafficAwareNavigationBindingslistofSdkNavigationLaneToFfiNullable(List<Lane>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkTrafficAwareNavigationBindingslistofSdkNavigationLaneToFfi(value);
  final result = _heresdkTrafficAwareNavigationBindingslistofSdkNavigationLaneCreateHandleNullable(_handle);
  heresdkTrafficAwareNavigationBindingslistofSdkNavigationLaneReleaseFfiHandle(_handle);
  return result;
}

List<Lane>? heresdkTrafficAwareNavigationBindingslistofSdkNavigationLaneFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkTrafficAwareNavigationBindingslistofSdkNavigationLaneGetValueNullable(handle);
  final result = heresdkTrafficAwareNavigationBindingslistofSdkNavigationLaneFromFfi(_handle);
  heresdkTrafficAwareNavigationBindingslistofSdkNavigationLaneReleaseFfiHandle(_handle);
  return result;
}

void heresdkTrafficAwareNavigationBindingslistofSdkNavigationLaneReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkTrafficAwareNavigationBindingslistofSdkNavigationLaneReleaseHandleNullable(handle);

final _heresdkTrafficAwareNavigationBindingslistofSdkNavigationManeuvernotificationtypeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_navigation_ManeuverNotificationType_create_handle'));
final _heresdkTrafficAwareNavigationBindingslistofSdkNavigationManeuvernotificationtypeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_navigation_ManeuverNotificationType_release_handle'));
final _heresdkTrafficAwareNavigationBindingslistofSdkNavigationManeuvernotificationtypeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_navigation_ManeuverNotificationType_insert'));
final _heresdkTrafficAwareNavigationBindingslistofSdkNavigationManeuvernotificationtypeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_navigation_ManeuverNotificationType_iterator'));
final _heresdkTrafficAwareNavigationBindingslistofSdkNavigationManeuvernotificationtypeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_navigation_ManeuverNotificationType_iterator_release_handle'));
final _heresdkTrafficAwareNavigationBindingslistofSdkNavigationManeuvernotificationtypeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_navigation_ManeuverNotificationType_iterator_is_valid'));
final _heresdkTrafficAwareNavigationBindingslistofSdkNavigationManeuvernotificationtypeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_navigation_ManeuverNotificationType_iterator_increment'));
final _heresdkTrafficAwareNavigationBindingslistofSdkNavigationManeuvernotificationtypeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_navigation_ManeuverNotificationType_iterator_get'));

Pointer<Void> heresdkTrafficAwareNavigationBindingslistofSdkNavigationManeuvernotificationtypeToFfi(List<ManeuverNotificationType> value) {
  final _result = _heresdkTrafficAwareNavigationBindingslistofSdkNavigationManeuvernotificationtypeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkNavigationManeuvernotificationtypeToFfi(element);
    _heresdkTrafficAwareNavigationBindingslistofSdkNavigationManeuvernotificationtypeInsert(_result, _elementHandle);
    sdkNavigationManeuvernotificationtypeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<ManeuverNotificationType> heresdkTrafficAwareNavigationBindingslistofSdkNavigationManeuvernotificationtypeFromFfi(Pointer<Void> handle) {
  final result = List<ManeuverNotificationType>.empty(growable: true);
  final _iteratorHandle = _heresdkTrafficAwareNavigationBindingslistofSdkNavigationManeuvernotificationtypeIterator(handle);
  while (_heresdkTrafficAwareNavigationBindingslistofSdkNavigationManeuvernotificationtypeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkTrafficAwareNavigationBindingslistofSdkNavigationManeuvernotificationtypeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkNavigationManeuvernotificationtypeFromFfi(_elementHandle));
    } finally {
      sdkNavigationManeuvernotificationtypeReleaseFfiHandle(_elementHandle);
    }
    _heresdkTrafficAwareNavigationBindingslistofSdkNavigationManeuvernotificationtypeIteratorIncrement(_iteratorHandle);
  }
  _heresdkTrafficAwareNavigationBindingslistofSdkNavigationManeuvernotificationtypeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkTrafficAwareNavigationBindingslistofSdkNavigationManeuvernotificationtypeReleaseFfiHandle(Pointer<Void> handle) => _heresdkTrafficAwareNavigationBindingslistofSdkNavigationManeuvernotificationtypeReleaseHandle(handle);

final _heresdkTrafficAwareNavigationBindingslistofSdkNavigationManeuvernotificationtypeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_navigation_ManeuverNotificationType_create_handle_nullable'));
final _heresdkTrafficAwareNavigationBindingslistofSdkNavigationManeuvernotificationtypeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_navigation_ManeuverNotificationType_release_handle_nullable'));
final _heresdkTrafficAwareNavigationBindingslistofSdkNavigationManeuvernotificationtypeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_navigation_ManeuverNotificationType_get_value_nullable'));

Pointer<Void> heresdkTrafficAwareNavigationBindingslistofSdkNavigationManeuvernotificationtypeToFfiNullable(List<ManeuverNotificationType>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkTrafficAwareNavigationBindingslistofSdkNavigationManeuvernotificationtypeToFfi(value);
  final result = _heresdkTrafficAwareNavigationBindingslistofSdkNavigationManeuvernotificationtypeCreateHandleNullable(_handle);
  heresdkTrafficAwareNavigationBindingslistofSdkNavigationManeuvernotificationtypeReleaseFfiHandle(_handle);
  return result;
}

List<ManeuverNotificationType>? heresdkTrafficAwareNavigationBindingslistofSdkNavigationManeuvernotificationtypeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkTrafficAwareNavigationBindingslistofSdkNavigationManeuvernotificationtypeGetValueNullable(handle);
  final result = heresdkTrafficAwareNavigationBindingslistofSdkNavigationManeuvernotificationtypeFromFfi(_handle);
  heresdkTrafficAwareNavigationBindingslistofSdkNavigationManeuvernotificationtypeReleaseFfiHandle(_handle);
  return result;
}

void heresdkTrafficAwareNavigationBindingslistofSdkNavigationManeuvernotificationtypeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkTrafficAwareNavigationBindingslistofSdkNavigationManeuvernotificationtypeReleaseHandleNullable(handle);

final _heresdkTrafficAwareNavigationBindingslistofSdkNavigationManeuverprogressCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_navigation_ManeuverProgress_create_handle'));
final _heresdkTrafficAwareNavigationBindingslistofSdkNavigationManeuverprogressReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_navigation_ManeuverProgress_release_handle'));
final _heresdkTrafficAwareNavigationBindingslistofSdkNavigationManeuverprogressInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_navigation_ManeuverProgress_insert'));
final _heresdkTrafficAwareNavigationBindingslistofSdkNavigationManeuverprogressIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_navigation_ManeuverProgress_iterator'));
final _heresdkTrafficAwareNavigationBindingslistofSdkNavigationManeuverprogressIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_navigation_ManeuverProgress_iterator_release_handle'));
final _heresdkTrafficAwareNavigationBindingslistofSdkNavigationManeuverprogressIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_navigation_ManeuverProgress_iterator_is_valid'));
final _heresdkTrafficAwareNavigationBindingslistofSdkNavigationManeuverprogressIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_navigation_ManeuverProgress_iterator_increment'));
final _heresdkTrafficAwareNavigationBindingslistofSdkNavigationManeuverprogressIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_navigation_ManeuverProgress_iterator_get'));

Pointer<Void> heresdkTrafficAwareNavigationBindingslistofSdkNavigationManeuverprogressToFfi(List<ManeuverProgress> value) {
  final _result = _heresdkTrafficAwareNavigationBindingslistofSdkNavigationManeuverprogressCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkNavigationManeuverprogressToFfi(element);
    _heresdkTrafficAwareNavigationBindingslistofSdkNavigationManeuverprogressInsert(_result, _elementHandle);
    sdkNavigationManeuverprogressReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<ManeuverProgress> heresdkTrafficAwareNavigationBindingslistofSdkNavigationManeuverprogressFromFfi(Pointer<Void> handle) {
  final result = List<ManeuverProgress>.empty(growable: true);
  final _iteratorHandle = _heresdkTrafficAwareNavigationBindingslistofSdkNavigationManeuverprogressIterator(handle);
  while (_heresdkTrafficAwareNavigationBindingslistofSdkNavigationManeuverprogressIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkTrafficAwareNavigationBindingslistofSdkNavigationManeuverprogressIteratorGet(_iteratorHandle);
    try {
      result.add(sdkNavigationManeuverprogressFromFfi(_elementHandle));
    } finally {
      sdkNavigationManeuverprogressReleaseFfiHandle(_elementHandle);
    }
    _heresdkTrafficAwareNavigationBindingslistofSdkNavigationManeuverprogressIteratorIncrement(_iteratorHandle);
  }
  _heresdkTrafficAwareNavigationBindingslistofSdkNavigationManeuverprogressIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkTrafficAwareNavigationBindingslistofSdkNavigationManeuverprogressReleaseFfiHandle(Pointer<Void> handle) => _heresdkTrafficAwareNavigationBindingslistofSdkNavigationManeuverprogressReleaseHandle(handle);

final _heresdkTrafficAwareNavigationBindingslistofSdkNavigationManeuverprogressCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_navigation_ManeuverProgress_create_handle_nullable'));
final _heresdkTrafficAwareNavigationBindingslistofSdkNavigationManeuverprogressReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_navigation_ManeuverProgress_release_handle_nullable'));
final _heresdkTrafficAwareNavigationBindingslistofSdkNavigationManeuverprogressGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_navigation_ManeuverProgress_get_value_nullable'));

Pointer<Void> heresdkTrafficAwareNavigationBindingslistofSdkNavigationManeuverprogressToFfiNullable(List<ManeuverProgress>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkTrafficAwareNavigationBindingslistofSdkNavigationManeuverprogressToFfi(value);
  final result = _heresdkTrafficAwareNavigationBindingslistofSdkNavigationManeuverprogressCreateHandleNullable(_handle);
  heresdkTrafficAwareNavigationBindingslistofSdkNavigationManeuverprogressReleaseFfiHandle(_handle);
  return result;
}

List<ManeuverProgress>? heresdkTrafficAwareNavigationBindingslistofSdkNavigationManeuverprogressFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkTrafficAwareNavigationBindingslistofSdkNavigationManeuverprogressGetValueNullable(handle);
  final result = heresdkTrafficAwareNavigationBindingslistofSdkNavigationManeuverprogressFromFfi(_handle);
  heresdkTrafficAwareNavigationBindingslistofSdkNavigationManeuverprogressReleaseFfiHandle(_handle);
  return result;
}

void heresdkTrafficAwareNavigationBindingslistofSdkNavigationManeuverprogressReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkTrafficAwareNavigationBindingslistofSdkNavigationManeuverprogressReleaseHandleNullable(handle);

final _heresdkTrafficAwareNavigationBindingslistofSdkNavigationSectionprogressCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_navigation_SectionProgress_create_handle'));
final _heresdkTrafficAwareNavigationBindingslistofSdkNavigationSectionprogressReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_navigation_SectionProgress_release_handle'));
final _heresdkTrafficAwareNavigationBindingslistofSdkNavigationSectionprogressInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_navigation_SectionProgress_insert'));
final _heresdkTrafficAwareNavigationBindingslistofSdkNavigationSectionprogressIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_navigation_SectionProgress_iterator'));
final _heresdkTrafficAwareNavigationBindingslistofSdkNavigationSectionprogressIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_navigation_SectionProgress_iterator_release_handle'));
final _heresdkTrafficAwareNavigationBindingslistofSdkNavigationSectionprogressIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_navigation_SectionProgress_iterator_is_valid'));
final _heresdkTrafficAwareNavigationBindingslistofSdkNavigationSectionprogressIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_navigation_SectionProgress_iterator_increment'));
final _heresdkTrafficAwareNavigationBindingslistofSdkNavigationSectionprogressIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_navigation_SectionProgress_iterator_get'));

Pointer<Void> heresdkTrafficAwareNavigationBindingslistofSdkNavigationSectionprogressToFfi(List<SectionProgress> value) {
  final _result = _heresdkTrafficAwareNavigationBindingslistofSdkNavigationSectionprogressCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkNavigationSectionprogressToFfi(element);
    _heresdkTrafficAwareNavigationBindingslistofSdkNavigationSectionprogressInsert(_result, _elementHandle);
    sdkNavigationSectionprogressReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<SectionProgress> heresdkTrafficAwareNavigationBindingslistofSdkNavigationSectionprogressFromFfi(Pointer<Void> handle) {
  final result = List<SectionProgress>.empty(growable: true);
  final _iteratorHandle = _heresdkTrafficAwareNavigationBindingslistofSdkNavigationSectionprogressIterator(handle);
  while (_heresdkTrafficAwareNavigationBindingslistofSdkNavigationSectionprogressIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkTrafficAwareNavigationBindingslistofSdkNavigationSectionprogressIteratorGet(_iteratorHandle);
    try {
      result.add(sdkNavigationSectionprogressFromFfi(_elementHandle));
    } finally {
      sdkNavigationSectionprogressReleaseFfiHandle(_elementHandle);
    }
    _heresdkTrafficAwareNavigationBindingslistofSdkNavigationSectionprogressIteratorIncrement(_iteratorHandle);
  }
  _heresdkTrafficAwareNavigationBindingslistofSdkNavigationSectionprogressIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkTrafficAwareNavigationBindingslistofSdkNavigationSectionprogressReleaseFfiHandle(Pointer<Void> handle) => _heresdkTrafficAwareNavigationBindingslistofSdkNavigationSectionprogressReleaseHandle(handle);

final _heresdkTrafficAwareNavigationBindingslistofSdkNavigationSectionprogressCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_navigation_SectionProgress_create_handle_nullable'));
final _heresdkTrafficAwareNavigationBindingslistofSdkNavigationSectionprogressReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_navigation_SectionProgress_release_handle_nullable'));
final _heresdkTrafficAwareNavigationBindingslistofSdkNavigationSectionprogressGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_navigation_SectionProgress_get_value_nullable'));

Pointer<Void> heresdkTrafficAwareNavigationBindingslistofSdkNavigationSectionprogressToFfiNullable(List<SectionProgress>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkTrafficAwareNavigationBindingslistofSdkNavigationSectionprogressToFfi(value);
  final result = _heresdkTrafficAwareNavigationBindingslistofSdkNavigationSectionprogressCreateHandleNullable(_handle);
  heresdkTrafficAwareNavigationBindingslistofSdkNavigationSectionprogressReleaseFfiHandle(_handle);
  return result;
}

List<SectionProgress>? heresdkTrafficAwareNavigationBindingslistofSdkNavigationSectionprogressFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkTrafficAwareNavigationBindingslistofSdkNavigationSectionprogressGetValueNullable(handle);
  final result = heresdkTrafficAwareNavigationBindingslistofSdkNavigationSectionprogressFromFfi(_handle);
  heresdkTrafficAwareNavigationBindingslistofSdkNavigationSectionprogressReleaseFfiHandle(_handle);
  return result;
}

void heresdkTrafficAwareNavigationBindingslistofSdkNavigationSectionprogressReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkTrafficAwareNavigationBindingslistofSdkNavigationSectionprogressReleaseHandleNullable(handle);

final _heresdkTrafficAwareNavigationBindingslistofSdkNavigationTruckrestrictionwarningCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_navigation_TruckRestrictionWarning_create_handle'));
final _heresdkTrafficAwareNavigationBindingslistofSdkNavigationTruckrestrictionwarningReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_navigation_TruckRestrictionWarning_release_handle'));
final _heresdkTrafficAwareNavigationBindingslistofSdkNavigationTruckrestrictionwarningInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_navigation_TruckRestrictionWarning_insert'));
final _heresdkTrafficAwareNavigationBindingslistofSdkNavigationTruckrestrictionwarningIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_navigation_TruckRestrictionWarning_iterator'));
final _heresdkTrafficAwareNavigationBindingslistofSdkNavigationTruckrestrictionwarningIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_navigation_TruckRestrictionWarning_iterator_release_handle'));
final _heresdkTrafficAwareNavigationBindingslistofSdkNavigationTruckrestrictionwarningIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_navigation_TruckRestrictionWarning_iterator_is_valid'));
final _heresdkTrafficAwareNavigationBindingslistofSdkNavigationTruckrestrictionwarningIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_navigation_TruckRestrictionWarning_iterator_increment'));
final _heresdkTrafficAwareNavigationBindingslistofSdkNavigationTruckrestrictionwarningIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_navigation_TruckRestrictionWarning_iterator_get'));

Pointer<Void> heresdkTrafficAwareNavigationBindingslistofSdkNavigationTruckrestrictionwarningToFfi(List<TruckRestrictionWarning> value) {
  final _result = _heresdkTrafficAwareNavigationBindingslistofSdkNavigationTruckrestrictionwarningCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkNavigationTruckrestrictionwarningToFfi(element);
    _heresdkTrafficAwareNavigationBindingslistofSdkNavigationTruckrestrictionwarningInsert(_result, _elementHandle);
    sdkNavigationTruckrestrictionwarningReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<TruckRestrictionWarning> heresdkTrafficAwareNavigationBindingslistofSdkNavigationTruckrestrictionwarningFromFfi(Pointer<Void> handle) {
  final result = List<TruckRestrictionWarning>.empty(growable: true);
  final _iteratorHandle = _heresdkTrafficAwareNavigationBindingslistofSdkNavigationTruckrestrictionwarningIterator(handle);
  while (_heresdkTrafficAwareNavigationBindingslistofSdkNavigationTruckrestrictionwarningIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkTrafficAwareNavigationBindingslistofSdkNavigationTruckrestrictionwarningIteratorGet(_iteratorHandle);
    try {
      result.add(sdkNavigationTruckrestrictionwarningFromFfi(_elementHandle));
    } finally {
      sdkNavigationTruckrestrictionwarningReleaseFfiHandle(_elementHandle);
    }
    _heresdkTrafficAwareNavigationBindingslistofSdkNavigationTruckrestrictionwarningIteratorIncrement(_iteratorHandle);
  }
  _heresdkTrafficAwareNavigationBindingslistofSdkNavigationTruckrestrictionwarningIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkTrafficAwareNavigationBindingslistofSdkNavigationTruckrestrictionwarningReleaseFfiHandle(Pointer<Void> handle) => _heresdkTrafficAwareNavigationBindingslistofSdkNavigationTruckrestrictionwarningReleaseHandle(handle);

final _heresdkTrafficAwareNavigationBindingslistofSdkNavigationTruckrestrictionwarningCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_navigation_TruckRestrictionWarning_create_handle_nullable'));
final _heresdkTrafficAwareNavigationBindingslistofSdkNavigationTruckrestrictionwarningReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_navigation_TruckRestrictionWarning_release_handle_nullable'));
final _heresdkTrafficAwareNavigationBindingslistofSdkNavigationTruckrestrictionwarningGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_navigation_TruckRestrictionWarning_get_value_nullable'));

Pointer<Void> heresdkTrafficAwareNavigationBindingslistofSdkNavigationTruckrestrictionwarningToFfiNullable(List<TruckRestrictionWarning>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkTrafficAwareNavigationBindingslistofSdkNavigationTruckrestrictionwarningToFfi(value);
  final result = _heresdkTrafficAwareNavigationBindingslistofSdkNavigationTruckrestrictionwarningCreateHandleNullable(_handle);
  heresdkTrafficAwareNavigationBindingslistofSdkNavigationTruckrestrictionwarningReleaseFfiHandle(_handle);
  return result;
}

List<TruckRestrictionWarning>? heresdkTrafficAwareNavigationBindingslistofSdkNavigationTruckrestrictionwarningFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkTrafficAwareNavigationBindingslistofSdkNavigationTruckrestrictionwarningGetValueNullable(handle);
  final result = heresdkTrafficAwareNavigationBindingslistofSdkNavigationTruckrestrictionwarningFromFfi(_handle);
  heresdkTrafficAwareNavigationBindingslistofSdkNavigationTruckrestrictionwarningReleaseFfiHandle(_handle);
  return result;
}

void heresdkTrafficAwareNavigationBindingslistofSdkNavigationTruckrestrictionwarningReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkTrafficAwareNavigationBindingslistofSdkNavigationTruckrestrictionwarningReleaseHandleNullable(handle);

final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingAttributionCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_Attribution_create_handle'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingAttributionReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_Attribution_release_handle'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingAttributionInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_Attribution_insert'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingAttributionIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_Attribution_iterator'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingAttributionIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_Attribution_iterator_release_handle'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingAttributionIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_Attribution_iterator_is_valid'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingAttributionIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_Attribution_iterator_increment'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingAttributionIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_Attribution_iterator_get'));

Pointer<Void> heresdkTrafficAwareNavigationBindingslistofSdkRoutingAttributionToFfi(List<Attribution> value) {
  final _result = _heresdkTrafficAwareNavigationBindingslistofSdkRoutingAttributionCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingAttributionToFfi(element);
    _heresdkTrafficAwareNavigationBindingslistofSdkRoutingAttributionInsert(_result, _elementHandle);
    sdkRoutingAttributionReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Attribution> heresdkTrafficAwareNavigationBindingslistofSdkRoutingAttributionFromFfi(Pointer<Void> handle) {
  final result = List<Attribution>.empty(growable: true);
  final _iteratorHandle = _heresdkTrafficAwareNavigationBindingslistofSdkRoutingAttributionIterator(handle);
  while (_heresdkTrafficAwareNavigationBindingslistofSdkRoutingAttributionIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkTrafficAwareNavigationBindingslistofSdkRoutingAttributionIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingAttributionFromFfi(_elementHandle));
    } finally {
      sdkRoutingAttributionReleaseFfiHandle(_elementHandle);
    }
    _heresdkTrafficAwareNavigationBindingslistofSdkRoutingAttributionIteratorIncrement(_iteratorHandle);
  }
  _heresdkTrafficAwareNavigationBindingslistofSdkRoutingAttributionIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkTrafficAwareNavigationBindingslistofSdkRoutingAttributionReleaseFfiHandle(Pointer<Void> handle) => _heresdkTrafficAwareNavigationBindingslistofSdkRoutingAttributionReleaseHandle(handle);

final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingAttributionCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_Attribution_create_handle_nullable'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingAttributionReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_Attribution_release_handle_nullable'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingAttributionGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_Attribution_get_value_nullable'));

Pointer<Void> heresdkTrafficAwareNavigationBindingslistofSdkRoutingAttributionToFfiNullable(List<Attribution>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkTrafficAwareNavigationBindingslistofSdkRoutingAttributionToFfi(value);
  final result = _heresdkTrafficAwareNavigationBindingslistofSdkRoutingAttributionCreateHandleNullable(_handle);
  heresdkTrafficAwareNavigationBindingslistofSdkRoutingAttributionReleaseFfiHandle(_handle);
  return result;
}

List<Attribution>? heresdkTrafficAwareNavigationBindingslistofSdkRoutingAttributionFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkTrafficAwareNavigationBindingslistofSdkRoutingAttributionGetValueNullable(handle);
  final result = heresdkTrafficAwareNavigationBindingslistofSdkRoutingAttributionFromFfi(_handle);
  heresdkTrafficAwareNavigationBindingslistofSdkRoutingAttributionReleaseFfiHandle(_handle);
  return result;
}

void heresdkTrafficAwareNavigationBindingslistofSdkRoutingAttributionReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkTrafficAwareNavigationBindingslistofSdkRoutingAttributionReleaseHandleNullable(handle);

final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingChargingconnectortypeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_ChargingConnectorType_create_handle'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingChargingconnectortypeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_ChargingConnectorType_release_handle'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingChargingconnectortypeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_ChargingConnectorType_insert'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingChargingconnectortypeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_ChargingConnectorType_iterator'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingChargingconnectortypeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_ChargingConnectorType_iterator_release_handle'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingChargingconnectortypeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_ChargingConnectorType_iterator_is_valid'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingChargingconnectortypeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_ChargingConnectorType_iterator_increment'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingChargingconnectortypeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_ChargingConnectorType_iterator_get'));

Pointer<Void> heresdkTrafficAwareNavigationBindingslistofSdkRoutingChargingconnectortypeToFfi(List<ChargingConnectorType> value) {
  final _result = _heresdkTrafficAwareNavigationBindingslistofSdkRoutingChargingconnectortypeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingChargingconnectortypeToFfi(element);
    _heresdkTrafficAwareNavigationBindingslistofSdkRoutingChargingconnectortypeInsert(_result, _elementHandle);
    sdkRoutingChargingconnectortypeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<ChargingConnectorType> heresdkTrafficAwareNavigationBindingslistofSdkRoutingChargingconnectortypeFromFfi(Pointer<Void> handle) {
  final result = List<ChargingConnectorType>.empty(growable: true);
  final _iteratorHandle = _heresdkTrafficAwareNavigationBindingslistofSdkRoutingChargingconnectortypeIterator(handle);
  while (_heresdkTrafficAwareNavigationBindingslistofSdkRoutingChargingconnectortypeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkTrafficAwareNavigationBindingslistofSdkRoutingChargingconnectortypeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingChargingconnectortypeFromFfi(_elementHandle));
    } finally {
      sdkRoutingChargingconnectortypeReleaseFfiHandle(_elementHandle);
    }
    _heresdkTrafficAwareNavigationBindingslistofSdkRoutingChargingconnectortypeIteratorIncrement(_iteratorHandle);
  }
  _heresdkTrafficAwareNavigationBindingslistofSdkRoutingChargingconnectortypeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkTrafficAwareNavigationBindingslistofSdkRoutingChargingconnectortypeReleaseFfiHandle(Pointer<Void> handle) => _heresdkTrafficAwareNavigationBindingslistofSdkRoutingChargingconnectortypeReleaseHandle(handle);

final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingChargingconnectortypeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_ChargingConnectorType_create_handle_nullable'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingChargingconnectortypeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_ChargingConnectorType_release_handle_nullable'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingChargingconnectortypeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_ChargingConnectorType_get_value_nullable'));

Pointer<Void> heresdkTrafficAwareNavigationBindingslistofSdkRoutingChargingconnectortypeToFfiNullable(List<ChargingConnectorType>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkTrafficAwareNavigationBindingslistofSdkRoutingChargingconnectortypeToFfi(value);
  final result = _heresdkTrafficAwareNavigationBindingslistofSdkRoutingChargingconnectortypeCreateHandleNullable(_handle);
  heresdkTrafficAwareNavigationBindingslistofSdkRoutingChargingconnectortypeReleaseFfiHandle(_handle);
  return result;
}

List<ChargingConnectorType>? heresdkTrafficAwareNavigationBindingslistofSdkRoutingChargingconnectortypeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkTrafficAwareNavigationBindingslistofSdkRoutingChargingconnectortypeGetValueNullable(handle);
  final result = heresdkTrafficAwareNavigationBindingslistofSdkRoutingChargingconnectortypeFromFfi(_handle);
  heresdkTrafficAwareNavigationBindingslistofSdkRoutingChargingconnectortypeReleaseFfiHandle(_handle);
  return result;
}

void heresdkTrafficAwareNavigationBindingslistofSdkRoutingChargingconnectortypeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkTrafficAwareNavigationBindingslistofSdkRoutingChargingconnectortypeReleaseHandleNullable(handle);

final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingFareCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_Fare_create_handle'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingFareReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_Fare_release_handle'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingFareInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_Fare_insert'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingFareIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_Fare_iterator'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingFareIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_Fare_iterator_release_handle'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingFareIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_Fare_iterator_is_valid'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingFareIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_Fare_iterator_increment'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingFareIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_Fare_iterator_get'));

Pointer<Void> heresdkTrafficAwareNavigationBindingslistofSdkRoutingFareToFfi(List<Fare> value) {
  final _result = _heresdkTrafficAwareNavigationBindingslistofSdkRoutingFareCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingFareToFfi(element);
    _heresdkTrafficAwareNavigationBindingslistofSdkRoutingFareInsert(_result, _elementHandle);
    sdkRoutingFareReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Fare> heresdkTrafficAwareNavigationBindingslistofSdkRoutingFareFromFfi(Pointer<Void> handle) {
  final result = List<Fare>.empty(growable: true);
  final _iteratorHandle = _heresdkTrafficAwareNavigationBindingslistofSdkRoutingFareIterator(handle);
  while (_heresdkTrafficAwareNavigationBindingslistofSdkRoutingFareIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkTrafficAwareNavigationBindingslistofSdkRoutingFareIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingFareFromFfi(_elementHandle));
    } finally {
      sdkRoutingFareReleaseFfiHandle(_elementHandle);
    }
    _heresdkTrafficAwareNavigationBindingslistofSdkRoutingFareIteratorIncrement(_iteratorHandle);
  }
  _heresdkTrafficAwareNavigationBindingslistofSdkRoutingFareIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkTrafficAwareNavigationBindingslistofSdkRoutingFareReleaseFfiHandle(Pointer<Void> handle) => _heresdkTrafficAwareNavigationBindingslistofSdkRoutingFareReleaseHandle(handle);

final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingFareCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_Fare_create_handle_nullable'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingFareReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_Fare_release_handle_nullable'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingFareGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_Fare_get_value_nullable'));

Pointer<Void> heresdkTrafficAwareNavigationBindingslistofSdkRoutingFareToFfiNullable(List<Fare>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkTrafficAwareNavigationBindingslistofSdkRoutingFareToFfi(value);
  final result = _heresdkTrafficAwareNavigationBindingslistofSdkRoutingFareCreateHandleNullable(_handle);
  heresdkTrafficAwareNavigationBindingslistofSdkRoutingFareReleaseFfiHandle(_handle);
  return result;
}

List<Fare>? heresdkTrafficAwareNavigationBindingslistofSdkRoutingFareFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkTrafficAwareNavigationBindingslistofSdkRoutingFareGetValueNullable(handle);
  final result = heresdkTrafficAwareNavigationBindingslistofSdkRoutingFareFromFfi(_handle);
  heresdkTrafficAwareNavigationBindingslistofSdkRoutingFareReleaseFfiHandle(_handle);
  return result;
}

void heresdkTrafficAwareNavigationBindingslistofSdkRoutingFareReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkTrafficAwareNavigationBindingslistofSdkRoutingFareReleaseHandleNullable(handle);

final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingHazardousgoodCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_HazardousGood_create_handle'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingHazardousgoodReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_HazardousGood_release_handle'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingHazardousgoodInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_HazardousGood_insert'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingHazardousgoodIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_HazardousGood_iterator'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingHazardousgoodIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_HazardousGood_iterator_release_handle'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingHazardousgoodIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_HazardousGood_iterator_is_valid'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingHazardousgoodIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_HazardousGood_iterator_increment'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingHazardousgoodIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_HazardousGood_iterator_get'));

Pointer<Void> heresdkTrafficAwareNavigationBindingslistofSdkRoutingHazardousgoodToFfi(List<HazardousGood> value) {
  final _result = _heresdkTrafficAwareNavigationBindingslistofSdkRoutingHazardousgoodCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingHazardousgoodToFfi(element);
    _heresdkTrafficAwareNavigationBindingslistofSdkRoutingHazardousgoodInsert(_result, _elementHandle);
    sdkRoutingHazardousgoodReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<HazardousGood> heresdkTrafficAwareNavigationBindingslistofSdkRoutingHazardousgoodFromFfi(Pointer<Void> handle) {
  final result = List<HazardousGood>.empty(growable: true);
  final _iteratorHandle = _heresdkTrafficAwareNavigationBindingslistofSdkRoutingHazardousgoodIterator(handle);
  while (_heresdkTrafficAwareNavigationBindingslistofSdkRoutingHazardousgoodIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkTrafficAwareNavigationBindingslistofSdkRoutingHazardousgoodIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingHazardousgoodFromFfi(_elementHandle));
    } finally {
      sdkRoutingHazardousgoodReleaseFfiHandle(_elementHandle);
    }
    _heresdkTrafficAwareNavigationBindingslistofSdkRoutingHazardousgoodIteratorIncrement(_iteratorHandle);
  }
  _heresdkTrafficAwareNavigationBindingslistofSdkRoutingHazardousgoodIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkTrafficAwareNavigationBindingslistofSdkRoutingHazardousgoodReleaseFfiHandle(Pointer<Void> handle) => _heresdkTrafficAwareNavigationBindingslistofSdkRoutingHazardousgoodReleaseHandle(handle);

final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingHazardousgoodCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_HazardousGood_create_handle_nullable'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingHazardousgoodReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_HazardousGood_release_handle_nullable'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingHazardousgoodGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_HazardousGood_get_value_nullable'));

Pointer<Void> heresdkTrafficAwareNavigationBindingslistofSdkRoutingHazardousgoodToFfiNullable(List<HazardousGood>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkTrafficAwareNavigationBindingslistofSdkRoutingHazardousgoodToFfi(value);
  final result = _heresdkTrafficAwareNavigationBindingslistofSdkRoutingHazardousgoodCreateHandleNullable(_handle);
  heresdkTrafficAwareNavigationBindingslistofSdkRoutingHazardousgoodReleaseFfiHandle(_handle);
  return result;
}

List<HazardousGood>? heresdkTrafficAwareNavigationBindingslistofSdkRoutingHazardousgoodFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkTrafficAwareNavigationBindingslistofSdkRoutingHazardousgoodGetValueNullable(handle);
  final result = heresdkTrafficAwareNavigationBindingslistofSdkRoutingHazardousgoodFromFfi(_handle);
  heresdkTrafficAwareNavigationBindingslistofSdkRoutingHazardousgoodReleaseFfiHandle(_handle);
  return result;
}

void heresdkTrafficAwareNavigationBindingslistofSdkRoutingHazardousgoodReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkTrafficAwareNavigationBindingslistofSdkRoutingHazardousgoodReleaseHandleNullable(handle);

final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingIsolineCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_Isoline_create_handle'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingIsolineReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_Isoline_release_handle'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingIsolineInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_Isoline_insert'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingIsolineIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_Isoline_iterator'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingIsolineIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_Isoline_iterator_release_handle'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingIsolineIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_Isoline_iterator_is_valid'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingIsolineIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_Isoline_iterator_increment'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingIsolineIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_Isoline_iterator_get'));

Pointer<Void> heresdkTrafficAwareNavigationBindingslistofSdkRoutingIsolineToFfi(List<Isoline> value) {
  final _result = _heresdkTrafficAwareNavigationBindingslistofSdkRoutingIsolineCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingIsolineToFfi(element);
    _heresdkTrafficAwareNavigationBindingslistofSdkRoutingIsolineInsert(_result, _elementHandle);
    sdkRoutingIsolineReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Isoline> heresdkTrafficAwareNavigationBindingslistofSdkRoutingIsolineFromFfi(Pointer<Void> handle) {
  final result = List<Isoline>.empty(growable: true);
  final _iteratorHandle = _heresdkTrafficAwareNavigationBindingslistofSdkRoutingIsolineIterator(handle);
  while (_heresdkTrafficAwareNavigationBindingslistofSdkRoutingIsolineIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkTrafficAwareNavigationBindingslistofSdkRoutingIsolineIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingIsolineFromFfi(_elementHandle));
    } finally {
      sdkRoutingIsolineReleaseFfiHandle(_elementHandle);
    }
    _heresdkTrafficAwareNavigationBindingslistofSdkRoutingIsolineIteratorIncrement(_iteratorHandle);
  }
  _heresdkTrafficAwareNavigationBindingslistofSdkRoutingIsolineIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkTrafficAwareNavigationBindingslistofSdkRoutingIsolineReleaseFfiHandle(Pointer<Void> handle) => _heresdkTrafficAwareNavigationBindingslistofSdkRoutingIsolineReleaseHandle(handle);

final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingIsolineCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_Isoline_create_handle_nullable'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingIsolineReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_Isoline_release_handle_nullable'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingIsolineGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_Isoline_get_value_nullable'));

Pointer<Void> heresdkTrafficAwareNavigationBindingslistofSdkRoutingIsolineToFfiNullable(List<Isoline>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkTrafficAwareNavigationBindingslistofSdkRoutingIsolineToFfi(value);
  final result = _heresdkTrafficAwareNavigationBindingslistofSdkRoutingIsolineCreateHandleNullable(_handle);
  heresdkTrafficAwareNavigationBindingslistofSdkRoutingIsolineReleaseFfiHandle(_handle);
  return result;
}

List<Isoline>? heresdkTrafficAwareNavigationBindingslistofSdkRoutingIsolineFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkTrafficAwareNavigationBindingslistofSdkRoutingIsolineGetValueNullable(handle);
  final result = heresdkTrafficAwareNavigationBindingslistofSdkRoutingIsolineFromFfi(_handle);
  heresdkTrafficAwareNavigationBindingslistofSdkRoutingIsolineReleaseFfiHandle(_handle);
  return result;
}

void heresdkTrafficAwareNavigationBindingslistofSdkRoutingIsolineReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkTrafficAwareNavigationBindingslistofSdkRoutingIsolineReleaseHandleNullable(handle);

final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingManeuverCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_Maneuver_create_handle'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingManeuverReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_Maneuver_release_handle'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingManeuverInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_Maneuver_insert'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingManeuverIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_Maneuver_iterator'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingManeuverIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_Maneuver_iterator_release_handle'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingManeuverIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_Maneuver_iterator_is_valid'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingManeuverIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_Maneuver_iterator_increment'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingManeuverIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_Maneuver_iterator_get'));

Pointer<Void> heresdkTrafficAwareNavigationBindingslistofSdkRoutingManeuverToFfi(List<Maneuver> value) {
  final _result = _heresdkTrafficAwareNavigationBindingslistofSdkRoutingManeuverCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingManeuverToFfi(element);
    _heresdkTrafficAwareNavigationBindingslistofSdkRoutingManeuverInsert(_result, _elementHandle);
    sdkRoutingManeuverReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Maneuver> heresdkTrafficAwareNavigationBindingslistofSdkRoutingManeuverFromFfi(Pointer<Void> handle) {
  final result = List<Maneuver>.empty(growable: true);
  final _iteratorHandle = _heresdkTrafficAwareNavigationBindingslistofSdkRoutingManeuverIterator(handle);
  while (_heresdkTrafficAwareNavigationBindingslistofSdkRoutingManeuverIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkTrafficAwareNavigationBindingslistofSdkRoutingManeuverIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingManeuverFromFfi(_elementHandle));
    } finally {
      sdkRoutingManeuverReleaseFfiHandle(_elementHandle);
    }
    _heresdkTrafficAwareNavigationBindingslistofSdkRoutingManeuverIteratorIncrement(_iteratorHandle);
  }
  _heresdkTrafficAwareNavigationBindingslistofSdkRoutingManeuverIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkTrafficAwareNavigationBindingslistofSdkRoutingManeuverReleaseFfiHandle(Pointer<Void> handle) => _heresdkTrafficAwareNavigationBindingslistofSdkRoutingManeuverReleaseHandle(handle);

final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingManeuverCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_Maneuver_create_handle_nullable'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingManeuverReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_Maneuver_release_handle_nullable'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingManeuverGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_Maneuver_get_value_nullable'));

Pointer<Void> heresdkTrafficAwareNavigationBindingslistofSdkRoutingManeuverToFfiNullable(List<Maneuver>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkTrafficAwareNavigationBindingslistofSdkRoutingManeuverToFfi(value);
  final result = _heresdkTrafficAwareNavigationBindingslistofSdkRoutingManeuverCreateHandleNullable(_handle);
  heresdkTrafficAwareNavigationBindingslistofSdkRoutingManeuverReleaseFfiHandle(_handle);
  return result;
}

List<Maneuver>? heresdkTrafficAwareNavigationBindingslistofSdkRoutingManeuverFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkTrafficAwareNavigationBindingslistofSdkRoutingManeuverGetValueNullable(handle);
  final result = heresdkTrafficAwareNavigationBindingslistofSdkRoutingManeuverFromFfi(_handle);
  heresdkTrafficAwareNavigationBindingslistofSdkRoutingManeuverReleaseFfiHandle(_handle);
  return result;
}

void heresdkTrafficAwareNavigationBindingslistofSdkRoutingManeuverReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkTrafficAwareNavigationBindingslistofSdkRoutingManeuverReleaseHandleNullable(handle);

final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingPaymentmethodCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_PaymentMethod_create_handle'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingPaymentmethodReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_PaymentMethod_release_handle'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingPaymentmethodInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_PaymentMethod_insert'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingPaymentmethodIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_PaymentMethod_iterator'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingPaymentmethodIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_PaymentMethod_iterator_release_handle'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingPaymentmethodIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_PaymentMethod_iterator_is_valid'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingPaymentmethodIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_PaymentMethod_iterator_increment'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingPaymentmethodIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_PaymentMethod_iterator_get'));

Pointer<Void> heresdkTrafficAwareNavigationBindingslistofSdkRoutingPaymentmethodToFfi(List<PaymentMethod> value) {
  final _result = _heresdkTrafficAwareNavigationBindingslistofSdkRoutingPaymentmethodCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingPaymentmethodToFfi(element);
    _heresdkTrafficAwareNavigationBindingslistofSdkRoutingPaymentmethodInsert(_result, _elementHandle);
    sdkRoutingPaymentmethodReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<PaymentMethod> heresdkTrafficAwareNavigationBindingslistofSdkRoutingPaymentmethodFromFfi(Pointer<Void> handle) {
  final result = List<PaymentMethod>.empty(growable: true);
  final _iteratorHandle = _heresdkTrafficAwareNavigationBindingslistofSdkRoutingPaymentmethodIterator(handle);
  while (_heresdkTrafficAwareNavigationBindingslistofSdkRoutingPaymentmethodIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkTrafficAwareNavigationBindingslistofSdkRoutingPaymentmethodIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingPaymentmethodFromFfi(_elementHandle));
    } finally {
      sdkRoutingPaymentmethodReleaseFfiHandle(_elementHandle);
    }
    _heresdkTrafficAwareNavigationBindingslistofSdkRoutingPaymentmethodIteratorIncrement(_iteratorHandle);
  }
  _heresdkTrafficAwareNavigationBindingslistofSdkRoutingPaymentmethodIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkTrafficAwareNavigationBindingslistofSdkRoutingPaymentmethodReleaseFfiHandle(Pointer<Void> handle) => _heresdkTrafficAwareNavigationBindingslistofSdkRoutingPaymentmethodReleaseHandle(handle);

final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingPaymentmethodCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_PaymentMethod_create_handle_nullable'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingPaymentmethodReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_PaymentMethod_release_handle_nullable'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingPaymentmethodGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_PaymentMethod_get_value_nullable'));

Pointer<Void> heresdkTrafficAwareNavigationBindingslistofSdkRoutingPaymentmethodToFfiNullable(List<PaymentMethod>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkTrafficAwareNavigationBindingslistofSdkRoutingPaymentmethodToFfi(value);
  final result = _heresdkTrafficAwareNavigationBindingslistofSdkRoutingPaymentmethodCreateHandleNullable(_handle);
  heresdkTrafficAwareNavigationBindingslistofSdkRoutingPaymentmethodReleaseFfiHandle(_handle);
  return result;
}

List<PaymentMethod>? heresdkTrafficAwareNavigationBindingslistofSdkRoutingPaymentmethodFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkTrafficAwareNavigationBindingslistofSdkRoutingPaymentmethodGetValueNullable(handle);
  final result = heresdkTrafficAwareNavigationBindingslistofSdkRoutingPaymentmethodFromFfi(_handle);
  heresdkTrafficAwareNavigationBindingslistofSdkRoutingPaymentmethodReleaseFfiHandle(_handle);
  return result;
}

void heresdkTrafficAwareNavigationBindingslistofSdkRoutingPaymentmethodReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkTrafficAwareNavigationBindingslistofSdkRoutingPaymentmethodReleaseHandleNullable(handle);

final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingPostactionCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_PostAction_create_handle'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingPostactionReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_PostAction_release_handle'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingPostactionInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_PostAction_insert'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingPostactionIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_PostAction_iterator'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingPostactionIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_PostAction_iterator_release_handle'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingPostactionIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_PostAction_iterator_is_valid'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingPostactionIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_PostAction_iterator_increment'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingPostactionIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_PostAction_iterator_get'));

Pointer<Void> heresdkTrafficAwareNavigationBindingslistofSdkRoutingPostactionToFfi(List<PostAction> value) {
  final _result = _heresdkTrafficAwareNavigationBindingslistofSdkRoutingPostactionCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingPostactionToFfi(element);
    _heresdkTrafficAwareNavigationBindingslistofSdkRoutingPostactionInsert(_result, _elementHandle);
    sdkRoutingPostactionReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<PostAction> heresdkTrafficAwareNavigationBindingslistofSdkRoutingPostactionFromFfi(Pointer<Void> handle) {
  final result = List<PostAction>.empty(growable: true);
  final _iteratorHandle = _heresdkTrafficAwareNavigationBindingslistofSdkRoutingPostactionIterator(handle);
  while (_heresdkTrafficAwareNavigationBindingslistofSdkRoutingPostactionIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkTrafficAwareNavigationBindingslistofSdkRoutingPostactionIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingPostactionFromFfi(_elementHandle));
    } finally {
      sdkRoutingPostactionReleaseFfiHandle(_elementHandle);
    }
    _heresdkTrafficAwareNavigationBindingslistofSdkRoutingPostactionIteratorIncrement(_iteratorHandle);
  }
  _heresdkTrafficAwareNavigationBindingslistofSdkRoutingPostactionIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkTrafficAwareNavigationBindingslistofSdkRoutingPostactionReleaseFfiHandle(Pointer<Void> handle) => _heresdkTrafficAwareNavigationBindingslistofSdkRoutingPostactionReleaseHandle(handle);

final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingPostactionCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_PostAction_create_handle_nullable'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingPostactionReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_PostAction_release_handle_nullable'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingPostactionGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_PostAction_get_value_nullable'));

Pointer<Void> heresdkTrafficAwareNavigationBindingslistofSdkRoutingPostactionToFfiNullable(List<PostAction>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkTrafficAwareNavigationBindingslistofSdkRoutingPostactionToFfi(value);
  final result = _heresdkTrafficAwareNavigationBindingslistofSdkRoutingPostactionCreateHandleNullable(_handle);
  heresdkTrafficAwareNavigationBindingslistofSdkRoutingPostactionReleaseFfiHandle(_handle);
  return result;
}

List<PostAction>? heresdkTrafficAwareNavigationBindingslistofSdkRoutingPostactionFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkTrafficAwareNavigationBindingslistofSdkRoutingPostactionGetValueNullable(handle);
  final result = heresdkTrafficAwareNavigationBindingslistofSdkRoutingPostactionFromFfi(_handle);
  heresdkTrafficAwareNavigationBindingslistofSdkRoutingPostactionReleaseFfiHandle(_handle);
  return result;
}

void heresdkTrafficAwareNavigationBindingslistofSdkRoutingPostactionReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkTrafficAwareNavigationBindingslistofSdkRoutingPostactionReleaseHandleNullable(handle);

final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingPreactionCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_PreAction_create_handle'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingPreactionReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_PreAction_release_handle'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingPreactionInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_PreAction_insert'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingPreactionIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_PreAction_iterator'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingPreactionIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_PreAction_iterator_release_handle'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingPreactionIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_PreAction_iterator_is_valid'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingPreactionIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_PreAction_iterator_increment'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingPreactionIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_PreAction_iterator_get'));

Pointer<Void> heresdkTrafficAwareNavigationBindingslistofSdkRoutingPreactionToFfi(List<PreAction> value) {
  final _result = _heresdkTrafficAwareNavigationBindingslistofSdkRoutingPreactionCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingPreactionToFfi(element);
    _heresdkTrafficAwareNavigationBindingslistofSdkRoutingPreactionInsert(_result, _elementHandle);
    sdkRoutingPreactionReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<PreAction> heresdkTrafficAwareNavigationBindingslistofSdkRoutingPreactionFromFfi(Pointer<Void> handle) {
  final result = List<PreAction>.empty(growable: true);
  final _iteratorHandle = _heresdkTrafficAwareNavigationBindingslistofSdkRoutingPreactionIterator(handle);
  while (_heresdkTrafficAwareNavigationBindingslistofSdkRoutingPreactionIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkTrafficAwareNavigationBindingslistofSdkRoutingPreactionIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingPreactionFromFfi(_elementHandle));
    } finally {
      sdkRoutingPreactionReleaseFfiHandle(_elementHandle);
    }
    _heresdkTrafficAwareNavigationBindingslistofSdkRoutingPreactionIteratorIncrement(_iteratorHandle);
  }
  _heresdkTrafficAwareNavigationBindingslistofSdkRoutingPreactionIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkTrafficAwareNavigationBindingslistofSdkRoutingPreactionReleaseFfiHandle(Pointer<Void> handle) => _heresdkTrafficAwareNavigationBindingslistofSdkRoutingPreactionReleaseHandle(handle);

final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingPreactionCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_PreAction_create_handle_nullable'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingPreactionReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_PreAction_release_handle_nullable'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingPreactionGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_PreAction_get_value_nullable'));

Pointer<Void> heresdkTrafficAwareNavigationBindingslistofSdkRoutingPreactionToFfiNullable(List<PreAction>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkTrafficAwareNavigationBindingslistofSdkRoutingPreactionToFfi(value);
  final result = _heresdkTrafficAwareNavigationBindingslistofSdkRoutingPreactionCreateHandleNullable(_handle);
  heresdkTrafficAwareNavigationBindingslistofSdkRoutingPreactionReleaseFfiHandle(_handle);
  return result;
}

List<PreAction>? heresdkTrafficAwareNavigationBindingslistofSdkRoutingPreactionFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkTrafficAwareNavigationBindingslistofSdkRoutingPreactionGetValueNullable(handle);
  final result = heresdkTrafficAwareNavigationBindingslistofSdkRoutingPreactionFromFfi(_handle);
  heresdkTrafficAwareNavigationBindingslistofSdkRoutingPreactionReleaseFfiHandle(_handle);
  return result;
}

void heresdkTrafficAwareNavigationBindingslistofSdkRoutingPreactionReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkTrafficAwareNavigationBindingslistofSdkRoutingPreactionReleaseHandleNullable(handle);

final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingRoadfeaturesCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_RoadFeatures_create_handle'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingRoadfeaturesReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_RoadFeatures_release_handle'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingRoadfeaturesInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_RoadFeatures_insert'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingRoadfeaturesIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_RoadFeatures_iterator'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingRoadfeaturesIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_RoadFeatures_iterator_release_handle'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingRoadfeaturesIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_RoadFeatures_iterator_is_valid'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingRoadfeaturesIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_RoadFeatures_iterator_increment'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingRoadfeaturesIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_RoadFeatures_iterator_get'));

Pointer<Void> heresdkTrafficAwareNavigationBindingslistofSdkRoutingRoadfeaturesToFfi(List<RoadFeatures> value) {
  final _result = _heresdkTrafficAwareNavigationBindingslistofSdkRoutingRoadfeaturesCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingRoadfeaturesToFfi(element);
    _heresdkTrafficAwareNavigationBindingslistofSdkRoutingRoadfeaturesInsert(_result, _elementHandle);
    sdkRoutingRoadfeaturesReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<RoadFeatures> heresdkTrafficAwareNavigationBindingslistofSdkRoutingRoadfeaturesFromFfi(Pointer<Void> handle) {
  final result = List<RoadFeatures>.empty(growable: true);
  final _iteratorHandle = _heresdkTrafficAwareNavigationBindingslistofSdkRoutingRoadfeaturesIterator(handle);
  while (_heresdkTrafficAwareNavigationBindingslistofSdkRoutingRoadfeaturesIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkTrafficAwareNavigationBindingslistofSdkRoutingRoadfeaturesIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingRoadfeaturesFromFfi(_elementHandle));
    } finally {
      sdkRoutingRoadfeaturesReleaseFfiHandle(_elementHandle);
    }
    _heresdkTrafficAwareNavigationBindingslistofSdkRoutingRoadfeaturesIteratorIncrement(_iteratorHandle);
  }
  _heresdkTrafficAwareNavigationBindingslistofSdkRoutingRoadfeaturesIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkTrafficAwareNavigationBindingslistofSdkRoutingRoadfeaturesReleaseFfiHandle(Pointer<Void> handle) => _heresdkTrafficAwareNavigationBindingslistofSdkRoutingRoadfeaturesReleaseHandle(handle);

final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingRoadfeaturesCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_RoadFeatures_create_handle_nullable'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingRoadfeaturesReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_RoadFeatures_release_handle_nullable'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingRoadfeaturesGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_RoadFeatures_get_value_nullable'));

Pointer<Void> heresdkTrafficAwareNavigationBindingslistofSdkRoutingRoadfeaturesToFfiNullable(List<RoadFeatures>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkTrafficAwareNavigationBindingslistofSdkRoutingRoadfeaturesToFfi(value);
  final result = _heresdkTrafficAwareNavigationBindingslistofSdkRoutingRoadfeaturesCreateHandleNullable(_handle);
  heresdkTrafficAwareNavigationBindingslistofSdkRoutingRoadfeaturesReleaseFfiHandle(_handle);
  return result;
}

List<RoadFeatures>? heresdkTrafficAwareNavigationBindingslistofSdkRoutingRoadfeaturesFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkTrafficAwareNavigationBindingslistofSdkRoutingRoadfeaturesGetValueNullable(handle);
  final result = heresdkTrafficAwareNavigationBindingslistofSdkRoutingRoadfeaturesFromFfi(_handle);
  heresdkTrafficAwareNavigationBindingslistofSdkRoutingRoadfeaturesReleaseFfiHandle(_handle);
  return result;
}

void heresdkTrafficAwareNavigationBindingslistofSdkRoutingRoadfeaturesReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkTrafficAwareNavigationBindingslistofSdkRoutingRoadfeaturesReleaseHandleNullable(handle);

final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingRouteCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_Route_create_handle'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingRouteReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_Route_release_handle'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingRouteInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_Route_insert'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingRouteIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_Route_iterator'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingRouteIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_Route_iterator_release_handle'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingRouteIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_Route_iterator_is_valid'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingRouteIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_Route_iterator_increment'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingRouteIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_Route_iterator_get'));

Pointer<Void> heresdkTrafficAwareNavigationBindingslistofSdkRoutingRouteToFfi(List<Route> value) {
  final _result = _heresdkTrafficAwareNavigationBindingslistofSdkRoutingRouteCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingRouteToFfi(element);
    _heresdkTrafficAwareNavigationBindingslistofSdkRoutingRouteInsert(_result, _elementHandle);
    sdkRoutingRouteReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Route> heresdkTrafficAwareNavigationBindingslistofSdkRoutingRouteFromFfi(Pointer<Void> handle) {
  final result = List<Route>.empty(growable: true);
  final _iteratorHandle = _heresdkTrafficAwareNavigationBindingslistofSdkRoutingRouteIterator(handle);
  while (_heresdkTrafficAwareNavigationBindingslistofSdkRoutingRouteIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkTrafficAwareNavigationBindingslistofSdkRoutingRouteIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingRouteFromFfi(_elementHandle));
    } finally {
      sdkRoutingRouteReleaseFfiHandle(_elementHandle);
    }
    _heresdkTrafficAwareNavigationBindingslistofSdkRoutingRouteIteratorIncrement(_iteratorHandle);
  }
  _heresdkTrafficAwareNavigationBindingslistofSdkRoutingRouteIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkTrafficAwareNavigationBindingslistofSdkRoutingRouteReleaseFfiHandle(Pointer<Void> handle) => _heresdkTrafficAwareNavigationBindingslistofSdkRoutingRouteReleaseHandle(handle);

final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingRouteCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_Route_create_handle_nullable'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingRouteReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_Route_release_handle_nullable'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingRouteGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_Route_get_value_nullable'));

Pointer<Void> heresdkTrafficAwareNavigationBindingslistofSdkRoutingRouteToFfiNullable(List<Route>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkTrafficAwareNavigationBindingslistofSdkRoutingRouteToFfi(value);
  final result = _heresdkTrafficAwareNavigationBindingslistofSdkRoutingRouteCreateHandleNullable(_handle);
  heresdkTrafficAwareNavigationBindingslistofSdkRoutingRouteReleaseFfiHandle(_handle);
  return result;
}

List<Route>? heresdkTrafficAwareNavigationBindingslistofSdkRoutingRouteFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkTrafficAwareNavigationBindingslistofSdkRoutingRouteGetValueNullable(handle);
  final result = heresdkTrafficAwareNavigationBindingslistofSdkRoutingRouteFromFfi(_handle);
  heresdkTrafficAwareNavigationBindingslistofSdkRoutingRouteReleaseFfiHandle(_handle);
  return result;
}

void heresdkTrafficAwareNavigationBindingslistofSdkRoutingRouteReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkTrafficAwareNavigationBindingslistofSdkRoutingRouteReleaseHandleNullable(handle);

final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingSectionCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_Section_create_handle'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingSectionReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_Section_release_handle'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingSectionInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_Section_insert'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingSectionIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_Section_iterator'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingSectionIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_Section_iterator_release_handle'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingSectionIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_Section_iterator_is_valid'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingSectionIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_Section_iterator_increment'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingSectionIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_Section_iterator_get'));

Pointer<Void> heresdkTrafficAwareNavigationBindingslistofSdkRoutingSectionToFfi(List<Section> value) {
  final _result = _heresdkTrafficAwareNavigationBindingslistofSdkRoutingSectionCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingSectionToFfi(element);
    _heresdkTrafficAwareNavigationBindingslistofSdkRoutingSectionInsert(_result, _elementHandle);
    sdkRoutingSectionReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Section> heresdkTrafficAwareNavigationBindingslistofSdkRoutingSectionFromFfi(Pointer<Void> handle) {
  final result = List<Section>.empty(growable: true);
  final _iteratorHandle = _heresdkTrafficAwareNavigationBindingslistofSdkRoutingSectionIterator(handle);
  while (_heresdkTrafficAwareNavigationBindingslistofSdkRoutingSectionIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkTrafficAwareNavigationBindingslistofSdkRoutingSectionIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingSectionFromFfi(_elementHandle));
    } finally {
      sdkRoutingSectionReleaseFfiHandle(_elementHandle);
    }
    _heresdkTrafficAwareNavigationBindingslistofSdkRoutingSectionIteratorIncrement(_iteratorHandle);
  }
  _heresdkTrafficAwareNavigationBindingslistofSdkRoutingSectionIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkTrafficAwareNavigationBindingslistofSdkRoutingSectionReleaseFfiHandle(Pointer<Void> handle) => _heresdkTrafficAwareNavigationBindingslistofSdkRoutingSectionReleaseHandle(handle);

final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingSectionCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_Section_create_handle_nullable'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingSectionReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_Section_release_handle_nullable'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingSectionGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_Section_get_value_nullable'));

Pointer<Void> heresdkTrafficAwareNavigationBindingslistofSdkRoutingSectionToFfiNullable(List<Section>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkTrafficAwareNavigationBindingslistofSdkRoutingSectionToFfi(value);
  final result = _heresdkTrafficAwareNavigationBindingslistofSdkRoutingSectionCreateHandleNullable(_handle);
  heresdkTrafficAwareNavigationBindingslistofSdkRoutingSectionReleaseFfiHandle(_handle);
  return result;
}

List<Section>? heresdkTrafficAwareNavigationBindingslistofSdkRoutingSectionFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkTrafficAwareNavigationBindingslistofSdkRoutingSectionGetValueNullable(handle);
  final result = heresdkTrafficAwareNavigationBindingslistofSdkRoutingSectionFromFfi(_handle);
  heresdkTrafficAwareNavigationBindingslistofSdkRoutingSectionReleaseFfiHandle(_handle);
  return result;
}

void heresdkTrafficAwareNavigationBindingslistofSdkRoutingSectionReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkTrafficAwareNavigationBindingslistofSdkRoutingSectionReleaseHandleNullable(handle);

final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingSectionnoticeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_SectionNotice_create_handle'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingSectionnoticeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_SectionNotice_release_handle'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingSectionnoticeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_SectionNotice_insert'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingSectionnoticeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_SectionNotice_iterator'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingSectionnoticeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_SectionNotice_iterator_release_handle'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingSectionnoticeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_SectionNotice_iterator_is_valid'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingSectionnoticeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_SectionNotice_iterator_increment'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingSectionnoticeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_SectionNotice_iterator_get'));

Pointer<Void> heresdkTrafficAwareNavigationBindingslistofSdkRoutingSectionnoticeToFfi(List<SectionNotice> value) {
  final _result = _heresdkTrafficAwareNavigationBindingslistofSdkRoutingSectionnoticeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingSectionnoticeToFfi(element);
    _heresdkTrafficAwareNavigationBindingslistofSdkRoutingSectionnoticeInsert(_result, _elementHandle);
    sdkRoutingSectionnoticeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<SectionNotice> heresdkTrafficAwareNavigationBindingslistofSdkRoutingSectionnoticeFromFfi(Pointer<Void> handle) {
  final result = List<SectionNotice>.empty(growable: true);
  final _iteratorHandle = _heresdkTrafficAwareNavigationBindingslistofSdkRoutingSectionnoticeIterator(handle);
  while (_heresdkTrafficAwareNavigationBindingslistofSdkRoutingSectionnoticeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkTrafficAwareNavigationBindingslistofSdkRoutingSectionnoticeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingSectionnoticeFromFfi(_elementHandle));
    } finally {
      sdkRoutingSectionnoticeReleaseFfiHandle(_elementHandle);
    }
    _heresdkTrafficAwareNavigationBindingslistofSdkRoutingSectionnoticeIteratorIncrement(_iteratorHandle);
  }
  _heresdkTrafficAwareNavigationBindingslistofSdkRoutingSectionnoticeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkTrafficAwareNavigationBindingslistofSdkRoutingSectionnoticeReleaseFfiHandle(Pointer<Void> handle) => _heresdkTrafficAwareNavigationBindingslistofSdkRoutingSectionnoticeReleaseHandle(handle);

final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingSectionnoticeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_SectionNotice_create_handle_nullable'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingSectionnoticeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_SectionNotice_release_handle_nullable'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingSectionnoticeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_SectionNotice_get_value_nullable'));

Pointer<Void> heresdkTrafficAwareNavigationBindingslistofSdkRoutingSectionnoticeToFfiNullable(List<SectionNotice>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkTrafficAwareNavigationBindingslistofSdkRoutingSectionnoticeToFfi(value);
  final result = _heresdkTrafficAwareNavigationBindingslistofSdkRoutingSectionnoticeCreateHandleNullable(_handle);
  heresdkTrafficAwareNavigationBindingslistofSdkRoutingSectionnoticeReleaseFfiHandle(_handle);
  return result;
}

List<SectionNotice>? heresdkTrafficAwareNavigationBindingslistofSdkRoutingSectionnoticeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkTrafficAwareNavigationBindingslistofSdkRoutingSectionnoticeGetValueNullable(handle);
  final result = heresdkTrafficAwareNavigationBindingslistofSdkRoutingSectionnoticeFromFfi(_handle);
  heresdkTrafficAwareNavigationBindingslistofSdkRoutingSectionnoticeReleaseFfiHandle(_handle);
  return result;
}

void heresdkTrafficAwareNavigationBindingslistofSdkRoutingSectionnoticeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkTrafficAwareNavigationBindingslistofSdkRoutingSectionnoticeReleaseHandleNullable(handle);

final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingSegmentreferenceCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_SegmentReference_create_handle'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingSegmentreferenceReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_SegmentReference_release_handle'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingSegmentreferenceInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_SegmentReference_insert'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingSegmentreferenceIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_SegmentReference_iterator'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingSegmentreferenceIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_SegmentReference_iterator_release_handle'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingSegmentreferenceIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_SegmentReference_iterator_is_valid'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingSegmentreferenceIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_SegmentReference_iterator_increment'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingSegmentreferenceIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_SegmentReference_iterator_get'));

Pointer<Void> heresdkTrafficAwareNavigationBindingslistofSdkRoutingSegmentreferenceToFfi(List<SegmentReference> value) {
  final _result = _heresdkTrafficAwareNavigationBindingslistofSdkRoutingSegmentreferenceCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingSegmentreferenceToFfi(element);
    _heresdkTrafficAwareNavigationBindingslistofSdkRoutingSegmentreferenceInsert(_result, _elementHandle);
    sdkRoutingSegmentreferenceReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<SegmentReference> heresdkTrafficAwareNavigationBindingslistofSdkRoutingSegmentreferenceFromFfi(Pointer<Void> handle) {
  final result = List<SegmentReference>.empty(growable: true);
  final _iteratorHandle = _heresdkTrafficAwareNavigationBindingslistofSdkRoutingSegmentreferenceIterator(handle);
  while (_heresdkTrafficAwareNavigationBindingslistofSdkRoutingSegmentreferenceIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkTrafficAwareNavigationBindingslistofSdkRoutingSegmentreferenceIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingSegmentreferenceFromFfi(_elementHandle));
    } finally {
      sdkRoutingSegmentreferenceReleaseFfiHandle(_elementHandle);
    }
    _heresdkTrafficAwareNavigationBindingslistofSdkRoutingSegmentreferenceIteratorIncrement(_iteratorHandle);
  }
  _heresdkTrafficAwareNavigationBindingslistofSdkRoutingSegmentreferenceIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkTrafficAwareNavigationBindingslistofSdkRoutingSegmentreferenceReleaseFfiHandle(Pointer<Void> handle) => _heresdkTrafficAwareNavigationBindingslistofSdkRoutingSegmentreferenceReleaseHandle(handle);

final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingSegmentreferenceCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_SegmentReference_create_handle_nullable'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingSegmentreferenceReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_SegmentReference_release_handle_nullable'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingSegmentreferenceGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_SegmentReference_get_value_nullable'));

Pointer<Void> heresdkTrafficAwareNavigationBindingslistofSdkRoutingSegmentreferenceToFfiNullable(List<SegmentReference>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkTrafficAwareNavigationBindingslistofSdkRoutingSegmentreferenceToFfi(value);
  final result = _heresdkTrafficAwareNavigationBindingslistofSdkRoutingSegmentreferenceCreateHandleNullable(_handle);
  heresdkTrafficAwareNavigationBindingslistofSdkRoutingSegmentreferenceReleaseFfiHandle(_handle);
  return result;
}

List<SegmentReference>? heresdkTrafficAwareNavigationBindingslistofSdkRoutingSegmentreferenceFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkTrafficAwareNavigationBindingslistofSdkRoutingSegmentreferenceGetValueNullable(handle);
  final result = heresdkTrafficAwareNavigationBindingslistofSdkRoutingSegmentreferenceFromFfi(_handle);
  heresdkTrafficAwareNavigationBindingslistofSdkRoutingSegmentreferenceReleaseFfiHandle(_handle);
  return result;
}

void heresdkTrafficAwareNavigationBindingslistofSdkRoutingSegmentreferenceReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkTrafficAwareNavigationBindingslistofSdkRoutingSegmentreferenceReleaseHandleNullable(handle);

final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingSpanCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_Span_create_handle'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingSpanReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_Span_release_handle'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingSpanInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_Span_insert'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingSpanIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_Span_iterator'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingSpanIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_Span_iterator_release_handle'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingSpanIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_Span_iterator_is_valid'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingSpanIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_Span_iterator_increment'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingSpanIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_Span_iterator_get'));

Pointer<Void> heresdkTrafficAwareNavigationBindingslistofSdkRoutingSpanToFfi(List<Span> value) {
  final _result = _heresdkTrafficAwareNavigationBindingslistofSdkRoutingSpanCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingSpanToFfi(element);
    _heresdkTrafficAwareNavigationBindingslistofSdkRoutingSpanInsert(_result, _elementHandle);
    sdkRoutingSpanReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Span> heresdkTrafficAwareNavigationBindingslistofSdkRoutingSpanFromFfi(Pointer<Void> handle) {
  final result = List<Span>.empty(growable: true);
  final _iteratorHandle = _heresdkTrafficAwareNavigationBindingslistofSdkRoutingSpanIterator(handle);
  while (_heresdkTrafficAwareNavigationBindingslistofSdkRoutingSpanIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkTrafficAwareNavigationBindingslistofSdkRoutingSpanIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingSpanFromFfi(_elementHandle));
    } finally {
      sdkRoutingSpanReleaseFfiHandle(_elementHandle);
    }
    _heresdkTrafficAwareNavigationBindingslistofSdkRoutingSpanIteratorIncrement(_iteratorHandle);
  }
  _heresdkTrafficAwareNavigationBindingslistofSdkRoutingSpanIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkTrafficAwareNavigationBindingslistofSdkRoutingSpanReleaseFfiHandle(Pointer<Void> handle) => _heresdkTrafficAwareNavigationBindingslistofSdkRoutingSpanReleaseHandle(handle);

final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingSpanCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_Span_create_handle_nullable'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingSpanReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_Span_release_handle_nullable'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingSpanGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_Span_get_value_nullable'));

Pointer<Void> heresdkTrafficAwareNavigationBindingslistofSdkRoutingSpanToFfiNullable(List<Span>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkTrafficAwareNavigationBindingslistofSdkRoutingSpanToFfi(value);
  final result = _heresdkTrafficAwareNavigationBindingslistofSdkRoutingSpanCreateHandleNullable(_handle);
  heresdkTrafficAwareNavigationBindingslistofSdkRoutingSpanReleaseFfiHandle(_handle);
  return result;
}

List<Span>? heresdkTrafficAwareNavigationBindingslistofSdkRoutingSpanFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkTrafficAwareNavigationBindingslistofSdkRoutingSpanGetValueNullable(handle);
  final result = heresdkTrafficAwareNavigationBindingslistofSdkRoutingSpanFromFfi(_handle);
  heresdkTrafficAwareNavigationBindingslistofSdkRoutingSpanReleaseFfiHandle(_handle);
  return result;
}

void heresdkTrafficAwareNavigationBindingslistofSdkRoutingSpanReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkTrafficAwareNavigationBindingslistofSdkRoutingSpanReleaseHandleNullable(handle);

final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTollCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_Toll_create_handle'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTollReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_Toll_release_handle'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTollInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_Toll_insert'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTollIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_Toll_iterator'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTollIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_Toll_iterator_release_handle'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTollIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_Toll_iterator_is_valid'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTollIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_Toll_iterator_increment'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTollIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_Toll_iterator_get'));

Pointer<Void> heresdkTrafficAwareNavigationBindingslistofSdkRoutingTollToFfi(List<Toll> value) {
  final _result = _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTollCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingTollToFfi(element);
    _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTollInsert(_result, _elementHandle);
    sdkRoutingTollReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Toll> heresdkTrafficAwareNavigationBindingslistofSdkRoutingTollFromFfi(Pointer<Void> handle) {
  final result = List<Toll>.empty(growable: true);
  final _iteratorHandle = _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTollIterator(handle);
  while (_heresdkTrafficAwareNavigationBindingslistofSdkRoutingTollIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTollIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingTollFromFfi(_elementHandle));
    } finally {
      sdkRoutingTollReleaseFfiHandle(_elementHandle);
    }
    _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTollIteratorIncrement(_iteratorHandle);
  }
  _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTollIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkTrafficAwareNavigationBindingslistofSdkRoutingTollReleaseFfiHandle(Pointer<Void> handle) => _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTollReleaseHandle(handle);

final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTollCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_Toll_create_handle_nullable'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTollReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_Toll_release_handle_nullable'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTollGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_Toll_get_value_nullable'));

Pointer<Void> heresdkTrafficAwareNavigationBindingslistofSdkRoutingTollToFfiNullable(List<Toll>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkTrafficAwareNavigationBindingslistofSdkRoutingTollToFfi(value);
  final result = _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTollCreateHandleNullable(_handle);
  heresdkTrafficAwareNavigationBindingslistofSdkRoutingTollReleaseFfiHandle(_handle);
  return result;
}

List<Toll>? heresdkTrafficAwareNavigationBindingslistofSdkRoutingTollFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTollGetValueNullable(handle);
  final result = heresdkTrafficAwareNavigationBindingslistofSdkRoutingTollFromFfi(_handle);
  heresdkTrafficAwareNavigationBindingslistofSdkRoutingTollReleaseFfiHandle(_handle);
  return result;
}

void heresdkTrafficAwareNavigationBindingslistofSdkRoutingTollReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTollReleaseHandleNullable(handle);

final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTollfareCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_TollFare_create_handle'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTollfareReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_TollFare_release_handle'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTollfareInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_TollFare_insert'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTollfareIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_TollFare_iterator'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTollfareIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_TollFare_iterator_release_handle'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTollfareIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_TollFare_iterator_is_valid'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTollfareIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_TollFare_iterator_increment'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTollfareIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_TollFare_iterator_get'));

Pointer<Void> heresdkTrafficAwareNavigationBindingslistofSdkRoutingTollfareToFfi(List<TollFare> value) {
  final _result = _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTollfareCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingTollfareToFfi(element);
    _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTollfareInsert(_result, _elementHandle);
    sdkRoutingTollfareReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<TollFare> heresdkTrafficAwareNavigationBindingslistofSdkRoutingTollfareFromFfi(Pointer<Void> handle) {
  final result = List<TollFare>.empty(growable: true);
  final _iteratorHandle = _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTollfareIterator(handle);
  while (_heresdkTrafficAwareNavigationBindingslistofSdkRoutingTollfareIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTollfareIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingTollfareFromFfi(_elementHandle));
    } finally {
      sdkRoutingTollfareReleaseFfiHandle(_elementHandle);
    }
    _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTollfareIteratorIncrement(_iteratorHandle);
  }
  _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTollfareIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkTrafficAwareNavigationBindingslistofSdkRoutingTollfareReleaseFfiHandle(Pointer<Void> handle) => _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTollfareReleaseHandle(handle);

final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTollfareCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_TollFare_create_handle_nullable'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTollfareReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_TollFare_release_handle_nullable'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTollfareGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_TollFare_get_value_nullable'));

Pointer<Void> heresdkTrafficAwareNavigationBindingslistofSdkRoutingTollfareToFfiNullable(List<TollFare>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkTrafficAwareNavigationBindingslistofSdkRoutingTollfareToFfi(value);
  final result = _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTollfareCreateHandleNullable(_handle);
  heresdkTrafficAwareNavigationBindingslistofSdkRoutingTollfareReleaseFfiHandle(_handle);
  return result;
}

List<TollFare>? heresdkTrafficAwareNavigationBindingslistofSdkRoutingTollfareFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTollfareGetValueNullable(handle);
  final result = heresdkTrafficAwareNavigationBindingslistofSdkRoutingTollfareFromFfi(_handle);
  heresdkTrafficAwareNavigationBindingslistofSdkRoutingTollfareReleaseFfiHandle(_handle);
  return result;
}

void heresdkTrafficAwareNavigationBindingslistofSdkRoutingTollfareReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTollfareReleaseHandleNullable(handle);

final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTrafficincidentonrouteCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_TrafficIncidentOnRoute_create_handle'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTrafficincidentonrouteReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_TrafficIncidentOnRoute_release_handle'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTrafficincidentonrouteInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_TrafficIncidentOnRoute_insert'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTrafficincidentonrouteIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_TrafficIncidentOnRoute_iterator'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTrafficincidentonrouteIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_TrafficIncidentOnRoute_iterator_release_handle'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTrafficincidentonrouteIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_TrafficIncidentOnRoute_iterator_is_valid'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTrafficincidentonrouteIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_TrafficIncidentOnRoute_iterator_increment'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTrafficincidentonrouteIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_TrafficIncidentOnRoute_iterator_get'));

Pointer<Void> heresdkTrafficAwareNavigationBindingslistofSdkRoutingTrafficincidentonrouteToFfi(List<TrafficIncidentOnRoute> value) {
  final _result = _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTrafficincidentonrouteCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingTrafficincidentonrouteToFfi(element);
    _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTrafficincidentonrouteInsert(_result, _elementHandle);
    sdkRoutingTrafficincidentonrouteReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<TrafficIncidentOnRoute> heresdkTrafficAwareNavigationBindingslistofSdkRoutingTrafficincidentonrouteFromFfi(Pointer<Void> handle) {
  final result = List<TrafficIncidentOnRoute>.empty(growable: true);
  final _iteratorHandle = _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTrafficincidentonrouteIterator(handle);
  while (_heresdkTrafficAwareNavigationBindingslistofSdkRoutingTrafficincidentonrouteIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTrafficincidentonrouteIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingTrafficincidentonrouteFromFfi(_elementHandle));
    } finally {
      sdkRoutingTrafficincidentonrouteReleaseFfiHandle(_elementHandle);
    }
    _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTrafficincidentonrouteIteratorIncrement(_iteratorHandle);
  }
  _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTrafficincidentonrouteIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkTrafficAwareNavigationBindingslistofSdkRoutingTrafficincidentonrouteReleaseFfiHandle(Pointer<Void> handle) => _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTrafficincidentonrouteReleaseHandle(handle);

final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTrafficincidentonrouteCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_TrafficIncidentOnRoute_create_handle_nullable'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTrafficincidentonrouteReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_TrafficIncidentOnRoute_release_handle_nullable'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTrafficincidentonrouteGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_TrafficIncidentOnRoute_get_value_nullable'));

Pointer<Void> heresdkTrafficAwareNavigationBindingslistofSdkRoutingTrafficincidentonrouteToFfiNullable(List<TrafficIncidentOnRoute>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkTrafficAwareNavigationBindingslistofSdkRoutingTrafficincidentonrouteToFfi(value);
  final result = _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTrafficincidentonrouteCreateHandleNullable(_handle);
  heresdkTrafficAwareNavigationBindingslistofSdkRoutingTrafficincidentonrouteReleaseFfiHandle(_handle);
  return result;
}

List<TrafficIncidentOnRoute>? heresdkTrafficAwareNavigationBindingslistofSdkRoutingTrafficincidentonrouteFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTrafficincidentonrouteGetValueNullable(handle);
  final result = heresdkTrafficAwareNavigationBindingslistofSdkRoutingTrafficincidentonrouteFromFfi(_handle);
  heresdkTrafficAwareNavigationBindingslistofSdkRoutingTrafficincidentonrouteReleaseFfiHandle(_handle);
  return result;
}

void heresdkTrafficAwareNavigationBindingslistofSdkRoutingTrafficincidentonrouteReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTrafficincidentonrouteReleaseHandleNullable(handle);

final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTrafficspeedCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_TrafficSpeed_create_handle'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTrafficspeedReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_TrafficSpeed_release_handle'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTrafficspeedInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_TrafficSpeed_insert'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTrafficspeedIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_TrafficSpeed_iterator'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTrafficspeedIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_TrafficSpeed_iterator_release_handle'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTrafficspeedIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_TrafficSpeed_iterator_is_valid'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTrafficspeedIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_TrafficSpeed_iterator_increment'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTrafficspeedIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_TrafficSpeed_iterator_get'));

Pointer<Void> heresdkTrafficAwareNavigationBindingslistofSdkRoutingTrafficspeedToFfi(List<TrafficSpeed> value) {
  final _result = _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTrafficspeedCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingTrafficspeedToFfi(element);
    _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTrafficspeedInsert(_result, _elementHandle);
    sdkRoutingTrafficspeedReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<TrafficSpeed> heresdkTrafficAwareNavigationBindingslistofSdkRoutingTrafficspeedFromFfi(Pointer<Void> handle) {
  final result = List<TrafficSpeed>.empty(growable: true);
  final _iteratorHandle = _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTrafficspeedIterator(handle);
  while (_heresdkTrafficAwareNavigationBindingslistofSdkRoutingTrafficspeedIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTrafficspeedIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingTrafficspeedFromFfi(_elementHandle));
    } finally {
      sdkRoutingTrafficspeedReleaseFfiHandle(_elementHandle);
    }
    _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTrafficspeedIteratorIncrement(_iteratorHandle);
  }
  _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTrafficspeedIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkTrafficAwareNavigationBindingslistofSdkRoutingTrafficspeedReleaseFfiHandle(Pointer<Void> handle) => _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTrafficspeedReleaseHandle(handle);

final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTrafficspeedCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_TrafficSpeed_create_handle_nullable'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTrafficspeedReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_TrafficSpeed_release_handle_nullable'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTrafficspeedGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_TrafficSpeed_get_value_nullable'));

Pointer<Void> heresdkTrafficAwareNavigationBindingslistofSdkRoutingTrafficspeedToFfiNullable(List<TrafficSpeed>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkTrafficAwareNavigationBindingslistofSdkRoutingTrafficspeedToFfi(value);
  final result = _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTrafficspeedCreateHandleNullable(_handle);
  heresdkTrafficAwareNavigationBindingslistofSdkRoutingTrafficspeedReleaseFfiHandle(_handle);
  return result;
}

List<TrafficSpeed>? heresdkTrafficAwareNavigationBindingslistofSdkRoutingTrafficspeedFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTrafficspeedGetValueNullable(handle);
  final result = heresdkTrafficAwareNavigationBindingslistofSdkRoutingTrafficspeedFromFfi(_handle);
  heresdkTrafficAwareNavigationBindingslistofSdkRoutingTrafficspeedReleaseFfiHandle(_handle);
  return result;
}

void heresdkTrafficAwareNavigationBindingslistofSdkRoutingTrafficspeedReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTrafficspeedReleaseHandleNullable(handle);

final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTransitincidentCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_TransitIncident_create_handle'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTransitincidentReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_TransitIncident_release_handle'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTransitincidentInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_TransitIncident_insert'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTransitincidentIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_TransitIncident_iterator'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTransitincidentIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_TransitIncident_iterator_release_handle'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTransitincidentIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_TransitIncident_iterator_is_valid'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTransitincidentIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_TransitIncident_iterator_increment'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTransitincidentIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_TransitIncident_iterator_get'));

Pointer<Void> heresdkTrafficAwareNavigationBindingslistofSdkRoutingTransitincidentToFfi(List<TransitIncident> value) {
  final _result = _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTransitincidentCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingTransitincidentToFfi(element);
    _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTransitincidentInsert(_result, _elementHandle);
    sdkRoutingTransitincidentReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<TransitIncident> heresdkTrafficAwareNavigationBindingslistofSdkRoutingTransitincidentFromFfi(Pointer<Void> handle) {
  final result = List<TransitIncident>.empty(growable: true);
  final _iteratorHandle = _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTransitincidentIterator(handle);
  while (_heresdkTrafficAwareNavigationBindingslistofSdkRoutingTransitincidentIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTransitincidentIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingTransitincidentFromFfi(_elementHandle));
    } finally {
      sdkRoutingTransitincidentReleaseFfiHandle(_elementHandle);
    }
    _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTransitincidentIteratorIncrement(_iteratorHandle);
  }
  _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTransitincidentIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkTrafficAwareNavigationBindingslistofSdkRoutingTransitincidentReleaseFfiHandle(Pointer<Void> handle) => _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTransitincidentReleaseHandle(handle);

final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTransitincidentCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_TransitIncident_create_handle_nullable'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTransitincidentReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_TransitIncident_release_handle_nullable'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTransitincidentGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_TransitIncident_get_value_nullable'));

Pointer<Void> heresdkTrafficAwareNavigationBindingslistofSdkRoutingTransitincidentToFfiNullable(List<TransitIncident>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkTrafficAwareNavigationBindingslistofSdkRoutingTransitincidentToFfi(value);
  final result = _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTransitincidentCreateHandleNullable(_handle);
  heresdkTrafficAwareNavigationBindingslistofSdkRoutingTransitincidentReleaseFfiHandle(_handle);
  return result;
}

List<TransitIncident>? heresdkTrafficAwareNavigationBindingslistofSdkRoutingTransitincidentFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTransitincidentGetValueNullable(handle);
  final result = heresdkTrafficAwareNavigationBindingslistofSdkRoutingTransitincidentFromFfi(_handle);
  heresdkTrafficAwareNavigationBindingslistofSdkRoutingTransitincidentReleaseFfiHandle(_handle);
  return result;
}

void heresdkTrafficAwareNavigationBindingslistofSdkRoutingTransitincidentReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTransitincidentReleaseHandleNullable(handle);

final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTransitmodeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_TransitMode_create_handle'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTransitmodeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_TransitMode_release_handle'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTransitmodeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_TransitMode_insert'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTransitmodeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_TransitMode_iterator'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTransitmodeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_TransitMode_iterator_release_handle'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTransitmodeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_TransitMode_iterator_is_valid'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTransitmodeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_TransitMode_iterator_increment'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTransitmodeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_TransitMode_iterator_get'));

Pointer<Void> heresdkTrafficAwareNavigationBindingslistofSdkRoutingTransitmodeToFfi(List<TransitMode> value) {
  final _result = _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTransitmodeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingTransitmodeToFfi(element);
    _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTransitmodeInsert(_result, _elementHandle);
    sdkRoutingTransitmodeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<TransitMode> heresdkTrafficAwareNavigationBindingslistofSdkRoutingTransitmodeFromFfi(Pointer<Void> handle) {
  final result = List<TransitMode>.empty(growable: true);
  final _iteratorHandle = _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTransitmodeIterator(handle);
  while (_heresdkTrafficAwareNavigationBindingslistofSdkRoutingTransitmodeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTransitmodeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingTransitmodeFromFfi(_elementHandle));
    } finally {
      sdkRoutingTransitmodeReleaseFfiHandle(_elementHandle);
    }
    _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTransitmodeIteratorIncrement(_iteratorHandle);
  }
  _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTransitmodeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkTrafficAwareNavigationBindingslistofSdkRoutingTransitmodeReleaseFfiHandle(Pointer<Void> handle) => _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTransitmodeReleaseHandle(handle);

final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTransitmodeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_TransitMode_create_handle_nullable'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTransitmodeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_TransitMode_release_handle_nullable'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTransitmodeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_TransitMode_get_value_nullable'));

Pointer<Void> heresdkTrafficAwareNavigationBindingslistofSdkRoutingTransitmodeToFfiNullable(List<TransitMode>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkTrafficAwareNavigationBindingslistofSdkRoutingTransitmodeToFfi(value);
  final result = _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTransitmodeCreateHandleNullable(_handle);
  heresdkTrafficAwareNavigationBindingslistofSdkRoutingTransitmodeReleaseFfiHandle(_handle);
  return result;
}

List<TransitMode>? heresdkTrafficAwareNavigationBindingslistofSdkRoutingTransitmodeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTransitmodeGetValueNullable(handle);
  final result = heresdkTrafficAwareNavigationBindingslistofSdkRoutingTransitmodeFromFfi(_handle);
  heresdkTrafficAwareNavigationBindingslistofSdkRoutingTransitmodeReleaseFfiHandle(_handle);
  return result;
}

void heresdkTrafficAwareNavigationBindingslistofSdkRoutingTransitmodeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTransitmodeReleaseHandleNullable(handle);

final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTransitstopCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_TransitStop_create_handle'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTransitstopReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_TransitStop_release_handle'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTransitstopInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_TransitStop_insert'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTransitstopIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_TransitStop_iterator'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTransitstopIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_TransitStop_iterator_release_handle'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTransitstopIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_TransitStop_iterator_is_valid'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTransitstopIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_TransitStop_iterator_increment'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTransitstopIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_TransitStop_iterator_get'));

Pointer<Void> heresdkTrafficAwareNavigationBindingslistofSdkRoutingTransitstopToFfi(List<TransitStop> value) {
  final _result = _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTransitstopCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingTransitstopToFfi(element);
    _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTransitstopInsert(_result, _elementHandle);
    sdkRoutingTransitstopReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<TransitStop> heresdkTrafficAwareNavigationBindingslistofSdkRoutingTransitstopFromFfi(Pointer<Void> handle) {
  final result = List<TransitStop>.empty(growable: true);
  final _iteratorHandle = _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTransitstopIterator(handle);
  while (_heresdkTrafficAwareNavigationBindingslistofSdkRoutingTransitstopIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTransitstopIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingTransitstopFromFfi(_elementHandle));
    } finally {
      sdkRoutingTransitstopReleaseFfiHandle(_elementHandle);
    }
    _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTransitstopIteratorIncrement(_iteratorHandle);
  }
  _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTransitstopIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkTrafficAwareNavigationBindingslistofSdkRoutingTransitstopReleaseFfiHandle(Pointer<Void> handle) => _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTransitstopReleaseHandle(handle);

final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTransitstopCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_TransitStop_create_handle_nullable'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTransitstopReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_TransitStop_release_handle_nullable'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTransitstopGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_TransitStop_get_value_nullable'));

Pointer<Void> heresdkTrafficAwareNavigationBindingslistofSdkRoutingTransitstopToFfiNullable(List<TransitStop>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkTrafficAwareNavigationBindingslistofSdkRoutingTransitstopToFfi(value);
  final result = _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTransitstopCreateHandleNullable(_handle);
  heresdkTrafficAwareNavigationBindingslistofSdkRoutingTransitstopReleaseFfiHandle(_handle);
  return result;
}

List<TransitStop>? heresdkTrafficAwareNavigationBindingslistofSdkRoutingTransitstopFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTransitstopGetValueNullable(handle);
  final result = heresdkTrafficAwareNavigationBindingslistofSdkRoutingTransitstopFromFfi(_handle);
  heresdkTrafficAwareNavigationBindingslistofSdkRoutingTransitstopReleaseFfiHandle(_handle);
  return result;
}

void heresdkTrafficAwareNavigationBindingslistofSdkRoutingTransitstopReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkTrafficAwareNavigationBindingslistofSdkRoutingTransitstopReleaseHandleNullable(handle);

final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingWaypointCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_Waypoint_create_handle'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingWaypointReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_Waypoint_release_handle'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingWaypointInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_Waypoint_insert'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingWaypointIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_Waypoint_iterator'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingWaypointIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_Waypoint_iterator_release_handle'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingWaypointIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_Waypoint_iterator_is_valid'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingWaypointIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_Waypoint_iterator_increment'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingWaypointIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_Waypoint_iterator_get'));

Pointer<Void> heresdkTrafficAwareNavigationBindingslistofSdkRoutingWaypointToFfi(List<Waypoint> value) {
  final _result = _heresdkTrafficAwareNavigationBindingslistofSdkRoutingWaypointCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingWaypointToFfi(element);
    _heresdkTrafficAwareNavigationBindingslistofSdkRoutingWaypointInsert(_result, _elementHandle);
    sdkRoutingWaypointReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Waypoint> heresdkTrafficAwareNavigationBindingslistofSdkRoutingWaypointFromFfi(Pointer<Void> handle) {
  final result = List<Waypoint>.empty(growable: true);
  final _iteratorHandle = _heresdkTrafficAwareNavigationBindingslistofSdkRoutingWaypointIterator(handle);
  while (_heresdkTrafficAwareNavigationBindingslistofSdkRoutingWaypointIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkTrafficAwareNavigationBindingslistofSdkRoutingWaypointIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingWaypointFromFfi(_elementHandle));
    } finally {
      sdkRoutingWaypointReleaseFfiHandle(_elementHandle);
    }
    _heresdkTrafficAwareNavigationBindingslistofSdkRoutingWaypointIteratorIncrement(_iteratorHandle);
  }
  _heresdkTrafficAwareNavigationBindingslistofSdkRoutingWaypointIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkTrafficAwareNavigationBindingslistofSdkRoutingWaypointReleaseFfiHandle(Pointer<Void> handle) => _heresdkTrafficAwareNavigationBindingslistofSdkRoutingWaypointReleaseHandle(handle);

final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingWaypointCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_Waypoint_create_handle_nullable'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingWaypointReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_Waypoint_release_handle_nullable'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingWaypointGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_Waypoint_get_value_nullable'));

Pointer<Void> heresdkTrafficAwareNavigationBindingslistofSdkRoutingWaypointToFfiNullable(List<Waypoint>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkTrafficAwareNavigationBindingslistofSdkRoutingWaypointToFfi(value);
  final result = _heresdkTrafficAwareNavigationBindingslistofSdkRoutingWaypointCreateHandleNullable(_handle);
  heresdkTrafficAwareNavigationBindingslistofSdkRoutingWaypointReleaseFfiHandle(_handle);
  return result;
}

List<Waypoint>? heresdkTrafficAwareNavigationBindingslistofSdkRoutingWaypointFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkTrafficAwareNavigationBindingslistofSdkRoutingWaypointGetValueNullable(handle);
  final result = heresdkTrafficAwareNavigationBindingslistofSdkRoutingWaypointFromFfi(_handle);
  heresdkTrafficAwareNavigationBindingslistofSdkRoutingWaypointReleaseFfiHandle(_handle);
  return result;
}

void heresdkTrafficAwareNavigationBindingslistofSdkRoutingWaypointReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkTrafficAwareNavigationBindingslistofSdkRoutingWaypointReleaseHandleNullable(handle);

final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingZonecategoryCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_ZoneCategory_create_handle'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingZonecategoryReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_ZoneCategory_release_handle'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingZonecategoryInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_ZoneCategory_insert'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingZonecategoryIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_ZoneCategory_iterator'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingZonecategoryIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_ZoneCategory_iterator_release_handle'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingZonecategoryIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_ZoneCategory_iterator_is_valid'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingZonecategoryIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_ZoneCategory_iterator_increment'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingZonecategoryIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_ZoneCategory_iterator_get'));

Pointer<Void> heresdkTrafficAwareNavigationBindingslistofSdkRoutingZonecategoryToFfi(List<ZoneCategory> value) {
  final _result = _heresdkTrafficAwareNavigationBindingslistofSdkRoutingZonecategoryCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingZonecategoryToFfi(element);
    _heresdkTrafficAwareNavigationBindingslistofSdkRoutingZonecategoryInsert(_result, _elementHandle);
    sdkRoutingZonecategoryReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<ZoneCategory> heresdkTrafficAwareNavigationBindingslistofSdkRoutingZonecategoryFromFfi(Pointer<Void> handle) {
  final result = List<ZoneCategory>.empty(growable: true);
  final _iteratorHandle = _heresdkTrafficAwareNavigationBindingslistofSdkRoutingZonecategoryIterator(handle);
  while (_heresdkTrafficAwareNavigationBindingslistofSdkRoutingZonecategoryIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkTrafficAwareNavigationBindingslistofSdkRoutingZonecategoryIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingZonecategoryFromFfi(_elementHandle));
    } finally {
      sdkRoutingZonecategoryReleaseFfiHandle(_elementHandle);
    }
    _heresdkTrafficAwareNavigationBindingslistofSdkRoutingZonecategoryIteratorIncrement(_iteratorHandle);
  }
  _heresdkTrafficAwareNavigationBindingslistofSdkRoutingZonecategoryIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkTrafficAwareNavigationBindingslistofSdkRoutingZonecategoryReleaseFfiHandle(Pointer<Void> handle) => _heresdkTrafficAwareNavigationBindingslistofSdkRoutingZonecategoryReleaseHandle(handle);

final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingZonecategoryCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_ZoneCategory_create_handle_nullable'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingZonecategoryReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_ZoneCategory_release_handle_nullable'));
final _heresdkTrafficAwareNavigationBindingslistofSdkRoutingZonecategoryGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_routing_ZoneCategory_get_value_nullable'));

Pointer<Void> heresdkTrafficAwareNavigationBindingslistofSdkRoutingZonecategoryToFfiNullable(List<ZoneCategory>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkTrafficAwareNavigationBindingslistofSdkRoutingZonecategoryToFfi(value);
  final result = _heresdkTrafficAwareNavigationBindingslistofSdkRoutingZonecategoryCreateHandleNullable(_handle);
  heresdkTrafficAwareNavigationBindingslistofSdkRoutingZonecategoryReleaseFfiHandle(_handle);
  return result;
}

List<ZoneCategory>? heresdkTrafficAwareNavigationBindingslistofSdkRoutingZonecategoryFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkTrafficAwareNavigationBindingslistofSdkRoutingZonecategoryGetValueNullable(handle);
  final result = heresdkTrafficAwareNavigationBindingslistofSdkRoutingZonecategoryFromFfi(_handle);
  heresdkTrafficAwareNavigationBindingslistofSdkRoutingZonecategoryReleaseFfiHandle(_handle);
  return result;
}

void heresdkTrafficAwareNavigationBindingslistofSdkRoutingZonecategoryReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkTrafficAwareNavigationBindingslistofSdkRoutingZonecategoryReleaseHandleNullable(handle);

final _heresdkTrafficAwareNavigationBindingslistofSdkTransportHazardousmaterialCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_transport_HazardousMaterial_create_handle'));
final _heresdkTrafficAwareNavigationBindingslistofSdkTransportHazardousmaterialReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_transport_HazardousMaterial_release_handle'));
final _heresdkTrafficAwareNavigationBindingslistofSdkTransportHazardousmaterialInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_transport_HazardousMaterial_insert'));
final _heresdkTrafficAwareNavigationBindingslistofSdkTransportHazardousmaterialIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_transport_HazardousMaterial_iterator'));
final _heresdkTrafficAwareNavigationBindingslistofSdkTransportHazardousmaterialIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_transport_HazardousMaterial_iterator_release_handle'));
final _heresdkTrafficAwareNavigationBindingslistofSdkTransportHazardousmaterialIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_transport_HazardousMaterial_iterator_is_valid'));
final _heresdkTrafficAwareNavigationBindingslistofSdkTransportHazardousmaterialIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_transport_HazardousMaterial_iterator_increment'));
final _heresdkTrafficAwareNavigationBindingslistofSdkTransportHazardousmaterialIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_transport_HazardousMaterial_iterator_get'));

Pointer<Void> heresdkTrafficAwareNavigationBindingslistofSdkTransportHazardousmaterialToFfi(List<HazardousMaterial> value) {
  final _result = _heresdkTrafficAwareNavigationBindingslistofSdkTransportHazardousmaterialCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkTransportHazardousmaterialToFfi(element);
    _heresdkTrafficAwareNavigationBindingslistofSdkTransportHazardousmaterialInsert(_result, _elementHandle);
    sdkTransportHazardousmaterialReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<HazardousMaterial> heresdkTrafficAwareNavigationBindingslistofSdkTransportHazardousmaterialFromFfi(Pointer<Void> handle) {
  final result = List<HazardousMaterial>.empty(growable: true);
  final _iteratorHandle = _heresdkTrafficAwareNavigationBindingslistofSdkTransportHazardousmaterialIterator(handle);
  while (_heresdkTrafficAwareNavigationBindingslistofSdkTransportHazardousmaterialIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkTrafficAwareNavigationBindingslistofSdkTransportHazardousmaterialIteratorGet(_iteratorHandle);
    try {
      result.add(sdkTransportHazardousmaterialFromFfi(_elementHandle));
    } finally {
      sdkTransportHazardousmaterialReleaseFfiHandle(_elementHandle);
    }
    _heresdkTrafficAwareNavigationBindingslistofSdkTransportHazardousmaterialIteratorIncrement(_iteratorHandle);
  }
  _heresdkTrafficAwareNavigationBindingslistofSdkTransportHazardousmaterialIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkTrafficAwareNavigationBindingslistofSdkTransportHazardousmaterialReleaseFfiHandle(Pointer<Void> handle) => _heresdkTrafficAwareNavigationBindingslistofSdkTransportHazardousmaterialReleaseHandle(handle);

final _heresdkTrafficAwareNavigationBindingslistofSdkTransportHazardousmaterialCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_transport_HazardousMaterial_create_handle_nullable'));
final _heresdkTrafficAwareNavigationBindingslistofSdkTransportHazardousmaterialReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_transport_HazardousMaterial_release_handle_nullable'));
final _heresdkTrafficAwareNavigationBindingslistofSdkTransportHazardousmaterialGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsListOf_sdk_transport_HazardousMaterial_get_value_nullable'));

Pointer<Void> heresdkTrafficAwareNavigationBindingslistofSdkTransportHazardousmaterialToFfiNullable(List<HazardousMaterial>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkTrafficAwareNavigationBindingslistofSdkTransportHazardousmaterialToFfi(value);
  final result = _heresdkTrafficAwareNavigationBindingslistofSdkTransportHazardousmaterialCreateHandleNullable(_handle);
  heresdkTrafficAwareNavigationBindingslistofSdkTransportHazardousmaterialReleaseFfiHandle(_handle);
  return result;
}

List<HazardousMaterial>? heresdkTrafficAwareNavigationBindingslistofSdkTransportHazardousmaterialFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkTrafficAwareNavigationBindingslistofSdkTransportHazardousmaterialGetValueNullable(handle);
  final result = heresdkTrafficAwareNavigationBindingslistofSdkTransportHazardousmaterialFromFfi(_handle);
  heresdkTrafficAwareNavigationBindingslistofSdkTransportHazardousmaterialReleaseFfiHandle(_handle);
  return result;
}

void heresdkTrafficAwareNavigationBindingslistofSdkTransportHazardousmaterialReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkTrafficAwareNavigationBindingslistofSdkTransportHazardousmaterialReleaseHandleNullable(handle);

final _heresdkTrafficAwareNavigationBindingsmapofDoubleToDoubleCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsMapOf_Double_to_Double_create_handle'));
final _heresdkTrafficAwareNavigationBindingsmapofDoubleToDoubleReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsMapOf_Double_to_Double_release_handle'));
final _heresdkTrafficAwareNavigationBindingsmapofDoubleToDoublePut = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Double, Double),
    void Function(Pointer<Void>, double, double)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsMapOf_Double_to_Double_put'));
final _heresdkTrafficAwareNavigationBindingsmapofDoubleToDoubleIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsMapOf_Double_to_Double_iterator'));
final _heresdkTrafficAwareNavigationBindingsmapofDoubleToDoubleIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsMapOf_Double_to_Double_iterator_release_handle'));
final _heresdkTrafficAwareNavigationBindingsmapofDoubleToDoubleIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsMapOf_Double_to_Double_iterator_is_valid'));
final _heresdkTrafficAwareNavigationBindingsmapofDoubleToDoubleIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsMapOf_Double_to_Double_iterator_increment'));
final _heresdkTrafficAwareNavigationBindingsmapofDoubleToDoubleIteratorGetKey = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Double Function(Pointer<Void>),
    double Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsMapOf_Double_to_Double_iterator_get_key'));
final _heresdkTrafficAwareNavigationBindingsmapofDoubleToDoubleIteratorGetValue = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Double Function(Pointer<Void>),
    double Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsMapOf_Double_to_Double_iterator_get_value'));

Pointer<Void> heresdkTrafficAwareNavigationBindingsmapofDoubleToDoubleToFfi(Map<double, double> value) {
  final _result = _heresdkTrafficAwareNavigationBindingsmapofDoubleToDoubleCreateHandle();
  for (final entry in value.entries) {
    final _keyHandle = (entry.key);
    final _valueHandle = (entry.value);
    _heresdkTrafficAwareNavigationBindingsmapofDoubleToDoublePut(_result, _keyHandle, _valueHandle);
    
    
  }
  return _result;
}

Map<double, double> heresdkTrafficAwareNavigationBindingsmapofDoubleToDoubleFromFfi(Pointer<Void> handle) {
  final result = Map<double, double>();
  final _iteratorHandle = _heresdkTrafficAwareNavigationBindingsmapofDoubleToDoubleIterator(handle);
  while (_heresdkTrafficAwareNavigationBindingsmapofDoubleToDoubleIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _keyHandle = _heresdkTrafficAwareNavigationBindingsmapofDoubleToDoubleIteratorGetKey(_iteratorHandle);
    final _valueHandle = _heresdkTrafficAwareNavigationBindingsmapofDoubleToDoubleIteratorGetValue(_iteratorHandle);
    try {
      result[(_keyHandle)] =
        (_valueHandle);
    } finally {
      
      
    }
    _heresdkTrafficAwareNavigationBindingsmapofDoubleToDoubleIteratorIncrement(_iteratorHandle);
  }
  _heresdkTrafficAwareNavigationBindingsmapofDoubleToDoubleIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkTrafficAwareNavigationBindingsmapofDoubleToDoubleReleaseFfiHandle(Pointer<Void> handle) => _heresdkTrafficAwareNavigationBindingsmapofDoubleToDoubleReleaseHandle(handle);

final _heresdkTrafficAwareNavigationBindingsmapofDoubleToDoubleCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsMapOf_Double_to_Double_create_handle_nullable'));
final _heresdkTrafficAwareNavigationBindingsmapofDoubleToDoubleReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsMapOf_Double_to_Double_release_handle_nullable'));
final _heresdkTrafficAwareNavigationBindingsmapofDoubleToDoubleGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsMapOf_Double_to_Double_get_value_nullable'));

Pointer<Void> heresdkTrafficAwareNavigationBindingsmapofDoubleToDoubleToFfiNullable(Map<double, double>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkTrafficAwareNavigationBindingsmapofDoubleToDoubleToFfi(value);
  final result = _heresdkTrafficAwareNavigationBindingsmapofDoubleToDoubleCreateHandleNullable(_handle);
  heresdkTrafficAwareNavigationBindingsmapofDoubleToDoubleReleaseFfiHandle(_handle);
  return result;
}

Map<double, double>? heresdkTrafficAwareNavigationBindingsmapofDoubleToDoubleFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkTrafficAwareNavigationBindingsmapofDoubleToDoubleGetValueNullable(handle);
  final result = heresdkTrafficAwareNavigationBindingsmapofDoubleToDoubleFromFfi(_handle);
  heresdkTrafficAwareNavigationBindingsmapofDoubleToDoubleReleaseFfiHandle(_handle);
  return result;
}

void heresdkTrafficAwareNavigationBindingsmapofDoubleToDoubleReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkTrafficAwareNavigationBindingsmapofDoubleToDoubleReleaseHandleNullable(handle);

final _heresdkTrafficAwareNavigationBindingsmapofIntToDoubleCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsMapOf_Int_to_Double_create_handle'));
final _heresdkTrafficAwareNavigationBindingsmapofIntToDoubleReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsMapOf_Int_to_Double_release_handle'));
final _heresdkTrafficAwareNavigationBindingsmapofIntToDoublePut = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Int32, Double),
    void Function(Pointer<Void>, int, double)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsMapOf_Int_to_Double_put'));
final _heresdkTrafficAwareNavigationBindingsmapofIntToDoubleIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsMapOf_Int_to_Double_iterator'));
final _heresdkTrafficAwareNavigationBindingsmapofIntToDoubleIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsMapOf_Int_to_Double_iterator_release_handle'));
final _heresdkTrafficAwareNavigationBindingsmapofIntToDoubleIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsMapOf_Int_to_Double_iterator_is_valid'));
final _heresdkTrafficAwareNavigationBindingsmapofIntToDoubleIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsMapOf_Int_to_Double_iterator_increment'));
final _heresdkTrafficAwareNavigationBindingsmapofIntToDoubleIteratorGetKey = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsMapOf_Int_to_Double_iterator_get_key'));
final _heresdkTrafficAwareNavigationBindingsmapofIntToDoubleIteratorGetValue = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Double Function(Pointer<Void>),
    double Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsMapOf_Int_to_Double_iterator_get_value'));

Pointer<Void> heresdkTrafficAwareNavigationBindingsmapofIntToDoubleToFfi(Map<int, double> value) {
  final _result = _heresdkTrafficAwareNavigationBindingsmapofIntToDoubleCreateHandle();
  for (final entry in value.entries) {
    final _keyHandle = (entry.key);
    final _valueHandle = (entry.value);
    _heresdkTrafficAwareNavigationBindingsmapofIntToDoublePut(_result, _keyHandle, _valueHandle);
    
    
  }
  return _result;
}

Map<int, double> heresdkTrafficAwareNavigationBindingsmapofIntToDoubleFromFfi(Pointer<Void> handle) {
  final result = Map<int, double>();
  final _iteratorHandle = _heresdkTrafficAwareNavigationBindingsmapofIntToDoubleIterator(handle);
  while (_heresdkTrafficAwareNavigationBindingsmapofIntToDoubleIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _keyHandle = _heresdkTrafficAwareNavigationBindingsmapofIntToDoubleIteratorGetKey(_iteratorHandle);
    final _valueHandle = _heresdkTrafficAwareNavigationBindingsmapofIntToDoubleIteratorGetValue(_iteratorHandle);
    try {
      result[(_keyHandle)] =
        (_valueHandle);
    } finally {
      
      
    }
    _heresdkTrafficAwareNavigationBindingsmapofIntToDoubleIteratorIncrement(_iteratorHandle);
  }
  _heresdkTrafficAwareNavigationBindingsmapofIntToDoubleIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkTrafficAwareNavigationBindingsmapofIntToDoubleReleaseFfiHandle(Pointer<Void> handle) => _heresdkTrafficAwareNavigationBindingsmapofIntToDoubleReleaseHandle(handle);

final _heresdkTrafficAwareNavigationBindingsmapofIntToDoubleCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsMapOf_Int_to_Double_create_handle_nullable'));
final _heresdkTrafficAwareNavigationBindingsmapofIntToDoubleReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsMapOf_Int_to_Double_release_handle_nullable'));
final _heresdkTrafficAwareNavigationBindingsmapofIntToDoubleGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsMapOf_Int_to_Double_get_value_nullable'));

Pointer<Void> heresdkTrafficAwareNavigationBindingsmapofIntToDoubleToFfiNullable(Map<int, double>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkTrafficAwareNavigationBindingsmapofIntToDoubleToFfi(value);
  final result = _heresdkTrafficAwareNavigationBindingsmapofIntToDoubleCreateHandleNullable(_handle);
  heresdkTrafficAwareNavigationBindingsmapofIntToDoubleReleaseFfiHandle(_handle);
  return result;
}

Map<int, double>? heresdkTrafficAwareNavigationBindingsmapofIntToDoubleFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkTrafficAwareNavigationBindingsmapofIntToDoubleGetValueNullable(handle);
  final result = heresdkTrafficAwareNavigationBindingsmapofIntToDoubleFromFfi(_handle);
  heresdkTrafficAwareNavigationBindingsmapofIntToDoubleReleaseFfiHandle(_handle);
  return result;
}

void heresdkTrafficAwareNavigationBindingsmapofIntToDoubleReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkTrafficAwareNavigationBindingsmapofIntToDoubleReleaseHandleNullable(handle);

final _heresdkTrafficAwareNavigationBindingsmapofSdkCoreEngineEnginebaseurlToStringCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_create_handle'));
final _heresdkTrafficAwareNavigationBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_release_handle'));
final _heresdkTrafficAwareNavigationBindingsmapofSdkCoreEngineEnginebaseurlToStringPut = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32, Pointer<Void>),
    void Function(Pointer<Void>, int, Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_put'));
final _heresdkTrafficAwareNavigationBindingsmapofSdkCoreEngineEnginebaseurlToStringIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_iterator'));
final _heresdkTrafficAwareNavigationBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_iterator_release_handle'));
final _heresdkTrafficAwareNavigationBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_iterator_is_valid'));
final _heresdkTrafficAwareNavigationBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_iterator_increment'));
final _heresdkTrafficAwareNavigationBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorGetKey = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_iterator_get_key'));
final _heresdkTrafficAwareNavigationBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorGetValue = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_aware_navigation_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_iterator_get_value'));

Pointer<Void> heresdkTrafficAwareNavigationBindingsmapofSdkCoreEngineEnginebaseurlToStringToFfi(Map<EngineBaseURL, String> value) {
  final _result = _heresdkTrafficAwareNavigationBindingsmapofSdkCoreEngineEnginebaseurlToStringCreateHandle();
  for (final entry in value.entries) {
    final _keyHandle = sdkCoreEngineEnginebaseurlToFfi(entry.key);
    final _valueHandle = stringToFfi(entry.value);
    _heresdkTrafficAwareNavigationBindingsmapofSdkCoreEngineEnginebaseurlToStringPut(_result, _keyHandle, _valueHandle);
    sdkCoreEngineEnginebaseurlReleaseFfiHandle(_keyHandle);
    stringReleaseFfiHandle(_valueHandle);
  }
  return _result;
}

Map<EngineBaseURL, String> heresdkTrafficAwareNavigationBindingsmapofSdkCoreEngineEnginebaseurlToStringFromFfi(Pointer<Void> handle) {
  final result = Map<EngineBaseURL, String>();
  final _iteratorHandle = _heresdkTrafficAwareNavigationBindingsmapofSdkCoreEngineEnginebaseurlToStringIterator(handle);
  while (_heresdkTrafficAwareNavigationBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _keyHandle = _heresdkTrafficAwareNavigationBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorGetKey(_iteratorHandle);
    final _valueHandle = _heresdkTrafficAwareNavigationBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorGetValue(_iteratorHandle);
    try {
      result[sdkCoreEngineEnginebaseurlFromFfi(_keyHandle)] =
        stringFromFfi(_valueHandle);
    } finally {
      sdkCoreEngineEnginebaseurlReleaseFfiHandle(_keyHandle);
      stringReleaseFfiHandle(_valueHandle);
    }
    _heresdkTrafficAwareNavigationBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorIncrement(_iteratorHandle);
  }
  _heresdkTrafficAwareNavigationBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkTrafficAwareNavigationBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseFfiHandle(Pointer<Void> handle) => _heresdkTrafficAwareNavigationBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseHandle(handle);

final _heresdkTrafficAwareNavigationBindingsmapofSdkCoreEngineEnginebaseurlToStringCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_create_handle_nullable'));
final _heresdkTrafficAwareNavigationBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_release_handle_nullable'));
final _heresdkTrafficAwareNavigationBindingsmapofSdkCoreEngineEnginebaseurlToStringGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_aware_navigation_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_get_value_nullable'));

Pointer<Void> heresdkTrafficAwareNavigationBindingsmapofSdkCoreEngineEnginebaseurlToStringToFfiNullable(Map<EngineBaseURL, String>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkTrafficAwareNavigationBindingsmapofSdkCoreEngineEnginebaseurlToStringToFfi(value);
  final result = _heresdkTrafficAwareNavigationBindingsmapofSdkCoreEngineEnginebaseurlToStringCreateHandleNullable(_handle);
  heresdkTrafficAwareNavigationBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseFfiHandle(_handle);
  return result;
}

Map<EngineBaseURL, String>? heresdkTrafficAwareNavigationBindingsmapofSdkCoreEngineEnginebaseurlToStringFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkTrafficAwareNavigationBindingsmapofSdkCoreEngineEnginebaseurlToStringGetValueNullable(handle);
  final result = heresdkTrafficAwareNavigationBindingsmapofSdkCoreEngineEnginebaseurlToStringFromFfi(_handle);
  heresdkTrafficAwareNavigationBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseFfiHandle(_handle);
  return result;
}

void heresdkTrafficAwareNavigationBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkTrafficAwareNavigationBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseHandleNullable(handle);


// Copyright (c) 2018-2022 HERE Global B.V. and its affiliate(s).
// All rights reserved.
//
// This software and other materials contain proprietary information
// controlled by HERE and are protected by applicable copyright legislation.
// Any use and utilization of this software and other materials and
// disclosure to any third parties is conditional upon having a separate
// agreement with HERE for the access, use, utilization or disclosure of this
// software. In the absence of such agreement, the use of the software is not
// allowed.
//















final _heresdkTrafficBindingslistofIntCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_traffic_bindingsListOf_Int_create_handle'));
final _heresdkTrafficBindingslistofIntReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_bindingsListOf_Int_release_handle'));
final _heresdkTrafficBindingslistofIntInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Int32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_traffic_bindingsListOf_Int_insert'));
final _heresdkTrafficBindingslistofIntIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsListOf_Int_iterator'));
final _heresdkTrafficBindingslistofIntIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsListOf_Int_iterator_release_handle'));
final _heresdkTrafficBindingslistofIntIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsListOf_Int_iterator_is_valid'));
final _heresdkTrafficBindingslistofIntIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsListOf_Int_iterator_increment'));
final _heresdkTrafficBindingslistofIntIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsListOf_Int_iterator_get'));

Pointer<Void> heresdkTrafficBindingslistofIntToFfi(List<int> value) {
  final _result = _heresdkTrafficBindingslistofIntCreateHandle();
  for (final element in value) {
    final _elementHandle = (element);
    _heresdkTrafficBindingslistofIntInsert(_result, _elementHandle);
    
  }
  return _result;
}

List<int> heresdkTrafficBindingslistofIntFromFfi(Pointer<Void> handle) {
  final result = List<int>.empty(growable: true);
  final _iteratorHandle = _heresdkTrafficBindingslistofIntIterator(handle);
  while (_heresdkTrafficBindingslistofIntIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkTrafficBindingslistofIntIteratorGet(_iteratorHandle);
    try {
      result.add((_elementHandle));
    } finally {
      
    }
    _heresdkTrafficBindingslistofIntIteratorIncrement(_iteratorHandle);
  }
  _heresdkTrafficBindingslistofIntIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkTrafficBindingslistofIntReleaseFfiHandle(Pointer<Void> handle) => _heresdkTrafficBindingslistofIntReleaseHandle(handle);

final _heresdkTrafficBindingslistofIntCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_bindingsListOf_Int_create_handle_nullable'));
final _heresdkTrafficBindingslistofIntReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_bindingsListOf_Int_release_handle_nullable'));
final _heresdkTrafficBindingslistofIntGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_bindingsListOf_Int_get_value_nullable'));

Pointer<Void> heresdkTrafficBindingslistofIntToFfiNullable(List<int>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkTrafficBindingslistofIntToFfi(value);
  final result = _heresdkTrafficBindingslistofIntCreateHandleNullable(_handle);
  heresdkTrafficBindingslistofIntReleaseFfiHandle(_handle);
  return result;
}

List<int>? heresdkTrafficBindingslistofIntFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkTrafficBindingslistofIntGetValueNullable(handle);
  final result = heresdkTrafficBindingslistofIntFromFfi(_handle);
  heresdkTrafficBindingslistofIntReleaseFfiHandle(_handle);
  return result;
}

void heresdkTrafficBindingslistofIntReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkTrafficBindingslistofIntReleaseHandleNullable(handle);

final _heresdkTrafficBindingslistofLocaleCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_traffic_bindingsListOf_Locale_create_handle'));
final _heresdkTrafficBindingslistofLocaleReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_bindingsListOf_Locale_release_handle'));
final _heresdkTrafficBindingslistofLocaleInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_traffic_bindingsListOf_Locale_insert'));
final _heresdkTrafficBindingslistofLocaleIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsListOf_Locale_iterator'));
final _heresdkTrafficBindingslistofLocaleIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsListOf_Locale_iterator_release_handle'));
final _heresdkTrafficBindingslistofLocaleIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsListOf_Locale_iterator_is_valid'));
final _heresdkTrafficBindingslistofLocaleIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsListOf_Locale_iterator_increment'));
final _heresdkTrafficBindingslistofLocaleIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsListOf_Locale_iterator_get'));

Pointer<Void> heresdkTrafficBindingslistofLocaleToFfi(List<Locale> value) {
  final _result = _heresdkTrafficBindingslistofLocaleCreateHandle();
  for (final element in value) {
    final _elementHandle = localeToFfi(element);
    _heresdkTrafficBindingslistofLocaleInsert(_result, _elementHandle);
    localeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Locale> heresdkTrafficBindingslistofLocaleFromFfi(Pointer<Void> handle) {
  final result = List<Locale>.empty(growable: true);
  final _iteratorHandle = _heresdkTrafficBindingslistofLocaleIterator(handle);
  while (_heresdkTrafficBindingslistofLocaleIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkTrafficBindingslistofLocaleIteratorGet(_iteratorHandle);
    try {
      result.add(localeFromFfi(_elementHandle));
    } finally {
      localeReleaseFfiHandle(_elementHandle);
    }
    _heresdkTrafficBindingslistofLocaleIteratorIncrement(_iteratorHandle);
  }
  _heresdkTrafficBindingslistofLocaleIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkTrafficBindingslistofLocaleReleaseFfiHandle(Pointer<Void> handle) => _heresdkTrafficBindingslistofLocaleReleaseHandle(handle);

final _heresdkTrafficBindingslistofLocaleCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_bindingsListOf_Locale_create_handle_nullable'));
final _heresdkTrafficBindingslistofLocaleReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_bindingsListOf_Locale_release_handle_nullable'));
final _heresdkTrafficBindingslistofLocaleGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_bindingsListOf_Locale_get_value_nullable'));

Pointer<Void> heresdkTrafficBindingslistofLocaleToFfiNullable(List<Locale>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkTrafficBindingslistofLocaleToFfi(value);
  final result = _heresdkTrafficBindingslistofLocaleCreateHandleNullable(_handle);
  heresdkTrafficBindingslistofLocaleReleaseFfiHandle(_handle);
  return result;
}

List<Locale>? heresdkTrafficBindingslistofLocaleFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkTrafficBindingslistofLocaleGetValueNullable(handle);
  final result = heresdkTrafficBindingslistofLocaleFromFfi(_handle);
  heresdkTrafficBindingslistofLocaleReleaseFfiHandle(_handle);
  return result;
}

void heresdkTrafficBindingslistofLocaleReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkTrafficBindingslistofLocaleReleaseHandleNullable(handle);

final _heresdkTrafficBindingslistofSdkCoreGeocoordinatesCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_traffic_bindingsListOf_sdk_core_GeoCoordinates_create_handle'));
final _heresdkTrafficBindingslistofSdkCoreGeocoordinatesReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_bindingsListOf_sdk_core_GeoCoordinates_release_handle'));
final _heresdkTrafficBindingslistofSdkCoreGeocoordinatesInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_traffic_bindingsListOf_sdk_core_GeoCoordinates_insert'));
final _heresdkTrafficBindingslistofSdkCoreGeocoordinatesIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsListOf_sdk_core_GeoCoordinates_iterator'));
final _heresdkTrafficBindingslistofSdkCoreGeocoordinatesIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsListOf_sdk_core_GeoCoordinates_iterator_release_handle'));
final _heresdkTrafficBindingslistofSdkCoreGeocoordinatesIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsListOf_sdk_core_GeoCoordinates_iterator_is_valid'));
final _heresdkTrafficBindingslistofSdkCoreGeocoordinatesIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsListOf_sdk_core_GeoCoordinates_iterator_increment'));
final _heresdkTrafficBindingslistofSdkCoreGeocoordinatesIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsListOf_sdk_core_GeoCoordinates_iterator_get'));

Pointer<Void> heresdkTrafficBindingslistofSdkCoreGeocoordinatesToFfi(List<GeoCoordinates> value) {
  final _result = _heresdkTrafficBindingslistofSdkCoreGeocoordinatesCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreGeocoordinatesToFfi(element);
    _heresdkTrafficBindingslistofSdkCoreGeocoordinatesInsert(_result, _elementHandle);
    sdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoCoordinates> heresdkTrafficBindingslistofSdkCoreGeocoordinatesFromFfi(Pointer<Void> handle) {
  final result = List<GeoCoordinates>.empty(growable: true);
  final _iteratorHandle = _heresdkTrafficBindingslistofSdkCoreGeocoordinatesIterator(handle);
  while (_heresdkTrafficBindingslistofSdkCoreGeocoordinatesIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkTrafficBindingslistofSdkCoreGeocoordinatesIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreGeocoordinatesFromFfi(_elementHandle));
    } finally {
      sdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
    }
    _heresdkTrafficBindingslistofSdkCoreGeocoordinatesIteratorIncrement(_iteratorHandle);
  }
  _heresdkTrafficBindingslistofSdkCoreGeocoordinatesIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkTrafficBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(Pointer<Void> handle) => _heresdkTrafficBindingslistofSdkCoreGeocoordinatesReleaseHandle(handle);

final _heresdkTrafficBindingslistofSdkCoreGeocoordinatesCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_bindingsListOf_sdk_core_GeoCoordinates_create_handle_nullable'));
final _heresdkTrafficBindingslistofSdkCoreGeocoordinatesReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_bindingsListOf_sdk_core_GeoCoordinates_release_handle_nullable'));
final _heresdkTrafficBindingslistofSdkCoreGeocoordinatesGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_bindingsListOf_sdk_core_GeoCoordinates_get_value_nullable'));

Pointer<Void> heresdkTrafficBindingslistofSdkCoreGeocoordinatesToFfiNullable(List<GeoCoordinates>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkTrafficBindingslistofSdkCoreGeocoordinatesToFfi(value);
  final result = _heresdkTrafficBindingslistofSdkCoreGeocoordinatesCreateHandleNullable(_handle);
  heresdkTrafficBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

List<GeoCoordinates>? heresdkTrafficBindingslistofSdkCoreGeocoordinatesFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkTrafficBindingslistofSdkCoreGeocoordinatesGetValueNullable(handle);
  final result = heresdkTrafficBindingslistofSdkCoreGeocoordinatesFromFfi(_handle);
  heresdkTrafficBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

void heresdkTrafficBindingslistofSdkCoreGeocoordinatesReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkTrafficBindingslistofSdkCoreGeocoordinatesReleaseHandleNullable(handle);

final _heresdkTrafficBindingslistofSdkCoreLocalizedtextCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_traffic_bindingsListOf_sdk_core_LocalizedText_create_handle'));
final _heresdkTrafficBindingslistofSdkCoreLocalizedtextReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_bindingsListOf_sdk_core_LocalizedText_release_handle'));
final _heresdkTrafficBindingslistofSdkCoreLocalizedtextInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_traffic_bindingsListOf_sdk_core_LocalizedText_insert'));
final _heresdkTrafficBindingslistofSdkCoreLocalizedtextIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsListOf_sdk_core_LocalizedText_iterator'));
final _heresdkTrafficBindingslistofSdkCoreLocalizedtextIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsListOf_sdk_core_LocalizedText_iterator_release_handle'));
final _heresdkTrafficBindingslistofSdkCoreLocalizedtextIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsListOf_sdk_core_LocalizedText_iterator_is_valid'));
final _heresdkTrafficBindingslistofSdkCoreLocalizedtextIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsListOf_sdk_core_LocalizedText_iterator_increment'));
final _heresdkTrafficBindingslistofSdkCoreLocalizedtextIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsListOf_sdk_core_LocalizedText_iterator_get'));

Pointer<Void> heresdkTrafficBindingslistofSdkCoreLocalizedtextToFfi(List<LocalizedText> value) {
  final _result = _heresdkTrafficBindingslistofSdkCoreLocalizedtextCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreLocalizedtextToFfi(element);
    _heresdkTrafficBindingslistofSdkCoreLocalizedtextInsert(_result, _elementHandle);
    sdkCoreLocalizedtextReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<LocalizedText> heresdkTrafficBindingslistofSdkCoreLocalizedtextFromFfi(Pointer<Void> handle) {
  final result = List<LocalizedText>.empty(growable: true);
  final _iteratorHandle = _heresdkTrafficBindingslistofSdkCoreLocalizedtextIterator(handle);
  while (_heresdkTrafficBindingslistofSdkCoreLocalizedtextIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkTrafficBindingslistofSdkCoreLocalizedtextIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreLocalizedtextFromFfi(_elementHandle));
    } finally {
      sdkCoreLocalizedtextReleaseFfiHandle(_elementHandle);
    }
    _heresdkTrafficBindingslistofSdkCoreLocalizedtextIteratorIncrement(_iteratorHandle);
  }
  _heresdkTrafficBindingslistofSdkCoreLocalizedtextIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkTrafficBindingslistofSdkCoreLocalizedtextReleaseFfiHandle(Pointer<Void> handle) => _heresdkTrafficBindingslistofSdkCoreLocalizedtextReleaseHandle(handle);

final _heresdkTrafficBindingslistofSdkCoreLocalizedtextCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_bindingsListOf_sdk_core_LocalizedText_create_handle_nullable'));
final _heresdkTrafficBindingslistofSdkCoreLocalizedtextReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_bindingsListOf_sdk_core_LocalizedText_release_handle_nullable'));
final _heresdkTrafficBindingslistofSdkCoreLocalizedtextGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_bindingsListOf_sdk_core_LocalizedText_get_value_nullable'));

Pointer<Void> heresdkTrafficBindingslistofSdkCoreLocalizedtextToFfiNullable(List<LocalizedText>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkTrafficBindingslistofSdkCoreLocalizedtextToFfi(value);
  final result = _heresdkTrafficBindingslistofSdkCoreLocalizedtextCreateHandleNullable(_handle);
  heresdkTrafficBindingslistofSdkCoreLocalizedtextReleaseFfiHandle(_handle);
  return result;
}

List<LocalizedText>? heresdkTrafficBindingslistofSdkCoreLocalizedtextFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkTrafficBindingslistofSdkCoreLocalizedtextGetValueNullable(handle);
  final result = heresdkTrafficBindingslistofSdkCoreLocalizedtextFromFfi(_handle);
  heresdkTrafficBindingslistofSdkCoreLocalizedtextReleaseFfiHandle(_handle);
  return result;
}

void heresdkTrafficBindingslistofSdkCoreLocalizedtextReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkTrafficBindingslistofSdkCoreLocalizedtextReleaseHandleNullable(handle);

final _heresdkTrafficBindingslistofSdkCoreEngineLayerconfigurationFeatureCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_traffic_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_create_handle'));
final _heresdkTrafficBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_release_handle'));
final _heresdkTrafficBindingslistofSdkCoreEngineLayerconfigurationFeatureInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_traffic_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_insert'));
final _heresdkTrafficBindingslistofSdkCoreEngineLayerconfigurationFeatureIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator'));
final _heresdkTrafficBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator_release_handle'));
final _heresdkTrafficBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator_is_valid'));
final _heresdkTrafficBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator_increment'));
final _heresdkTrafficBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator_get'));

Pointer<Void> heresdkTrafficBindingslistofSdkCoreEngineLayerconfigurationFeatureToFfi(List<LayerConfigurationFeature> value) {
  final _result = _heresdkTrafficBindingslistofSdkCoreEngineLayerconfigurationFeatureCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreEngineLayerconfigurationFeatureToFfi(element);
    _heresdkTrafficBindingslistofSdkCoreEngineLayerconfigurationFeatureInsert(_result, _elementHandle);
    sdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<LayerConfigurationFeature> heresdkTrafficBindingslistofSdkCoreEngineLayerconfigurationFeatureFromFfi(Pointer<Void> handle) {
  final result = List<LayerConfigurationFeature>.empty(growable: true);
  final _iteratorHandle = _heresdkTrafficBindingslistofSdkCoreEngineLayerconfigurationFeatureIterator(handle);
  while (_heresdkTrafficBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkTrafficBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreEngineLayerconfigurationFeatureFromFfi(_elementHandle));
    } finally {
      sdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(_elementHandle);
    }
    _heresdkTrafficBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorIncrement(_iteratorHandle);
  }
  _heresdkTrafficBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkTrafficBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(Pointer<Void> handle) => _heresdkTrafficBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseHandle(handle);

final _heresdkTrafficBindingslistofSdkCoreEngineLayerconfigurationFeatureCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_create_handle_nullable'));
final _heresdkTrafficBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_release_handle_nullable'));
final _heresdkTrafficBindingslistofSdkCoreEngineLayerconfigurationFeatureGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_get_value_nullable'));

Pointer<Void> heresdkTrafficBindingslistofSdkCoreEngineLayerconfigurationFeatureToFfiNullable(List<LayerConfigurationFeature>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkTrafficBindingslistofSdkCoreEngineLayerconfigurationFeatureToFfi(value);
  final result = _heresdkTrafficBindingslistofSdkCoreEngineLayerconfigurationFeatureCreateHandleNullable(_handle);
  heresdkTrafficBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(_handle);
  return result;
}

List<LayerConfigurationFeature>? heresdkTrafficBindingslistofSdkCoreEngineLayerconfigurationFeatureFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkTrafficBindingslistofSdkCoreEngineLayerconfigurationFeatureGetValueNullable(handle);
  final result = heresdkTrafficBindingslistofSdkCoreEngineLayerconfigurationFeatureFromFfi(_handle);
  heresdkTrafficBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(_handle);
  return result;
}

void heresdkTrafficBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkTrafficBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseHandleNullable(handle);

final _heresdkTrafficBindingslistofSdkTrafficTrafficincidentCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_traffic_bindingsListOf_sdk_traffic_TrafficIncident_create_handle'));
final _heresdkTrafficBindingslistofSdkTrafficTrafficincidentReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_bindingsListOf_sdk_traffic_TrafficIncident_release_handle'));
final _heresdkTrafficBindingslistofSdkTrafficTrafficincidentInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_traffic_bindingsListOf_sdk_traffic_TrafficIncident_insert'));
final _heresdkTrafficBindingslistofSdkTrafficTrafficincidentIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsListOf_sdk_traffic_TrafficIncident_iterator'));
final _heresdkTrafficBindingslistofSdkTrafficTrafficincidentIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsListOf_sdk_traffic_TrafficIncident_iterator_release_handle'));
final _heresdkTrafficBindingslistofSdkTrafficTrafficincidentIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsListOf_sdk_traffic_TrafficIncident_iterator_is_valid'));
final _heresdkTrafficBindingslistofSdkTrafficTrafficincidentIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsListOf_sdk_traffic_TrafficIncident_iterator_increment'));
final _heresdkTrafficBindingslistofSdkTrafficTrafficincidentIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsListOf_sdk_traffic_TrafficIncident_iterator_get'));

Pointer<Void> heresdkTrafficBindingslistofSdkTrafficTrafficincidentToFfi(List<TrafficIncident> value) {
  final _result = _heresdkTrafficBindingslistofSdkTrafficTrafficincidentCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkTrafficTrafficincidentToFfi(element);
    _heresdkTrafficBindingslistofSdkTrafficTrafficincidentInsert(_result, _elementHandle);
    sdkTrafficTrafficincidentReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<TrafficIncident> heresdkTrafficBindingslistofSdkTrafficTrafficincidentFromFfi(Pointer<Void> handle) {
  final result = List<TrafficIncident>.empty(growable: true);
  final _iteratorHandle = _heresdkTrafficBindingslistofSdkTrafficTrafficincidentIterator(handle);
  while (_heresdkTrafficBindingslistofSdkTrafficTrafficincidentIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkTrafficBindingslistofSdkTrafficTrafficincidentIteratorGet(_iteratorHandle);
    try {
      result.add(sdkTrafficTrafficincidentFromFfi(_elementHandle));
    } finally {
      sdkTrafficTrafficincidentReleaseFfiHandle(_elementHandle);
    }
    _heresdkTrafficBindingslistofSdkTrafficTrafficincidentIteratorIncrement(_iteratorHandle);
  }
  _heresdkTrafficBindingslistofSdkTrafficTrafficincidentIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkTrafficBindingslistofSdkTrafficTrafficincidentReleaseFfiHandle(Pointer<Void> handle) => _heresdkTrafficBindingslistofSdkTrafficTrafficincidentReleaseHandle(handle);

final _heresdkTrafficBindingslistofSdkTrafficTrafficincidentCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_bindingsListOf_sdk_traffic_TrafficIncident_create_handle_nullable'));
final _heresdkTrafficBindingslistofSdkTrafficTrafficincidentReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_bindingsListOf_sdk_traffic_TrafficIncident_release_handle_nullable'));
final _heresdkTrafficBindingslistofSdkTrafficTrafficincidentGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_bindingsListOf_sdk_traffic_TrafficIncident_get_value_nullable'));

Pointer<Void> heresdkTrafficBindingslistofSdkTrafficTrafficincidentToFfiNullable(List<TrafficIncident>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkTrafficBindingslistofSdkTrafficTrafficincidentToFfi(value);
  final result = _heresdkTrafficBindingslistofSdkTrafficTrafficincidentCreateHandleNullable(_handle);
  heresdkTrafficBindingslistofSdkTrafficTrafficincidentReleaseFfiHandle(_handle);
  return result;
}

List<TrafficIncident>? heresdkTrafficBindingslistofSdkTrafficTrafficincidentFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkTrafficBindingslistofSdkTrafficTrafficincidentGetValueNullable(handle);
  final result = heresdkTrafficBindingslistofSdkTrafficTrafficincidentFromFfi(_handle);
  heresdkTrafficBindingslistofSdkTrafficTrafficincidentReleaseFfiHandle(_handle);
  return result;
}

void heresdkTrafficBindingslistofSdkTrafficTrafficincidentReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkTrafficBindingslistofSdkTrafficTrafficincidentReleaseHandleNullable(handle);

final _heresdkTrafficBindingslistofSdkTrafficTrafficincidentimpactCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_traffic_bindingsListOf_sdk_traffic_TrafficIncidentImpact_create_handle'));
final _heresdkTrafficBindingslistofSdkTrafficTrafficincidentimpactReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_bindingsListOf_sdk_traffic_TrafficIncidentImpact_release_handle'));
final _heresdkTrafficBindingslistofSdkTrafficTrafficincidentimpactInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_traffic_bindingsListOf_sdk_traffic_TrafficIncidentImpact_insert'));
final _heresdkTrafficBindingslistofSdkTrafficTrafficincidentimpactIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsListOf_sdk_traffic_TrafficIncidentImpact_iterator'));
final _heresdkTrafficBindingslistofSdkTrafficTrafficincidentimpactIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsListOf_sdk_traffic_TrafficIncidentImpact_iterator_release_handle'));
final _heresdkTrafficBindingslistofSdkTrafficTrafficincidentimpactIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsListOf_sdk_traffic_TrafficIncidentImpact_iterator_is_valid'));
final _heresdkTrafficBindingslistofSdkTrafficTrafficincidentimpactIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsListOf_sdk_traffic_TrafficIncidentImpact_iterator_increment'));
final _heresdkTrafficBindingslistofSdkTrafficTrafficincidentimpactIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsListOf_sdk_traffic_TrafficIncidentImpact_iterator_get'));

Pointer<Void> heresdkTrafficBindingslistofSdkTrafficTrafficincidentimpactToFfi(List<TrafficIncidentImpact> value) {
  final _result = _heresdkTrafficBindingslistofSdkTrafficTrafficincidentimpactCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkTrafficTrafficincidentimpactToFfi(element);
    _heresdkTrafficBindingslistofSdkTrafficTrafficincidentimpactInsert(_result, _elementHandle);
    sdkTrafficTrafficincidentimpactReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<TrafficIncidentImpact> heresdkTrafficBindingslistofSdkTrafficTrafficincidentimpactFromFfi(Pointer<Void> handle) {
  final result = List<TrafficIncidentImpact>.empty(growable: true);
  final _iteratorHandle = _heresdkTrafficBindingslistofSdkTrafficTrafficincidentimpactIterator(handle);
  while (_heresdkTrafficBindingslistofSdkTrafficTrafficincidentimpactIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkTrafficBindingslistofSdkTrafficTrafficincidentimpactIteratorGet(_iteratorHandle);
    try {
      result.add(sdkTrafficTrafficincidentimpactFromFfi(_elementHandle));
    } finally {
      sdkTrafficTrafficincidentimpactReleaseFfiHandle(_elementHandle);
    }
    _heresdkTrafficBindingslistofSdkTrafficTrafficincidentimpactIteratorIncrement(_iteratorHandle);
  }
  _heresdkTrafficBindingslistofSdkTrafficTrafficincidentimpactIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkTrafficBindingslistofSdkTrafficTrafficincidentimpactReleaseFfiHandle(Pointer<Void> handle) => _heresdkTrafficBindingslistofSdkTrafficTrafficincidentimpactReleaseHandle(handle);

final _heresdkTrafficBindingslistofSdkTrafficTrafficincidentimpactCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_bindingsListOf_sdk_traffic_TrafficIncidentImpact_create_handle_nullable'));
final _heresdkTrafficBindingslistofSdkTrafficTrafficincidentimpactReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_bindingsListOf_sdk_traffic_TrafficIncidentImpact_release_handle_nullable'));
final _heresdkTrafficBindingslistofSdkTrafficTrafficincidentimpactGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_bindingsListOf_sdk_traffic_TrafficIncidentImpact_get_value_nullable'));

Pointer<Void> heresdkTrafficBindingslistofSdkTrafficTrafficincidentimpactToFfiNullable(List<TrafficIncidentImpact>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkTrafficBindingslistofSdkTrafficTrafficincidentimpactToFfi(value);
  final result = _heresdkTrafficBindingslistofSdkTrafficTrafficincidentimpactCreateHandleNullable(_handle);
  heresdkTrafficBindingslistofSdkTrafficTrafficincidentimpactReleaseFfiHandle(_handle);
  return result;
}

List<TrafficIncidentImpact>? heresdkTrafficBindingslistofSdkTrafficTrafficincidentimpactFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkTrafficBindingslistofSdkTrafficTrafficincidentimpactGetValueNullable(handle);
  final result = heresdkTrafficBindingslistofSdkTrafficTrafficincidentimpactFromFfi(_handle);
  heresdkTrafficBindingslistofSdkTrafficTrafficincidentimpactReleaseFfiHandle(_handle);
  return result;
}

void heresdkTrafficBindingslistofSdkTrafficTrafficincidentimpactReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkTrafficBindingslistofSdkTrafficTrafficincidentimpactReleaseHandleNullable(handle);

final _heresdkTrafficBindingslistofSdkTrafficTrafficincidenttypeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_traffic_bindingsListOf_sdk_traffic_TrafficIncidentType_create_handle'));
final _heresdkTrafficBindingslistofSdkTrafficTrafficincidenttypeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_bindingsListOf_sdk_traffic_TrafficIncidentType_release_handle'));
final _heresdkTrafficBindingslistofSdkTrafficTrafficincidenttypeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_traffic_bindingsListOf_sdk_traffic_TrafficIncidentType_insert'));
final _heresdkTrafficBindingslistofSdkTrafficTrafficincidenttypeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsListOf_sdk_traffic_TrafficIncidentType_iterator'));
final _heresdkTrafficBindingslistofSdkTrafficTrafficincidenttypeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsListOf_sdk_traffic_TrafficIncidentType_iterator_release_handle'));
final _heresdkTrafficBindingslistofSdkTrafficTrafficincidenttypeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsListOf_sdk_traffic_TrafficIncidentType_iterator_is_valid'));
final _heresdkTrafficBindingslistofSdkTrafficTrafficincidenttypeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsListOf_sdk_traffic_TrafficIncidentType_iterator_increment'));
final _heresdkTrafficBindingslistofSdkTrafficTrafficincidenttypeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsListOf_sdk_traffic_TrafficIncidentType_iterator_get'));

Pointer<Void> heresdkTrafficBindingslistofSdkTrafficTrafficincidenttypeToFfi(List<TrafficIncidentType> value) {
  final _result = _heresdkTrafficBindingslistofSdkTrafficTrafficincidenttypeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkTrafficTrafficincidenttypeToFfi(element);
    _heresdkTrafficBindingslistofSdkTrafficTrafficincidenttypeInsert(_result, _elementHandle);
    sdkTrafficTrafficincidenttypeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<TrafficIncidentType> heresdkTrafficBindingslistofSdkTrafficTrafficincidenttypeFromFfi(Pointer<Void> handle) {
  final result = List<TrafficIncidentType>.empty(growable: true);
  final _iteratorHandle = _heresdkTrafficBindingslistofSdkTrafficTrafficincidenttypeIterator(handle);
  while (_heresdkTrafficBindingslistofSdkTrafficTrafficincidenttypeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkTrafficBindingslistofSdkTrafficTrafficincidenttypeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkTrafficTrafficincidenttypeFromFfi(_elementHandle));
    } finally {
      sdkTrafficTrafficincidenttypeReleaseFfiHandle(_elementHandle);
    }
    _heresdkTrafficBindingslistofSdkTrafficTrafficincidenttypeIteratorIncrement(_iteratorHandle);
  }
  _heresdkTrafficBindingslistofSdkTrafficTrafficincidenttypeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkTrafficBindingslistofSdkTrafficTrafficincidenttypeReleaseFfiHandle(Pointer<Void> handle) => _heresdkTrafficBindingslistofSdkTrafficTrafficincidenttypeReleaseHandle(handle);

final _heresdkTrafficBindingslistofSdkTrafficTrafficincidenttypeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_bindingsListOf_sdk_traffic_TrafficIncidentType_create_handle_nullable'));
final _heresdkTrafficBindingslistofSdkTrafficTrafficincidenttypeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_bindingsListOf_sdk_traffic_TrafficIncidentType_release_handle_nullable'));
final _heresdkTrafficBindingslistofSdkTrafficTrafficincidenttypeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_bindingsListOf_sdk_traffic_TrafficIncidentType_get_value_nullable'));

Pointer<Void> heresdkTrafficBindingslistofSdkTrafficTrafficincidenttypeToFfiNullable(List<TrafficIncidentType>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkTrafficBindingslistofSdkTrafficTrafficincidenttypeToFfi(value);
  final result = _heresdkTrafficBindingslistofSdkTrafficTrafficincidenttypeCreateHandleNullable(_handle);
  heresdkTrafficBindingslistofSdkTrafficTrafficincidenttypeReleaseFfiHandle(_handle);
  return result;
}

List<TrafficIncidentType>? heresdkTrafficBindingslistofSdkTrafficTrafficincidenttypeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkTrafficBindingslistofSdkTrafficTrafficincidenttypeGetValueNullable(handle);
  final result = heresdkTrafficBindingslistofSdkTrafficTrafficincidenttypeFromFfi(_handle);
  heresdkTrafficBindingslistofSdkTrafficTrafficincidenttypeReleaseFfiHandle(_handle);
  return result;
}

void heresdkTrafficBindingslistofSdkTrafficTrafficincidenttypeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkTrafficBindingslistofSdkTrafficTrafficincidenttypeReleaseHandleNullable(handle);

final _heresdkTrafficBindingsmapofSdkCoreEngineEnginebaseurlToStringCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_traffic_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_create_handle'));
final _heresdkTrafficBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_release_handle'));
final _heresdkTrafficBindingsmapofSdkCoreEngineEnginebaseurlToStringPut = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32, Pointer<Void>),
    void Function(Pointer<Void>, int, Pointer<Void>)
  >('here_sdk_heresdk_traffic_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_put'));
final _heresdkTrafficBindingsmapofSdkCoreEngineEnginebaseurlToStringIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_iterator'));
final _heresdkTrafficBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_iterator_release_handle'));
final _heresdkTrafficBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_iterator_is_valid'));
final _heresdkTrafficBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_iterator_increment'));
final _heresdkTrafficBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorGetKey = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_iterator_get_key'));
final _heresdkTrafficBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorGetValue = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_iterator_get_value'));

Pointer<Void> heresdkTrafficBindingsmapofSdkCoreEngineEnginebaseurlToStringToFfi(Map<EngineBaseURL, String> value) {
  final _result = _heresdkTrafficBindingsmapofSdkCoreEngineEnginebaseurlToStringCreateHandle();
  for (final entry in value.entries) {
    final _keyHandle = sdkCoreEngineEnginebaseurlToFfi(entry.key);
    final _valueHandle = stringToFfi(entry.value);
    _heresdkTrafficBindingsmapofSdkCoreEngineEnginebaseurlToStringPut(_result, _keyHandle, _valueHandle);
    sdkCoreEngineEnginebaseurlReleaseFfiHandle(_keyHandle);
    stringReleaseFfiHandle(_valueHandle);
  }
  return _result;
}

Map<EngineBaseURL, String> heresdkTrafficBindingsmapofSdkCoreEngineEnginebaseurlToStringFromFfi(Pointer<Void> handle) {
  final result = Map<EngineBaseURL, String>();
  final _iteratorHandle = _heresdkTrafficBindingsmapofSdkCoreEngineEnginebaseurlToStringIterator(handle);
  while (_heresdkTrafficBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _keyHandle = _heresdkTrafficBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorGetKey(_iteratorHandle);
    final _valueHandle = _heresdkTrafficBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorGetValue(_iteratorHandle);
    try {
      result[sdkCoreEngineEnginebaseurlFromFfi(_keyHandle)] =
        stringFromFfi(_valueHandle);
    } finally {
      sdkCoreEngineEnginebaseurlReleaseFfiHandle(_keyHandle);
      stringReleaseFfiHandle(_valueHandle);
    }
    _heresdkTrafficBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorIncrement(_iteratorHandle);
  }
  _heresdkTrafficBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkTrafficBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseFfiHandle(Pointer<Void> handle) => _heresdkTrafficBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseHandle(handle);

final _heresdkTrafficBindingsmapofSdkCoreEngineEnginebaseurlToStringCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_create_handle_nullable'));
final _heresdkTrafficBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_release_handle_nullable'));
final _heresdkTrafficBindingsmapofSdkCoreEngineEnginebaseurlToStringGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_get_value_nullable'));

Pointer<Void> heresdkTrafficBindingsmapofSdkCoreEngineEnginebaseurlToStringToFfiNullable(Map<EngineBaseURL, String>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkTrafficBindingsmapofSdkCoreEngineEnginebaseurlToStringToFfi(value);
  final result = _heresdkTrafficBindingsmapofSdkCoreEngineEnginebaseurlToStringCreateHandleNullable(_handle);
  heresdkTrafficBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseFfiHandle(_handle);
  return result;
}

Map<EngineBaseURL, String>? heresdkTrafficBindingsmapofSdkCoreEngineEnginebaseurlToStringFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkTrafficBindingsmapofSdkCoreEngineEnginebaseurlToStringGetValueNullable(handle);
  final result = heresdkTrafficBindingsmapofSdkCoreEngineEnginebaseurlToStringFromFfi(_handle);
  heresdkTrafficBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseFfiHandle(_handle);
  return result;
}

void heresdkTrafficBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkTrafficBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseHandleNullable(handle);

final _heresdkTrafficBindingsmapofSdkTrafficTrafficincidentRestrictedvehiclecategoryToSdkTrafficTrafficincidentVehiclerestrictionCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_traffic_bindingsMapOf_sdk_traffic_TrafficIncident_RestrictedVehicleCategory_to_sdk_traffic_TrafficIncident_VehicleRestriction_create_handle'));
final _heresdkTrafficBindingsmapofSdkTrafficTrafficincidentRestrictedvehiclecategoryToSdkTrafficTrafficincidentVehiclerestrictionReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_bindingsMapOf_sdk_traffic_TrafficIncident_RestrictedVehicleCategory_to_sdk_traffic_TrafficIncident_VehicleRestriction_release_handle'));
final _heresdkTrafficBindingsmapofSdkTrafficTrafficincidentRestrictedvehiclecategoryToSdkTrafficTrafficincidentVehiclerestrictionPut = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32, Pointer<Void>),
    void Function(Pointer<Void>, int, Pointer<Void>)
  >('here_sdk_heresdk_traffic_bindingsMapOf_sdk_traffic_TrafficIncident_RestrictedVehicleCategory_to_sdk_traffic_TrafficIncident_VehicleRestriction_put'));
final _heresdkTrafficBindingsmapofSdkTrafficTrafficincidentRestrictedvehiclecategoryToSdkTrafficTrafficincidentVehiclerestrictionIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsMapOf_sdk_traffic_TrafficIncident_RestrictedVehicleCategory_to_sdk_traffic_TrafficIncident_VehicleRestriction_iterator'));
final _heresdkTrafficBindingsmapofSdkTrafficTrafficincidentRestrictedvehiclecategoryToSdkTrafficTrafficincidentVehiclerestrictionIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsMapOf_sdk_traffic_TrafficIncident_RestrictedVehicleCategory_to_sdk_traffic_TrafficIncident_VehicleRestriction_iterator_release_handle'));
final _heresdkTrafficBindingsmapofSdkTrafficTrafficincidentRestrictedvehiclecategoryToSdkTrafficTrafficincidentVehiclerestrictionIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsMapOf_sdk_traffic_TrafficIncident_RestrictedVehicleCategory_to_sdk_traffic_TrafficIncident_VehicleRestriction_iterator_is_valid'));
final _heresdkTrafficBindingsmapofSdkTrafficTrafficincidentRestrictedvehiclecategoryToSdkTrafficTrafficincidentVehiclerestrictionIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsMapOf_sdk_traffic_TrafficIncident_RestrictedVehicleCategory_to_sdk_traffic_TrafficIncident_VehicleRestriction_iterator_increment'));
final _heresdkTrafficBindingsmapofSdkTrafficTrafficincidentRestrictedvehiclecategoryToSdkTrafficTrafficincidentVehiclerestrictionIteratorGetKey = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsMapOf_sdk_traffic_TrafficIncident_RestrictedVehicleCategory_to_sdk_traffic_TrafficIncident_VehicleRestriction_iterator_get_key'));
final _heresdkTrafficBindingsmapofSdkTrafficTrafficincidentRestrictedvehiclecategoryToSdkTrafficTrafficincidentVehiclerestrictionIteratorGetValue = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_bindingsMapOf_sdk_traffic_TrafficIncident_RestrictedVehicleCategory_to_sdk_traffic_TrafficIncident_VehicleRestriction_iterator_get_value'));

Pointer<Void> heresdkTrafficBindingsmapofSdkTrafficTrafficincidentRestrictedvehiclecategoryToSdkTrafficTrafficincidentVehiclerestrictionToFfi(Map<TrafficIncidentRestrictedVehicleCategory, TrafficIncidentVehicleRestriction> value) {
  final _result = _heresdkTrafficBindingsmapofSdkTrafficTrafficincidentRestrictedvehiclecategoryToSdkTrafficTrafficincidentVehiclerestrictionCreateHandle();
  for (final entry in value.entries) {
    final _keyHandle = sdkTrafficTrafficincidentRestrictedvehiclecategoryToFfi(entry.key);
    final _valueHandle = sdkTrafficTrafficincidentVehiclerestrictionToFfi(entry.value);
    _heresdkTrafficBindingsmapofSdkTrafficTrafficincidentRestrictedvehiclecategoryToSdkTrafficTrafficincidentVehiclerestrictionPut(_result, _keyHandle, _valueHandle);
    sdkTrafficTrafficincidentRestrictedvehiclecategoryReleaseFfiHandle(_keyHandle);
    sdkTrafficTrafficincidentVehiclerestrictionReleaseFfiHandle(_valueHandle);
  }
  return _result;
}

Map<TrafficIncidentRestrictedVehicleCategory, TrafficIncidentVehicleRestriction> heresdkTrafficBindingsmapofSdkTrafficTrafficincidentRestrictedvehiclecategoryToSdkTrafficTrafficincidentVehiclerestrictionFromFfi(Pointer<Void> handle) {
  final result = Map<TrafficIncidentRestrictedVehicleCategory, TrafficIncidentVehicleRestriction>();
  final _iteratorHandle = _heresdkTrafficBindingsmapofSdkTrafficTrafficincidentRestrictedvehiclecategoryToSdkTrafficTrafficincidentVehiclerestrictionIterator(handle);
  while (_heresdkTrafficBindingsmapofSdkTrafficTrafficincidentRestrictedvehiclecategoryToSdkTrafficTrafficincidentVehiclerestrictionIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _keyHandle = _heresdkTrafficBindingsmapofSdkTrafficTrafficincidentRestrictedvehiclecategoryToSdkTrafficTrafficincidentVehiclerestrictionIteratorGetKey(_iteratorHandle);
    final _valueHandle = _heresdkTrafficBindingsmapofSdkTrafficTrafficincidentRestrictedvehiclecategoryToSdkTrafficTrafficincidentVehiclerestrictionIteratorGetValue(_iteratorHandle);
    try {
      result[sdkTrafficTrafficincidentRestrictedvehiclecategoryFromFfi(_keyHandle)] =
        sdkTrafficTrafficincidentVehiclerestrictionFromFfi(_valueHandle);
    } finally {
      sdkTrafficTrafficincidentRestrictedvehiclecategoryReleaseFfiHandle(_keyHandle);
      sdkTrafficTrafficincidentVehiclerestrictionReleaseFfiHandle(_valueHandle);
    }
    _heresdkTrafficBindingsmapofSdkTrafficTrafficincidentRestrictedvehiclecategoryToSdkTrafficTrafficincidentVehiclerestrictionIteratorIncrement(_iteratorHandle);
  }
  _heresdkTrafficBindingsmapofSdkTrafficTrafficincidentRestrictedvehiclecategoryToSdkTrafficTrafficincidentVehiclerestrictionIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkTrafficBindingsmapofSdkTrafficTrafficincidentRestrictedvehiclecategoryToSdkTrafficTrafficincidentVehiclerestrictionReleaseFfiHandle(Pointer<Void> handle) => _heresdkTrafficBindingsmapofSdkTrafficTrafficincidentRestrictedvehiclecategoryToSdkTrafficTrafficincidentVehiclerestrictionReleaseHandle(handle);

final _heresdkTrafficBindingsmapofSdkTrafficTrafficincidentRestrictedvehiclecategoryToSdkTrafficTrafficincidentVehiclerestrictionCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_bindingsMapOf_sdk_traffic_TrafficIncident_RestrictedVehicleCategory_to_sdk_traffic_TrafficIncident_VehicleRestriction_create_handle_nullable'));
final _heresdkTrafficBindingsmapofSdkTrafficTrafficincidentRestrictedvehiclecategoryToSdkTrafficTrafficincidentVehiclerestrictionReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_bindingsMapOf_sdk_traffic_TrafficIncident_RestrictedVehicleCategory_to_sdk_traffic_TrafficIncident_VehicleRestriction_release_handle_nullable'));
final _heresdkTrafficBindingsmapofSdkTrafficTrafficincidentRestrictedvehiclecategoryToSdkTrafficTrafficincidentVehiclerestrictionGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_bindingsMapOf_sdk_traffic_TrafficIncident_RestrictedVehicleCategory_to_sdk_traffic_TrafficIncident_VehicleRestriction_get_value_nullable'));

Pointer<Void> heresdkTrafficBindingsmapofSdkTrafficTrafficincidentRestrictedvehiclecategoryToSdkTrafficTrafficincidentVehiclerestrictionToFfiNullable(Map<TrafficIncidentRestrictedVehicleCategory, TrafficIncidentVehicleRestriction>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkTrafficBindingsmapofSdkTrafficTrafficincidentRestrictedvehiclecategoryToSdkTrafficTrafficincidentVehiclerestrictionToFfi(value);
  final result = _heresdkTrafficBindingsmapofSdkTrafficTrafficincidentRestrictedvehiclecategoryToSdkTrafficTrafficincidentVehiclerestrictionCreateHandleNullable(_handle);
  heresdkTrafficBindingsmapofSdkTrafficTrafficincidentRestrictedvehiclecategoryToSdkTrafficTrafficincidentVehiclerestrictionReleaseFfiHandle(_handle);
  return result;
}

Map<TrafficIncidentRestrictedVehicleCategory, TrafficIncidentVehicleRestriction>? heresdkTrafficBindingsmapofSdkTrafficTrafficincidentRestrictedvehiclecategoryToSdkTrafficTrafficincidentVehiclerestrictionFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkTrafficBindingsmapofSdkTrafficTrafficincidentRestrictedvehiclecategoryToSdkTrafficTrafficincidentVehiclerestrictionGetValueNullable(handle);
  final result = heresdkTrafficBindingsmapofSdkTrafficTrafficincidentRestrictedvehiclecategoryToSdkTrafficTrafficincidentVehiclerestrictionFromFfi(_handle);
  heresdkTrafficBindingsmapofSdkTrafficTrafficincidentRestrictedvehiclecategoryToSdkTrafficTrafficincidentVehiclerestrictionReleaseFfiHandle(_handle);
  return result;
}

void heresdkTrafficBindingsmapofSdkTrafficTrafficincidentRestrictedvehiclecategoryToSdkTrafficTrafficincidentVehiclerestrictionReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkTrafficBindingsmapofSdkTrafficTrafficincidentRestrictedvehiclecategoryToSdkTrafficTrafficincidentVehiclerestrictionReleaseHandleNullable(handle);


// Copyright (c) 2018-2022 HERE Global B.V. and its affiliate(s).
// All rights reserved.
//
// This software and other materials contain proprietary information
// controlled by HERE and are protected by applicable copyright legislation.
// Any use and utilization of this software and other materials and
// disclosure to any third parties is conditional upon having a separate
// agreement with HERE for the access, use, utilization or disclosure of this
// software. In the absence of such agreement, the use of the software is not
// allowed.
//












final _heresdkTrafficCommonBindingslistofLocaleCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_traffic_common_bindingsListOf_Locale_create_handle'));
final _heresdkTrafficCommonBindingslistofLocaleReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_common_bindingsListOf_Locale_release_handle'));
final _heresdkTrafficCommonBindingslistofLocaleInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_traffic_common_bindingsListOf_Locale_insert'));
final _heresdkTrafficCommonBindingslistofLocaleIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_common_bindingsListOf_Locale_iterator'));
final _heresdkTrafficCommonBindingslistofLocaleIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_common_bindingsListOf_Locale_iterator_release_handle'));
final _heresdkTrafficCommonBindingslistofLocaleIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_traffic_common_bindingsListOf_Locale_iterator_is_valid'));
final _heresdkTrafficCommonBindingslistofLocaleIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_common_bindingsListOf_Locale_iterator_increment'));
final _heresdkTrafficCommonBindingslistofLocaleIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_common_bindingsListOf_Locale_iterator_get'));

Pointer<Void> heresdkTrafficCommonBindingslistofLocaleToFfi(List<Locale> value) {
  final _result = _heresdkTrafficCommonBindingslistofLocaleCreateHandle();
  for (final element in value) {
    final _elementHandle = localeToFfi(element);
    _heresdkTrafficCommonBindingslistofLocaleInsert(_result, _elementHandle);
    localeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Locale> heresdkTrafficCommonBindingslistofLocaleFromFfi(Pointer<Void> handle) {
  final result = List<Locale>.empty(growable: true);
  final _iteratorHandle = _heresdkTrafficCommonBindingslistofLocaleIterator(handle);
  while (_heresdkTrafficCommonBindingslistofLocaleIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkTrafficCommonBindingslistofLocaleIteratorGet(_iteratorHandle);
    try {
      result.add(localeFromFfi(_elementHandle));
    } finally {
      localeReleaseFfiHandle(_elementHandle);
    }
    _heresdkTrafficCommonBindingslistofLocaleIteratorIncrement(_iteratorHandle);
  }
  _heresdkTrafficCommonBindingslistofLocaleIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkTrafficCommonBindingslistofLocaleReleaseFfiHandle(Pointer<Void> handle) => _heresdkTrafficCommonBindingslistofLocaleReleaseHandle(handle);

final _heresdkTrafficCommonBindingslistofLocaleCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_common_bindingsListOf_Locale_create_handle_nullable'));
final _heresdkTrafficCommonBindingslistofLocaleReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_common_bindingsListOf_Locale_release_handle_nullable'));
final _heresdkTrafficCommonBindingslistofLocaleGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_common_bindingsListOf_Locale_get_value_nullable'));

Pointer<Void> heresdkTrafficCommonBindingslistofLocaleToFfiNullable(List<Locale>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkTrafficCommonBindingslistofLocaleToFfi(value);
  final result = _heresdkTrafficCommonBindingslistofLocaleCreateHandleNullable(_handle);
  heresdkTrafficCommonBindingslistofLocaleReleaseFfiHandle(_handle);
  return result;
}

List<Locale>? heresdkTrafficCommonBindingslistofLocaleFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkTrafficCommonBindingslistofLocaleGetValueNullable(handle);
  final result = heresdkTrafficCommonBindingslistofLocaleFromFfi(_handle);
  heresdkTrafficCommonBindingslistofLocaleReleaseFfiHandle(_handle);
  return result;
}

void heresdkTrafficCommonBindingslistofLocaleReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkTrafficCommonBindingslistofLocaleReleaseHandleNullable(handle);

final _heresdkTrafficCommonBindingslistofSdkCoreGeocoordinatesCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_traffic_common_bindingsListOf_sdk_core_GeoCoordinates_create_handle'));
final _heresdkTrafficCommonBindingslistofSdkCoreGeocoordinatesReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_common_bindingsListOf_sdk_core_GeoCoordinates_release_handle'));
final _heresdkTrafficCommonBindingslistofSdkCoreGeocoordinatesInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_traffic_common_bindingsListOf_sdk_core_GeoCoordinates_insert'));
final _heresdkTrafficCommonBindingslistofSdkCoreGeocoordinatesIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_common_bindingsListOf_sdk_core_GeoCoordinates_iterator'));
final _heresdkTrafficCommonBindingslistofSdkCoreGeocoordinatesIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_common_bindingsListOf_sdk_core_GeoCoordinates_iterator_release_handle'));
final _heresdkTrafficCommonBindingslistofSdkCoreGeocoordinatesIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_traffic_common_bindingsListOf_sdk_core_GeoCoordinates_iterator_is_valid'));
final _heresdkTrafficCommonBindingslistofSdkCoreGeocoordinatesIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_common_bindingsListOf_sdk_core_GeoCoordinates_iterator_increment'));
final _heresdkTrafficCommonBindingslistofSdkCoreGeocoordinatesIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_common_bindingsListOf_sdk_core_GeoCoordinates_iterator_get'));

Pointer<Void> heresdkTrafficCommonBindingslistofSdkCoreGeocoordinatesToFfi(List<GeoCoordinates> value) {
  final _result = _heresdkTrafficCommonBindingslistofSdkCoreGeocoordinatesCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreGeocoordinatesToFfi(element);
    _heresdkTrafficCommonBindingslistofSdkCoreGeocoordinatesInsert(_result, _elementHandle);
    sdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoCoordinates> heresdkTrafficCommonBindingslistofSdkCoreGeocoordinatesFromFfi(Pointer<Void> handle) {
  final result = List<GeoCoordinates>.empty(growable: true);
  final _iteratorHandle = _heresdkTrafficCommonBindingslistofSdkCoreGeocoordinatesIterator(handle);
  while (_heresdkTrafficCommonBindingslistofSdkCoreGeocoordinatesIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkTrafficCommonBindingslistofSdkCoreGeocoordinatesIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreGeocoordinatesFromFfi(_elementHandle));
    } finally {
      sdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
    }
    _heresdkTrafficCommonBindingslistofSdkCoreGeocoordinatesIteratorIncrement(_iteratorHandle);
  }
  _heresdkTrafficCommonBindingslistofSdkCoreGeocoordinatesIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkTrafficCommonBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(Pointer<Void> handle) => _heresdkTrafficCommonBindingslistofSdkCoreGeocoordinatesReleaseHandle(handle);

final _heresdkTrafficCommonBindingslistofSdkCoreGeocoordinatesCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_common_bindingsListOf_sdk_core_GeoCoordinates_create_handle_nullable'));
final _heresdkTrafficCommonBindingslistofSdkCoreGeocoordinatesReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_common_bindingsListOf_sdk_core_GeoCoordinates_release_handle_nullable'));
final _heresdkTrafficCommonBindingslistofSdkCoreGeocoordinatesGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_common_bindingsListOf_sdk_core_GeoCoordinates_get_value_nullable'));

Pointer<Void> heresdkTrafficCommonBindingslistofSdkCoreGeocoordinatesToFfiNullable(List<GeoCoordinates>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkTrafficCommonBindingslistofSdkCoreGeocoordinatesToFfi(value);
  final result = _heresdkTrafficCommonBindingslistofSdkCoreGeocoordinatesCreateHandleNullable(_handle);
  heresdkTrafficCommonBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

List<GeoCoordinates>? heresdkTrafficCommonBindingslistofSdkCoreGeocoordinatesFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkTrafficCommonBindingslistofSdkCoreGeocoordinatesGetValueNullable(handle);
  final result = heresdkTrafficCommonBindingslistofSdkCoreGeocoordinatesFromFfi(_handle);
  heresdkTrafficCommonBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

void heresdkTrafficCommonBindingslistofSdkCoreGeocoordinatesReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkTrafficCommonBindingslistofSdkCoreGeocoordinatesReleaseHandleNullable(handle);

final _heresdkTrafficCommonBindingslistofSdkCoreLocalizedtextCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_traffic_common_bindingsListOf_sdk_core_LocalizedText_create_handle'));
final _heresdkTrafficCommonBindingslistofSdkCoreLocalizedtextReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_common_bindingsListOf_sdk_core_LocalizedText_release_handle'));
final _heresdkTrafficCommonBindingslistofSdkCoreLocalizedtextInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_traffic_common_bindingsListOf_sdk_core_LocalizedText_insert'));
final _heresdkTrafficCommonBindingslistofSdkCoreLocalizedtextIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_common_bindingsListOf_sdk_core_LocalizedText_iterator'));
final _heresdkTrafficCommonBindingslistofSdkCoreLocalizedtextIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_common_bindingsListOf_sdk_core_LocalizedText_iterator_release_handle'));
final _heresdkTrafficCommonBindingslistofSdkCoreLocalizedtextIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_traffic_common_bindingsListOf_sdk_core_LocalizedText_iterator_is_valid'));
final _heresdkTrafficCommonBindingslistofSdkCoreLocalizedtextIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_common_bindingsListOf_sdk_core_LocalizedText_iterator_increment'));
final _heresdkTrafficCommonBindingslistofSdkCoreLocalizedtextIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_common_bindingsListOf_sdk_core_LocalizedText_iterator_get'));

Pointer<Void> heresdkTrafficCommonBindingslistofSdkCoreLocalizedtextToFfi(List<LocalizedText> value) {
  final _result = _heresdkTrafficCommonBindingslistofSdkCoreLocalizedtextCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreLocalizedtextToFfi(element);
    _heresdkTrafficCommonBindingslistofSdkCoreLocalizedtextInsert(_result, _elementHandle);
    sdkCoreLocalizedtextReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<LocalizedText> heresdkTrafficCommonBindingslistofSdkCoreLocalizedtextFromFfi(Pointer<Void> handle) {
  final result = List<LocalizedText>.empty(growable: true);
  final _iteratorHandle = _heresdkTrafficCommonBindingslistofSdkCoreLocalizedtextIterator(handle);
  while (_heresdkTrafficCommonBindingslistofSdkCoreLocalizedtextIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkTrafficCommonBindingslistofSdkCoreLocalizedtextIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreLocalizedtextFromFfi(_elementHandle));
    } finally {
      sdkCoreLocalizedtextReleaseFfiHandle(_elementHandle);
    }
    _heresdkTrafficCommonBindingslistofSdkCoreLocalizedtextIteratorIncrement(_iteratorHandle);
  }
  _heresdkTrafficCommonBindingslistofSdkCoreLocalizedtextIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkTrafficCommonBindingslistofSdkCoreLocalizedtextReleaseFfiHandle(Pointer<Void> handle) => _heresdkTrafficCommonBindingslistofSdkCoreLocalizedtextReleaseHandle(handle);

final _heresdkTrafficCommonBindingslistofSdkCoreLocalizedtextCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_common_bindingsListOf_sdk_core_LocalizedText_create_handle_nullable'));
final _heresdkTrafficCommonBindingslistofSdkCoreLocalizedtextReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_common_bindingsListOf_sdk_core_LocalizedText_release_handle_nullable'));
final _heresdkTrafficCommonBindingslistofSdkCoreLocalizedtextGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_common_bindingsListOf_sdk_core_LocalizedText_get_value_nullable'));

Pointer<Void> heresdkTrafficCommonBindingslistofSdkCoreLocalizedtextToFfiNullable(List<LocalizedText>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkTrafficCommonBindingslistofSdkCoreLocalizedtextToFfi(value);
  final result = _heresdkTrafficCommonBindingslistofSdkCoreLocalizedtextCreateHandleNullable(_handle);
  heresdkTrafficCommonBindingslistofSdkCoreLocalizedtextReleaseFfiHandle(_handle);
  return result;
}

List<LocalizedText>? heresdkTrafficCommonBindingslistofSdkCoreLocalizedtextFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkTrafficCommonBindingslistofSdkCoreLocalizedtextGetValueNullable(handle);
  final result = heresdkTrafficCommonBindingslistofSdkCoreLocalizedtextFromFfi(_handle);
  heresdkTrafficCommonBindingslistofSdkCoreLocalizedtextReleaseFfiHandle(_handle);
  return result;
}

void heresdkTrafficCommonBindingslistofSdkCoreLocalizedtextReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkTrafficCommonBindingslistofSdkCoreLocalizedtextReleaseHandleNullable(handle);

final _heresdkTrafficCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_traffic_common_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_create_handle'));
final _heresdkTrafficCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_common_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_release_handle'));
final _heresdkTrafficCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_traffic_common_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_insert'));
final _heresdkTrafficCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_common_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator'));
final _heresdkTrafficCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_common_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator_release_handle'));
final _heresdkTrafficCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_traffic_common_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator_is_valid'));
final _heresdkTrafficCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_common_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator_increment'));
final _heresdkTrafficCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_common_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator_get'));

Pointer<Void> heresdkTrafficCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureToFfi(List<LayerConfigurationFeature> value) {
  final _result = _heresdkTrafficCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreEngineLayerconfigurationFeatureToFfi(element);
    _heresdkTrafficCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureInsert(_result, _elementHandle);
    sdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<LayerConfigurationFeature> heresdkTrafficCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureFromFfi(Pointer<Void> handle) {
  final result = List<LayerConfigurationFeature>.empty(growable: true);
  final _iteratorHandle = _heresdkTrafficCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureIterator(handle);
  while (_heresdkTrafficCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkTrafficCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreEngineLayerconfigurationFeatureFromFfi(_elementHandle));
    } finally {
      sdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(_elementHandle);
    }
    _heresdkTrafficCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorIncrement(_iteratorHandle);
  }
  _heresdkTrafficCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkTrafficCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(Pointer<Void> handle) => _heresdkTrafficCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseHandle(handle);

final _heresdkTrafficCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_common_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_create_handle_nullable'));
final _heresdkTrafficCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_common_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_release_handle_nullable'));
final _heresdkTrafficCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_common_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_get_value_nullable'));

Pointer<Void> heresdkTrafficCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureToFfiNullable(List<LayerConfigurationFeature>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkTrafficCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureToFfi(value);
  final result = _heresdkTrafficCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureCreateHandleNullable(_handle);
  heresdkTrafficCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(_handle);
  return result;
}

List<LayerConfigurationFeature>? heresdkTrafficCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkTrafficCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureGetValueNullable(handle);
  final result = heresdkTrafficCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureFromFfi(_handle);
  heresdkTrafficCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(_handle);
  return result;
}

void heresdkTrafficCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkTrafficCommonBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseHandleNullable(handle);

final _heresdkTrafficCommonBindingsmapofSdkCoreEngineEnginebaseurlToStringCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_traffic_common_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_create_handle'));
final _heresdkTrafficCommonBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_common_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_release_handle'));
final _heresdkTrafficCommonBindingsmapofSdkCoreEngineEnginebaseurlToStringPut = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32, Pointer<Void>),
    void Function(Pointer<Void>, int, Pointer<Void>)
  >('here_sdk_heresdk_traffic_common_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_put'));
final _heresdkTrafficCommonBindingsmapofSdkCoreEngineEnginebaseurlToStringIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_common_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_iterator'));
final _heresdkTrafficCommonBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_common_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_iterator_release_handle'));
final _heresdkTrafficCommonBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_traffic_common_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_iterator_is_valid'));
final _heresdkTrafficCommonBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_common_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_iterator_increment'));
final _heresdkTrafficCommonBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorGetKey = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_common_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_iterator_get_key'));
final _heresdkTrafficCommonBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorGetValue = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_traffic_common_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_iterator_get_value'));

Pointer<Void> heresdkTrafficCommonBindingsmapofSdkCoreEngineEnginebaseurlToStringToFfi(Map<EngineBaseURL, String> value) {
  final _result = _heresdkTrafficCommonBindingsmapofSdkCoreEngineEnginebaseurlToStringCreateHandle();
  for (final entry in value.entries) {
    final _keyHandle = sdkCoreEngineEnginebaseurlToFfi(entry.key);
    final _valueHandle = stringToFfi(entry.value);
    _heresdkTrafficCommonBindingsmapofSdkCoreEngineEnginebaseurlToStringPut(_result, _keyHandle, _valueHandle);
    sdkCoreEngineEnginebaseurlReleaseFfiHandle(_keyHandle);
    stringReleaseFfiHandle(_valueHandle);
  }
  return _result;
}

Map<EngineBaseURL, String> heresdkTrafficCommonBindingsmapofSdkCoreEngineEnginebaseurlToStringFromFfi(Pointer<Void> handle) {
  final result = Map<EngineBaseURL, String>();
  final _iteratorHandle = _heresdkTrafficCommonBindingsmapofSdkCoreEngineEnginebaseurlToStringIterator(handle);
  while (_heresdkTrafficCommonBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _keyHandle = _heresdkTrafficCommonBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorGetKey(_iteratorHandle);
    final _valueHandle = _heresdkTrafficCommonBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorGetValue(_iteratorHandle);
    try {
      result[sdkCoreEngineEnginebaseurlFromFfi(_keyHandle)] =
        stringFromFfi(_valueHandle);
    } finally {
      sdkCoreEngineEnginebaseurlReleaseFfiHandle(_keyHandle);
      stringReleaseFfiHandle(_valueHandle);
    }
    _heresdkTrafficCommonBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorIncrement(_iteratorHandle);
  }
  _heresdkTrafficCommonBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkTrafficCommonBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseFfiHandle(Pointer<Void> handle) => _heresdkTrafficCommonBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseHandle(handle);

final _heresdkTrafficCommonBindingsmapofSdkCoreEngineEnginebaseurlToStringCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_common_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_create_handle_nullable'));
final _heresdkTrafficCommonBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_common_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_release_handle_nullable'));
final _heresdkTrafficCommonBindingsmapofSdkCoreEngineEnginebaseurlToStringGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_traffic_common_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_get_value_nullable'));

Pointer<Void> heresdkTrafficCommonBindingsmapofSdkCoreEngineEnginebaseurlToStringToFfiNullable(Map<EngineBaseURL, String>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkTrafficCommonBindingsmapofSdkCoreEngineEnginebaseurlToStringToFfi(value);
  final result = _heresdkTrafficCommonBindingsmapofSdkCoreEngineEnginebaseurlToStringCreateHandleNullable(_handle);
  heresdkTrafficCommonBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseFfiHandle(_handle);
  return result;
}

Map<EngineBaseURL, String>? heresdkTrafficCommonBindingsmapofSdkCoreEngineEnginebaseurlToStringFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkTrafficCommonBindingsmapofSdkCoreEngineEnginebaseurlToStringGetValueNullable(handle);
  final result = heresdkTrafficCommonBindingsmapofSdkCoreEngineEnginebaseurlToStringFromFfi(_handle);
  heresdkTrafficCommonBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseFfiHandle(_handle);
  return result;
}

void heresdkTrafficCommonBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkTrafficCommonBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseHandleNullable(handle);


// Copyright (c) 2018-2022 HERE Global B.V. and its affiliate(s).
// All rights reserved.
//
// This software and other materials contain proprietary information
// controlled by HERE and are protected by applicable copyright legislation.
// Any use and utilization of this software and other materials and
// disclosure to any third parties is conditional upon having a separate
// agreement with HERE for the access, use, utilization or disclosure of this
// software. In the absence of such agreement, the use of the software is not
// allowed.
//



















final _heresdkVenueBindingslistofDoubleCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_venue_bindingsListOf_Double_create_handle'));
final _heresdkVenueBindingslistofDoubleReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_bindingsListOf_Double_release_handle'));
final _heresdkVenueBindingslistofDoubleInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Double),
    void Function(Pointer<Void>, double)
  >('here_sdk_heresdk_venue_bindingsListOf_Double_insert'));
final _heresdkVenueBindingslistofDoubleIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_venue_bindingsListOf_Double_iterator'));
final _heresdkVenueBindingslistofDoubleIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_venue_bindingsListOf_Double_iterator_release_handle'));
final _heresdkVenueBindingslistofDoubleIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_venue_bindingsListOf_Double_iterator_is_valid'));
final _heresdkVenueBindingslistofDoubleIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_venue_bindingsListOf_Double_iterator_increment'));
final _heresdkVenueBindingslistofDoubleIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Double Function(Pointer<Void>),
    double Function(Pointer<Void>)
>('here_sdk_heresdk_venue_bindingsListOf_Double_iterator_get'));

Pointer<Void> heresdkVenueBindingslistofDoubleToFfi(List<double> value) {
  final _result = _heresdkVenueBindingslistofDoubleCreateHandle();
  for (final element in value) {
    final _elementHandle = (element);
    _heresdkVenueBindingslistofDoubleInsert(_result, _elementHandle);
    
  }
  return _result;
}

List<double> heresdkVenueBindingslistofDoubleFromFfi(Pointer<Void> handle) {
  final result = List<double>.empty(growable: true);
  final _iteratorHandle = _heresdkVenueBindingslistofDoubleIterator(handle);
  while (_heresdkVenueBindingslistofDoubleIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkVenueBindingslistofDoubleIteratorGet(_iteratorHandle);
    try {
      result.add((_elementHandle));
    } finally {
      
    }
    _heresdkVenueBindingslistofDoubleIteratorIncrement(_iteratorHandle);
  }
  _heresdkVenueBindingslistofDoubleIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkVenueBindingslistofDoubleReleaseFfiHandle(Pointer<Void> handle) => _heresdkVenueBindingslistofDoubleReleaseHandle(handle);

final _heresdkVenueBindingslistofDoubleCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_bindingsListOf_Double_create_handle_nullable'));
final _heresdkVenueBindingslistofDoubleReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_bindingsListOf_Double_release_handle_nullable'));
final _heresdkVenueBindingslistofDoubleGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_bindingsListOf_Double_get_value_nullable'));

Pointer<Void> heresdkVenueBindingslistofDoubleToFfiNullable(List<double>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkVenueBindingslistofDoubleToFfi(value);
  final result = _heresdkVenueBindingslistofDoubleCreateHandleNullable(_handle);
  heresdkVenueBindingslistofDoubleReleaseFfiHandle(_handle);
  return result;
}

List<double>? heresdkVenueBindingslistofDoubleFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkVenueBindingslistofDoubleGetValueNullable(handle);
  final result = heresdkVenueBindingslistofDoubleFromFfi(_handle);
  heresdkVenueBindingslistofDoubleReleaseFfiHandle(_handle);
  return result;
}

void heresdkVenueBindingslistofDoubleReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkVenueBindingslistofDoubleReleaseHandleNullable(handle);

final _heresdkVenueBindingslistofIntCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_venue_bindingsListOf_Int_create_handle'));
final _heresdkVenueBindingslistofIntReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_bindingsListOf_Int_release_handle'));
final _heresdkVenueBindingslistofIntInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Int32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_venue_bindingsListOf_Int_insert'));
final _heresdkVenueBindingslistofIntIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_venue_bindingsListOf_Int_iterator'));
final _heresdkVenueBindingslistofIntIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_venue_bindingsListOf_Int_iterator_release_handle'));
final _heresdkVenueBindingslistofIntIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_venue_bindingsListOf_Int_iterator_is_valid'));
final _heresdkVenueBindingslistofIntIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_venue_bindingsListOf_Int_iterator_increment'));
final _heresdkVenueBindingslistofIntIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_venue_bindingsListOf_Int_iterator_get'));

Pointer<Void> heresdkVenueBindingslistofIntToFfi(List<int> value) {
  final _result = _heresdkVenueBindingslistofIntCreateHandle();
  for (final element in value) {
    final _elementHandle = (element);
    _heresdkVenueBindingslistofIntInsert(_result, _elementHandle);
    
  }
  return _result;
}

List<int> heresdkVenueBindingslistofIntFromFfi(Pointer<Void> handle) {
  final result = List<int>.empty(growable: true);
  final _iteratorHandle = _heresdkVenueBindingslistofIntIterator(handle);
  while (_heresdkVenueBindingslistofIntIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkVenueBindingslistofIntIteratorGet(_iteratorHandle);
    try {
      result.add((_elementHandle));
    } finally {
      
    }
    _heresdkVenueBindingslistofIntIteratorIncrement(_iteratorHandle);
  }
  _heresdkVenueBindingslistofIntIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkVenueBindingslistofIntReleaseFfiHandle(Pointer<Void> handle) => _heresdkVenueBindingslistofIntReleaseHandle(handle);

final _heresdkVenueBindingslistofIntCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_bindingsListOf_Int_create_handle_nullable'));
final _heresdkVenueBindingslistofIntReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_bindingsListOf_Int_release_handle_nullable'));
final _heresdkVenueBindingslistofIntGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_bindingsListOf_Int_get_value_nullable'));

Pointer<Void> heresdkVenueBindingslistofIntToFfiNullable(List<int>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkVenueBindingslistofIntToFfi(value);
  final result = _heresdkVenueBindingslistofIntCreateHandleNullable(_handle);
  heresdkVenueBindingslistofIntReleaseFfiHandle(_handle);
  return result;
}

List<int>? heresdkVenueBindingslistofIntFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkVenueBindingslistofIntGetValueNullable(handle);
  final result = heresdkVenueBindingslistofIntFromFfi(_handle);
  heresdkVenueBindingslistofIntReleaseFfiHandle(_handle);
  return result;
}

void heresdkVenueBindingslistofIntReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkVenueBindingslistofIntReleaseHandleNullable(handle);

final _heresdkVenueBindingslistofStringCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_venue_bindingsListOf_String_create_handle'));
final _heresdkVenueBindingslistofStringReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_bindingsListOf_String_release_handle'));
final _heresdkVenueBindingslistofStringInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_venue_bindingsListOf_String_insert'));
final _heresdkVenueBindingslistofStringIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_venue_bindingsListOf_String_iterator'));
final _heresdkVenueBindingslistofStringIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_venue_bindingsListOf_String_iterator_release_handle'));
final _heresdkVenueBindingslistofStringIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_venue_bindingsListOf_String_iterator_is_valid'));
final _heresdkVenueBindingslistofStringIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_venue_bindingsListOf_String_iterator_increment'));
final _heresdkVenueBindingslistofStringIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_venue_bindingsListOf_String_iterator_get'));

Pointer<Void> heresdkVenueBindingslistofStringToFfi(List<String> value) {
  final _result = _heresdkVenueBindingslistofStringCreateHandle();
  for (final element in value) {
    final _elementHandle = stringToFfi(element);
    _heresdkVenueBindingslistofStringInsert(_result, _elementHandle);
    stringReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<String> heresdkVenueBindingslistofStringFromFfi(Pointer<Void> handle) {
  final result = List<String>.empty(growable: true);
  final _iteratorHandle = _heresdkVenueBindingslistofStringIterator(handle);
  while (_heresdkVenueBindingslistofStringIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkVenueBindingslistofStringIteratorGet(_iteratorHandle);
    try {
      result.add(stringFromFfi(_elementHandle));
    } finally {
      stringReleaseFfiHandle(_elementHandle);
    }
    _heresdkVenueBindingslistofStringIteratorIncrement(_iteratorHandle);
  }
  _heresdkVenueBindingslistofStringIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkVenueBindingslistofStringReleaseFfiHandle(Pointer<Void> handle) => _heresdkVenueBindingslistofStringReleaseHandle(handle);

final _heresdkVenueBindingslistofStringCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_bindingsListOf_String_create_handle_nullable'));
final _heresdkVenueBindingslistofStringReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_bindingsListOf_String_release_handle_nullable'));
final _heresdkVenueBindingslistofStringGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_bindingsListOf_String_get_value_nullable'));

Pointer<Void> heresdkVenueBindingslistofStringToFfiNullable(List<String>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkVenueBindingslistofStringToFfi(value);
  final result = _heresdkVenueBindingslistofStringCreateHandleNullable(_handle);
  heresdkVenueBindingslistofStringReleaseFfiHandle(_handle);
  return result;
}

List<String>? heresdkVenueBindingslistofStringFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkVenueBindingslistofStringGetValueNullable(handle);
  final result = heresdkVenueBindingslistofStringFromFfi(_handle);
  heresdkVenueBindingslistofStringReleaseFfiHandle(_handle);
  return result;
}

void heresdkVenueBindingslistofStringReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkVenueBindingslistofStringReleaseHandleNullable(handle);

final _heresdkVenueBindingslistofSdkCoreGeocoordinatesCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_venue_bindingsListOf_sdk_core_GeoCoordinates_create_handle'));
final _heresdkVenueBindingslistofSdkCoreGeocoordinatesReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_bindingsListOf_sdk_core_GeoCoordinates_release_handle'));
final _heresdkVenueBindingslistofSdkCoreGeocoordinatesInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_venue_bindingsListOf_sdk_core_GeoCoordinates_insert'));
final _heresdkVenueBindingslistofSdkCoreGeocoordinatesIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_venue_bindingsListOf_sdk_core_GeoCoordinates_iterator'));
final _heresdkVenueBindingslistofSdkCoreGeocoordinatesIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_venue_bindingsListOf_sdk_core_GeoCoordinates_iterator_release_handle'));
final _heresdkVenueBindingslistofSdkCoreGeocoordinatesIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_venue_bindingsListOf_sdk_core_GeoCoordinates_iterator_is_valid'));
final _heresdkVenueBindingslistofSdkCoreGeocoordinatesIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_venue_bindingsListOf_sdk_core_GeoCoordinates_iterator_increment'));
final _heresdkVenueBindingslistofSdkCoreGeocoordinatesIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_venue_bindingsListOf_sdk_core_GeoCoordinates_iterator_get'));

Pointer<Void> heresdkVenueBindingslistofSdkCoreGeocoordinatesToFfi(List<GeoCoordinates> value) {
  final _result = _heresdkVenueBindingslistofSdkCoreGeocoordinatesCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreGeocoordinatesToFfi(element);
    _heresdkVenueBindingslistofSdkCoreGeocoordinatesInsert(_result, _elementHandle);
    sdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoCoordinates> heresdkVenueBindingslistofSdkCoreGeocoordinatesFromFfi(Pointer<Void> handle) {
  final result = List<GeoCoordinates>.empty(growable: true);
  final _iteratorHandle = _heresdkVenueBindingslistofSdkCoreGeocoordinatesIterator(handle);
  while (_heresdkVenueBindingslistofSdkCoreGeocoordinatesIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkVenueBindingslistofSdkCoreGeocoordinatesIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreGeocoordinatesFromFfi(_elementHandle));
    } finally {
      sdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
    }
    _heresdkVenueBindingslistofSdkCoreGeocoordinatesIteratorIncrement(_iteratorHandle);
  }
  _heresdkVenueBindingslistofSdkCoreGeocoordinatesIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkVenueBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(Pointer<Void> handle) => _heresdkVenueBindingslistofSdkCoreGeocoordinatesReleaseHandle(handle);

final _heresdkVenueBindingslistofSdkCoreGeocoordinatesCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_bindingsListOf_sdk_core_GeoCoordinates_create_handle_nullable'));
final _heresdkVenueBindingslistofSdkCoreGeocoordinatesReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_bindingsListOf_sdk_core_GeoCoordinates_release_handle_nullable'));
final _heresdkVenueBindingslistofSdkCoreGeocoordinatesGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_bindingsListOf_sdk_core_GeoCoordinates_get_value_nullable'));

Pointer<Void> heresdkVenueBindingslistofSdkCoreGeocoordinatesToFfiNullable(List<GeoCoordinates>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkVenueBindingslistofSdkCoreGeocoordinatesToFfi(value);
  final result = _heresdkVenueBindingslistofSdkCoreGeocoordinatesCreateHandleNullable(_handle);
  heresdkVenueBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

List<GeoCoordinates>? heresdkVenueBindingslistofSdkCoreGeocoordinatesFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkVenueBindingslistofSdkCoreGeocoordinatesGetValueNullable(handle);
  final result = heresdkVenueBindingslistofSdkCoreGeocoordinatesFromFfi(_handle);
  heresdkVenueBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

void heresdkVenueBindingslistofSdkCoreGeocoordinatesReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkVenueBindingslistofSdkCoreGeocoordinatesReleaseHandleNullable(handle);

final _heresdkVenueBindingslistofSdkVenueDataEntityinfoCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_venue_bindingsListOf_sdk_venue_data_EntityInfo_create_handle'));
final _heresdkVenueBindingslistofSdkVenueDataEntityinfoReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_bindingsListOf_sdk_venue_data_EntityInfo_release_handle'));
final _heresdkVenueBindingslistofSdkVenueDataEntityinfoInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_venue_bindingsListOf_sdk_venue_data_EntityInfo_insert'));
final _heresdkVenueBindingslistofSdkVenueDataEntityinfoIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_venue_bindingsListOf_sdk_venue_data_EntityInfo_iterator'));
final _heresdkVenueBindingslistofSdkVenueDataEntityinfoIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_venue_bindingsListOf_sdk_venue_data_EntityInfo_iterator_release_handle'));
final _heresdkVenueBindingslistofSdkVenueDataEntityinfoIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_venue_bindingsListOf_sdk_venue_data_EntityInfo_iterator_is_valid'));
final _heresdkVenueBindingslistofSdkVenueDataEntityinfoIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_venue_bindingsListOf_sdk_venue_data_EntityInfo_iterator_increment'));
final _heresdkVenueBindingslistofSdkVenueDataEntityinfoIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_venue_bindingsListOf_sdk_venue_data_EntityInfo_iterator_get'));

Pointer<Void> heresdkVenueBindingslistofSdkVenueDataEntityinfoToFfi(List<EntityInfo> value) {
  final _result = _heresdkVenueBindingslistofSdkVenueDataEntityinfoCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkVenueDataEntityinfoToFfi(element);
    _heresdkVenueBindingslistofSdkVenueDataEntityinfoInsert(_result, _elementHandle);
    sdkVenueDataEntityinfoReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<EntityInfo> heresdkVenueBindingslistofSdkVenueDataEntityinfoFromFfi(Pointer<Void> handle) {
  final result = List<EntityInfo>.empty(growable: true);
  final _iteratorHandle = _heresdkVenueBindingslistofSdkVenueDataEntityinfoIterator(handle);
  while (_heresdkVenueBindingslistofSdkVenueDataEntityinfoIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkVenueBindingslistofSdkVenueDataEntityinfoIteratorGet(_iteratorHandle);
    try {
      result.add(sdkVenueDataEntityinfoFromFfi(_elementHandle));
    } finally {
      sdkVenueDataEntityinfoReleaseFfiHandle(_elementHandle);
    }
    _heresdkVenueBindingslistofSdkVenueDataEntityinfoIteratorIncrement(_iteratorHandle);
  }
  _heresdkVenueBindingslistofSdkVenueDataEntityinfoIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkVenueBindingslistofSdkVenueDataEntityinfoReleaseFfiHandle(Pointer<Void> handle) => _heresdkVenueBindingslistofSdkVenueDataEntityinfoReleaseHandle(handle);

final _heresdkVenueBindingslistofSdkVenueDataEntityinfoCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_bindingsListOf_sdk_venue_data_EntityInfo_create_handle_nullable'));
final _heresdkVenueBindingslistofSdkVenueDataEntityinfoReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_bindingsListOf_sdk_venue_data_EntityInfo_release_handle_nullable'));
final _heresdkVenueBindingslistofSdkVenueDataEntityinfoGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_bindingsListOf_sdk_venue_data_EntityInfo_get_value_nullable'));

Pointer<Void> heresdkVenueBindingslistofSdkVenueDataEntityinfoToFfiNullable(List<EntityInfo>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkVenueBindingslistofSdkVenueDataEntityinfoToFfi(value);
  final result = _heresdkVenueBindingslistofSdkVenueDataEntityinfoCreateHandleNullable(_handle);
  heresdkVenueBindingslistofSdkVenueDataEntityinfoReleaseFfiHandle(_handle);
  return result;
}

List<EntityInfo>? heresdkVenueBindingslistofSdkVenueDataEntityinfoFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkVenueBindingslistofSdkVenueDataEntityinfoGetValueNullable(handle);
  final result = heresdkVenueBindingslistofSdkVenueDataEntityinfoFromFfi(_handle);
  heresdkVenueBindingslistofSdkVenueDataEntityinfoReleaseFfiHandle(_handle);
  return result;
}

void heresdkVenueBindingslistofSdkVenueDataEntityinfoReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkVenueBindingslistofSdkVenueDataEntityinfoReleaseHandleNullable(handle);

final _heresdkVenueBindingslistofSdkVenueDataGeoshapeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_venue_bindingsListOf_sdk_venue_data_GeoShape_create_handle'));
final _heresdkVenueBindingslistofSdkVenueDataGeoshapeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_bindingsListOf_sdk_venue_data_GeoShape_release_handle'));
final _heresdkVenueBindingslistofSdkVenueDataGeoshapeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_venue_bindingsListOf_sdk_venue_data_GeoShape_insert'));
final _heresdkVenueBindingslistofSdkVenueDataGeoshapeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_venue_bindingsListOf_sdk_venue_data_GeoShape_iterator'));
final _heresdkVenueBindingslistofSdkVenueDataGeoshapeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_venue_bindingsListOf_sdk_venue_data_GeoShape_iterator_release_handle'));
final _heresdkVenueBindingslistofSdkVenueDataGeoshapeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_venue_bindingsListOf_sdk_venue_data_GeoShape_iterator_is_valid'));
final _heresdkVenueBindingslistofSdkVenueDataGeoshapeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_venue_bindingsListOf_sdk_venue_data_GeoShape_iterator_increment'));
final _heresdkVenueBindingslistofSdkVenueDataGeoshapeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_venue_bindingsListOf_sdk_venue_data_GeoShape_iterator_get'));

Pointer<Void> heresdkVenueBindingslistofSdkVenueDataGeoshapeToFfi(List<GeoShape> value) {
  final _result = _heresdkVenueBindingslistofSdkVenueDataGeoshapeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkVenueDataGeoshapeToFfi(element);
    _heresdkVenueBindingslistofSdkVenueDataGeoshapeInsert(_result, _elementHandle);
    sdkVenueDataGeoshapeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoShape> heresdkVenueBindingslistofSdkVenueDataGeoshapeFromFfi(Pointer<Void> handle) {
  final result = List<GeoShape>.empty(growable: true);
  final _iteratorHandle = _heresdkVenueBindingslistofSdkVenueDataGeoshapeIterator(handle);
  while (_heresdkVenueBindingslistofSdkVenueDataGeoshapeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkVenueBindingslistofSdkVenueDataGeoshapeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkVenueDataGeoshapeFromFfi(_elementHandle));
    } finally {
      sdkVenueDataGeoshapeReleaseFfiHandle(_elementHandle);
    }
    _heresdkVenueBindingslistofSdkVenueDataGeoshapeIteratorIncrement(_iteratorHandle);
  }
  _heresdkVenueBindingslistofSdkVenueDataGeoshapeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkVenueBindingslistofSdkVenueDataGeoshapeReleaseFfiHandle(Pointer<Void> handle) => _heresdkVenueBindingslistofSdkVenueDataGeoshapeReleaseHandle(handle);

final _heresdkVenueBindingslistofSdkVenueDataGeoshapeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_bindingsListOf_sdk_venue_data_GeoShape_create_handle_nullable'));
final _heresdkVenueBindingslistofSdkVenueDataGeoshapeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_bindingsListOf_sdk_venue_data_GeoShape_release_handle_nullable'));
final _heresdkVenueBindingslistofSdkVenueDataGeoshapeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_bindingsListOf_sdk_venue_data_GeoShape_get_value_nullable'));

Pointer<Void> heresdkVenueBindingslistofSdkVenueDataGeoshapeToFfiNullable(List<GeoShape>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkVenueBindingslistofSdkVenueDataGeoshapeToFfi(value);
  final result = _heresdkVenueBindingslistofSdkVenueDataGeoshapeCreateHandleNullable(_handle);
  heresdkVenueBindingslistofSdkVenueDataGeoshapeReleaseFfiHandle(_handle);
  return result;
}

List<GeoShape>? heresdkVenueBindingslistofSdkVenueDataGeoshapeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkVenueBindingslistofSdkVenueDataGeoshapeGetValueNullable(handle);
  final result = heresdkVenueBindingslistofSdkVenueDataGeoshapeFromFfi(_handle);
  heresdkVenueBindingslistofSdkVenueDataGeoshapeReleaseFfiHandle(_handle);
  return result;
}

void heresdkVenueBindingslistofSdkVenueDataGeoshapeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkVenueBindingslistofSdkVenueDataGeoshapeReleaseHandleNullable(handle);

final _heresdkVenueBindingslistofSdkVenueDataVenuedrawingCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_venue_bindingsListOf_sdk_venue_data_VenueDrawing_create_handle'));
final _heresdkVenueBindingslistofSdkVenueDataVenuedrawingReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_bindingsListOf_sdk_venue_data_VenueDrawing_release_handle'));
final _heresdkVenueBindingslistofSdkVenueDataVenuedrawingInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_venue_bindingsListOf_sdk_venue_data_VenueDrawing_insert'));
final _heresdkVenueBindingslistofSdkVenueDataVenuedrawingIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_venue_bindingsListOf_sdk_venue_data_VenueDrawing_iterator'));
final _heresdkVenueBindingslistofSdkVenueDataVenuedrawingIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_venue_bindingsListOf_sdk_venue_data_VenueDrawing_iterator_release_handle'));
final _heresdkVenueBindingslistofSdkVenueDataVenuedrawingIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_venue_bindingsListOf_sdk_venue_data_VenueDrawing_iterator_is_valid'));
final _heresdkVenueBindingslistofSdkVenueDataVenuedrawingIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_venue_bindingsListOf_sdk_venue_data_VenueDrawing_iterator_increment'));
final _heresdkVenueBindingslistofSdkVenueDataVenuedrawingIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_venue_bindingsListOf_sdk_venue_data_VenueDrawing_iterator_get'));

Pointer<Void> heresdkVenueBindingslistofSdkVenueDataVenuedrawingToFfi(List<VenueDrawing> value) {
  final _result = _heresdkVenueBindingslistofSdkVenueDataVenuedrawingCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkVenueDataVenuedrawingToFfi(element);
    _heresdkVenueBindingslistofSdkVenueDataVenuedrawingInsert(_result, _elementHandle);
    sdkVenueDataVenuedrawingReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<VenueDrawing> heresdkVenueBindingslistofSdkVenueDataVenuedrawingFromFfi(Pointer<Void> handle) {
  final result = List<VenueDrawing>.empty(growable: true);
  final _iteratorHandle = _heresdkVenueBindingslistofSdkVenueDataVenuedrawingIterator(handle);
  while (_heresdkVenueBindingslistofSdkVenueDataVenuedrawingIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkVenueBindingslistofSdkVenueDataVenuedrawingIteratorGet(_iteratorHandle);
    try {
      result.add(sdkVenueDataVenuedrawingFromFfi(_elementHandle));
    } finally {
      sdkVenueDataVenuedrawingReleaseFfiHandle(_elementHandle);
    }
    _heresdkVenueBindingslistofSdkVenueDataVenuedrawingIteratorIncrement(_iteratorHandle);
  }
  _heresdkVenueBindingslistofSdkVenueDataVenuedrawingIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkVenueBindingslistofSdkVenueDataVenuedrawingReleaseFfiHandle(Pointer<Void> handle) => _heresdkVenueBindingslistofSdkVenueDataVenuedrawingReleaseHandle(handle);

final _heresdkVenueBindingslistofSdkVenueDataVenuedrawingCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_bindingsListOf_sdk_venue_data_VenueDrawing_create_handle_nullable'));
final _heresdkVenueBindingslistofSdkVenueDataVenuedrawingReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_bindingsListOf_sdk_venue_data_VenueDrawing_release_handle_nullable'));
final _heresdkVenueBindingslistofSdkVenueDataVenuedrawingGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_bindingsListOf_sdk_venue_data_VenueDrawing_get_value_nullable'));

Pointer<Void> heresdkVenueBindingslistofSdkVenueDataVenuedrawingToFfiNullable(List<VenueDrawing>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkVenueBindingslistofSdkVenueDataVenuedrawingToFfi(value);
  final result = _heresdkVenueBindingslistofSdkVenueDataVenuedrawingCreateHandleNullable(_handle);
  heresdkVenueBindingslistofSdkVenueDataVenuedrawingReleaseFfiHandle(_handle);
  return result;
}

List<VenueDrawing>? heresdkVenueBindingslistofSdkVenueDataVenuedrawingFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkVenueBindingslistofSdkVenueDataVenuedrawingGetValueNullable(handle);
  final result = heresdkVenueBindingslistofSdkVenueDataVenuedrawingFromFfi(_handle);
  heresdkVenueBindingslistofSdkVenueDataVenuedrawingReleaseFfiHandle(_handle);
  return result;
}

void heresdkVenueBindingslistofSdkVenueDataVenuedrawingReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkVenueBindingslistofSdkVenueDataVenuedrawingReleaseHandleNullable(handle);

final _heresdkVenueBindingslistofSdkVenueDataVenuegeometryCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_venue_bindingsListOf_sdk_venue_data_VenueGeometry_create_handle'));
final _heresdkVenueBindingslistofSdkVenueDataVenuegeometryReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_bindingsListOf_sdk_venue_data_VenueGeometry_release_handle'));
final _heresdkVenueBindingslistofSdkVenueDataVenuegeometryInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_venue_bindingsListOf_sdk_venue_data_VenueGeometry_insert'));
final _heresdkVenueBindingslistofSdkVenueDataVenuegeometryIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_venue_bindingsListOf_sdk_venue_data_VenueGeometry_iterator'));
final _heresdkVenueBindingslistofSdkVenueDataVenuegeometryIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_venue_bindingsListOf_sdk_venue_data_VenueGeometry_iterator_release_handle'));
final _heresdkVenueBindingslistofSdkVenueDataVenuegeometryIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_venue_bindingsListOf_sdk_venue_data_VenueGeometry_iterator_is_valid'));
final _heresdkVenueBindingslistofSdkVenueDataVenuegeometryIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_venue_bindingsListOf_sdk_venue_data_VenueGeometry_iterator_increment'));
final _heresdkVenueBindingslistofSdkVenueDataVenuegeometryIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_venue_bindingsListOf_sdk_venue_data_VenueGeometry_iterator_get'));

Pointer<Void> heresdkVenueBindingslistofSdkVenueDataVenuegeometryToFfi(List<VenueGeometry> value) {
  final _result = _heresdkVenueBindingslistofSdkVenueDataVenuegeometryCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkVenueDataVenuegeometryToFfi(element);
    _heresdkVenueBindingslistofSdkVenueDataVenuegeometryInsert(_result, _elementHandle);
    sdkVenueDataVenuegeometryReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<VenueGeometry> heresdkVenueBindingslistofSdkVenueDataVenuegeometryFromFfi(Pointer<Void> handle) {
  final result = List<VenueGeometry>.empty(growable: true);
  final _iteratorHandle = _heresdkVenueBindingslistofSdkVenueDataVenuegeometryIterator(handle);
  while (_heresdkVenueBindingslistofSdkVenueDataVenuegeometryIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkVenueBindingslistofSdkVenueDataVenuegeometryIteratorGet(_iteratorHandle);
    try {
      result.add(sdkVenueDataVenuegeometryFromFfi(_elementHandle));
    } finally {
      sdkVenueDataVenuegeometryReleaseFfiHandle(_elementHandle);
    }
    _heresdkVenueBindingslistofSdkVenueDataVenuegeometryIteratorIncrement(_iteratorHandle);
  }
  _heresdkVenueBindingslistofSdkVenueDataVenuegeometryIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkVenueBindingslistofSdkVenueDataVenuegeometryReleaseFfiHandle(Pointer<Void> handle) => _heresdkVenueBindingslistofSdkVenueDataVenuegeometryReleaseHandle(handle);

final _heresdkVenueBindingslistofSdkVenueDataVenuegeometryCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_bindingsListOf_sdk_venue_data_VenueGeometry_create_handle_nullable'));
final _heresdkVenueBindingslistofSdkVenueDataVenuegeometryReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_bindingsListOf_sdk_venue_data_VenueGeometry_release_handle_nullable'));
final _heresdkVenueBindingslistofSdkVenueDataVenuegeometryGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_bindingsListOf_sdk_venue_data_VenueGeometry_get_value_nullable'));

Pointer<Void> heresdkVenueBindingslistofSdkVenueDataVenuegeometryToFfiNullable(List<VenueGeometry>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkVenueBindingslistofSdkVenueDataVenuegeometryToFfi(value);
  final result = _heresdkVenueBindingslistofSdkVenueDataVenuegeometryCreateHandleNullable(_handle);
  heresdkVenueBindingslistofSdkVenueDataVenuegeometryReleaseFfiHandle(_handle);
  return result;
}

List<VenueGeometry>? heresdkVenueBindingslistofSdkVenueDataVenuegeometryFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkVenueBindingslistofSdkVenueDataVenuegeometryGetValueNullable(handle);
  final result = heresdkVenueBindingslistofSdkVenueDataVenuegeometryFromFfi(_handle);
  heresdkVenueBindingslistofSdkVenueDataVenuegeometryReleaseFfiHandle(_handle);
  return result;
}

void heresdkVenueBindingslistofSdkVenueDataVenuegeometryReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkVenueBindingslistofSdkVenueDataVenuegeometryReleaseHandleNullable(handle);

final _heresdkVenueBindingslistofSdkVenueDataVenuelevelCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_venue_bindingsListOf_sdk_venue_data_VenueLevel_create_handle'));
final _heresdkVenueBindingslistofSdkVenueDataVenuelevelReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_bindingsListOf_sdk_venue_data_VenueLevel_release_handle'));
final _heresdkVenueBindingslistofSdkVenueDataVenuelevelInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_venue_bindingsListOf_sdk_venue_data_VenueLevel_insert'));
final _heresdkVenueBindingslistofSdkVenueDataVenuelevelIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_venue_bindingsListOf_sdk_venue_data_VenueLevel_iterator'));
final _heresdkVenueBindingslistofSdkVenueDataVenuelevelIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_venue_bindingsListOf_sdk_venue_data_VenueLevel_iterator_release_handle'));
final _heresdkVenueBindingslistofSdkVenueDataVenuelevelIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_venue_bindingsListOf_sdk_venue_data_VenueLevel_iterator_is_valid'));
final _heresdkVenueBindingslistofSdkVenueDataVenuelevelIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_venue_bindingsListOf_sdk_venue_data_VenueLevel_iterator_increment'));
final _heresdkVenueBindingslistofSdkVenueDataVenuelevelIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_venue_bindingsListOf_sdk_venue_data_VenueLevel_iterator_get'));

Pointer<Void> heresdkVenueBindingslistofSdkVenueDataVenuelevelToFfi(List<VenueLevel> value) {
  final _result = _heresdkVenueBindingslistofSdkVenueDataVenuelevelCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkVenueDataVenuelevelToFfi(element);
    _heresdkVenueBindingslistofSdkVenueDataVenuelevelInsert(_result, _elementHandle);
    sdkVenueDataVenuelevelReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<VenueLevel> heresdkVenueBindingslistofSdkVenueDataVenuelevelFromFfi(Pointer<Void> handle) {
  final result = List<VenueLevel>.empty(growable: true);
  final _iteratorHandle = _heresdkVenueBindingslistofSdkVenueDataVenuelevelIterator(handle);
  while (_heresdkVenueBindingslistofSdkVenueDataVenuelevelIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkVenueBindingslistofSdkVenueDataVenuelevelIteratorGet(_iteratorHandle);
    try {
      result.add(sdkVenueDataVenuelevelFromFfi(_elementHandle));
    } finally {
      sdkVenueDataVenuelevelReleaseFfiHandle(_elementHandle);
    }
    _heresdkVenueBindingslistofSdkVenueDataVenuelevelIteratorIncrement(_iteratorHandle);
  }
  _heresdkVenueBindingslistofSdkVenueDataVenuelevelIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkVenueBindingslistofSdkVenueDataVenuelevelReleaseFfiHandle(Pointer<Void> handle) => _heresdkVenueBindingslistofSdkVenueDataVenuelevelReleaseHandle(handle);

final _heresdkVenueBindingslistofSdkVenueDataVenuelevelCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_bindingsListOf_sdk_venue_data_VenueLevel_create_handle_nullable'));
final _heresdkVenueBindingslistofSdkVenueDataVenuelevelReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_bindingsListOf_sdk_venue_data_VenueLevel_release_handle_nullable'));
final _heresdkVenueBindingslistofSdkVenueDataVenuelevelGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_bindingsListOf_sdk_venue_data_VenueLevel_get_value_nullable'));

Pointer<Void> heresdkVenueBindingslistofSdkVenueDataVenuelevelToFfiNullable(List<VenueLevel>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkVenueBindingslistofSdkVenueDataVenuelevelToFfi(value);
  final result = _heresdkVenueBindingslistofSdkVenueDataVenuelevelCreateHandleNullable(_handle);
  heresdkVenueBindingslistofSdkVenueDataVenuelevelReleaseFfiHandle(_handle);
  return result;
}

List<VenueLevel>? heresdkVenueBindingslistofSdkVenueDataVenuelevelFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkVenueBindingslistofSdkVenueDataVenuelevelGetValueNullable(handle);
  final result = heresdkVenueBindingslistofSdkVenueDataVenuelevelFromFfi(_handle);
  heresdkVenueBindingslistofSdkVenueDataVenuelevelReleaseFfiHandle(_handle);
  return result;
}

void heresdkVenueBindingslistofSdkVenueDataVenuelevelReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkVenueBindingslistofSdkVenueDataVenuelevelReleaseHandleNullable(handle);

final _heresdkVenueBindingslistofSdkVenueStyleIcongeometryCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_venue_bindingsListOf_sdk_venue_style_IconGeometry_create_handle'));
final _heresdkVenueBindingslistofSdkVenueStyleIcongeometryReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_bindingsListOf_sdk_venue_style_IconGeometry_release_handle'));
final _heresdkVenueBindingslistofSdkVenueStyleIcongeometryInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_venue_bindingsListOf_sdk_venue_style_IconGeometry_insert'));
final _heresdkVenueBindingslistofSdkVenueStyleIcongeometryIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_venue_bindingsListOf_sdk_venue_style_IconGeometry_iterator'));
final _heresdkVenueBindingslistofSdkVenueStyleIcongeometryIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_venue_bindingsListOf_sdk_venue_style_IconGeometry_iterator_release_handle'));
final _heresdkVenueBindingslistofSdkVenueStyleIcongeometryIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_venue_bindingsListOf_sdk_venue_style_IconGeometry_iterator_is_valid'));
final _heresdkVenueBindingslistofSdkVenueStyleIcongeometryIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_venue_bindingsListOf_sdk_venue_style_IconGeometry_iterator_increment'));
final _heresdkVenueBindingslistofSdkVenueStyleIcongeometryIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_venue_bindingsListOf_sdk_venue_style_IconGeometry_iterator_get'));

Pointer<Void> heresdkVenueBindingslistofSdkVenueStyleIcongeometryToFfi(List<IconGeometry> value) {
  final _result = _heresdkVenueBindingslistofSdkVenueStyleIcongeometryCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkVenueStyleIcongeometryToFfi(element);
    _heresdkVenueBindingslistofSdkVenueStyleIcongeometryInsert(_result, _elementHandle);
    sdkVenueStyleIcongeometryReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<IconGeometry> heresdkVenueBindingslistofSdkVenueStyleIcongeometryFromFfi(Pointer<Void> handle) {
  final result = List<IconGeometry>.empty(growable: true);
  final _iteratorHandle = _heresdkVenueBindingslistofSdkVenueStyleIcongeometryIterator(handle);
  while (_heresdkVenueBindingslistofSdkVenueStyleIcongeometryIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkVenueBindingslistofSdkVenueStyleIcongeometryIteratorGet(_iteratorHandle);
    try {
      result.add(sdkVenueStyleIcongeometryFromFfi(_elementHandle));
    } finally {
      sdkVenueStyleIcongeometryReleaseFfiHandle(_elementHandle);
    }
    _heresdkVenueBindingslistofSdkVenueStyleIcongeometryIteratorIncrement(_iteratorHandle);
  }
  _heresdkVenueBindingslistofSdkVenueStyleIcongeometryIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkVenueBindingslistofSdkVenueStyleIcongeometryReleaseFfiHandle(Pointer<Void> handle) => _heresdkVenueBindingslistofSdkVenueStyleIcongeometryReleaseHandle(handle);

final _heresdkVenueBindingslistofSdkVenueStyleIcongeometryCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_bindingsListOf_sdk_venue_style_IconGeometry_create_handle_nullable'));
final _heresdkVenueBindingslistofSdkVenueStyleIcongeometryReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_bindingsListOf_sdk_venue_style_IconGeometry_release_handle_nullable'));
final _heresdkVenueBindingslistofSdkVenueStyleIcongeometryGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_bindingsListOf_sdk_venue_style_IconGeometry_get_value_nullable'));

Pointer<Void> heresdkVenueBindingslistofSdkVenueStyleIcongeometryToFfiNullable(List<IconGeometry>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkVenueBindingslistofSdkVenueStyleIcongeometryToFfi(value);
  final result = _heresdkVenueBindingslistofSdkVenueStyleIcongeometryCreateHandleNullable(_handle);
  heresdkVenueBindingslistofSdkVenueStyleIcongeometryReleaseFfiHandle(_handle);
  return result;
}

List<IconGeometry>? heresdkVenueBindingslistofSdkVenueStyleIcongeometryFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkVenueBindingslistofSdkVenueStyleIcongeometryGetValueNullable(handle);
  final result = heresdkVenueBindingslistofSdkVenueStyleIcongeometryFromFfi(_handle);
  heresdkVenueBindingslistofSdkVenueStyleIcongeometryReleaseFfiHandle(_handle);
  return result;
}

void heresdkVenueBindingslistofSdkVenueStyleIcongeometryReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkVenueBindingslistofSdkVenueStyleIcongeometryReleaseHandleNullable(handle);

final _heresdkVenueBindingsmapofIntToSdkVenueControlVenueCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_venue_bindingsMapOf_Int_to_sdk_venue_control_Venue_create_handle'));
final _heresdkVenueBindingsmapofIntToSdkVenueControlVenueReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_bindingsMapOf_Int_to_sdk_venue_control_Venue_release_handle'));
final _heresdkVenueBindingsmapofIntToSdkVenueControlVenuePut = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Int32, Pointer<Void>),
    void Function(Pointer<Void>, int, Pointer<Void>)
  >('here_sdk_heresdk_venue_bindingsMapOf_Int_to_sdk_venue_control_Venue_put'));
final _heresdkVenueBindingsmapofIntToSdkVenueControlVenueIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_venue_bindingsMapOf_Int_to_sdk_venue_control_Venue_iterator'));
final _heresdkVenueBindingsmapofIntToSdkVenueControlVenueIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_venue_bindingsMapOf_Int_to_sdk_venue_control_Venue_iterator_release_handle'));
final _heresdkVenueBindingsmapofIntToSdkVenueControlVenueIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_venue_bindingsMapOf_Int_to_sdk_venue_control_Venue_iterator_is_valid'));
final _heresdkVenueBindingsmapofIntToSdkVenueControlVenueIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_venue_bindingsMapOf_Int_to_sdk_venue_control_Venue_iterator_increment'));
final _heresdkVenueBindingsmapofIntToSdkVenueControlVenueIteratorGetKey = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_venue_bindingsMapOf_Int_to_sdk_venue_control_Venue_iterator_get_key'));
final _heresdkVenueBindingsmapofIntToSdkVenueControlVenueIteratorGetValue = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_venue_bindingsMapOf_Int_to_sdk_venue_control_Venue_iterator_get_value'));

Pointer<Void> heresdkVenueBindingsmapofIntToSdkVenueControlVenueToFfi(Map<int, Venue> value) {
  final _result = _heresdkVenueBindingsmapofIntToSdkVenueControlVenueCreateHandle();
  for (final entry in value.entries) {
    final _keyHandle = (entry.key);
    final _valueHandle = sdkVenueControlVenueToFfi(entry.value);
    _heresdkVenueBindingsmapofIntToSdkVenueControlVenuePut(_result, _keyHandle, _valueHandle);
    
    sdkVenueControlVenueReleaseFfiHandle(_valueHandle);
  }
  return _result;
}

Map<int, Venue> heresdkVenueBindingsmapofIntToSdkVenueControlVenueFromFfi(Pointer<Void> handle) {
  final result = Map<int, Venue>();
  final _iteratorHandle = _heresdkVenueBindingsmapofIntToSdkVenueControlVenueIterator(handle);
  while (_heresdkVenueBindingsmapofIntToSdkVenueControlVenueIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _keyHandle = _heresdkVenueBindingsmapofIntToSdkVenueControlVenueIteratorGetKey(_iteratorHandle);
    final _valueHandle = _heresdkVenueBindingsmapofIntToSdkVenueControlVenueIteratorGetValue(_iteratorHandle);
    try {
      result[(_keyHandle)] =
        sdkVenueControlVenueFromFfi(_valueHandle);
    } finally {
      
      sdkVenueControlVenueReleaseFfiHandle(_valueHandle);
    }
    _heresdkVenueBindingsmapofIntToSdkVenueControlVenueIteratorIncrement(_iteratorHandle);
  }
  _heresdkVenueBindingsmapofIntToSdkVenueControlVenueIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkVenueBindingsmapofIntToSdkVenueControlVenueReleaseFfiHandle(Pointer<Void> handle) => _heresdkVenueBindingsmapofIntToSdkVenueControlVenueReleaseHandle(handle);

final _heresdkVenueBindingsmapofIntToSdkVenueControlVenueCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_bindingsMapOf_Int_to_sdk_venue_control_Venue_create_handle_nullable'));
final _heresdkVenueBindingsmapofIntToSdkVenueControlVenueReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_bindingsMapOf_Int_to_sdk_venue_control_Venue_release_handle_nullable'));
final _heresdkVenueBindingsmapofIntToSdkVenueControlVenueGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_bindingsMapOf_Int_to_sdk_venue_control_Venue_get_value_nullable'));

Pointer<Void> heresdkVenueBindingsmapofIntToSdkVenueControlVenueToFfiNullable(Map<int, Venue>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkVenueBindingsmapofIntToSdkVenueControlVenueToFfi(value);
  final result = _heresdkVenueBindingsmapofIntToSdkVenueControlVenueCreateHandleNullable(_handle);
  heresdkVenueBindingsmapofIntToSdkVenueControlVenueReleaseFfiHandle(_handle);
  return result;
}

Map<int, Venue>? heresdkVenueBindingsmapofIntToSdkVenueControlVenueFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkVenueBindingsmapofIntToSdkVenueControlVenueGetValueNullable(handle);
  final result = heresdkVenueBindingsmapofIntToSdkVenueControlVenueFromFfi(_handle);
  heresdkVenueBindingsmapofIntToSdkVenueControlVenueReleaseFfiHandle(_handle);
  return result;
}

void heresdkVenueBindingsmapofIntToSdkVenueControlVenueReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkVenueBindingsmapofIntToSdkVenueControlVenueReleaseHandleNullable(handle);

final _heresdkVenueBindingsmapofStringToHeresdkVenueBindingslistofStringCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_venue_bindingsMapOf_String_to_heresdk_venue_bindingsListOf_String_create_handle'));
final _heresdkVenueBindingsmapofStringToHeresdkVenueBindingslistofStringReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_bindingsMapOf_String_to_heresdk_venue_bindingsListOf_String_release_handle'));
final _heresdkVenueBindingsmapofStringToHeresdkVenueBindingslistofStringPut = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_venue_bindingsMapOf_String_to_heresdk_venue_bindingsListOf_String_put'));
final _heresdkVenueBindingsmapofStringToHeresdkVenueBindingslistofStringIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_venue_bindingsMapOf_String_to_heresdk_venue_bindingsListOf_String_iterator'));
final _heresdkVenueBindingsmapofStringToHeresdkVenueBindingslistofStringIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_venue_bindingsMapOf_String_to_heresdk_venue_bindingsListOf_String_iterator_release_handle'));
final _heresdkVenueBindingsmapofStringToHeresdkVenueBindingslistofStringIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_venue_bindingsMapOf_String_to_heresdk_venue_bindingsListOf_String_iterator_is_valid'));
final _heresdkVenueBindingsmapofStringToHeresdkVenueBindingslistofStringIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_venue_bindingsMapOf_String_to_heresdk_venue_bindingsListOf_String_iterator_increment'));
final _heresdkVenueBindingsmapofStringToHeresdkVenueBindingslistofStringIteratorGetKey = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_venue_bindingsMapOf_String_to_heresdk_venue_bindingsListOf_String_iterator_get_key'));
final _heresdkVenueBindingsmapofStringToHeresdkVenueBindingslistofStringIteratorGetValue = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_venue_bindingsMapOf_String_to_heresdk_venue_bindingsListOf_String_iterator_get_value'));

Pointer<Void> heresdkVenueBindingsmapofStringToHeresdkVenueBindingslistofStringToFfi(Map<String, List<String>> value) {
  final _result = _heresdkVenueBindingsmapofStringToHeresdkVenueBindingslistofStringCreateHandle();
  for (final entry in value.entries) {
    final _keyHandle = stringToFfi(entry.key);
    final _valueHandle = heresdkVenueBindingslistofStringToFfi(entry.value);
    _heresdkVenueBindingsmapofStringToHeresdkVenueBindingslistofStringPut(_result, _keyHandle, _valueHandle);
    stringReleaseFfiHandle(_keyHandle);
    heresdkVenueBindingslistofStringReleaseFfiHandle(_valueHandle);
  }
  return _result;
}

Map<String, List<String>> heresdkVenueBindingsmapofStringToHeresdkVenueBindingslistofStringFromFfi(Pointer<Void> handle) {
  final result = Map<String, List<String>>();
  final _iteratorHandle = _heresdkVenueBindingsmapofStringToHeresdkVenueBindingslistofStringIterator(handle);
  while (_heresdkVenueBindingsmapofStringToHeresdkVenueBindingslistofStringIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _keyHandle = _heresdkVenueBindingsmapofStringToHeresdkVenueBindingslistofStringIteratorGetKey(_iteratorHandle);
    final _valueHandle = _heresdkVenueBindingsmapofStringToHeresdkVenueBindingslistofStringIteratorGetValue(_iteratorHandle);
    try {
      result[stringFromFfi(_keyHandle)] =
        heresdkVenueBindingslistofStringFromFfi(_valueHandle);
    } finally {
      stringReleaseFfiHandle(_keyHandle);
      heresdkVenueBindingslistofStringReleaseFfiHandle(_valueHandle);
    }
    _heresdkVenueBindingsmapofStringToHeresdkVenueBindingslistofStringIteratorIncrement(_iteratorHandle);
  }
  _heresdkVenueBindingsmapofStringToHeresdkVenueBindingslistofStringIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkVenueBindingsmapofStringToHeresdkVenueBindingslistofStringReleaseFfiHandle(Pointer<Void> handle) => _heresdkVenueBindingsmapofStringToHeresdkVenueBindingslistofStringReleaseHandle(handle);

final _heresdkVenueBindingsmapofStringToHeresdkVenueBindingslistofStringCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_bindingsMapOf_String_to_heresdk_venue_bindingsListOf_String_create_handle_nullable'));
final _heresdkVenueBindingsmapofStringToHeresdkVenueBindingslistofStringReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_bindingsMapOf_String_to_heresdk_venue_bindingsListOf_String_release_handle_nullable'));
final _heresdkVenueBindingsmapofStringToHeresdkVenueBindingslistofStringGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_bindingsMapOf_String_to_heresdk_venue_bindingsListOf_String_get_value_nullable'));

Pointer<Void> heresdkVenueBindingsmapofStringToHeresdkVenueBindingslistofStringToFfiNullable(Map<String, List<String>>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkVenueBindingsmapofStringToHeresdkVenueBindingslistofStringToFfi(value);
  final result = _heresdkVenueBindingsmapofStringToHeresdkVenueBindingslistofStringCreateHandleNullable(_handle);
  heresdkVenueBindingsmapofStringToHeresdkVenueBindingslistofStringReleaseFfiHandle(_handle);
  return result;
}

Map<String, List<String>>? heresdkVenueBindingsmapofStringToHeresdkVenueBindingslistofStringFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkVenueBindingsmapofStringToHeresdkVenueBindingslistofStringGetValueNullable(handle);
  final result = heresdkVenueBindingsmapofStringToHeresdkVenueBindingslistofStringFromFfi(_handle);
  heresdkVenueBindingsmapofStringToHeresdkVenueBindingslistofStringReleaseFfiHandle(_handle);
  return result;
}

void heresdkVenueBindingsmapofStringToHeresdkVenueBindingslistofStringReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkVenueBindingsmapofStringToHeresdkVenueBindingslistofStringReleaseHandleNullable(handle);

final _heresdkVenueBindingsmapofStringToHeresdkVenueBindingslistofSdkVenueDataVenuegeometryCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_venue_bindingsMapOf_String_to_heresdk_venue_bindingsListOf_sdk_venue_data_VenueGeometry_create_handle'));
final _heresdkVenueBindingsmapofStringToHeresdkVenueBindingslistofSdkVenueDataVenuegeometryReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_bindingsMapOf_String_to_heresdk_venue_bindingsListOf_sdk_venue_data_VenueGeometry_release_handle'));
final _heresdkVenueBindingsmapofStringToHeresdkVenueBindingslistofSdkVenueDataVenuegeometryPut = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_venue_bindingsMapOf_String_to_heresdk_venue_bindingsListOf_sdk_venue_data_VenueGeometry_put'));
final _heresdkVenueBindingsmapofStringToHeresdkVenueBindingslistofSdkVenueDataVenuegeometryIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_venue_bindingsMapOf_String_to_heresdk_venue_bindingsListOf_sdk_venue_data_VenueGeometry_iterator'));
final _heresdkVenueBindingsmapofStringToHeresdkVenueBindingslistofSdkVenueDataVenuegeometryIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_venue_bindingsMapOf_String_to_heresdk_venue_bindingsListOf_sdk_venue_data_VenueGeometry_iterator_release_handle'));
final _heresdkVenueBindingsmapofStringToHeresdkVenueBindingslistofSdkVenueDataVenuegeometryIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_venue_bindingsMapOf_String_to_heresdk_venue_bindingsListOf_sdk_venue_data_VenueGeometry_iterator_is_valid'));
final _heresdkVenueBindingsmapofStringToHeresdkVenueBindingslistofSdkVenueDataVenuegeometryIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_venue_bindingsMapOf_String_to_heresdk_venue_bindingsListOf_sdk_venue_data_VenueGeometry_iterator_increment'));
final _heresdkVenueBindingsmapofStringToHeresdkVenueBindingslistofSdkVenueDataVenuegeometryIteratorGetKey = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_venue_bindingsMapOf_String_to_heresdk_venue_bindingsListOf_sdk_venue_data_VenueGeometry_iterator_get_key'));
final _heresdkVenueBindingsmapofStringToHeresdkVenueBindingslistofSdkVenueDataVenuegeometryIteratorGetValue = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_venue_bindingsMapOf_String_to_heresdk_venue_bindingsListOf_sdk_venue_data_VenueGeometry_iterator_get_value'));

Pointer<Void> heresdkVenueBindingsmapofStringToHeresdkVenueBindingslistofSdkVenueDataVenuegeometryToFfi(Map<String, List<VenueGeometry>> value) {
  final _result = _heresdkVenueBindingsmapofStringToHeresdkVenueBindingslistofSdkVenueDataVenuegeometryCreateHandle();
  for (final entry in value.entries) {
    final _keyHandle = stringToFfi(entry.key);
    final _valueHandle = heresdkVenueBindingslistofSdkVenueDataVenuegeometryToFfi(entry.value);
    _heresdkVenueBindingsmapofStringToHeresdkVenueBindingslistofSdkVenueDataVenuegeometryPut(_result, _keyHandle, _valueHandle);
    stringReleaseFfiHandle(_keyHandle);
    heresdkVenueBindingslistofSdkVenueDataVenuegeometryReleaseFfiHandle(_valueHandle);
  }
  return _result;
}

Map<String, List<VenueGeometry>> heresdkVenueBindingsmapofStringToHeresdkVenueBindingslistofSdkVenueDataVenuegeometryFromFfi(Pointer<Void> handle) {
  final result = Map<String, List<VenueGeometry>>();
  final _iteratorHandle = _heresdkVenueBindingsmapofStringToHeresdkVenueBindingslistofSdkVenueDataVenuegeometryIterator(handle);
  while (_heresdkVenueBindingsmapofStringToHeresdkVenueBindingslistofSdkVenueDataVenuegeometryIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _keyHandle = _heresdkVenueBindingsmapofStringToHeresdkVenueBindingslistofSdkVenueDataVenuegeometryIteratorGetKey(_iteratorHandle);
    final _valueHandle = _heresdkVenueBindingsmapofStringToHeresdkVenueBindingslistofSdkVenueDataVenuegeometryIteratorGetValue(_iteratorHandle);
    try {
      result[stringFromFfi(_keyHandle)] =
        heresdkVenueBindingslistofSdkVenueDataVenuegeometryFromFfi(_valueHandle);
    } finally {
      stringReleaseFfiHandle(_keyHandle);
      heresdkVenueBindingslistofSdkVenueDataVenuegeometryReleaseFfiHandle(_valueHandle);
    }
    _heresdkVenueBindingsmapofStringToHeresdkVenueBindingslistofSdkVenueDataVenuegeometryIteratorIncrement(_iteratorHandle);
  }
  _heresdkVenueBindingsmapofStringToHeresdkVenueBindingslistofSdkVenueDataVenuegeometryIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkVenueBindingsmapofStringToHeresdkVenueBindingslistofSdkVenueDataVenuegeometryReleaseFfiHandle(Pointer<Void> handle) => _heresdkVenueBindingsmapofStringToHeresdkVenueBindingslistofSdkVenueDataVenuegeometryReleaseHandle(handle);

final _heresdkVenueBindingsmapofStringToHeresdkVenueBindingslistofSdkVenueDataVenuegeometryCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_bindingsMapOf_String_to_heresdk_venue_bindingsListOf_sdk_venue_data_VenueGeometry_create_handle_nullable'));
final _heresdkVenueBindingsmapofStringToHeresdkVenueBindingslistofSdkVenueDataVenuegeometryReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_bindingsMapOf_String_to_heresdk_venue_bindingsListOf_sdk_venue_data_VenueGeometry_release_handle_nullable'));
final _heresdkVenueBindingsmapofStringToHeresdkVenueBindingslistofSdkVenueDataVenuegeometryGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_bindingsMapOf_String_to_heresdk_venue_bindingsListOf_sdk_venue_data_VenueGeometry_get_value_nullable'));

Pointer<Void> heresdkVenueBindingsmapofStringToHeresdkVenueBindingslistofSdkVenueDataVenuegeometryToFfiNullable(Map<String, List<VenueGeometry>>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkVenueBindingsmapofStringToHeresdkVenueBindingslistofSdkVenueDataVenuegeometryToFfi(value);
  final result = _heresdkVenueBindingsmapofStringToHeresdkVenueBindingslistofSdkVenueDataVenuegeometryCreateHandleNullable(_handle);
  heresdkVenueBindingsmapofStringToHeresdkVenueBindingslistofSdkVenueDataVenuegeometryReleaseFfiHandle(_handle);
  return result;
}

Map<String, List<VenueGeometry>>? heresdkVenueBindingsmapofStringToHeresdkVenueBindingslistofSdkVenueDataVenuegeometryFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkVenueBindingsmapofStringToHeresdkVenueBindingslistofSdkVenueDataVenuegeometryGetValueNullable(handle);
  final result = heresdkVenueBindingsmapofStringToHeresdkVenueBindingslistofSdkVenueDataVenuegeometryFromFfi(_handle);
  heresdkVenueBindingsmapofStringToHeresdkVenueBindingslistofSdkVenueDataVenuegeometryReleaseFfiHandle(_handle);
  return result;
}

void heresdkVenueBindingsmapofStringToHeresdkVenueBindingslistofSdkVenueDataVenuegeometryReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkVenueBindingsmapofStringToHeresdkVenueBindingslistofSdkVenueDataVenuegeometryReleaseHandleNullable(handle);

final _heresdkVenueBindingsmapofStringToSdkVenueDataPropertyCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_venue_bindingsMapOf_String_to_sdk_venue_data_Property_create_handle'));
final _heresdkVenueBindingsmapofStringToSdkVenueDataPropertyReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_bindingsMapOf_String_to_sdk_venue_data_Property_release_handle'));
final _heresdkVenueBindingsmapofStringToSdkVenueDataPropertyPut = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_venue_bindingsMapOf_String_to_sdk_venue_data_Property_put'));
final _heresdkVenueBindingsmapofStringToSdkVenueDataPropertyIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_venue_bindingsMapOf_String_to_sdk_venue_data_Property_iterator'));
final _heresdkVenueBindingsmapofStringToSdkVenueDataPropertyIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_venue_bindingsMapOf_String_to_sdk_venue_data_Property_iterator_release_handle'));
final _heresdkVenueBindingsmapofStringToSdkVenueDataPropertyIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_venue_bindingsMapOf_String_to_sdk_venue_data_Property_iterator_is_valid'));
final _heresdkVenueBindingsmapofStringToSdkVenueDataPropertyIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_venue_bindingsMapOf_String_to_sdk_venue_data_Property_iterator_increment'));
final _heresdkVenueBindingsmapofStringToSdkVenueDataPropertyIteratorGetKey = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_venue_bindingsMapOf_String_to_sdk_venue_data_Property_iterator_get_key'));
final _heresdkVenueBindingsmapofStringToSdkVenueDataPropertyIteratorGetValue = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_venue_bindingsMapOf_String_to_sdk_venue_data_Property_iterator_get_value'));

Pointer<Void> heresdkVenueBindingsmapofStringToSdkVenueDataPropertyToFfi(Map<String, Property> value) {
  final _result = _heresdkVenueBindingsmapofStringToSdkVenueDataPropertyCreateHandle();
  for (final entry in value.entries) {
    final _keyHandle = stringToFfi(entry.key);
    final _valueHandle = sdkVenueDataPropertyToFfi(entry.value);
    _heresdkVenueBindingsmapofStringToSdkVenueDataPropertyPut(_result, _keyHandle, _valueHandle);
    stringReleaseFfiHandle(_keyHandle);
    sdkVenueDataPropertyReleaseFfiHandle(_valueHandle);
  }
  return _result;
}

Map<String, Property> heresdkVenueBindingsmapofStringToSdkVenueDataPropertyFromFfi(Pointer<Void> handle) {
  final result = Map<String, Property>();
  final _iteratorHandle = _heresdkVenueBindingsmapofStringToSdkVenueDataPropertyIterator(handle);
  while (_heresdkVenueBindingsmapofStringToSdkVenueDataPropertyIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _keyHandle = _heresdkVenueBindingsmapofStringToSdkVenueDataPropertyIteratorGetKey(_iteratorHandle);
    final _valueHandle = _heresdkVenueBindingsmapofStringToSdkVenueDataPropertyIteratorGetValue(_iteratorHandle);
    try {
      result[stringFromFfi(_keyHandle)] =
        sdkVenueDataPropertyFromFfi(_valueHandle);
    } finally {
      stringReleaseFfiHandle(_keyHandle);
      sdkVenueDataPropertyReleaseFfiHandle(_valueHandle);
    }
    _heresdkVenueBindingsmapofStringToSdkVenueDataPropertyIteratorIncrement(_iteratorHandle);
  }
  _heresdkVenueBindingsmapofStringToSdkVenueDataPropertyIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkVenueBindingsmapofStringToSdkVenueDataPropertyReleaseFfiHandle(Pointer<Void> handle) => _heresdkVenueBindingsmapofStringToSdkVenueDataPropertyReleaseHandle(handle);

final _heresdkVenueBindingsmapofStringToSdkVenueDataPropertyCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_bindingsMapOf_String_to_sdk_venue_data_Property_create_handle_nullable'));
final _heresdkVenueBindingsmapofStringToSdkVenueDataPropertyReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_bindingsMapOf_String_to_sdk_venue_data_Property_release_handle_nullable'));
final _heresdkVenueBindingsmapofStringToSdkVenueDataPropertyGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_bindingsMapOf_String_to_sdk_venue_data_Property_get_value_nullable'));

Pointer<Void> heresdkVenueBindingsmapofStringToSdkVenueDataPropertyToFfiNullable(Map<String, Property>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkVenueBindingsmapofStringToSdkVenueDataPropertyToFfi(value);
  final result = _heresdkVenueBindingsmapofStringToSdkVenueDataPropertyCreateHandleNullable(_handle);
  heresdkVenueBindingsmapofStringToSdkVenueDataPropertyReleaseFfiHandle(_handle);
  return result;
}

Map<String, Property>? heresdkVenueBindingsmapofStringToSdkVenueDataPropertyFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkVenueBindingsmapofStringToSdkVenueDataPropertyGetValueNullable(handle);
  final result = heresdkVenueBindingsmapofStringToSdkVenueDataPropertyFromFfi(_handle);
  heresdkVenueBindingsmapofStringToSdkVenueDataPropertyReleaseFfiHandle(_handle);
  return result;
}

void heresdkVenueBindingsmapofStringToSdkVenueDataPropertyReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkVenueBindingsmapofStringToSdkVenueDataPropertyReleaseHandleNullable(handle);

final _heresdkVenueBindingsmapofStringToSdkVenueStyleIconinfoCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_venue_bindingsMapOf_String_to_sdk_venue_style_IconInfo_create_handle'));
final _heresdkVenueBindingsmapofStringToSdkVenueStyleIconinfoReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_bindingsMapOf_String_to_sdk_venue_style_IconInfo_release_handle'));
final _heresdkVenueBindingsmapofStringToSdkVenueStyleIconinfoPut = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_venue_bindingsMapOf_String_to_sdk_venue_style_IconInfo_put'));
final _heresdkVenueBindingsmapofStringToSdkVenueStyleIconinfoIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_venue_bindingsMapOf_String_to_sdk_venue_style_IconInfo_iterator'));
final _heresdkVenueBindingsmapofStringToSdkVenueStyleIconinfoIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_venue_bindingsMapOf_String_to_sdk_venue_style_IconInfo_iterator_release_handle'));
final _heresdkVenueBindingsmapofStringToSdkVenueStyleIconinfoIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_venue_bindingsMapOf_String_to_sdk_venue_style_IconInfo_iterator_is_valid'));
final _heresdkVenueBindingsmapofStringToSdkVenueStyleIconinfoIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_venue_bindingsMapOf_String_to_sdk_venue_style_IconInfo_iterator_increment'));
final _heresdkVenueBindingsmapofStringToSdkVenueStyleIconinfoIteratorGetKey = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_venue_bindingsMapOf_String_to_sdk_venue_style_IconInfo_iterator_get_key'));
final _heresdkVenueBindingsmapofStringToSdkVenueStyleIconinfoIteratorGetValue = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_venue_bindingsMapOf_String_to_sdk_venue_style_IconInfo_iterator_get_value'));

Pointer<Void> heresdkVenueBindingsmapofStringToSdkVenueStyleIconinfoToFfi(Map<String, IconInfo> value) {
  final _result = _heresdkVenueBindingsmapofStringToSdkVenueStyleIconinfoCreateHandle();
  for (final entry in value.entries) {
    final _keyHandle = stringToFfi(entry.key);
    final _valueHandle = sdkVenueStyleIconinfoToFfi(entry.value);
    _heresdkVenueBindingsmapofStringToSdkVenueStyleIconinfoPut(_result, _keyHandle, _valueHandle);
    stringReleaseFfiHandle(_keyHandle);
    sdkVenueStyleIconinfoReleaseFfiHandle(_valueHandle);
  }
  return _result;
}

Map<String, IconInfo> heresdkVenueBindingsmapofStringToSdkVenueStyleIconinfoFromFfi(Pointer<Void> handle) {
  final result = Map<String, IconInfo>();
  final _iteratorHandle = _heresdkVenueBindingsmapofStringToSdkVenueStyleIconinfoIterator(handle);
  while (_heresdkVenueBindingsmapofStringToSdkVenueStyleIconinfoIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _keyHandle = _heresdkVenueBindingsmapofStringToSdkVenueStyleIconinfoIteratorGetKey(_iteratorHandle);
    final _valueHandle = _heresdkVenueBindingsmapofStringToSdkVenueStyleIconinfoIteratorGetValue(_iteratorHandle);
    try {
      result[stringFromFfi(_keyHandle)] =
        sdkVenueStyleIconinfoFromFfi(_valueHandle);
    } finally {
      stringReleaseFfiHandle(_keyHandle);
      sdkVenueStyleIconinfoReleaseFfiHandle(_valueHandle);
    }
    _heresdkVenueBindingsmapofStringToSdkVenueStyleIconinfoIteratorIncrement(_iteratorHandle);
  }
  _heresdkVenueBindingsmapofStringToSdkVenueStyleIconinfoIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkVenueBindingsmapofStringToSdkVenueStyleIconinfoReleaseFfiHandle(Pointer<Void> handle) => _heresdkVenueBindingsmapofStringToSdkVenueStyleIconinfoReleaseHandle(handle);

final _heresdkVenueBindingsmapofStringToSdkVenueStyleIconinfoCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_bindingsMapOf_String_to_sdk_venue_style_IconInfo_create_handle_nullable'));
final _heresdkVenueBindingsmapofStringToSdkVenueStyleIconinfoReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_bindingsMapOf_String_to_sdk_venue_style_IconInfo_release_handle_nullable'));
final _heresdkVenueBindingsmapofStringToSdkVenueStyleIconinfoGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_bindingsMapOf_String_to_sdk_venue_style_IconInfo_get_value_nullable'));

Pointer<Void> heresdkVenueBindingsmapofStringToSdkVenueStyleIconinfoToFfiNullable(Map<String, IconInfo>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkVenueBindingsmapofStringToSdkVenueStyleIconinfoToFfi(value);
  final result = _heresdkVenueBindingsmapofStringToSdkVenueStyleIconinfoCreateHandleNullable(_handle);
  heresdkVenueBindingsmapofStringToSdkVenueStyleIconinfoReleaseFfiHandle(_handle);
  return result;
}

Map<String, IconInfo>? heresdkVenueBindingsmapofStringToSdkVenueStyleIconinfoFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkVenueBindingsmapofStringToSdkVenueStyleIconinfoGetValueNullable(handle);
  final result = heresdkVenueBindingsmapofStringToSdkVenueStyleIconinfoFromFfi(_handle);
  heresdkVenueBindingsmapofStringToSdkVenueStyleIconinfoReleaseFfiHandle(_handle);
  return result;
}

void heresdkVenueBindingsmapofStringToSdkVenueStyleIconinfoReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkVenueBindingsmapofStringToSdkVenueStyleIconinfoReleaseHandleNullable(handle);

final _heresdkVenueBindingsmapofStringToSdkVenueStyleVenuegeometrystyleCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_venue_bindingsMapOf_String_to_sdk_venue_style_VenueGeometryStyle_create_handle'));
final _heresdkVenueBindingsmapofStringToSdkVenueStyleVenuegeometrystyleReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_bindingsMapOf_String_to_sdk_venue_style_VenueGeometryStyle_release_handle'));
final _heresdkVenueBindingsmapofStringToSdkVenueStyleVenuegeometrystylePut = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_venue_bindingsMapOf_String_to_sdk_venue_style_VenueGeometryStyle_put'));
final _heresdkVenueBindingsmapofStringToSdkVenueStyleVenuegeometrystyleIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_venue_bindingsMapOf_String_to_sdk_venue_style_VenueGeometryStyle_iterator'));
final _heresdkVenueBindingsmapofStringToSdkVenueStyleVenuegeometrystyleIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_venue_bindingsMapOf_String_to_sdk_venue_style_VenueGeometryStyle_iterator_release_handle'));
final _heresdkVenueBindingsmapofStringToSdkVenueStyleVenuegeometrystyleIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_venue_bindingsMapOf_String_to_sdk_venue_style_VenueGeometryStyle_iterator_is_valid'));
final _heresdkVenueBindingsmapofStringToSdkVenueStyleVenuegeometrystyleIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_venue_bindingsMapOf_String_to_sdk_venue_style_VenueGeometryStyle_iterator_increment'));
final _heresdkVenueBindingsmapofStringToSdkVenueStyleVenuegeometrystyleIteratorGetKey = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_venue_bindingsMapOf_String_to_sdk_venue_style_VenueGeometryStyle_iterator_get_key'));
final _heresdkVenueBindingsmapofStringToSdkVenueStyleVenuegeometrystyleIteratorGetValue = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_venue_bindingsMapOf_String_to_sdk_venue_style_VenueGeometryStyle_iterator_get_value'));

Pointer<Void> heresdkVenueBindingsmapofStringToSdkVenueStyleVenuegeometrystyleToFfi(Map<String, VenueGeometryStyle> value) {
  final _result = _heresdkVenueBindingsmapofStringToSdkVenueStyleVenuegeometrystyleCreateHandle();
  for (final entry in value.entries) {
    final _keyHandle = stringToFfi(entry.key);
    final _valueHandle = sdkVenueStyleVenuegeometrystyleToFfi(entry.value);
    _heresdkVenueBindingsmapofStringToSdkVenueStyleVenuegeometrystylePut(_result, _keyHandle, _valueHandle);
    stringReleaseFfiHandle(_keyHandle);
    sdkVenueStyleVenuegeometrystyleReleaseFfiHandle(_valueHandle);
  }
  return _result;
}

Map<String, VenueGeometryStyle> heresdkVenueBindingsmapofStringToSdkVenueStyleVenuegeometrystyleFromFfi(Pointer<Void> handle) {
  final result = Map<String, VenueGeometryStyle>();
  final _iteratorHandle = _heresdkVenueBindingsmapofStringToSdkVenueStyleVenuegeometrystyleIterator(handle);
  while (_heresdkVenueBindingsmapofStringToSdkVenueStyleVenuegeometrystyleIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _keyHandle = _heresdkVenueBindingsmapofStringToSdkVenueStyleVenuegeometrystyleIteratorGetKey(_iteratorHandle);
    final _valueHandle = _heresdkVenueBindingsmapofStringToSdkVenueStyleVenuegeometrystyleIteratorGetValue(_iteratorHandle);
    try {
      result[stringFromFfi(_keyHandle)] =
        sdkVenueStyleVenuegeometrystyleFromFfi(_valueHandle);
    } finally {
      stringReleaseFfiHandle(_keyHandle);
      sdkVenueStyleVenuegeometrystyleReleaseFfiHandle(_valueHandle);
    }
    _heresdkVenueBindingsmapofStringToSdkVenueStyleVenuegeometrystyleIteratorIncrement(_iteratorHandle);
  }
  _heresdkVenueBindingsmapofStringToSdkVenueStyleVenuegeometrystyleIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkVenueBindingsmapofStringToSdkVenueStyleVenuegeometrystyleReleaseFfiHandle(Pointer<Void> handle) => _heresdkVenueBindingsmapofStringToSdkVenueStyleVenuegeometrystyleReleaseHandle(handle);

final _heresdkVenueBindingsmapofStringToSdkVenueStyleVenuegeometrystyleCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_bindingsMapOf_String_to_sdk_venue_style_VenueGeometryStyle_create_handle_nullable'));
final _heresdkVenueBindingsmapofStringToSdkVenueStyleVenuegeometrystyleReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_bindingsMapOf_String_to_sdk_venue_style_VenueGeometryStyle_release_handle_nullable'));
final _heresdkVenueBindingsmapofStringToSdkVenueStyleVenuegeometrystyleGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_bindingsMapOf_String_to_sdk_venue_style_VenueGeometryStyle_get_value_nullable'));

Pointer<Void> heresdkVenueBindingsmapofStringToSdkVenueStyleVenuegeometrystyleToFfiNullable(Map<String, VenueGeometryStyle>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkVenueBindingsmapofStringToSdkVenueStyleVenuegeometrystyleToFfi(value);
  final result = _heresdkVenueBindingsmapofStringToSdkVenueStyleVenuegeometrystyleCreateHandleNullable(_handle);
  heresdkVenueBindingsmapofStringToSdkVenueStyleVenuegeometrystyleReleaseFfiHandle(_handle);
  return result;
}

Map<String, VenueGeometryStyle>? heresdkVenueBindingsmapofStringToSdkVenueStyleVenuegeometrystyleFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkVenueBindingsmapofStringToSdkVenueStyleVenuegeometrystyleGetValueNullable(handle);
  final result = heresdkVenueBindingsmapofStringToSdkVenueStyleVenuegeometrystyleFromFfi(_handle);
  heresdkVenueBindingsmapofStringToSdkVenueStyleVenuegeometrystyleReleaseFfiHandle(_handle);
  return result;
}

void heresdkVenueBindingsmapofStringToSdkVenueStyleVenuegeometrystyleReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkVenueBindingsmapofStringToSdkVenueStyleVenuegeometrystyleReleaseHandleNullable(handle);

final _heresdkVenueBindingsmapofStringToSdkVenueStyleVenuelabelstyleCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_venue_bindingsMapOf_String_to_sdk_venue_style_VenueLabelStyle_create_handle'));
final _heresdkVenueBindingsmapofStringToSdkVenueStyleVenuelabelstyleReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_bindingsMapOf_String_to_sdk_venue_style_VenueLabelStyle_release_handle'));
final _heresdkVenueBindingsmapofStringToSdkVenueStyleVenuelabelstylePut = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_venue_bindingsMapOf_String_to_sdk_venue_style_VenueLabelStyle_put'));
final _heresdkVenueBindingsmapofStringToSdkVenueStyleVenuelabelstyleIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_venue_bindingsMapOf_String_to_sdk_venue_style_VenueLabelStyle_iterator'));
final _heresdkVenueBindingsmapofStringToSdkVenueStyleVenuelabelstyleIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_venue_bindingsMapOf_String_to_sdk_venue_style_VenueLabelStyle_iterator_release_handle'));
final _heresdkVenueBindingsmapofStringToSdkVenueStyleVenuelabelstyleIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_venue_bindingsMapOf_String_to_sdk_venue_style_VenueLabelStyle_iterator_is_valid'));
final _heresdkVenueBindingsmapofStringToSdkVenueStyleVenuelabelstyleIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_venue_bindingsMapOf_String_to_sdk_venue_style_VenueLabelStyle_iterator_increment'));
final _heresdkVenueBindingsmapofStringToSdkVenueStyleVenuelabelstyleIteratorGetKey = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_venue_bindingsMapOf_String_to_sdk_venue_style_VenueLabelStyle_iterator_get_key'));
final _heresdkVenueBindingsmapofStringToSdkVenueStyleVenuelabelstyleIteratorGetValue = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_venue_bindingsMapOf_String_to_sdk_venue_style_VenueLabelStyle_iterator_get_value'));

Pointer<Void> heresdkVenueBindingsmapofStringToSdkVenueStyleVenuelabelstyleToFfi(Map<String, VenueLabelStyle> value) {
  final _result = _heresdkVenueBindingsmapofStringToSdkVenueStyleVenuelabelstyleCreateHandle();
  for (final entry in value.entries) {
    final _keyHandle = stringToFfi(entry.key);
    final _valueHandle = sdkVenueStyleVenuelabelstyleToFfi(entry.value);
    _heresdkVenueBindingsmapofStringToSdkVenueStyleVenuelabelstylePut(_result, _keyHandle, _valueHandle);
    stringReleaseFfiHandle(_keyHandle);
    sdkVenueStyleVenuelabelstyleReleaseFfiHandle(_valueHandle);
  }
  return _result;
}

Map<String, VenueLabelStyle> heresdkVenueBindingsmapofStringToSdkVenueStyleVenuelabelstyleFromFfi(Pointer<Void> handle) {
  final result = Map<String, VenueLabelStyle>();
  final _iteratorHandle = _heresdkVenueBindingsmapofStringToSdkVenueStyleVenuelabelstyleIterator(handle);
  while (_heresdkVenueBindingsmapofStringToSdkVenueStyleVenuelabelstyleIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _keyHandle = _heresdkVenueBindingsmapofStringToSdkVenueStyleVenuelabelstyleIteratorGetKey(_iteratorHandle);
    final _valueHandle = _heresdkVenueBindingsmapofStringToSdkVenueStyleVenuelabelstyleIteratorGetValue(_iteratorHandle);
    try {
      result[stringFromFfi(_keyHandle)] =
        sdkVenueStyleVenuelabelstyleFromFfi(_valueHandle);
    } finally {
      stringReleaseFfiHandle(_keyHandle);
      sdkVenueStyleVenuelabelstyleReleaseFfiHandle(_valueHandle);
    }
    _heresdkVenueBindingsmapofStringToSdkVenueStyleVenuelabelstyleIteratorIncrement(_iteratorHandle);
  }
  _heresdkVenueBindingsmapofStringToSdkVenueStyleVenuelabelstyleIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkVenueBindingsmapofStringToSdkVenueStyleVenuelabelstyleReleaseFfiHandle(Pointer<Void> handle) => _heresdkVenueBindingsmapofStringToSdkVenueStyleVenuelabelstyleReleaseHandle(handle);

final _heresdkVenueBindingsmapofStringToSdkVenueStyleVenuelabelstyleCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_bindingsMapOf_String_to_sdk_venue_style_VenueLabelStyle_create_handle_nullable'));
final _heresdkVenueBindingsmapofStringToSdkVenueStyleVenuelabelstyleReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_bindingsMapOf_String_to_sdk_venue_style_VenueLabelStyle_release_handle_nullable'));
final _heresdkVenueBindingsmapofStringToSdkVenueStyleVenuelabelstyleGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_bindingsMapOf_String_to_sdk_venue_style_VenueLabelStyle_get_value_nullable'));

Pointer<Void> heresdkVenueBindingsmapofStringToSdkVenueStyleVenuelabelstyleToFfiNullable(Map<String, VenueLabelStyle>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkVenueBindingsmapofStringToSdkVenueStyleVenuelabelstyleToFfi(value);
  final result = _heresdkVenueBindingsmapofStringToSdkVenueStyleVenuelabelstyleCreateHandleNullable(_handle);
  heresdkVenueBindingsmapofStringToSdkVenueStyleVenuelabelstyleReleaseFfiHandle(_handle);
  return result;
}

Map<String, VenueLabelStyle>? heresdkVenueBindingsmapofStringToSdkVenueStyleVenuelabelstyleFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkVenueBindingsmapofStringToSdkVenueStyleVenuelabelstyleGetValueNullable(handle);
  final result = heresdkVenueBindingsmapofStringToSdkVenueStyleVenuelabelstyleFromFfi(_handle);
  heresdkVenueBindingsmapofStringToSdkVenueStyleVenuelabelstyleReleaseFfiHandle(_handle);
  return result;
}

void heresdkVenueBindingsmapofStringToSdkVenueStyleVenuelabelstyleReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkVenueBindingsmapofStringToSdkVenueStyleVenuelabelstyleReleaseHandleNullable(handle);

final _heresdkVenueBindingssetofIntCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_venue_bindingsSetOf_Int_create_handle'));
final _heresdkVenueBindingssetofIntReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_bindingsSetOf_Int_release_handle'));
final _heresdkVenueBindingssetofIntInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Int32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_venue_bindingsSetOf_Int_insert'));
final _heresdkVenueBindingssetofIntIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_venue_bindingsSetOf_Int_iterator'));
final _heresdkVenueBindingssetofIntIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_venue_bindingsSetOf_Int_iterator_release_handle'));
final _heresdkVenueBindingssetofIntIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_venue_bindingsSetOf_Int_iterator_is_valid'));
final _heresdkVenueBindingssetofIntIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_venue_bindingsSetOf_Int_iterator_increment'));
final _heresdkVenueBindingssetofIntIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_venue_bindingsSetOf_Int_iterator_get'));

Pointer<Void> heresdkVenueBindingssetofIntToFfi(Set<int> value) {
  final _result = _heresdkVenueBindingssetofIntCreateHandle();
  for (final element in value) {
    final _elementHandle = (element);
    _heresdkVenueBindingssetofIntInsert(_result, _elementHandle);
    
  }
  return _result;
}

Set<int> heresdkVenueBindingssetofIntFromFfi(Pointer<Void> handle) {
  final result = Set<int>();
  final _iteratorHandle = _heresdkVenueBindingssetofIntIterator(handle);
  while (_heresdkVenueBindingssetofIntIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkVenueBindingssetofIntIteratorGet(_iteratorHandle);
    try {
      result.add((_elementHandle));
    } finally {
      
    }
    _heresdkVenueBindingssetofIntIteratorIncrement(_iteratorHandle);
  }
  _heresdkVenueBindingssetofIntIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkVenueBindingssetofIntReleaseFfiHandle(Pointer<Void> handle) => _heresdkVenueBindingssetofIntReleaseHandle(handle);

final _heresdkVenueBindingssetofIntCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_bindingsSetOf_Int_create_handle_nullable'));
final _heresdkVenueBindingssetofIntReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_bindingsSetOf_Int_release_handle_nullable'));
final _heresdkVenueBindingssetofIntGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_bindingsSetOf_Int_get_value_nullable'));

Pointer<Void> heresdkVenueBindingssetofIntToFfiNullable(Set<int>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkVenueBindingssetofIntToFfi(value);
  final result = _heresdkVenueBindingssetofIntCreateHandleNullable(_handle);
  heresdkVenueBindingssetofIntReleaseFfiHandle(_handle);
  return result;
}

Set<int>? heresdkVenueBindingssetofIntFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkVenueBindingssetofIntGetValueNullable(handle);
  final result = heresdkVenueBindingssetofIntFromFfi(_handle);
  heresdkVenueBindingssetofIntReleaseFfiHandle(_handle);
  return result;
}

void heresdkVenueBindingssetofIntReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkVenueBindingssetofIntReleaseHandleNullable(handle);


// Copyright (c) 2018-2022 HERE Global B.V. and its affiliate(s).
// All rights reserved.
//
// This software and other materials contain proprietary information
// controlled by HERE and are protected by applicable copyright legislation.
// Any use and utilization of this software and other materials and
// disclosure to any third parties is conditional upon having a separate
// agreement with HERE for the access, use, utilization or disclosure of this
// software. In the absence of such agreement, the use of the software is not
// allowed.
//



































final _heresdkVenueMapviewBindingslistofDoubleCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_Double_create_handle'));
final _heresdkVenueMapviewBindingslistofDoubleReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_Double_release_handle'));
final _heresdkVenueMapviewBindingslistofDoubleInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Double),
    void Function(Pointer<Void>, double)
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_Double_insert'));
final _heresdkVenueMapviewBindingslistofDoubleIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsListOf_Double_iterator'));
final _heresdkVenueMapviewBindingslistofDoubleIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsListOf_Double_iterator_release_handle'));
final _heresdkVenueMapviewBindingslistofDoubleIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsListOf_Double_iterator_is_valid'));
final _heresdkVenueMapviewBindingslistofDoubleIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsListOf_Double_iterator_increment'));
final _heresdkVenueMapviewBindingslistofDoubleIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Double Function(Pointer<Void>),
    double Function(Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsListOf_Double_iterator_get'));

Pointer<Void> heresdkVenueMapviewBindingslistofDoubleToFfi(List<double> value) {
  final _result = _heresdkVenueMapviewBindingslistofDoubleCreateHandle();
  for (final element in value) {
    final _elementHandle = (element);
    _heresdkVenueMapviewBindingslistofDoubleInsert(_result, _elementHandle);
    
  }
  return _result;
}

List<double> heresdkVenueMapviewBindingslistofDoubleFromFfi(Pointer<Void> handle) {
  final result = List<double>.empty(growable: true);
  final _iteratorHandle = _heresdkVenueMapviewBindingslistofDoubleIterator(handle);
  while (_heresdkVenueMapviewBindingslistofDoubleIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkVenueMapviewBindingslistofDoubleIteratorGet(_iteratorHandle);
    try {
      result.add((_elementHandle));
    } finally {
      
    }
    _heresdkVenueMapviewBindingslistofDoubleIteratorIncrement(_iteratorHandle);
  }
  _heresdkVenueMapviewBindingslistofDoubleIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkVenueMapviewBindingslistofDoubleReleaseFfiHandle(Pointer<Void> handle) => _heresdkVenueMapviewBindingslistofDoubleReleaseHandle(handle);

final _heresdkVenueMapviewBindingslistofDoubleCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_Double_create_handle_nullable'));
final _heresdkVenueMapviewBindingslistofDoubleReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_Double_release_handle_nullable'));
final _heresdkVenueMapviewBindingslistofDoubleGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_Double_get_value_nullable'));

Pointer<Void> heresdkVenueMapviewBindingslistofDoubleToFfiNullable(List<double>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkVenueMapviewBindingslistofDoubleToFfi(value);
  final result = _heresdkVenueMapviewBindingslistofDoubleCreateHandleNullable(_handle);
  heresdkVenueMapviewBindingslistofDoubleReleaseFfiHandle(_handle);
  return result;
}

List<double>? heresdkVenueMapviewBindingslistofDoubleFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkVenueMapviewBindingslistofDoubleGetValueNullable(handle);
  final result = heresdkVenueMapviewBindingslistofDoubleFromFfi(_handle);
  heresdkVenueMapviewBindingslistofDoubleReleaseFfiHandle(_handle);
  return result;
}

void heresdkVenueMapviewBindingslistofDoubleReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkVenueMapviewBindingslistofDoubleReleaseHandleNullable(handle);

final _heresdkVenueMapviewBindingslistofIntCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_Int_create_handle'));
final _heresdkVenueMapviewBindingslistofIntReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_Int_release_handle'));
final _heresdkVenueMapviewBindingslistofIntInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Int32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_Int_insert'));
final _heresdkVenueMapviewBindingslistofIntIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsListOf_Int_iterator'));
final _heresdkVenueMapviewBindingslistofIntIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsListOf_Int_iterator_release_handle'));
final _heresdkVenueMapviewBindingslistofIntIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsListOf_Int_iterator_is_valid'));
final _heresdkVenueMapviewBindingslistofIntIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsListOf_Int_iterator_increment'));
final _heresdkVenueMapviewBindingslistofIntIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsListOf_Int_iterator_get'));

Pointer<Void> heresdkVenueMapviewBindingslistofIntToFfi(List<int> value) {
  final _result = _heresdkVenueMapviewBindingslistofIntCreateHandle();
  for (final element in value) {
    final _elementHandle = (element);
    _heresdkVenueMapviewBindingslistofIntInsert(_result, _elementHandle);
    
  }
  return _result;
}

List<int> heresdkVenueMapviewBindingslistofIntFromFfi(Pointer<Void> handle) {
  final result = List<int>.empty(growable: true);
  final _iteratorHandle = _heresdkVenueMapviewBindingslistofIntIterator(handle);
  while (_heresdkVenueMapviewBindingslistofIntIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkVenueMapviewBindingslistofIntIteratorGet(_iteratorHandle);
    try {
      result.add((_elementHandle));
    } finally {
      
    }
    _heresdkVenueMapviewBindingslistofIntIteratorIncrement(_iteratorHandle);
  }
  _heresdkVenueMapviewBindingslistofIntIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkVenueMapviewBindingslistofIntReleaseFfiHandle(Pointer<Void> handle) => _heresdkVenueMapviewBindingslistofIntReleaseHandle(handle);

final _heresdkVenueMapviewBindingslistofIntCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_Int_create_handle_nullable'));
final _heresdkVenueMapviewBindingslistofIntReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_Int_release_handle_nullable'));
final _heresdkVenueMapviewBindingslistofIntGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_Int_get_value_nullable'));

Pointer<Void> heresdkVenueMapviewBindingslistofIntToFfiNullable(List<int>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkVenueMapviewBindingslistofIntToFfi(value);
  final result = _heresdkVenueMapviewBindingslistofIntCreateHandleNullable(_handle);
  heresdkVenueMapviewBindingslistofIntReleaseFfiHandle(_handle);
  return result;
}

List<int>? heresdkVenueMapviewBindingslistofIntFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkVenueMapviewBindingslistofIntGetValueNullable(handle);
  final result = heresdkVenueMapviewBindingslistofIntFromFfi(_handle);
  heresdkVenueMapviewBindingslistofIntReleaseFfiHandle(_handle);
  return result;
}

void heresdkVenueMapviewBindingslistofIntReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkVenueMapviewBindingslistofIntReleaseHandleNullable(handle);

final _heresdkVenueMapviewBindingslistofLocaleCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_Locale_create_handle'));
final _heresdkVenueMapviewBindingslistofLocaleReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_Locale_release_handle'));
final _heresdkVenueMapviewBindingslistofLocaleInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_Locale_insert'));
final _heresdkVenueMapviewBindingslistofLocaleIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsListOf_Locale_iterator'));
final _heresdkVenueMapviewBindingslistofLocaleIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsListOf_Locale_iterator_release_handle'));
final _heresdkVenueMapviewBindingslistofLocaleIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsListOf_Locale_iterator_is_valid'));
final _heresdkVenueMapviewBindingslistofLocaleIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsListOf_Locale_iterator_increment'));
final _heresdkVenueMapviewBindingslistofLocaleIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsListOf_Locale_iterator_get'));

Pointer<Void> heresdkVenueMapviewBindingslistofLocaleToFfi(List<Locale> value) {
  final _result = _heresdkVenueMapviewBindingslistofLocaleCreateHandle();
  for (final element in value) {
    final _elementHandle = localeToFfi(element);
    _heresdkVenueMapviewBindingslistofLocaleInsert(_result, _elementHandle);
    localeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Locale> heresdkVenueMapviewBindingslistofLocaleFromFfi(Pointer<Void> handle) {
  final result = List<Locale>.empty(growable: true);
  final _iteratorHandle = _heresdkVenueMapviewBindingslistofLocaleIterator(handle);
  while (_heresdkVenueMapviewBindingslistofLocaleIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkVenueMapviewBindingslistofLocaleIteratorGet(_iteratorHandle);
    try {
      result.add(localeFromFfi(_elementHandle));
    } finally {
      localeReleaseFfiHandle(_elementHandle);
    }
    _heresdkVenueMapviewBindingslistofLocaleIteratorIncrement(_iteratorHandle);
  }
  _heresdkVenueMapviewBindingslistofLocaleIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkVenueMapviewBindingslistofLocaleReleaseFfiHandle(Pointer<Void> handle) => _heresdkVenueMapviewBindingslistofLocaleReleaseHandle(handle);

final _heresdkVenueMapviewBindingslistofLocaleCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_Locale_create_handle_nullable'));
final _heresdkVenueMapviewBindingslistofLocaleReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_Locale_release_handle_nullable'));
final _heresdkVenueMapviewBindingslistofLocaleGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_Locale_get_value_nullable'));

Pointer<Void> heresdkVenueMapviewBindingslistofLocaleToFfiNullable(List<Locale>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkVenueMapviewBindingslistofLocaleToFfi(value);
  final result = _heresdkVenueMapviewBindingslistofLocaleCreateHandleNullable(_handle);
  heresdkVenueMapviewBindingslistofLocaleReleaseFfiHandle(_handle);
  return result;
}

List<Locale>? heresdkVenueMapviewBindingslistofLocaleFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkVenueMapviewBindingslistofLocaleGetValueNullable(handle);
  final result = heresdkVenueMapviewBindingslistofLocaleFromFfi(_handle);
  heresdkVenueMapviewBindingslistofLocaleReleaseFfiHandle(_handle);
  return result;
}

void heresdkVenueMapviewBindingslistofLocaleReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkVenueMapviewBindingslistofLocaleReleaseHandleNullable(handle);

final _heresdkVenueMapviewBindingslistofStringCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_String_create_handle'));
final _heresdkVenueMapviewBindingslistofStringReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_String_release_handle'));
final _heresdkVenueMapviewBindingslistofStringInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_String_insert'));
final _heresdkVenueMapviewBindingslistofStringIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsListOf_String_iterator'));
final _heresdkVenueMapviewBindingslistofStringIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsListOf_String_iterator_release_handle'));
final _heresdkVenueMapviewBindingslistofStringIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsListOf_String_iterator_is_valid'));
final _heresdkVenueMapviewBindingslistofStringIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsListOf_String_iterator_increment'));
final _heresdkVenueMapviewBindingslistofStringIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsListOf_String_iterator_get'));

Pointer<Void> heresdkVenueMapviewBindingslistofStringToFfi(List<String> value) {
  final _result = _heresdkVenueMapviewBindingslistofStringCreateHandle();
  for (final element in value) {
    final _elementHandle = stringToFfi(element);
    _heresdkVenueMapviewBindingslistofStringInsert(_result, _elementHandle);
    stringReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<String> heresdkVenueMapviewBindingslistofStringFromFfi(Pointer<Void> handle) {
  final result = List<String>.empty(growable: true);
  final _iteratorHandle = _heresdkVenueMapviewBindingslistofStringIterator(handle);
  while (_heresdkVenueMapviewBindingslistofStringIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkVenueMapviewBindingslistofStringIteratorGet(_iteratorHandle);
    try {
      result.add(stringFromFfi(_elementHandle));
    } finally {
      stringReleaseFfiHandle(_elementHandle);
    }
    _heresdkVenueMapviewBindingslistofStringIteratorIncrement(_iteratorHandle);
  }
  _heresdkVenueMapviewBindingslistofStringIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkVenueMapviewBindingslistofStringReleaseFfiHandle(Pointer<Void> handle) => _heresdkVenueMapviewBindingslistofStringReleaseHandle(handle);

final _heresdkVenueMapviewBindingslistofStringCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_String_create_handle_nullable'));
final _heresdkVenueMapviewBindingslistofStringReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_String_release_handle_nullable'));
final _heresdkVenueMapviewBindingslistofStringGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_String_get_value_nullable'));

Pointer<Void> heresdkVenueMapviewBindingslistofStringToFfiNullable(List<String>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkVenueMapviewBindingslistofStringToFfi(value);
  final result = _heresdkVenueMapviewBindingslistofStringCreateHandleNullable(_handle);
  heresdkVenueMapviewBindingslistofStringReleaseFfiHandle(_handle);
  return result;
}

List<String>? heresdkVenueMapviewBindingslistofStringFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkVenueMapviewBindingslistofStringGetValueNullable(handle);
  final result = heresdkVenueMapviewBindingslistofStringFromFfi(_handle);
  heresdkVenueMapviewBindingslistofStringReleaseFfiHandle(_handle);
  return result;
}

void heresdkVenueMapviewBindingslistofStringReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkVenueMapviewBindingslistofStringReleaseHandleNullable(handle);

final _heresdkVenueMapviewBindingslistofSdkAnimationAnchor2dkeyframeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_animation_Anchor2DKeyframe_create_handle'));
final _heresdkVenueMapviewBindingslistofSdkAnimationAnchor2dkeyframeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_animation_Anchor2DKeyframe_release_handle'));
final _heresdkVenueMapviewBindingslistofSdkAnimationAnchor2dkeyframeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_animation_Anchor2DKeyframe_insert'));
final _heresdkVenueMapviewBindingslistofSdkAnimationAnchor2dkeyframeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_animation_Anchor2DKeyframe_iterator'));
final _heresdkVenueMapviewBindingslistofSdkAnimationAnchor2dkeyframeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_animation_Anchor2DKeyframe_iterator_release_handle'));
final _heresdkVenueMapviewBindingslistofSdkAnimationAnchor2dkeyframeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_animation_Anchor2DKeyframe_iterator_is_valid'));
final _heresdkVenueMapviewBindingslistofSdkAnimationAnchor2dkeyframeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_animation_Anchor2DKeyframe_iterator_increment'));
final _heresdkVenueMapviewBindingslistofSdkAnimationAnchor2dkeyframeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_animation_Anchor2DKeyframe_iterator_get'));

Pointer<Void> heresdkVenueMapviewBindingslistofSdkAnimationAnchor2dkeyframeToFfi(List<Anchor2DKeyframe> value) {
  final _result = _heresdkVenueMapviewBindingslistofSdkAnimationAnchor2dkeyframeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkAnimationAnchor2dkeyframeToFfi(element);
    _heresdkVenueMapviewBindingslistofSdkAnimationAnchor2dkeyframeInsert(_result, _elementHandle);
    sdkAnimationAnchor2dkeyframeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Anchor2DKeyframe> heresdkVenueMapviewBindingslistofSdkAnimationAnchor2dkeyframeFromFfi(Pointer<Void> handle) {
  final result = List<Anchor2DKeyframe>.empty(growable: true);
  final _iteratorHandle = _heresdkVenueMapviewBindingslistofSdkAnimationAnchor2dkeyframeIterator(handle);
  while (_heresdkVenueMapviewBindingslistofSdkAnimationAnchor2dkeyframeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkVenueMapviewBindingslistofSdkAnimationAnchor2dkeyframeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkAnimationAnchor2dkeyframeFromFfi(_elementHandle));
    } finally {
      sdkAnimationAnchor2dkeyframeReleaseFfiHandle(_elementHandle);
    }
    _heresdkVenueMapviewBindingslistofSdkAnimationAnchor2dkeyframeIteratorIncrement(_iteratorHandle);
  }
  _heresdkVenueMapviewBindingslistofSdkAnimationAnchor2dkeyframeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkVenueMapviewBindingslistofSdkAnimationAnchor2dkeyframeReleaseFfiHandle(Pointer<Void> handle) => _heresdkVenueMapviewBindingslistofSdkAnimationAnchor2dkeyframeReleaseHandle(handle);

final _heresdkVenueMapviewBindingslistofSdkAnimationAnchor2dkeyframeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_animation_Anchor2DKeyframe_create_handle_nullable'));
final _heresdkVenueMapviewBindingslistofSdkAnimationAnchor2dkeyframeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_animation_Anchor2DKeyframe_release_handle_nullable'));
final _heresdkVenueMapviewBindingslistofSdkAnimationAnchor2dkeyframeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_animation_Anchor2DKeyframe_get_value_nullable'));

Pointer<Void> heresdkVenueMapviewBindingslistofSdkAnimationAnchor2dkeyframeToFfiNullable(List<Anchor2DKeyframe>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkVenueMapviewBindingslistofSdkAnimationAnchor2dkeyframeToFfi(value);
  final result = _heresdkVenueMapviewBindingslistofSdkAnimationAnchor2dkeyframeCreateHandleNullable(_handle);
  heresdkVenueMapviewBindingslistofSdkAnimationAnchor2dkeyframeReleaseFfiHandle(_handle);
  return result;
}

List<Anchor2DKeyframe>? heresdkVenueMapviewBindingslistofSdkAnimationAnchor2dkeyframeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkVenueMapviewBindingslistofSdkAnimationAnchor2dkeyframeGetValueNullable(handle);
  final result = heresdkVenueMapviewBindingslistofSdkAnimationAnchor2dkeyframeFromFfi(_handle);
  heresdkVenueMapviewBindingslistofSdkAnimationAnchor2dkeyframeReleaseFfiHandle(_handle);
  return result;
}

void heresdkVenueMapviewBindingslistofSdkAnimationAnchor2dkeyframeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkVenueMapviewBindingslistofSdkAnimationAnchor2dkeyframeReleaseHandleNullable(handle);

final _heresdkVenueMapviewBindingslistofSdkAnimationGeocoordinateskeyframeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_create_handle'));
final _heresdkVenueMapviewBindingslistofSdkAnimationGeocoordinateskeyframeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_release_handle'));
final _heresdkVenueMapviewBindingslistofSdkAnimationGeocoordinateskeyframeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_insert'));
final _heresdkVenueMapviewBindingslistofSdkAnimationGeocoordinateskeyframeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_iterator'));
final _heresdkVenueMapviewBindingslistofSdkAnimationGeocoordinateskeyframeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_iterator_release_handle'));
final _heresdkVenueMapviewBindingslistofSdkAnimationGeocoordinateskeyframeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_iterator_is_valid'));
final _heresdkVenueMapviewBindingslistofSdkAnimationGeocoordinateskeyframeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_iterator_increment'));
final _heresdkVenueMapviewBindingslistofSdkAnimationGeocoordinateskeyframeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_iterator_get'));

Pointer<Void> heresdkVenueMapviewBindingslistofSdkAnimationGeocoordinateskeyframeToFfi(List<GeoCoordinatesKeyframe> value) {
  final _result = _heresdkVenueMapviewBindingslistofSdkAnimationGeocoordinateskeyframeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkAnimationGeocoordinateskeyframeToFfi(element);
    _heresdkVenueMapviewBindingslistofSdkAnimationGeocoordinateskeyframeInsert(_result, _elementHandle);
    sdkAnimationGeocoordinateskeyframeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoCoordinatesKeyframe> heresdkVenueMapviewBindingslistofSdkAnimationGeocoordinateskeyframeFromFfi(Pointer<Void> handle) {
  final result = List<GeoCoordinatesKeyframe>.empty(growable: true);
  final _iteratorHandle = _heresdkVenueMapviewBindingslistofSdkAnimationGeocoordinateskeyframeIterator(handle);
  while (_heresdkVenueMapviewBindingslistofSdkAnimationGeocoordinateskeyframeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkVenueMapviewBindingslistofSdkAnimationGeocoordinateskeyframeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkAnimationGeocoordinateskeyframeFromFfi(_elementHandle));
    } finally {
      sdkAnimationGeocoordinateskeyframeReleaseFfiHandle(_elementHandle);
    }
    _heresdkVenueMapviewBindingslistofSdkAnimationGeocoordinateskeyframeIteratorIncrement(_iteratorHandle);
  }
  _heresdkVenueMapviewBindingslistofSdkAnimationGeocoordinateskeyframeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkVenueMapviewBindingslistofSdkAnimationGeocoordinateskeyframeReleaseFfiHandle(Pointer<Void> handle) => _heresdkVenueMapviewBindingslistofSdkAnimationGeocoordinateskeyframeReleaseHandle(handle);

final _heresdkVenueMapviewBindingslistofSdkAnimationGeocoordinateskeyframeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_create_handle_nullable'));
final _heresdkVenueMapviewBindingslistofSdkAnimationGeocoordinateskeyframeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_release_handle_nullable'));
final _heresdkVenueMapviewBindingslistofSdkAnimationGeocoordinateskeyframeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_get_value_nullable'));

Pointer<Void> heresdkVenueMapviewBindingslistofSdkAnimationGeocoordinateskeyframeToFfiNullable(List<GeoCoordinatesKeyframe>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkVenueMapviewBindingslistofSdkAnimationGeocoordinateskeyframeToFfi(value);
  final result = _heresdkVenueMapviewBindingslistofSdkAnimationGeocoordinateskeyframeCreateHandleNullable(_handle);
  heresdkVenueMapviewBindingslistofSdkAnimationGeocoordinateskeyframeReleaseFfiHandle(_handle);
  return result;
}

List<GeoCoordinatesKeyframe>? heresdkVenueMapviewBindingslistofSdkAnimationGeocoordinateskeyframeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkVenueMapviewBindingslistofSdkAnimationGeocoordinateskeyframeGetValueNullable(handle);
  final result = heresdkVenueMapviewBindingslistofSdkAnimationGeocoordinateskeyframeFromFfi(_handle);
  heresdkVenueMapviewBindingslistofSdkAnimationGeocoordinateskeyframeReleaseFfiHandle(_handle);
  return result;
}

void heresdkVenueMapviewBindingslistofSdkAnimationGeocoordinateskeyframeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkVenueMapviewBindingslistofSdkAnimationGeocoordinateskeyframeReleaseHandleNullable(handle);

final _heresdkVenueMapviewBindingslistofSdkAnimationGeoorientationkeyframeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_animation_GeoOrientationKeyframe_create_handle'));
final _heresdkVenueMapviewBindingslistofSdkAnimationGeoorientationkeyframeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_animation_GeoOrientationKeyframe_release_handle'));
final _heresdkVenueMapviewBindingslistofSdkAnimationGeoorientationkeyframeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_animation_GeoOrientationKeyframe_insert'));
final _heresdkVenueMapviewBindingslistofSdkAnimationGeoorientationkeyframeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_animation_GeoOrientationKeyframe_iterator'));
final _heresdkVenueMapviewBindingslistofSdkAnimationGeoorientationkeyframeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_animation_GeoOrientationKeyframe_iterator_release_handle'));
final _heresdkVenueMapviewBindingslistofSdkAnimationGeoorientationkeyframeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_animation_GeoOrientationKeyframe_iterator_is_valid'));
final _heresdkVenueMapviewBindingslistofSdkAnimationGeoorientationkeyframeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_animation_GeoOrientationKeyframe_iterator_increment'));
final _heresdkVenueMapviewBindingslistofSdkAnimationGeoorientationkeyframeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_animation_GeoOrientationKeyframe_iterator_get'));

Pointer<Void> heresdkVenueMapviewBindingslistofSdkAnimationGeoorientationkeyframeToFfi(List<GeoOrientationKeyframe> value) {
  final _result = _heresdkVenueMapviewBindingslistofSdkAnimationGeoorientationkeyframeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkAnimationGeoorientationkeyframeToFfi(element);
    _heresdkVenueMapviewBindingslistofSdkAnimationGeoorientationkeyframeInsert(_result, _elementHandle);
    sdkAnimationGeoorientationkeyframeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoOrientationKeyframe> heresdkVenueMapviewBindingslistofSdkAnimationGeoorientationkeyframeFromFfi(Pointer<Void> handle) {
  final result = List<GeoOrientationKeyframe>.empty(growable: true);
  final _iteratorHandle = _heresdkVenueMapviewBindingslistofSdkAnimationGeoorientationkeyframeIterator(handle);
  while (_heresdkVenueMapviewBindingslistofSdkAnimationGeoorientationkeyframeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkVenueMapviewBindingslistofSdkAnimationGeoorientationkeyframeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkAnimationGeoorientationkeyframeFromFfi(_elementHandle));
    } finally {
      sdkAnimationGeoorientationkeyframeReleaseFfiHandle(_elementHandle);
    }
    _heresdkVenueMapviewBindingslistofSdkAnimationGeoorientationkeyframeIteratorIncrement(_iteratorHandle);
  }
  _heresdkVenueMapviewBindingslistofSdkAnimationGeoorientationkeyframeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkVenueMapviewBindingslistofSdkAnimationGeoorientationkeyframeReleaseFfiHandle(Pointer<Void> handle) => _heresdkVenueMapviewBindingslistofSdkAnimationGeoorientationkeyframeReleaseHandle(handle);

final _heresdkVenueMapviewBindingslistofSdkAnimationGeoorientationkeyframeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_animation_GeoOrientationKeyframe_create_handle_nullable'));
final _heresdkVenueMapviewBindingslistofSdkAnimationGeoorientationkeyframeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_animation_GeoOrientationKeyframe_release_handle_nullable'));
final _heresdkVenueMapviewBindingslistofSdkAnimationGeoorientationkeyframeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_animation_GeoOrientationKeyframe_get_value_nullable'));

Pointer<Void> heresdkVenueMapviewBindingslistofSdkAnimationGeoorientationkeyframeToFfiNullable(List<GeoOrientationKeyframe>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkVenueMapviewBindingslistofSdkAnimationGeoorientationkeyframeToFfi(value);
  final result = _heresdkVenueMapviewBindingslistofSdkAnimationGeoorientationkeyframeCreateHandleNullable(_handle);
  heresdkVenueMapviewBindingslistofSdkAnimationGeoorientationkeyframeReleaseFfiHandle(_handle);
  return result;
}

List<GeoOrientationKeyframe>? heresdkVenueMapviewBindingslistofSdkAnimationGeoorientationkeyframeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkVenueMapviewBindingslistofSdkAnimationGeoorientationkeyframeGetValueNullable(handle);
  final result = heresdkVenueMapviewBindingslistofSdkAnimationGeoorientationkeyframeFromFfi(_handle);
  heresdkVenueMapviewBindingslistofSdkAnimationGeoorientationkeyframeReleaseFfiHandle(_handle);
  return result;
}

void heresdkVenueMapviewBindingslistofSdkAnimationGeoorientationkeyframeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkVenueMapviewBindingslistofSdkAnimationGeoorientationkeyframeReleaseHandleNullable(handle);

final _heresdkVenueMapviewBindingslistofSdkAnimationPoint2dkeyframeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_animation_Point2DKeyframe_create_handle'));
final _heresdkVenueMapviewBindingslistofSdkAnimationPoint2dkeyframeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_animation_Point2DKeyframe_release_handle'));
final _heresdkVenueMapviewBindingslistofSdkAnimationPoint2dkeyframeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_animation_Point2DKeyframe_insert'));
final _heresdkVenueMapviewBindingslistofSdkAnimationPoint2dkeyframeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_animation_Point2DKeyframe_iterator'));
final _heresdkVenueMapviewBindingslistofSdkAnimationPoint2dkeyframeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_animation_Point2DKeyframe_iterator_release_handle'));
final _heresdkVenueMapviewBindingslistofSdkAnimationPoint2dkeyframeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_animation_Point2DKeyframe_iterator_is_valid'));
final _heresdkVenueMapviewBindingslistofSdkAnimationPoint2dkeyframeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_animation_Point2DKeyframe_iterator_increment'));
final _heresdkVenueMapviewBindingslistofSdkAnimationPoint2dkeyframeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_animation_Point2DKeyframe_iterator_get'));

Pointer<Void> heresdkVenueMapviewBindingslistofSdkAnimationPoint2dkeyframeToFfi(List<Point2DKeyframe> value) {
  final _result = _heresdkVenueMapviewBindingslistofSdkAnimationPoint2dkeyframeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkAnimationPoint2dkeyframeToFfi(element);
    _heresdkVenueMapviewBindingslistofSdkAnimationPoint2dkeyframeInsert(_result, _elementHandle);
    sdkAnimationPoint2dkeyframeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Point2DKeyframe> heresdkVenueMapviewBindingslistofSdkAnimationPoint2dkeyframeFromFfi(Pointer<Void> handle) {
  final result = List<Point2DKeyframe>.empty(growable: true);
  final _iteratorHandle = _heresdkVenueMapviewBindingslistofSdkAnimationPoint2dkeyframeIterator(handle);
  while (_heresdkVenueMapviewBindingslistofSdkAnimationPoint2dkeyframeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkVenueMapviewBindingslistofSdkAnimationPoint2dkeyframeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkAnimationPoint2dkeyframeFromFfi(_elementHandle));
    } finally {
      sdkAnimationPoint2dkeyframeReleaseFfiHandle(_elementHandle);
    }
    _heresdkVenueMapviewBindingslistofSdkAnimationPoint2dkeyframeIteratorIncrement(_iteratorHandle);
  }
  _heresdkVenueMapviewBindingslistofSdkAnimationPoint2dkeyframeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkVenueMapviewBindingslistofSdkAnimationPoint2dkeyframeReleaseFfiHandle(Pointer<Void> handle) => _heresdkVenueMapviewBindingslistofSdkAnimationPoint2dkeyframeReleaseHandle(handle);

final _heresdkVenueMapviewBindingslistofSdkAnimationPoint2dkeyframeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_animation_Point2DKeyframe_create_handle_nullable'));
final _heresdkVenueMapviewBindingslistofSdkAnimationPoint2dkeyframeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_animation_Point2DKeyframe_release_handle_nullable'));
final _heresdkVenueMapviewBindingslistofSdkAnimationPoint2dkeyframeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_animation_Point2DKeyframe_get_value_nullable'));

Pointer<Void> heresdkVenueMapviewBindingslistofSdkAnimationPoint2dkeyframeToFfiNullable(List<Point2DKeyframe>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkVenueMapviewBindingslistofSdkAnimationPoint2dkeyframeToFfi(value);
  final result = _heresdkVenueMapviewBindingslistofSdkAnimationPoint2dkeyframeCreateHandleNullable(_handle);
  heresdkVenueMapviewBindingslistofSdkAnimationPoint2dkeyframeReleaseFfiHandle(_handle);
  return result;
}

List<Point2DKeyframe>? heresdkVenueMapviewBindingslistofSdkAnimationPoint2dkeyframeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkVenueMapviewBindingslistofSdkAnimationPoint2dkeyframeGetValueNullable(handle);
  final result = heresdkVenueMapviewBindingslistofSdkAnimationPoint2dkeyframeFromFfi(_handle);
  heresdkVenueMapviewBindingslistofSdkAnimationPoint2dkeyframeReleaseFfiHandle(_handle);
  return result;
}

void heresdkVenueMapviewBindingslistofSdkAnimationPoint2dkeyframeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkVenueMapviewBindingslistofSdkAnimationPoint2dkeyframeReleaseHandleNullable(handle);

final _heresdkVenueMapviewBindingslistofSdkAnimationScalarkeyframeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_animation_ScalarKeyframe_create_handle'));
final _heresdkVenueMapviewBindingslistofSdkAnimationScalarkeyframeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_animation_ScalarKeyframe_release_handle'));
final _heresdkVenueMapviewBindingslistofSdkAnimationScalarkeyframeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_animation_ScalarKeyframe_insert'));
final _heresdkVenueMapviewBindingslistofSdkAnimationScalarkeyframeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_animation_ScalarKeyframe_iterator'));
final _heresdkVenueMapviewBindingslistofSdkAnimationScalarkeyframeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_animation_ScalarKeyframe_iterator_release_handle'));
final _heresdkVenueMapviewBindingslistofSdkAnimationScalarkeyframeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_animation_ScalarKeyframe_iterator_is_valid'));
final _heresdkVenueMapviewBindingslistofSdkAnimationScalarkeyframeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_animation_ScalarKeyframe_iterator_increment'));
final _heresdkVenueMapviewBindingslistofSdkAnimationScalarkeyframeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_animation_ScalarKeyframe_iterator_get'));

Pointer<Void> heresdkVenueMapviewBindingslistofSdkAnimationScalarkeyframeToFfi(List<ScalarKeyframe> value) {
  final _result = _heresdkVenueMapviewBindingslistofSdkAnimationScalarkeyframeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkAnimationScalarkeyframeToFfi(element);
    _heresdkVenueMapviewBindingslistofSdkAnimationScalarkeyframeInsert(_result, _elementHandle);
    sdkAnimationScalarkeyframeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<ScalarKeyframe> heresdkVenueMapviewBindingslistofSdkAnimationScalarkeyframeFromFfi(Pointer<Void> handle) {
  final result = List<ScalarKeyframe>.empty(growable: true);
  final _iteratorHandle = _heresdkVenueMapviewBindingslistofSdkAnimationScalarkeyframeIterator(handle);
  while (_heresdkVenueMapviewBindingslistofSdkAnimationScalarkeyframeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkVenueMapviewBindingslistofSdkAnimationScalarkeyframeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkAnimationScalarkeyframeFromFfi(_elementHandle));
    } finally {
      sdkAnimationScalarkeyframeReleaseFfiHandle(_elementHandle);
    }
    _heresdkVenueMapviewBindingslistofSdkAnimationScalarkeyframeIteratorIncrement(_iteratorHandle);
  }
  _heresdkVenueMapviewBindingslistofSdkAnimationScalarkeyframeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkVenueMapviewBindingslistofSdkAnimationScalarkeyframeReleaseFfiHandle(Pointer<Void> handle) => _heresdkVenueMapviewBindingslistofSdkAnimationScalarkeyframeReleaseHandle(handle);

final _heresdkVenueMapviewBindingslistofSdkAnimationScalarkeyframeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_animation_ScalarKeyframe_create_handle_nullable'));
final _heresdkVenueMapviewBindingslistofSdkAnimationScalarkeyframeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_animation_ScalarKeyframe_release_handle_nullable'));
final _heresdkVenueMapviewBindingslistofSdkAnimationScalarkeyframeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_animation_ScalarKeyframe_get_value_nullable'));

Pointer<Void> heresdkVenueMapviewBindingslistofSdkAnimationScalarkeyframeToFfiNullable(List<ScalarKeyframe>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkVenueMapviewBindingslistofSdkAnimationScalarkeyframeToFfi(value);
  final result = _heresdkVenueMapviewBindingslistofSdkAnimationScalarkeyframeCreateHandleNullable(_handle);
  heresdkVenueMapviewBindingslistofSdkAnimationScalarkeyframeReleaseFfiHandle(_handle);
  return result;
}

List<ScalarKeyframe>? heresdkVenueMapviewBindingslistofSdkAnimationScalarkeyframeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkVenueMapviewBindingslistofSdkAnimationScalarkeyframeGetValueNullable(handle);
  final result = heresdkVenueMapviewBindingslistofSdkAnimationScalarkeyframeFromFfi(_handle);
  heresdkVenueMapviewBindingslistofSdkAnimationScalarkeyframeReleaseFfiHandle(_handle);
  return result;
}

void heresdkVenueMapviewBindingslistofSdkAnimationScalarkeyframeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkVenueMapviewBindingslistofSdkAnimationScalarkeyframeReleaseHandleNullable(handle);

final _heresdkVenueMapviewBindingslistofSdkCoreGeocoordinatesCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_core_GeoCoordinates_create_handle'));
final _heresdkVenueMapviewBindingslistofSdkCoreGeocoordinatesReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_core_GeoCoordinates_release_handle'));
final _heresdkVenueMapviewBindingslistofSdkCoreGeocoordinatesInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_core_GeoCoordinates_insert'));
final _heresdkVenueMapviewBindingslistofSdkCoreGeocoordinatesIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_core_GeoCoordinates_iterator'));
final _heresdkVenueMapviewBindingslistofSdkCoreGeocoordinatesIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_core_GeoCoordinates_iterator_release_handle'));
final _heresdkVenueMapviewBindingslistofSdkCoreGeocoordinatesIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_core_GeoCoordinates_iterator_is_valid'));
final _heresdkVenueMapviewBindingslistofSdkCoreGeocoordinatesIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_core_GeoCoordinates_iterator_increment'));
final _heresdkVenueMapviewBindingslistofSdkCoreGeocoordinatesIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_core_GeoCoordinates_iterator_get'));

Pointer<Void> heresdkVenueMapviewBindingslistofSdkCoreGeocoordinatesToFfi(List<GeoCoordinates> value) {
  final _result = _heresdkVenueMapviewBindingslistofSdkCoreGeocoordinatesCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreGeocoordinatesToFfi(element);
    _heresdkVenueMapviewBindingslistofSdkCoreGeocoordinatesInsert(_result, _elementHandle);
    sdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoCoordinates> heresdkVenueMapviewBindingslistofSdkCoreGeocoordinatesFromFfi(Pointer<Void> handle) {
  final result = List<GeoCoordinates>.empty(growable: true);
  final _iteratorHandle = _heresdkVenueMapviewBindingslistofSdkCoreGeocoordinatesIterator(handle);
  while (_heresdkVenueMapviewBindingslistofSdkCoreGeocoordinatesIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkVenueMapviewBindingslistofSdkCoreGeocoordinatesIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreGeocoordinatesFromFfi(_elementHandle));
    } finally {
      sdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
    }
    _heresdkVenueMapviewBindingslistofSdkCoreGeocoordinatesIteratorIncrement(_iteratorHandle);
  }
  _heresdkVenueMapviewBindingslistofSdkCoreGeocoordinatesIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkVenueMapviewBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(Pointer<Void> handle) => _heresdkVenueMapviewBindingslistofSdkCoreGeocoordinatesReleaseHandle(handle);

final _heresdkVenueMapviewBindingslistofSdkCoreGeocoordinatesCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_core_GeoCoordinates_create_handle_nullable'));
final _heresdkVenueMapviewBindingslistofSdkCoreGeocoordinatesReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_core_GeoCoordinates_release_handle_nullable'));
final _heresdkVenueMapviewBindingslistofSdkCoreGeocoordinatesGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_core_GeoCoordinates_get_value_nullable'));

Pointer<Void> heresdkVenueMapviewBindingslistofSdkCoreGeocoordinatesToFfiNullable(List<GeoCoordinates>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkVenueMapviewBindingslistofSdkCoreGeocoordinatesToFfi(value);
  final result = _heresdkVenueMapviewBindingslistofSdkCoreGeocoordinatesCreateHandleNullable(_handle);
  heresdkVenueMapviewBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

List<GeoCoordinates>? heresdkVenueMapviewBindingslistofSdkCoreGeocoordinatesFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkVenueMapviewBindingslistofSdkCoreGeocoordinatesGetValueNullable(handle);
  final result = heresdkVenueMapviewBindingslistofSdkCoreGeocoordinatesFromFfi(_handle);
  heresdkVenueMapviewBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

void heresdkVenueMapviewBindingslistofSdkCoreGeocoordinatesReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkVenueMapviewBindingslistofSdkCoreGeocoordinatesReleaseHandleNullable(handle);

final _heresdkVenueMapviewBindingslistofSdkCoreLocalizedtextCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_core_LocalizedText_create_handle'));
final _heresdkVenueMapviewBindingslistofSdkCoreLocalizedtextReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_core_LocalizedText_release_handle'));
final _heresdkVenueMapviewBindingslistofSdkCoreLocalizedtextInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_core_LocalizedText_insert'));
final _heresdkVenueMapviewBindingslistofSdkCoreLocalizedtextIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_core_LocalizedText_iterator'));
final _heresdkVenueMapviewBindingslistofSdkCoreLocalizedtextIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_core_LocalizedText_iterator_release_handle'));
final _heresdkVenueMapviewBindingslistofSdkCoreLocalizedtextIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_core_LocalizedText_iterator_is_valid'));
final _heresdkVenueMapviewBindingslistofSdkCoreLocalizedtextIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_core_LocalizedText_iterator_increment'));
final _heresdkVenueMapviewBindingslistofSdkCoreLocalizedtextIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_core_LocalizedText_iterator_get'));

Pointer<Void> heresdkVenueMapviewBindingslistofSdkCoreLocalizedtextToFfi(List<LocalizedText> value) {
  final _result = _heresdkVenueMapviewBindingslistofSdkCoreLocalizedtextCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreLocalizedtextToFfi(element);
    _heresdkVenueMapviewBindingslistofSdkCoreLocalizedtextInsert(_result, _elementHandle);
    sdkCoreLocalizedtextReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<LocalizedText> heresdkVenueMapviewBindingslistofSdkCoreLocalizedtextFromFfi(Pointer<Void> handle) {
  final result = List<LocalizedText>.empty(growable: true);
  final _iteratorHandle = _heresdkVenueMapviewBindingslistofSdkCoreLocalizedtextIterator(handle);
  while (_heresdkVenueMapviewBindingslistofSdkCoreLocalizedtextIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkVenueMapviewBindingslistofSdkCoreLocalizedtextIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreLocalizedtextFromFfi(_elementHandle));
    } finally {
      sdkCoreLocalizedtextReleaseFfiHandle(_elementHandle);
    }
    _heresdkVenueMapviewBindingslistofSdkCoreLocalizedtextIteratorIncrement(_iteratorHandle);
  }
  _heresdkVenueMapviewBindingslistofSdkCoreLocalizedtextIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkVenueMapviewBindingslistofSdkCoreLocalizedtextReleaseFfiHandle(Pointer<Void> handle) => _heresdkVenueMapviewBindingslistofSdkCoreLocalizedtextReleaseHandle(handle);

final _heresdkVenueMapviewBindingslistofSdkCoreLocalizedtextCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_core_LocalizedText_create_handle_nullable'));
final _heresdkVenueMapviewBindingslistofSdkCoreLocalizedtextReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_core_LocalizedText_release_handle_nullable'));
final _heresdkVenueMapviewBindingslistofSdkCoreLocalizedtextGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_core_LocalizedText_get_value_nullable'));

Pointer<Void> heresdkVenueMapviewBindingslistofSdkCoreLocalizedtextToFfiNullable(List<LocalizedText>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkVenueMapviewBindingslistofSdkCoreLocalizedtextToFfi(value);
  final result = _heresdkVenueMapviewBindingslistofSdkCoreLocalizedtextCreateHandleNullable(_handle);
  heresdkVenueMapviewBindingslistofSdkCoreLocalizedtextReleaseFfiHandle(_handle);
  return result;
}

List<LocalizedText>? heresdkVenueMapviewBindingslistofSdkCoreLocalizedtextFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkVenueMapviewBindingslistofSdkCoreLocalizedtextGetValueNullable(handle);
  final result = heresdkVenueMapviewBindingslistofSdkCoreLocalizedtextFromFfi(_handle);
  heresdkVenueMapviewBindingslistofSdkCoreLocalizedtextReleaseFfiHandle(_handle);
  return result;
}

void heresdkVenueMapviewBindingslistofSdkCoreLocalizedtextReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkVenueMapviewBindingslistofSdkCoreLocalizedtextReleaseHandleNullable(handle);

final _heresdkVenueMapviewBindingslistofSdkCoreEngineLayerconfigurationFeatureCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_create_handle'));
final _heresdkVenueMapviewBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_release_handle'));
final _heresdkVenueMapviewBindingslistofSdkCoreEngineLayerconfigurationFeatureInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_insert'));
final _heresdkVenueMapviewBindingslistofSdkCoreEngineLayerconfigurationFeatureIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator'));
final _heresdkVenueMapviewBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator_release_handle'));
final _heresdkVenueMapviewBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator_is_valid'));
final _heresdkVenueMapviewBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator_increment'));
final _heresdkVenueMapviewBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator_get'));

Pointer<Void> heresdkVenueMapviewBindingslistofSdkCoreEngineLayerconfigurationFeatureToFfi(List<LayerConfigurationFeature> value) {
  final _result = _heresdkVenueMapviewBindingslistofSdkCoreEngineLayerconfigurationFeatureCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreEngineLayerconfigurationFeatureToFfi(element);
    _heresdkVenueMapviewBindingslistofSdkCoreEngineLayerconfigurationFeatureInsert(_result, _elementHandle);
    sdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<LayerConfigurationFeature> heresdkVenueMapviewBindingslistofSdkCoreEngineLayerconfigurationFeatureFromFfi(Pointer<Void> handle) {
  final result = List<LayerConfigurationFeature>.empty(growable: true);
  final _iteratorHandle = _heresdkVenueMapviewBindingslistofSdkCoreEngineLayerconfigurationFeatureIterator(handle);
  while (_heresdkVenueMapviewBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkVenueMapviewBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreEngineLayerconfigurationFeatureFromFfi(_elementHandle));
    } finally {
      sdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(_elementHandle);
    }
    _heresdkVenueMapviewBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorIncrement(_iteratorHandle);
  }
  _heresdkVenueMapviewBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkVenueMapviewBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(Pointer<Void> handle) => _heresdkVenueMapviewBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseHandle(handle);

final _heresdkVenueMapviewBindingslistofSdkCoreEngineLayerconfigurationFeatureCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_create_handle_nullable'));
final _heresdkVenueMapviewBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_release_handle_nullable'));
final _heresdkVenueMapviewBindingslistofSdkCoreEngineLayerconfigurationFeatureGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_get_value_nullable'));

Pointer<Void> heresdkVenueMapviewBindingslistofSdkCoreEngineLayerconfigurationFeatureToFfiNullable(List<LayerConfigurationFeature>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkVenueMapviewBindingslistofSdkCoreEngineLayerconfigurationFeatureToFfi(value);
  final result = _heresdkVenueMapviewBindingslistofSdkCoreEngineLayerconfigurationFeatureCreateHandleNullable(_handle);
  heresdkVenueMapviewBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(_handle);
  return result;
}

List<LayerConfigurationFeature>? heresdkVenueMapviewBindingslistofSdkCoreEngineLayerconfigurationFeatureFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkVenueMapviewBindingslistofSdkCoreEngineLayerconfigurationFeatureGetValueNullable(handle);
  final result = heresdkVenueMapviewBindingslistofSdkCoreEngineLayerconfigurationFeatureFromFfi(_handle);
  heresdkVenueMapviewBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(_handle);
  return result;
}

void heresdkVenueMapviewBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkVenueMapviewBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseHandleNullable(handle);

final _heresdkVenueMapviewBindingslistofSdkMapviewMapcamerakeyframetrackCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_create_handle'));
final _heresdkVenueMapviewBindingslistofSdkMapviewMapcamerakeyframetrackReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_release_handle'));
final _heresdkVenueMapviewBindingslistofSdkMapviewMapcamerakeyframetrackInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_insert'));
final _heresdkVenueMapviewBindingslistofSdkMapviewMapcamerakeyframetrackIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_iterator'));
final _heresdkVenueMapviewBindingslistofSdkMapviewMapcamerakeyframetrackIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_iterator_release_handle'));
final _heresdkVenueMapviewBindingslistofSdkMapviewMapcamerakeyframetrackIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_iterator_is_valid'));
final _heresdkVenueMapviewBindingslistofSdkMapviewMapcamerakeyframetrackIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_iterator_increment'));
final _heresdkVenueMapviewBindingslistofSdkMapviewMapcamerakeyframetrackIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_iterator_get'));

Pointer<Void> heresdkVenueMapviewBindingslistofSdkMapviewMapcamerakeyframetrackToFfi(List<MapCameraKeyframeTrack> value) {
  final _result = _heresdkVenueMapviewBindingslistofSdkMapviewMapcamerakeyframetrackCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkMapviewMapcamerakeyframetrackToFfi(element);
    _heresdkVenueMapviewBindingslistofSdkMapviewMapcamerakeyframetrackInsert(_result, _elementHandle);
    sdkMapviewMapcamerakeyframetrackReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<MapCameraKeyframeTrack> heresdkVenueMapviewBindingslistofSdkMapviewMapcamerakeyframetrackFromFfi(Pointer<Void> handle) {
  final result = List<MapCameraKeyframeTrack>.empty(growable: true);
  final _iteratorHandle = _heresdkVenueMapviewBindingslistofSdkMapviewMapcamerakeyframetrackIterator(handle);
  while (_heresdkVenueMapviewBindingslistofSdkMapviewMapcamerakeyframetrackIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkVenueMapviewBindingslistofSdkMapviewMapcamerakeyframetrackIteratorGet(_iteratorHandle);
    try {
      result.add(sdkMapviewMapcamerakeyframetrackFromFfi(_elementHandle));
    } finally {
      sdkMapviewMapcamerakeyframetrackReleaseFfiHandle(_elementHandle);
    }
    _heresdkVenueMapviewBindingslistofSdkMapviewMapcamerakeyframetrackIteratorIncrement(_iteratorHandle);
  }
  _heresdkVenueMapviewBindingslistofSdkMapviewMapcamerakeyframetrackIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkVenueMapviewBindingslistofSdkMapviewMapcamerakeyframetrackReleaseFfiHandle(Pointer<Void> handle) => _heresdkVenueMapviewBindingslistofSdkMapviewMapcamerakeyframetrackReleaseHandle(handle);

final _heresdkVenueMapviewBindingslistofSdkMapviewMapcamerakeyframetrackCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_create_handle_nullable'));
final _heresdkVenueMapviewBindingslistofSdkMapviewMapcamerakeyframetrackReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_release_handle_nullable'));
final _heresdkVenueMapviewBindingslistofSdkMapviewMapcamerakeyframetrackGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_get_value_nullable'));

Pointer<Void> heresdkVenueMapviewBindingslistofSdkMapviewMapcamerakeyframetrackToFfiNullable(List<MapCameraKeyframeTrack>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkVenueMapviewBindingslistofSdkMapviewMapcamerakeyframetrackToFfi(value);
  final result = _heresdkVenueMapviewBindingslistofSdkMapviewMapcamerakeyframetrackCreateHandleNullable(_handle);
  heresdkVenueMapviewBindingslistofSdkMapviewMapcamerakeyframetrackReleaseFfiHandle(_handle);
  return result;
}

List<MapCameraKeyframeTrack>? heresdkVenueMapviewBindingslistofSdkMapviewMapcamerakeyframetrackFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkVenueMapviewBindingslistofSdkMapviewMapcamerakeyframetrackGetValueNullable(handle);
  final result = heresdkVenueMapviewBindingslistofSdkMapviewMapcamerakeyframetrackFromFfi(_handle);
  heresdkVenueMapviewBindingslistofSdkMapviewMapcamerakeyframetrackReleaseFfiHandle(_handle);
  return result;
}

void heresdkVenueMapviewBindingslistofSdkMapviewMapcamerakeyframetrackReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkVenueMapviewBindingslistofSdkMapviewMapcamerakeyframetrackReleaseHandleNullable(handle);

final _heresdkVenueMapviewBindingslistofSdkMapviewMapmarkerCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_mapview_MapMarker_create_handle'));
final _heresdkVenueMapviewBindingslistofSdkMapviewMapmarkerReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_mapview_MapMarker_release_handle'));
final _heresdkVenueMapviewBindingslistofSdkMapviewMapmarkerInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_mapview_MapMarker_insert'));
final _heresdkVenueMapviewBindingslistofSdkMapviewMapmarkerIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_mapview_MapMarker_iterator'));
final _heresdkVenueMapviewBindingslistofSdkMapviewMapmarkerIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_mapview_MapMarker_iterator_release_handle'));
final _heresdkVenueMapviewBindingslistofSdkMapviewMapmarkerIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_mapview_MapMarker_iterator_is_valid'));
final _heresdkVenueMapviewBindingslistofSdkMapviewMapmarkerIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_mapview_MapMarker_iterator_increment'));
final _heresdkVenueMapviewBindingslistofSdkMapviewMapmarkerIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_mapview_MapMarker_iterator_get'));

Pointer<Void> heresdkVenueMapviewBindingslistofSdkMapviewMapmarkerToFfi(List<MapMarker> value) {
  final _result = _heresdkVenueMapviewBindingslistofSdkMapviewMapmarkerCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkMapviewMapmarkerToFfi(element);
    _heresdkVenueMapviewBindingslistofSdkMapviewMapmarkerInsert(_result, _elementHandle);
    sdkMapviewMapmarkerReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<MapMarker> heresdkVenueMapviewBindingslistofSdkMapviewMapmarkerFromFfi(Pointer<Void> handle) {
  final result = List<MapMarker>.empty(growable: true);
  final _iteratorHandle = _heresdkVenueMapviewBindingslistofSdkMapviewMapmarkerIterator(handle);
  while (_heresdkVenueMapviewBindingslistofSdkMapviewMapmarkerIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkVenueMapviewBindingslistofSdkMapviewMapmarkerIteratorGet(_iteratorHandle);
    try {
      result.add(sdkMapviewMapmarkerFromFfi(_elementHandle));
    } finally {
      sdkMapviewMapmarkerReleaseFfiHandle(_elementHandle);
    }
    _heresdkVenueMapviewBindingslistofSdkMapviewMapmarkerIteratorIncrement(_iteratorHandle);
  }
  _heresdkVenueMapviewBindingslistofSdkMapviewMapmarkerIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkVenueMapviewBindingslistofSdkMapviewMapmarkerReleaseFfiHandle(Pointer<Void> handle) => _heresdkVenueMapviewBindingslistofSdkMapviewMapmarkerReleaseHandle(handle);

final _heresdkVenueMapviewBindingslistofSdkMapviewMapmarkerCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_mapview_MapMarker_create_handle_nullable'));
final _heresdkVenueMapviewBindingslistofSdkMapviewMapmarkerReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_mapview_MapMarker_release_handle_nullable'));
final _heresdkVenueMapviewBindingslistofSdkMapviewMapmarkerGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_mapview_MapMarker_get_value_nullable'));

Pointer<Void> heresdkVenueMapviewBindingslistofSdkMapviewMapmarkerToFfiNullable(List<MapMarker>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkVenueMapviewBindingslistofSdkMapviewMapmarkerToFfi(value);
  final result = _heresdkVenueMapviewBindingslistofSdkMapviewMapmarkerCreateHandleNullable(_handle);
  heresdkVenueMapviewBindingslistofSdkMapviewMapmarkerReleaseFfiHandle(_handle);
  return result;
}

List<MapMarker>? heresdkVenueMapviewBindingslistofSdkMapviewMapmarkerFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkVenueMapviewBindingslistofSdkMapviewMapmarkerGetValueNullable(handle);
  final result = heresdkVenueMapviewBindingslistofSdkMapviewMapmarkerFromFfi(_handle);
  heresdkVenueMapviewBindingslistofSdkMapviewMapmarkerReleaseFfiHandle(_handle);
  return result;
}

void heresdkVenueMapviewBindingslistofSdkMapviewMapmarkerReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkVenueMapviewBindingslistofSdkMapviewMapmarkerReleaseHandleNullable(handle);

final _heresdkVenueMapviewBindingslistofSdkMapviewMapmarkerclusterGroupingCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_mapview_MapMarkerCluster_Grouping_create_handle'));
final _heresdkVenueMapviewBindingslistofSdkMapviewMapmarkerclusterGroupingReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_mapview_MapMarkerCluster_Grouping_release_handle'));
final _heresdkVenueMapviewBindingslistofSdkMapviewMapmarkerclusterGroupingInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_mapview_MapMarkerCluster_Grouping_insert'));
final _heresdkVenueMapviewBindingslistofSdkMapviewMapmarkerclusterGroupingIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_mapview_MapMarkerCluster_Grouping_iterator'));
final _heresdkVenueMapviewBindingslistofSdkMapviewMapmarkerclusterGroupingIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_mapview_MapMarkerCluster_Grouping_iterator_release_handle'));
final _heresdkVenueMapviewBindingslistofSdkMapviewMapmarkerclusterGroupingIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_mapview_MapMarkerCluster_Grouping_iterator_is_valid'));
final _heresdkVenueMapviewBindingslistofSdkMapviewMapmarkerclusterGroupingIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_mapview_MapMarkerCluster_Grouping_iterator_increment'));
final _heresdkVenueMapviewBindingslistofSdkMapviewMapmarkerclusterGroupingIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_mapview_MapMarkerCluster_Grouping_iterator_get'));

Pointer<Void> heresdkVenueMapviewBindingslistofSdkMapviewMapmarkerclusterGroupingToFfi(List<MapMarkerClusterGrouping> value) {
  final _result = _heresdkVenueMapviewBindingslistofSdkMapviewMapmarkerclusterGroupingCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkMapviewMapmarkerclusterGroupingToFfi(element);
    _heresdkVenueMapviewBindingslistofSdkMapviewMapmarkerclusterGroupingInsert(_result, _elementHandle);
    sdkMapviewMapmarkerclusterGroupingReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<MapMarkerClusterGrouping> heresdkVenueMapviewBindingslistofSdkMapviewMapmarkerclusterGroupingFromFfi(Pointer<Void> handle) {
  final result = List<MapMarkerClusterGrouping>.empty(growable: true);
  final _iteratorHandle = _heresdkVenueMapviewBindingslistofSdkMapviewMapmarkerclusterGroupingIterator(handle);
  while (_heresdkVenueMapviewBindingslistofSdkMapviewMapmarkerclusterGroupingIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkVenueMapviewBindingslistofSdkMapviewMapmarkerclusterGroupingIteratorGet(_iteratorHandle);
    try {
      result.add(sdkMapviewMapmarkerclusterGroupingFromFfi(_elementHandle));
    } finally {
      sdkMapviewMapmarkerclusterGroupingReleaseFfiHandle(_elementHandle);
    }
    _heresdkVenueMapviewBindingslistofSdkMapviewMapmarkerclusterGroupingIteratorIncrement(_iteratorHandle);
  }
  _heresdkVenueMapviewBindingslistofSdkMapviewMapmarkerclusterGroupingIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkVenueMapviewBindingslistofSdkMapviewMapmarkerclusterGroupingReleaseFfiHandle(Pointer<Void> handle) => _heresdkVenueMapviewBindingslistofSdkMapviewMapmarkerclusterGroupingReleaseHandle(handle);

final _heresdkVenueMapviewBindingslistofSdkMapviewMapmarkerclusterGroupingCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_mapview_MapMarkerCluster_Grouping_create_handle_nullable'));
final _heresdkVenueMapviewBindingslistofSdkMapviewMapmarkerclusterGroupingReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_mapview_MapMarkerCluster_Grouping_release_handle_nullable'));
final _heresdkVenueMapviewBindingslistofSdkMapviewMapmarkerclusterGroupingGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_mapview_MapMarkerCluster_Grouping_get_value_nullable'));

Pointer<Void> heresdkVenueMapviewBindingslistofSdkMapviewMapmarkerclusterGroupingToFfiNullable(List<MapMarkerClusterGrouping>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkVenueMapviewBindingslistofSdkMapviewMapmarkerclusterGroupingToFfi(value);
  final result = _heresdkVenueMapviewBindingslistofSdkMapviewMapmarkerclusterGroupingCreateHandleNullable(_handle);
  heresdkVenueMapviewBindingslistofSdkMapviewMapmarkerclusterGroupingReleaseFfiHandle(_handle);
  return result;
}

List<MapMarkerClusterGrouping>? heresdkVenueMapviewBindingslistofSdkMapviewMapmarkerclusterGroupingFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkVenueMapviewBindingslistofSdkMapviewMapmarkerclusterGroupingGetValueNullable(handle);
  final result = heresdkVenueMapviewBindingslistofSdkMapviewMapmarkerclusterGroupingFromFfi(_handle);
  heresdkVenueMapviewBindingslistofSdkMapviewMapmarkerclusterGroupingReleaseFfiHandle(_handle);
  return result;
}

void heresdkVenueMapviewBindingslistofSdkMapviewMapmarkerclusterGroupingReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkVenueMapviewBindingslistofSdkMapviewMapmarkerclusterGroupingReleaseHandleNullable(handle);

final _heresdkVenueMapviewBindingslistofSdkMapviewMappolygonCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_mapview_MapPolygon_create_handle'));
final _heresdkVenueMapviewBindingslistofSdkMapviewMappolygonReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_mapview_MapPolygon_release_handle'));
final _heresdkVenueMapviewBindingslistofSdkMapviewMappolygonInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_mapview_MapPolygon_insert'));
final _heresdkVenueMapviewBindingslistofSdkMapviewMappolygonIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_mapview_MapPolygon_iterator'));
final _heresdkVenueMapviewBindingslistofSdkMapviewMappolygonIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_mapview_MapPolygon_iterator_release_handle'));
final _heresdkVenueMapviewBindingslistofSdkMapviewMappolygonIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_mapview_MapPolygon_iterator_is_valid'));
final _heresdkVenueMapviewBindingslistofSdkMapviewMappolygonIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_mapview_MapPolygon_iterator_increment'));
final _heresdkVenueMapviewBindingslistofSdkMapviewMappolygonIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_mapview_MapPolygon_iterator_get'));

Pointer<Void> heresdkVenueMapviewBindingslistofSdkMapviewMappolygonToFfi(List<MapPolygon> value) {
  final _result = _heresdkVenueMapviewBindingslistofSdkMapviewMappolygonCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkMapviewMappolygonToFfi(element);
    _heresdkVenueMapviewBindingslistofSdkMapviewMappolygonInsert(_result, _elementHandle);
    sdkMapviewMappolygonReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<MapPolygon> heresdkVenueMapviewBindingslistofSdkMapviewMappolygonFromFfi(Pointer<Void> handle) {
  final result = List<MapPolygon>.empty(growable: true);
  final _iteratorHandle = _heresdkVenueMapviewBindingslistofSdkMapviewMappolygonIterator(handle);
  while (_heresdkVenueMapviewBindingslistofSdkMapviewMappolygonIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkVenueMapviewBindingslistofSdkMapviewMappolygonIteratorGet(_iteratorHandle);
    try {
      result.add(sdkMapviewMappolygonFromFfi(_elementHandle));
    } finally {
      sdkMapviewMappolygonReleaseFfiHandle(_elementHandle);
    }
    _heresdkVenueMapviewBindingslistofSdkMapviewMappolygonIteratorIncrement(_iteratorHandle);
  }
  _heresdkVenueMapviewBindingslistofSdkMapviewMappolygonIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkVenueMapviewBindingslistofSdkMapviewMappolygonReleaseFfiHandle(Pointer<Void> handle) => _heresdkVenueMapviewBindingslistofSdkMapviewMappolygonReleaseHandle(handle);

final _heresdkVenueMapviewBindingslistofSdkMapviewMappolygonCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_mapview_MapPolygon_create_handle_nullable'));
final _heresdkVenueMapviewBindingslistofSdkMapviewMappolygonReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_mapview_MapPolygon_release_handle_nullable'));
final _heresdkVenueMapviewBindingslistofSdkMapviewMappolygonGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_mapview_MapPolygon_get_value_nullable'));

Pointer<Void> heresdkVenueMapviewBindingslistofSdkMapviewMappolygonToFfiNullable(List<MapPolygon>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkVenueMapviewBindingslistofSdkMapviewMappolygonToFfi(value);
  final result = _heresdkVenueMapviewBindingslistofSdkMapviewMappolygonCreateHandleNullable(_handle);
  heresdkVenueMapviewBindingslistofSdkMapviewMappolygonReleaseFfiHandle(_handle);
  return result;
}

List<MapPolygon>? heresdkVenueMapviewBindingslistofSdkMapviewMappolygonFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkVenueMapviewBindingslistofSdkMapviewMappolygonGetValueNullable(handle);
  final result = heresdkVenueMapviewBindingslistofSdkMapviewMappolygonFromFfi(_handle);
  heresdkVenueMapviewBindingslistofSdkMapviewMappolygonReleaseFfiHandle(_handle);
  return result;
}

void heresdkVenueMapviewBindingslistofSdkMapviewMappolygonReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkVenueMapviewBindingslistofSdkMapviewMappolygonReleaseHandleNullable(handle);

final _heresdkVenueMapviewBindingslistofSdkMapviewMappolylineCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_mapview_MapPolyline_create_handle'));
final _heresdkVenueMapviewBindingslistofSdkMapviewMappolylineReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_mapview_MapPolyline_release_handle'));
final _heresdkVenueMapviewBindingslistofSdkMapviewMappolylineInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_mapview_MapPolyline_insert'));
final _heresdkVenueMapviewBindingslistofSdkMapviewMappolylineIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_mapview_MapPolyline_iterator'));
final _heresdkVenueMapviewBindingslistofSdkMapviewMappolylineIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_mapview_MapPolyline_iterator_release_handle'));
final _heresdkVenueMapviewBindingslistofSdkMapviewMappolylineIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_mapview_MapPolyline_iterator_is_valid'));
final _heresdkVenueMapviewBindingslistofSdkMapviewMappolylineIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_mapview_MapPolyline_iterator_increment'));
final _heresdkVenueMapviewBindingslistofSdkMapviewMappolylineIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_mapview_MapPolyline_iterator_get'));

Pointer<Void> heresdkVenueMapviewBindingslistofSdkMapviewMappolylineToFfi(List<MapPolyline> value) {
  final _result = _heresdkVenueMapviewBindingslistofSdkMapviewMappolylineCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkMapviewMappolylineToFfi(element);
    _heresdkVenueMapviewBindingslistofSdkMapviewMappolylineInsert(_result, _elementHandle);
    sdkMapviewMappolylineReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<MapPolyline> heresdkVenueMapviewBindingslistofSdkMapviewMappolylineFromFfi(Pointer<Void> handle) {
  final result = List<MapPolyline>.empty(growable: true);
  final _iteratorHandle = _heresdkVenueMapviewBindingslistofSdkMapviewMappolylineIterator(handle);
  while (_heresdkVenueMapviewBindingslistofSdkMapviewMappolylineIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkVenueMapviewBindingslistofSdkMapviewMappolylineIteratorGet(_iteratorHandle);
    try {
      result.add(sdkMapviewMappolylineFromFfi(_elementHandle));
    } finally {
      sdkMapviewMappolylineReleaseFfiHandle(_elementHandle);
    }
    _heresdkVenueMapviewBindingslistofSdkMapviewMappolylineIteratorIncrement(_iteratorHandle);
  }
  _heresdkVenueMapviewBindingslistofSdkMapviewMappolylineIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkVenueMapviewBindingslistofSdkMapviewMappolylineReleaseFfiHandle(Pointer<Void> handle) => _heresdkVenueMapviewBindingslistofSdkMapviewMappolylineReleaseHandle(handle);

final _heresdkVenueMapviewBindingslistofSdkMapviewMappolylineCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_mapview_MapPolyline_create_handle_nullable'));
final _heresdkVenueMapviewBindingslistofSdkMapviewMappolylineReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_mapview_MapPolyline_release_handle_nullable'));
final _heresdkVenueMapviewBindingslistofSdkMapviewMappolylineGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_mapview_MapPolyline_get_value_nullable'));

Pointer<Void> heresdkVenueMapviewBindingslistofSdkMapviewMappolylineToFfiNullable(List<MapPolyline>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkVenueMapviewBindingslistofSdkMapviewMappolylineToFfi(value);
  final result = _heresdkVenueMapviewBindingslistofSdkMapviewMappolylineCreateHandleNullable(_handle);
  heresdkVenueMapviewBindingslistofSdkMapviewMappolylineReleaseFfiHandle(_handle);
  return result;
}

List<MapPolyline>? heresdkVenueMapviewBindingslistofSdkMapviewMappolylineFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkVenueMapviewBindingslistofSdkMapviewMappolylineGetValueNullable(handle);
  final result = heresdkVenueMapviewBindingslistofSdkMapviewMappolylineFromFfi(_handle);
  heresdkVenueMapviewBindingslistofSdkMapviewMappolylineReleaseFfiHandle(_handle);
  return result;
}

void heresdkVenueMapviewBindingslistofSdkMapviewMappolylineReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkVenueMapviewBindingslistofSdkMapviewMappolylineReleaseHandleNullable(handle);

final _heresdkVenueMapviewBindingslistofSdkMapviewPickmapcontentresultforflutterTrafficincidentresultCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_mapview_PickMapContentResultForFlutter_TrafficIncidentResult_create_handle'));
final _heresdkVenueMapviewBindingslistofSdkMapviewPickmapcontentresultforflutterTrafficincidentresultReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_mapview_PickMapContentResultForFlutter_TrafficIncidentResult_release_handle'));
final _heresdkVenueMapviewBindingslistofSdkMapviewPickmapcontentresultforflutterTrafficincidentresultInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_mapview_PickMapContentResultForFlutter_TrafficIncidentResult_insert'));
final _heresdkVenueMapviewBindingslistofSdkMapviewPickmapcontentresultforflutterTrafficincidentresultIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_mapview_PickMapContentResultForFlutter_TrafficIncidentResult_iterator'));
final _heresdkVenueMapviewBindingslistofSdkMapviewPickmapcontentresultforflutterTrafficincidentresultIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_mapview_PickMapContentResultForFlutter_TrafficIncidentResult_iterator_release_handle'));
final _heresdkVenueMapviewBindingslistofSdkMapviewPickmapcontentresultforflutterTrafficincidentresultIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_mapview_PickMapContentResultForFlutter_TrafficIncidentResult_iterator_is_valid'));
final _heresdkVenueMapviewBindingslistofSdkMapviewPickmapcontentresultforflutterTrafficincidentresultIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_mapview_PickMapContentResultForFlutter_TrafficIncidentResult_iterator_increment'));
final _heresdkVenueMapviewBindingslistofSdkMapviewPickmapcontentresultforflutterTrafficincidentresultIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_mapview_PickMapContentResultForFlutter_TrafficIncidentResult_iterator_get'));

Pointer<Void> heresdkVenueMapviewBindingslistofSdkMapviewPickmapcontentresultforflutterTrafficincidentresultToFfi(List<PickTrafficIncidentResult> value) {
  final _result = _heresdkVenueMapviewBindingslistofSdkMapviewPickmapcontentresultforflutterTrafficincidentresultCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkMapviewPickmapcontentresultforflutterTrafficincidentresultToFfi(element);
    _heresdkVenueMapviewBindingslistofSdkMapviewPickmapcontentresultforflutterTrafficincidentresultInsert(_result, _elementHandle);
    sdkMapviewPickmapcontentresultforflutterTrafficincidentresultReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<PickTrafficIncidentResult> heresdkVenueMapviewBindingslistofSdkMapviewPickmapcontentresultforflutterTrafficincidentresultFromFfi(Pointer<Void> handle) {
  final result = List<PickTrafficIncidentResult>.empty(growable: true);
  final _iteratorHandle = _heresdkVenueMapviewBindingslistofSdkMapviewPickmapcontentresultforflutterTrafficincidentresultIterator(handle);
  while (_heresdkVenueMapviewBindingslistofSdkMapviewPickmapcontentresultforflutterTrafficincidentresultIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkVenueMapviewBindingslistofSdkMapviewPickmapcontentresultforflutterTrafficincidentresultIteratorGet(_iteratorHandle);
    try {
      result.add(sdkMapviewPickmapcontentresultforflutterTrafficincidentresultFromFfi(_elementHandle));
    } finally {
      sdkMapviewPickmapcontentresultforflutterTrafficincidentresultReleaseFfiHandle(_elementHandle);
    }
    _heresdkVenueMapviewBindingslistofSdkMapviewPickmapcontentresultforflutterTrafficincidentresultIteratorIncrement(_iteratorHandle);
  }
  _heresdkVenueMapviewBindingslistofSdkMapviewPickmapcontentresultforflutterTrafficincidentresultIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkVenueMapviewBindingslistofSdkMapviewPickmapcontentresultforflutterTrafficincidentresultReleaseFfiHandle(Pointer<Void> handle) => _heresdkVenueMapviewBindingslistofSdkMapviewPickmapcontentresultforflutterTrafficincidentresultReleaseHandle(handle);

final _heresdkVenueMapviewBindingslistofSdkMapviewPickmapcontentresultforflutterTrafficincidentresultCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_mapview_PickMapContentResultForFlutter_TrafficIncidentResult_create_handle_nullable'));
final _heresdkVenueMapviewBindingslistofSdkMapviewPickmapcontentresultforflutterTrafficincidentresultReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_mapview_PickMapContentResultForFlutter_TrafficIncidentResult_release_handle_nullable'));
final _heresdkVenueMapviewBindingslistofSdkMapviewPickmapcontentresultforflutterTrafficincidentresultGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_mapview_PickMapContentResultForFlutter_TrafficIncidentResult_get_value_nullable'));

Pointer<Void> heresdkVenueMapviewBindingslistofSdkMapviewPickmapcontentresultforflutterTrafficincidentresultToFfiNullable(List<PickTrafficIncidentResult>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkVenueMapviewBindingslistofSdkMapviewPickmapcontentresultforflutterTrafficincidentresultToFfi(value);
  final result = _heresdkVenueMapviewBindingslistofSdkMapviewPickmapcontentresultforflutterTrafficincidentresultCreateHandleNullable(_handle);
  heresdkVenueMapviewBindingslistofSdkMapviewPickmapcontentresultforflutterTrafficincidentresultReleaseFfiHandle(_handle);
  return result;
}

List<PickTrafficIncidentResult>? heresdkVenueMapviewBindingslistofSdkMapviewPickmapcontentresultforflutterTrafficincidentresultFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkVenueMapviewBindingslistofSdkMapviewPickmapcontentresultforflutterTrafficincidentresultGetValueNullable(handle);
  final result = heresdkVenueMapviewBindingslistofSdkMapviewPickmapcontentresultforflutterTrafficincidentresultFromFfi(_handle);
  heresdkVenueMapviewBindingslistofSdkMapviewPickmapcontentresultforflutterTrafficincidentresultReleaseFfiHandle(_handle);
  return result;
}

void heresdkVenueMapviewBindingslistofSdkMapviewPickmapcontentresultforflutterTrafficincidentresultReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkVenueMapviewBindingslistofSdkMapviewPickmapcontentresultforflutterTrafficincidentresultReleaseHandleNullable(handle);

final _heresdkVenueMapviewBindingslistofSdkMapviewPickmapfeaturesresultPoiresultCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_mapview_PickMapFeaturesResult_PoiResult_create_handle'));
final _heresdkVenueMapviewBindingslistofSdkMapviewPickmapfeaturesresultPoiresultReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_mapview_PickMapFeaturesResult_PoiResult_release_handle'));
final _heresdkVenueMapviewBindingslistofSdkMapviewPickmapfeaturesresultPoiresultInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_mapview_PickMapFeaturesResult_PoiResult_insert'));
final _heresdkVenueMapviewBindingslistofSdkMapviewPickmapfeaturesresultPoiresultIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_mapview_PickMapFeaturesResult_PoiResult_iterator'));
final _heresdkVenueMapviewBindingslistofSdkMapviewPickmapfeaturesresultPoiresultIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_mapview_PickMapFeaturesResult_PoiResult_iterator_release_handle'));
final _heresdkVenueMapviewBindingslistofSdkMapviewPickmapfeaturesresultPoiresultIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_mapview_PickMapFeaturesResult_PoiResult_iterator_is_valid'));
final _heresdkVenueMapviewBindingslistofSdkMapviewPickmapfeaturesresultPoiresultIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_mapview_PickMapFeaturesResult_PoiResult_iterator_increment'));
final _heresdkVenueMapviewBindingslistofSdkMapviewPickmapfeaturesresultPoiresultIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_mapview_PickMapFeaturesResult_PoiResult_iterator_get'));

Pointer<Void> heresdkVenueMapviewBindingslistofSdkMapviewPickmapfeaturesresultPoiresultToFfi(List<PickPoiResult> value) {
  final _result = _heresdkVenueMapviewBindingslistofSdkMapviewPickmapfeaturesresultPoiresultCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkMapviewPickmapfeaturesresultPoiresultToFfi(element);
    _heresdkVenueMapviewBindingslistofSdkMapviewPickmapfeaturesresultPoiresultInsert(_result, _elementHandle);
    sdkMapviewPickmapfeaturesresultPoiresultReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<PickPoiResult> heresdkVenueMapviewBindingslistofSdkMapviewPickmapfeaturesresultPoiresultFromFfi(Pointer<Void> handle) {
  final result = List<PickPoiResult>.empty(growable: true);
  final _iteratorHandle = _heresdkVenueMapviewBindingslistofSdkMapviewPickmapfeaturesresultPoiresultIterator(handle);
  while (_heresdkVenueMapviewBindingslistofSdkMapviewPickmapfeaturesresultPoiresultIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkVenueMapviewBindingslistofSdkMapviewPickmapfeaturesresultPoiresultIteratorGet(_iteratorHandle);
    try {
      result.add(sdkMapviewPickmapfeaturesresultPoiresultFromFfi(_elementHandle));
    } finally {
      sdkMapviewPickmapfeaturesresultPoiresultReleaseFfiHandle(_elementHandle);
    }
    _heresdkVenueMapviewBindingslistofSdkMapviewPickmapfeaturesresultPoiresultIteratorIncrement(_iteratorHandle);
  }
  _heresdkVenueMapviewBindingslistofSdkMapviewPickmapfeaturesresultPoiresultIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkVenueMapviewBindingslistofSdkMapviewPickmapfeaturesresultPoiresultReleaseFfiHandle(Pointer<Void> handle) => _heresdkVenueMapviewBindingslistofSdkMapviewPickmapfeaturesresultPoiresultReleaseHandle(handle);

final _heresdkVenueMapviewBindingslistofSdkMapviewPickmapfeaturesresultPoiresultCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_mapview_PickMapFeaturesResult_PoiResult_create_handle_nullable'));
final _heresdkVenueMapviewBindingslistofSdkMapviewPickmapfeaturesresultPoiresultReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_mapview_PickMapFeaturesResult_PoiResult_release_handle_nullable'));
final _heresdkVenueMapviewBindingslistofSdkMapviewPickmapfeaturesresultPoiresultGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_mapview_PickMapFeaturesResult_PoiResult_get_value_nullable'));

Pointer<Void> heresdkVenueMapviewBindingslistofSdkMapviewPickmapfeaturesresultPoiresultToFfiNullable(List<PickPoiResult>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkVenueMapviewBindingslistofSdkMapviewPickmapfeaturesresultPoiresultToFfi(value);
  final result = _heresdkVenueMapviewBindingslistofSdkMapviewPickmapfeaturesresultPoiresultCreateHandleNullable(_handle);
  heresdkVenueMapviewBindingslistofSdkMapviewPickmapfeaturesresultPoiresultReleaseFfiHandle(_handle);
  return result;
}

List<PickPoiResult>? heresdkVenueMapviewBindingslistofSdkMapviewPickmapfeaturesresultPoiresultFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkVenueMapviewBindingslistofSdkMapviewPickmapfeaturesresultPoiresultGetValueNullable(handle);
  final result = heresdkVenueMapviewBindingslistofSdkMapviewPickmapfeaturesresultPoiresultFromFfi(_handle);
  heresdkVenueMapviewBindingslistofSdkMapviewPickmapfeaturesresultPoiresultReleaseFfiHandle(_handle);
  return result;
}

void heresdkVenueMapviewBindingslistofSdkMapviewPickmapfeaturesresultPoiresultReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkVenueMapviewBindingslistofSdkMapviewPickmapfeaturesresultPoiresultReleaseHandleNullable(handle);

final _heresdkVenueMapviewBindingslistofSdkVenueDataEntityinfoCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_venue_data_EntityInfo_create_handle'));
final _heresdkVenueMapviewBindingslistofSdkVenueDataEntityinfoReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_venue_data_EntityInfo_release_handle'));
final _heresdkVenueMapviewBindingslistofSdkVenueDataEntityinfoInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_venue_data_EntityInfo_insert'));
final _heresdkVenueMapviewBindingslistofSdkVenueDataEntityinfoIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_venue_data_EntityInfo_iterator'));
final _heresdkVenueMapviewBindingslistofSdkVenueDataEntityinfoIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_venue_data_EntityInfo_iterator_release_handle'));
final _heresdkVenueMapviewBindingslistofSdkVenueDataEntityinfoIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_venue_data_EntityInfo_iterator_is_valid'));
final _heresdkVenueMapviewBindingslistofSdkVenueDataEntityinfoIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_venue_data_EntityInfo_iterator_increment'));
final _heresdkVenueMapviewBindingslistofSdkVenueDataEntityinfoIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_venue_data_EntityInfo_iterator_get'));

Pointer<Void> heresdkVenueMapviewBindingslistofSdkVenueDataEntityinfoToFfi(List<EntityInfo> value) {
  final _result = _heresdkVenueMapviewBindingslistofSdkVenueDataEntityinfoCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkVenueDataEntityinfoToFfi(element);
    _heresdkVenueMapviewBindingslistofSdkVenueDataEntityinfoInsert(_result, _elementHandle);
    sdkVenueDataEntityinfoReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<EntityInfo> heresdkVenueMapviewBindingslistofSdkVenueDataEntityinfoFromFfi(Pointer<Void> handle) {
  final result = List<EntityInfo>.empty(growable: true);
  final _iteratorHandle = _heresdkVenueMapviewBindingslistofSdkVenueDataEntityinfoIterator(handle);
  while (_heresdkVenueMapviewBindingslistofSdkVenueDataEntityinfoIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkVenueMapviewBindingslistofSdkVenueDataEntityinfoIteratorGet(_iteratorHandle);
    try {
      result.add(sdkVenueDataEntityinfoFromFfi(_elementHandle));
    } finally {
      sdkVenueDataEntityinfoReleaseFfiHandle(_elementHandle);
    }
    _heresdkVenueMapviewBindingslistofSdkVenueDataEntityinfoIteratorIncrement(_iteratorHandle);
  }
  _heresdkVenueMapviewBindingslistofSdkVenueDataEntityinfoIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkVenueMapviewBindingslistofSdkVenueDataEntityinfoReleaseFfiHandle(Pointer<Void> handle) => _heresdkVenueMapviewBindingslistofSdkVenueDataEntityinfoReleaseHandle(handle);

final _heresdkVenueMapviewBindingslistofSdkVenueDataEntityinfoCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_venue_data_EntityInfo_create_handle_nullable'));
final _heresdkVenueMapviewBindingslistofSdkVenueDataEntityinfoReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_venue_data_EntityInfo_release_handle_nullable'));
final _heresdkVenueMapviewBindingslistofSdkVenueDataEntityinfoGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_venue_data_EntityInfo_get_value_nullable'));

Pointer<Void> heresdkVenueMapviewBindingslistofSdkVenueDataEntityinfoToFfiNullable(List<EntityInfo>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkVenueMapviewBindingslistofSdkVenueDataEntityinfoToFfi(value);
  final result = _heresdkVenueMapviewBindingslistofSdkVenueDataEntityinfoCreateHandleNullable(_handle);
  heresdkVenueMapviewBindingslistofSdkVenueDataEntityinfoReleaseFfiHandle(_handle);
  return result;
}

List<EntityInfo>? heresdkVenueMapviewBindingslistofSdkVenueDataEntityinfoFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkVenueMapviewBindingslistofSdkVenueDataEntityinfoGetValueNullable(handle);
  final result = heresdkVenueMapviewBindingslistofSdkVenueDataEntityinfoFromFfi(_handle);
  heresdkVenueMapviewBindingslistofSdkVenueDataEntityinfoReleaseFfiHandle(_handle);
  return result;
}

void heresdkVenueMapviewBindingslistofSdkVenueDataEntityinfoReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkVenueMapviewBindingslistofSdkVenueDataEntityinfoReleaseHandleNullable(handle);

final _heresdkVenueMapviewBindingslistofSdkVenueDataGeoshapeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_venue_data_GeoShape_create_handle'));
final _heresdkVenueMapviewBindingslistofSdkVenueDataGeoshapeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_venue_data_GeoShape_release_handle'));
final _heresdkVenueMapviewBindingslistofSdkVenueDataGeoshapeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_venue_data_GeoShape_insert'));
final _heresdkVenueMapviewBindingslistofSdkVenueDataGeoshapeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_venue_data_GeoShape_iterator'));
final _heresdkVenueMapviewBindingslistofSdkVenueDataGeoshapeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_venue_data_GeoShape_iterator_release_handle'));
final _heresdkVenueMapviewBindingslistofSdkVenueDataGeoshapeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_venue_data_GeoShape_iterator_is_valid'));
final _heresdkVenueMapviewBindingslistofSdkVenueDataGeoshapeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_venue_data_GeoShape_iterator_increment'));
final _heresdkVenueMapviewBindingslistofSdkVenueDataGeoshapeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_venue_data_GeoShape_iterator_get'));

Pointer<Void> heresdkVenueMapviewBindingslistofSdkVenueDataGeoshapeToFfi(List<GeoShape> value) {
  final _result = _heresdkVenueMapviewBindingslistofSdkVenueDataGeoshapeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkVenueDataGeoshapeToFfi(element);
    _heresdkVenueMapviewBindingslistofSdkVenueDataGeoshapeInsert(_result, _elementHandle);
    sdkVenueDataGeoshapeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoShape> heresdkVenueMapviewBindingslistofSdkVenueDataGeoshapeFromFfi(Pointer<Void> handle) {
  final result = List<GeoShape>.empty(growable: true);
  final _iteratorHandle = _heresdkVenueMapviewBindingslistofSdkVenueDataGeoshapeIterator(handle);
  while (_heresdkVenueMapviewBindingslistofSdkVenueDataGeoshapeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkVenueMapviewBindingslistofSdkVenueDataGeoshapeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkVenueDataGeoshapeFromFfi(_elementHandle));
    } finally {
      sdkVenueDataGeoshapeReleaseFfiHandle(_elementHandle);
    }
    _heresdkVenueMapviewBindingslistofSdkVenueDataGeoshapeIteratorIncrement(_iteratorHandle);
  }
  _heresdkVenueMapviewBindingslistofSdkVenueDataGeoshapeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkVenueMapviewBindingslistofSdkVenueDataGeoshapeReleaseFfiHandle(Pointer<Void> handle) => _heresdkVenueMapviewBindingslistofSdkVenueDataGeoshapeReleaseHandle(handle);

final _heresdkVenueMapviewBindingslistofSdkVenueDataGeoshapeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_venue_data_GeoShape_create_handle_nullable'));
final _heresdkVenueMapviewBindingslistofSdkVenueDataGeoshapeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_venue_data_GeoShape_release_handle_nullable'));
final _heresdkVenueMapviewBindingslistofSdkVenueDataGeoshapeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_venue_data_GeoShape_get_value_nullable'));

Pointer<Void> heresdkVenueMapviewBindingslistofSdkVenueDataGeoshapeToFfiNullable(List<GeoShape>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkVenueMapviewBindingslistofSdkVenueDataGeoshapeToFfi(value);
  final result = _heresdkVenueMapviewBindingslistofSdkVenueDataGeoshapeCreateHandleNullable(_handle);
  heresdkVenueMapviewBindingslistofSdkVenueDataGeoshapeReleaseFfiHandle(_handle);
  return result;
}

List<GeoShape>? heresdkVenueMapviewBindingslistofSdkVenueDataGeoshapeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkVenueMapviewBindingslistofSdkVenueDataGeoshapeGetValueNullable(handle);
  final result = heresdkVenueMapviewBindingslistofSdkVenueDataGeoshapeFromFfi(_handle);
  heresdkVenueMapviewBindingslistofSdkVenueDataGeoshapeReleaseFfiHandle(_handle);
  return result;
}

void heresdkVenueMapviewBindingslistofSdkVenueDataGeoshapeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkVenueMapviewBindingslistofSdkVenueDataGeoshapeReleaseHandleNullable(handle);

final _heresdkVenueMapviewBindingslistofSdkVenueDataVenuedrawingCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_venue_data_VenueDrawing_create_handle'));
final _heresdkVenueMapviewBindingslistofSdkVenueDataVenuedrawingReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_venue_data_VenueDrawing_release_handle'));
final _heresdkVenueMapviewBindingslistofSdkVenueDataVenuedrawingInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_venue_data_VenueDrawing_insert'));
final _heresdkVenueMapviewBindingslistofSdkVenueDataVenuedrawingIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_venue_data_VenueDrawing_iterator'));
final _heresdkVenueMapviewBindingslistofSdkVenueDataVenuedrawingIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_venue_data_VenueDrawing_iterator_release_handle'));
final _heresdkVenueMapviewBindingslistofSdkVenueDataVenuedrawingIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_venue_data_VenueDrawing_iterator_is_valid'));
final _heresdkVenueMapviewBindingslistofSdkVenueDataVenuedrawingIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_venue_data_VenueDrawing_iterator_increment'));
final _heresdkVenueMapviewBindingslistofSdkVenueDataVenuedrawingIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_venue_data_VenueDrawing_iterator_get'));

Pointer<Void> heresdkVenueMapviewBindingslistofSdkVenueDataVenuedrawingToFfi(List<VenueDrawing> value) {
  final _result = _heresdkVenueMapviewBindingslistofSdkVenueDataVenuedrawingCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkVenueDataVenuedrawingToFfi(element);
    _heresdkVenueMapviewBindingslistofSdkVenueDataVenuedrawingInsert(_result, _elementHandle);
    sdkVenueDataVenuedrawingReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<VenueDrawing> heresdkVenueMapviewBindingslistofSdkVenueDataVenuedrawingFromFfi(Pointer<Void> handle) {
  final result = List<VenueDrawing>.empty(growable: true);
  final _iteratorHandle = _heresdkVenueMapviewBindingslistofSdkVenueDataVenuedrawingIterator(handle);
  while (_heresdkVenueMapviewBindingslistofSdkVenueDataVenuedrawingIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkVenueMapviewBindingslistofSdkVenueDataVenuedrawingIteratorGet(_iteratorHandle);
    try {
      result.add(sdkVenueDataVenuedrawingFromFfi(_elementHandle));
    } finally {
      sdkVenueDataVenuedrawingReleaseFfiHandle(_elementHandle);
    }
    _heresdkVenueMapviewBindingslistofSdkVenueDataVenuedrawingIteratorIncrement(_iteratorHandle);
  }
  _heresdkVenueMapviewBindingslistofSdkVenueDataVenuedrawingIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkVenueMapviewBindingslistofSdkVenueDataVenuedrawingReleaseFfiHandle(Pointer<Void> handle) => _heresdkVenueMapviewBindingslistofSdkVenueDataVenuedrawingReleaseHandle(handle);

final _heresdkVenueMapviewBindingslistofSdkVenueDataVenuedrawingCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_venue_data_VenueDrawing_create_handle_nullable'));
final _heresdkVenueMapviewBindingslistofSdkVenueDataVenuedrawingReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_venue_data_VenueDrawing_release_handle_nullable'));
final _heresdkVenueMapviewBindingslistofSdkVenueDataVenuedrawingGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_venue_data_VenueDrawing_get_value_nullable'));

Pointer<Void> heresdkVenueMapviewBindingslistofSdkVenueDataVenuedrawingToFfiNullable(List<VenueDrawing>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkVenueMapviewBindingslistofSdkVenueDataVenuedrawingToFfi(value);
  final result = _heresdkVenueMapviewBindingslistofSdkVenueDataVenuedrawingCreateHandleNullable(_handle);
  heresdkVenueMapviewBindingslistofSdkVenueDataVenuedrawingReleaseFfiHandle(_handle);
  return result;
}

List<VenueDrawing>? heresdkVenueMapviewBindingslistofSdkVenueDataVenuedrawingFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkVenueMapviewBindingslistofSdkVenueDataVenuedrawingGetValueNullable(handle);
  final result = heresdkVenueMapviewBindingslistofSdkVenueDataVenuedrawingFromFfi(_handle);
  heresdkVenueMapviewBindingslistofSdkVenueDataVenuedrawingReleaseFfiHandle(_handle);
  return result;
}

void heresdkVenueMapviewBindingslistofSdkVenueDataVenuedrawingReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkVenueMapviewBindingslistofSdkVenueDataVenuedrawingReleaseHandleNullable(handle);

final _heresdkVenueMapviewBindingslistofSdkVenueDataVenuegeometryCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_venue_data_VenueGeometry_create_handle'));
final _heresdkVenueMapviewBindingslistofSdkVenueDataVenuegeometryReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_venue_data_VenueGeometry_release_handle'));
final _heresdkVenueMapviewBindingslistofSdkVenueDataVenuegeometryInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_venue_data_VenueGeometry_insert'));
final _heresdkVenueMapviewBindingslistofSdkVenueDataVenuegeometryIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_venue_data_VenueGeometry_iterator'));
final _heresdkVenueMapviewBindingslistofSdkVenueDataVenuegeometryIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_venue_data_VenueGeometry_iterator_release_handle'));
final _heresdkVenueMapviewBindingslistofSdkVenueDataVenuegeometryIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_venue_data_VenueGeometry_iterator_is_valid'));
final _heresdkVenueMapviewBindingslistofSdkVenueDataVenuegeometryIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_venue_data_VenueGeometry_iterator_increment'));
final _heresdkVenueMapviewBindingslistofSdkVenueDataVenuegeometryIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_venue_data_VenueGeometry_iterator_get'));

Pointer<Void> heresdkVenueMapviewBindingslistofSdkVenueDataVenuegeometryToFfi(List<VenueGeometry> value) {
  final _result = _heresdkVenueMapviewBindingslistofSdkVenueDataVenuegeometryCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkVenueDataVenuegeometryToFfi(element);
    _heresdkVenueMapviewBindingslistofSdkVenueDataVenuegeometryInsert(_result, _elementHandle);
    sdkVenueDataVenuegeometryReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<VenueGeometry> heresdkVenueMapviewBindingslistofSdkVenueDataVenuegeometryFromFfi(Pointer<Void> handle) {
  final result = List<VenueGeometry>.empty(growable: true);
  final _iteratorHandle = _heresdkVenueMapviewBindingslistofSdkVenueDataVenuegeometryIterator(handle);
  while (_heresdkVenueMapviewBindingslistofSdkVenueDataVenuegeometryIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkVenueMapviewBindingslistofSdkVenueDataVenuegeometryIteratorGet(_iteratorHandle);
    try {
      result.add(sdkVenueDataVenuegeometryFromFfi(_elementHandle));
    } finally {
      sdkVenueDataVenuegeometryReleaseFfiHandle(_elementHandle);
    }
    _heresdkVenueMapviewBindingslistofSdkVenueDataVenuegeometryIteratorIncrement(_iteratorHandle);
  }
  _heresdkVenueMapviewBindingslistofSdkVenueDataVenuegeometryIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkVenueMapviewBindingslistofSdkVenueDataVenuegeometryReleaseFfiHandle(Pointer<Void> handle) => _heresdkVenueMapviewBindingslistofSdkVenueDataVenuegeometryReleaseHandle(handle);

final _heresdkVenueMapviewBindingslistofSdkVenueDataVenuegeometryCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_venue_data_VenueGeometry_create_handle_nullable'));
final _heresdkVenueMapviewBindingslistofSdkVenueDataVenuegeometryReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_venue_data_VenueGeometry_release_handle_nullable'));
final _heresdkVenueMapviewBindingslistofSdkVenueDataVenuegeometryGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_venue_data_VenueGeometry_get_value_nullable'));

Pointer<Void> heresdkVenueMapviewBindingslistofSdkVenueDataVenuegeometryToFfiNullable(List<VenueGeometry>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkVenueMapviewBindingslistofSdkVenueDataVenuegeometryToFfi(value);
  final result = _heresdkVenueMapviewBindingslistofSdkVenueDataVenuegeometryCreateHandleNullable(_handle);
  heresdkVenueMapviewBindingslistofSdkVenueDataVenuegeometryReleaseFfiHandle(_handle);
  return result;
}

List<VenueGeometry>? heresdkVenueMapviewBindingslistofSdkVenueDataVenuegeometryFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkVenueMapviewBindingslistofSdkVenueDataVenuegeometryGetValueNullable(handle);
  final result = heresdkVenueMapviewBindingslistofSdkVenueDataVenuegeometryFromFfi(_handle);
  heresdkVenueMapviewBindingslistofSdkVenueDataVenuegeometryReleaseFfiHandle(_handle);
  return result;
}

void heresdkVenueMapviewBindingslistofSdkVenueDataVenuegeometryReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkVenueMapviewBindingslistofSdkVenueDataVenuegeometryReleaseHandleNullable(handle);

final _heresdkVenueMapviewBindingslistofSdkVenueDataVenuelevelCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_venue_data_VenueLevel_create_handle'));
final _heresdkVenueMapviewBindingslistofSdkVenueDataVenuelevelReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_venue_data_VenueLevel_release_handle'));
final _heresdkVenueMapviewBindingslistofSdkVenueDataVenuelevelInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_venue_data_VenueLevel_insert'));
final _heresdkVenueMapviewBindingslistofSdkVenueDataVenuelevelIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_venue_data_VenueLevel_iterator'));
final _heresdkVenueMapviewBindingslistofSdkVenueDataVenuelevelIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_venue_data_VenueLevel_iterator_release_handle'));
final _heresdkVenueMapviewBindingslistofSdkVenueDataVenuelevelIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_venue_data_VenueLevel_iterator_is_valid'));
final _heresdkVenueMapviewBindingslistofSdkVenueDataVenuelevelIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_venue_data_VenueLevel_iterator_increment'));
final _heresdkVenueMapviewBindingslistofSdkVenueDataVenuelevelIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_venue_data_VenueLevel_iterator_get'));

Pointer<Void> heresdkVenueMapviewBindingslistofSdkVenueDataVenuelevelToFfi(List<VenueLevel> value) {
  final _result = _heresdkVenueMapviewBindingslistofSdkVenueDataVenuelevelCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkVenueDataVenuelevelToFfi(element);
    _heresdkVenueMapviewBindingslistofSdkVenueDataVenuelevelInsert(_result, _elementHandle);
    sdkVenueDataVenuelevelReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<VenueLevel> heresdkVenueMapviewBindingslistofSdkVenueDataVenuelevelFromFfi(Pointer<Void> handle) {
  final result = List<VenueLevel>.empty(growable: true);
  final _iteratorHandle = _heresdkVenueMapviewBindingslistofSdkVenueDataVenuelevelIterator(handle);
  while (_heresdkVenueMapviewBindingslistofSdkVenueDataVenuelevelIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkVenueMapviewBindingslistofSdkVenueDataVenuelevelIteratorGet(_iteratorHandle);
    try {
      result.add(sdkVenueDataVenuelevelFromFfi(_elementHandle));
    } finally {
      sdkVenueDataVenuelevelReleaseFfiHandle(_elementHandle);
    }
    _heresdkVenueMapviewBindingslistofSdkVenueDataVenuelevelIteratorIncrement(_iteratorHandle);
  }
  _heresdkVenueMapviewBindingslistofSdkVenueDataVenuelevelIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkVenueMapviewBindingslistofSdkVenueDataVenuelevelReleaseFfiHandle(Pointer<Void> handle) => _heresdkVenueMapviewBindingslistofSdkVenueDataVenuelevelReleaseHandle(handle);

final _heresdkVenueMapviewBindingslistofSdkVenueDataVenuelevelCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_venue_data_VenueLevel_create_handle_nullable'));
final _heresdkVenueMapviewBindingslistofSdkVenueDataVenuelevelReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_venue_data_VenueLevel_release_handle_nullable'));
final _heresdkVenueMapviewBindingslistofSdkVenueDataVenuelevelGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_venue_data_VenueLevel_get_value_nullable'));

Pointer<Void> heresdkVenueMapviewBindingslistofSdkVenueDataVenuelevelToFfiNullable(List<VenueLevel>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkVenueMapviewBindingslistofSdkVenueDataVenuelevelToFfi(value);
  final result = _heresdkVenueMapviewBindingslistofSdkVenueDataVenuelevelCreateHandleNullable(_handle);
  heresdkVenueMapviewBindingslistofSdkVenueDataVenuelevelReleaseFfiHandle(_handle);
  return result;
}

List<VenueLevel>? heresdkVenueMapviewBindingslistofSdkVenueDataVenuelevelFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkVenueMapviewBindingslistofSdkVenueDataVenuelevelGetValueNullable(handle);
  final result = heresdkVenueMapviewBindingslistofSdkVenueDataVenuelevelFromFfi(_handle);
  heresdkVenueMapviewBindingslistofSdkVenueDataVenuelevelReleaseFfiHandle(_handle);
  return result;
}

void heresdkVenueMapviewBindingslistofSdkVenueDataVenuelevelReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkVenueMapviewBindingslistofSdkVenueDataVenuelevelReleaseHandleNullable(handle);

final _heresdkVenueMapviewBindingslistofSdkVenueStyleIcongeometryCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_venue_style_IconGeometry_create_handle'));
final _heresdkVenueMapviewBindingslistofSdkVenueStyleIcongeometryReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_venue_style_IconGeometry_release_handle'));
final _heresdkVenueMapviewBindingslistofSdkVenueStyleIcongeometryInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_venue_style_IconGeometry_insert'));
final _heresdkVenueMapviewBindingslistofSdkVenueStyleIcongeometryIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_venue_style_IconGeometry_iterator'));
final _heresdkVenueMapviewBindingslistofSdkVenueStyleIcongeometryIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_venue_style_IconGeometry_iterator_release_handle'));
final _heresdkVenueMapviewBindingslistofSdkVenueStyleIcongeometryIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_venue_style_IconGeometry_iterator_is_valid'));
final _heresdkVenueMapviewBindingslistofSdkVenueStyleIcongeometryIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_venue_style_IconGeometry_iterator_increment'));
final _heresdkVenueMapviewBindingslistofSdkVenueStyleIcongeometryIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_venue_style_IconGeometry_iterator_get'));

Pointer<Void> heresdkVenueMapviewBindingslistofSdkVenueStyleIcongeometryToFfi(List<IconGeometry> value) {
  final _result = _heresdkVenueMapviewBindingslistofSdkVenueStyleIcongeometryCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkVenueStyleIcongeometryToFfi(element);
    _heresdkVenueMapviewBindingslistofSdkVenueStyleIcongeometryInsert(_result, _elementHandle);
    sdkVenueStyleIcongeometryReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<IconGeometry> heresdkVenueMapviewBindingslistofSdkVenueStyleIcongeometryFromFfi(Pointer<Void> handle) {
  final result = List<IconGeometry>.empty(growable: true);
  final _iteratorHandle = _heresdkVenueMapviewBindingslistofSdkVenueStyleIcongeometryIterator(handle);
  while (_heresdkVenueMapviewBindingslistofSdkVenueStyleIcongeometryIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkVenueMapviewBindingslistofSdkVenueStyleIcongeometryIteratorGet(_iteratorHandle);
    try {
      result.add(sdkVenueStyleIcongeometryFromFfi(_elementHandle));
    } finally {
      sdkVenueStyleIcongeometryReleaseFfiHandle(_elementHandle);
    }
    _heresdkVenueMapviewBindingslistofSdkVenueStyleIcongeometryIteratorIncrement(_iteratorHandle);
  }
  _heresdkVenueMapviewBindingslistofSdkVenueStyleIcongeometryIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkVenueMapviewBindingslistofSdkVenueStyleIcongeometryReleaseFfiHandle(Pointer<Void> handle) => _heresdkVenueMapviewBindingslistofSdkVenueStyleIcongeometryReleaseHandle(handle);

final _heresdkVenueMapviewBindingslistofSdkVenueStyleIcongeometryCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_venue_style_IconGeometry_create_handle_nullable'));
final _heresdkVenueMapviewBindingslistofSdkVenueStyleIcongeometryReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_venue_style_IconGeometry_release_handle_nullable'));
final _heresdkVenueMapviewBindingslistofSdkVenueStyleIcongeometryGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsListOf_sdk_venue_style_IconGeometry_get_value_nullable'));

Pointer<Void> heresdkVenueMapviewBindingslistofSdkVenueStyleIcongeometryToFfiNullable(List<IconGeometry>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkVenueMapviewBindingslistofSdkVenueStyleIcongeometryToFfi(value);
  final result = _heresdkVenueMapviewBindingslistofSdkVenueStyleIcongeometryCreateHandleNullable(_handle);
  heresdkVenueMapviewBindingslistofSdkVenueStyleIcongeometryReleaseFfiHandle(_handle);
  return result;
}

List<IconGeometry>? heresdkVenueMapviewBindingslistofSdkVenueStyleIcongeometryFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkVenueMapviewBindingslistofSdkVenueStyleIcongeometryGetValueNullable(handle);
  final result = heresdkVenueMapviewBindingslistofSdkVenueStyleIcongeometryFromFfi(_handle);
  heresdkVenueMapviewBindingslistofSdkVenueStyleIcongeometryReleaseFfiHandle(_handle);
  return result;
}

void heresdkVenueMapviewBindingslistofSdkVenueStyleIcongeometryReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkVenueMapviewBindingslistofSdkVenueStyleIcongeometryReleaseHandleNullable(handle);

final _heresdkVenueMapviewBindingsmapofIntToSdkVenueControlVenueCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_venue_mapview_bindingsMapOf_Int_to_sdk_venue_control_Venue_create_handle'));
final _heresdkVenueMapviewBindingsmapofIntToSdkVenueControlVenueReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsMapOf_Int_to_sdk_venue_control_Venue_release_handle'));
final _heresdkVenueMapviewBindingsmapofIntToSdkVenueControlVenuePut = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Int32, Pointer<Void>),
    void Function(Pointer<Void>, int, Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsMapOf_Int_to_sdk_venue_control_Venue_put'));
final _heresdkVenueMapviewBindingsmapofIntToSdkVenueControlVenueIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsMapOf_Int_to_sdk_venue_control_Venue_iterator'));
final _heresdkVenueMapviewBindingsmapofIntToSdkVenueControlVenueIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsMapOf_Int_to_sdk_venue_control_Venue_iterator_release_handle'));
final _heresdkVenueMapviewBindingsmapofIntToSdkVenueControlVenueIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsMapOf_Int_to_sdk_venue_control_Venue_iterator_is_valid'));
final _heresdkVenueMapviewBindingsmapofIntToSdkVenueControlVenueIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsMapOf_Int_to_sdk_venue_control_Venue_iterator_increment'));
final _heresdkVenueMapviewBindingsmapofIntToSdkVenueControlVenueIteratorGetKey = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsMapOf_Int_to_sdk_venue_control_Venue_iterator_get_key'));
final _heresdkVenueMapviewBindingsmapofIntToSdkVenueControlVenueIteratorGetValue = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsMapOf_Int_to_sdk_venue_control_Venue_iterator_get_value'));

Pointer<Void> heresdkVenueMapviewBindingsmapofIntToSdkVenueControlVenueToFfi(Map<int, Venue> value) {
  final _result = _heresdkVenueMapviewBindingsmapofIntToSdkVenueControlVenueCreateHandle();
  for (final entry in value.entries) {
    final _keyHandle = (entry.key);
    final _valueHandle = sdkVenueControlVenueToFfi(entry.value);
    _heresdkVenueMapviewBindingsmapofIntToSdkVenueControlVenuePut(_result, _keyHandle, _valueHandle);
    
    sdkVenueControlVenueReleaseFfiHandle(_valueHandle);
  }
  return _result;
}

Map<int, Venue> heresdkVenueMapviewBindingsmapofIntToSdkVenueControlVenueFromFfi(Pointer<Void> handle) {
  final result = Map<int, Venue>();
  final _iteratorHandle = _heresdkVenueMapviewBindingsmapofIntToSdkVenueControlVenueIterator(handle);
  while (_heresdkVenueMapviewBindingsmapofIntToSdkVenueControlVenueIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _keyHandle = _heresdkVenueMapviewBindingsmapofIntToSdkVenueControlVenueIteratorGetKey(_iteratorHandle);
    final _valueHandle = _heresdkVenueMapviewBindingsmapofIntToSdkVenueControlVenueIteratorGetValue(_iteratorHandle);
    try {
      result[(_keyHandle)] =
        sdkVenueControlVenueFromFfi(_valueHandle);
    } finally {
      
      sdkVenueControlVenueReleaseFfiHandle(_valueHandle);
    }
    _heresdkVenueMapviewBindingsmapofIntToSdkVenueControlVenueIteratorIncrement(_iteratorHandle);
  }
  _heresdkVenueMapviewBindingsmapofIntToSdkVenueControlVenueIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkVenueMapviewBindingsmapofIntToSdkVenueControlVenueReleaseFfiHandle(Pointer<Void> handle) => _heresdkVenueMapviewBindingsmapofIntToSdkVenueControlVenueReleaseHandle(handle);

final _heresdkVenueMapviewBindingsmapofIntToSdkVenueControlVenueCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsMapOf_Int_to_sdk_venue_control_Venue_create_handle_nullable'));
final _heresdkVenueMapviewBindingsmapofIntToSdkVenueControlVenueReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsMapOf_Int_to_sdk_venue_control_Venue_release_handle_nullable'));
final _heresdkVenueMapviewBindingsmapofIntToSdkVenueControlVenueGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsMapOf_Int_to_sdk_venue_control_Venue_get_value_nullable'));

Pointer<Void> heresdkVenueMapviewBindingsmapofIntToSdkVenueControlVenueToFfiNullable(Map<int, Venue>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkVenueMapviewBindingsmapofIntToSdkVenueControlVenueToFfi(value);
  final result = _heresdkVenueMapviewBindingsmapofIntToSdkVenueControlVenueCreateHandleNullable(_handle);
  heresdkVenueMapviewBindingsmapofIntToSdkVenueControlVenueReleaseFfiHandle(_handle);
  return result;
}

Map<int, Venue>? heresdkVenueMapviewBindingsmapofIntToSdkVenueControlVenueFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkVenueMapviewBindingsmapofIntToSdkVenueControlVenueGetValueNullable(handle);
  final result = heresdkVenueMapviewBindingsmapofIntToSdkVenueControlVenueFromFfi(_handle);
  heresdkVenueMapviewBindingsmapofIntToSdkVenueControlVenueReleaseFfiHandle(_handle);
  return result;
}

void heresdkVenueMapviewBindingsmapofIntToSdkVenueControlVenueReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkVenueMapviewBindingsmapofIntToSdkVenueControlVenueReleaseHandleNullable(handle);

final _heresdkVenueMapviewBindingsmapofStringToHeresdkVenueMapviewBindingslistofStringCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_venue_mapview_bindingsMapOf_String_to_heresdk_venue_mapview_bindingsListOf_String_create_handle'));
final _heresdkVenueMapviewBindingsmapofStringToHeresdkVenueMapviewBindingslistofStringReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsMapOf_String_to_heresdk_venue_mapview_bindingsListOf_String_release_handle'));
final _heresdkVenueMapviewBindingsmapofStringToHeresdkVenueMapviewBindingslistofStringPut = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsMapOf_String_to_heresdk_venue_mapview_bindingsListOf_String_put'));
final _heresdkVenueMapviewBindingsmapofStringToHeresdkVenueMapviewBindingslistofStringIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsMapOf_String_to_heresdk_venue_mapview_bindingsListOf_String_iterator'));
final _heresdkVenueMapviewBindingsmapofStringToHeresdkVenueMapviewBindingslistofStringIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsMapOf_String_to_heresdk_venue_mapview_bindingsListOf_String_iterator_release_handle'));
final _heresdkVenueMapviewBindingsmapofStringToHeresdkVenueMapviewBindingslistofStringIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsMapOf_String_to_heresdk_venue_mapview_bindingsListOf_String_iterator_is_valid'));
final _heresdkVenueMapviewBindingsmapofStringToHeresdkVenueMapviewBindingslistofStringIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsMapOf_String_to_heresdk_venue_mapview_bindingsListOf_String_iterator_increment'));
final _heresdkVenueMapviewBindingsmapofStringToHeresdkVenueMapviewBindingslistofStringIteratorGetKey = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsMapOf_String_to_heresdk_venue_mapview_bindingsListOf_String_iterator_get_key'));
final _heresdkVenueMapviewBindingsmapofStringToHeresdkVenueMapviewBindingslistofStringIteratorGetValue = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsMapOf_String_to_heresdk_venue_mapview_bindingsListOf_String_iterator_get_value'));

Pointer<Void> heresdkVenueMapviewBindingsmapofStringToHeresdkVenueMapviewBindingslistofStringToFfi(Map<String, List<String>> value) {
  final _result = _heresdkVenueMapviewBindingsmapofStringToHeresdkVenueMapviewBindingslistofStringCreateHandle();
  for (final entry in value.entries) {
    final _keyHandle = stringToFfi(entry.key);
    final _valueHandle = heresdkVenueMapviewBindingslistofStringToFfi(entry.value);
    _heresdkVenueMapviewBindingsmapofStringToHeresdkVenueMapviewBindingslistofStringPut(_result, _keyHandle, _valueHandle);
    stringReleaseFfiHandle(_keyHandle);
    heresdkVenueMapviewBindingslistofStringReleaseFfiHandle(_valueHandle);
  }
  return _result;
}

Map<String, List<String>> heresdkVenueMapviewBindingsmapofStringToHeresdkVenueMapviewBindingslistofStringFromFfi(Pointer<Void> handle) {
  final result = Map<String, List<String>>();
  final _iteratorHandle = _heresdkVenueMapviewBindingsmapofStringToHeresdkVenueMapviewBindingslistofStringIterator(handle);
  while (_heresdkVenueMapviewBindingsmapofStringToHeresdkVenueMapviewBindingslistofStringIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _keyHandle = _heresdkVenueMapviewBindingsmapofStringToHeresdkVenueMapviewBindingslistofStringIteratorGetKey(_iteratorHandle);
    final _valueHandle = _heresdkVenueMapviewBindingsmapofStringToHeresdkVenueMapviewBindingslistofStringIteratorGetValue(_iteratorHandle);
    try {
      result[stringFromFfi(_keyHandle)] =
        heresdkVenueMapviewBindingslistofStringFromFfi(_valueHandle);
    } finally {
      stringReleaseFfiHandle(_keyHandle);
      heresdkVenueMapviewBindingslistofStringReleaseFfiHandle(_valueHandle);
    }
    _heresdkVenueMapviewBindingsmapofStringToHeresdkVenueMapviewBindingslistofStringIteratorIncrement(_iteratorHandle);
  }
  _heresdkVenueMapviewBindingsmapofStringToHeresdkVenueMapviewBindingslistofStringIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkVenueMapviewBindingsmapofStringToHeresdkVenueMapviewBindingslistofStringReleaseFfiHandle(Pointer<Void> handle) => _heresdkVenueMapviewBindingsmapofStringToHeresdkVenueMapviewBindingslistofStringReleaseHandle(handle);

final _heresdkVenueMapviewBindingsmapofStringToHeresdkVenueMapviewBindingslistofStringCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsMapOf_String_to_heresdk_venue_mapview_bindingsListOf_String_create_handle_nullable'));
final _heresdkVenueMapviewBindingsmapofStringToHeresdkVenueMapviewBindingslistofStringReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsMapOf_String_to_heresdk_venue_mapview_bindingsListOf_String_release_handle_nullable'));
final _heresdkVenueMapviewBindingsmapofStringToHeresdkVenueMapviewBindingslistofStringGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsMapOf_String_to_heresdk_venue_mapview_bindingsListOf_String_get_value_nullable'));

Pointer<Void> heresdkVenueMapviewBindingsmapofStringToHeresdkVenueMapviewBindingslistofStringToFfiNullable(Map<String, List<String>>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkVenueMapviewBindingsmapofStringToHeresdkVenueMapviewBindingslistofStringToFfi(value);
  final result = _heresdkVenueMapviewBindingsmapofStringToHeresdkVenueMapviewBindingslistofStringCreateHandleNullable(_handle);
  heresdkVenueMapviewBindingsmapofStringToHeresdkVenueMapviewBindingslistofStringReleaseFfiHandle(_handle);
  return result;
}

Map<String, List<String>>? heresdkVenueMapviewBindingsmapofStringToHeresdkVenueMapviewBindingslistofStringFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkVenueMapviewBindingsmapofStringToHeresdkVenueMapviewBindingslistofStringGetValueNullable(handle);
  final result = heresdkVenueMapviewBindingsmapofStringToHeresdkVenueMapviewBindingslistofStringFromFfi(_handle);
  heresdkVenueMapviewBindingsmapofStringToHeresdkVenueMapviewBindingslistofStringReleaseFfiHandle(_handle);
  return result;
}

void heresdkVenueMapviewBindingsmapofStringToHeresdkVenueMapviewBindingslistofStringReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkVenueMapviewBindingsmapofStringToHeresdkVenueMapviewBindingslistofStringReleaseHandleNullable(handle);

final _heresdkVenueMapviewBindingsmapofStringToHeresdkVenueMapviewBindingslistofSdkVenueDataVenuegeometryCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_venue_mapview_bindingsMapOf_String_to_heresdk_venue_mapview_bindingsListOf_sdk_venue_data_VenueGeometry_create_handle'));
final _heresdkVenueMapviewBindingsmapofStringToHeresdkVenueMapviewBindingslistofSdkVenueDataVenuegeometryReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsMapOf_String_to_heresdk_venue_mapview_bindingsListOf_sdk_venue_data_VenueGeometry_release_handle'));
final _heresdkVenueMapviewBindingsmapofStringToHeresdkVenueMapviewBindingslistofSdkVenueDataVenuegeometryPut = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsMapOf_String_to_heresdk_venue_mapview_bindingsListOf_sdk_venue_data_VenueGeometry_put'));
final _heresdkVenueMapviewBindingsmapofStringToHeresdkVenueMapviewBindingslistofSdkVenueDataVenuegeometryIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsMapOf_String_to_heresdk_venue_mapview_bindingsListOf_sdk_venue_data_VenueGeometry_iterator'));
final _heresdkVenueMapviewBindingsmapofStringToHeresdkVenueMapviewBindingslistofSdkVenueDataVenuegeometryIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsMapOf_String_to_heresdk_venue_mapview_bindingsListOf_sdk_venue_data_VenueGeometry_iterator_release_handle'));
final _heresdkVenueMapviewBindingsmapofStringToHeresdkVenueMapviewBindingslistofSdkVenueDataVenuegeometryIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsMapOf_String_to_heresdk_venue_mapview_bindingsListOf_sdk_venue_data_VenueGeometry_iterator_is_valid'));
final _heresdkVenueMapviewBindingsmapofStringToHeresdkVenueMapviewBindingslistofSdkVenueDataVenuegeometryIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsMapOf_String_to_heresdk_venue_mapview_bindingsListOf_sdk_venue_data_VenueGeometry_iterator_increment'));
final _heresdkVenueMapviewBindingsmapofStringToHeresdkVenueMapviewBindingslistofSdkVenueDataVenuegeometryIteratorGetKey = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsMapOf_String_to_heresdk_venue_mapview_bindingsListOf_sdk_venue_data_VenueGeometry_iterator_get_key'));
final _heresdkVenueMapviewBindingsmapofStringToHeresdkVenueMapviewBindingslistofSdkVenueDataVenuegeometryIteratorGetValue = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsMapOf_String_to_heresdk_venue_mapview_bindingsListOf_sdk_venue_data_VenueGeometry_iterator_get_value'));

Pointer<Void> heresdkVenueMapviewBindingsmapofStringToHeresdkVenueMapviewBindingslistofSdkVenueDataVenuegeometryToFfi(Map<String, List<VenueGeometry>> value) {
  final _result = _heresdkVenueMapviewBindingsmapofStringToHeresdkVenueMapviewBindingslistofSdkVenueDataVenuegeometryCreateHandle();
  for (final entry in value.entries) {
    final _keyHandle = stringToFfi(entry.key);
    final _valueHandle = heresdkVenueMapviewBindingslistofSdkVenueDataVenuegeometryToFfi(entry.value);
    _heresdkVenueMapviewBindingsmapofStringToHeresdkVenueMapviewBindingslistofSdkVenueDataVenuegeometryPut(_result, _keyHandle, _valueHandle);
    stringReleaseFfiHandle(_keyHandle);
    heresdkVenueMapviewBindingslistofSdkVenueDataVenuegeometryReleaseFfiHandle(_valueHandle);
  }
  return _result;
}

Map<String, List<VenueGeometry>> heresdkVenueMapviewBindingsmapofStringToHeresdkVenueMapviewBindingslistofSdkVenueDataVenuegeometryFromFfi(Pointer<Void> handle) {
  final result = Map<String, List<VenueGeometry>>();
  final _iteratorHandle = _heresdkVenueMapviewBindingsmapofStringToHeresdkVenueMapviewBindingslistofSdkVenueDataVenuegeometryIterator(handle);
  while (_heresdkVenueMapviewBindingsmapofStringToHeresdkVenueMapviewBindingslistofSdkVenueDataVenuegeometryIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _keyHandle = _heresdkVenueMapviewBindingsmapofStringToHeresdkVenueMapviewBindingslistofSdkVenueDataVenuegeometryIteratorGetKey(_iteratorHandle);
    final _valueHandle = _heresdkVenueMapviewBindingsmapofStringToHeresdkVenueMapviewBindingslistofSdkVenueDataVenuegeometryIteratorGetValue(_iteratorHandle);
    try {
      result[stringFromFfi(_keyHandle)] =
        heresdkVenueMapviewBindingslistofSdkVenueDataVenuegeometryFromFfi(_valueHandle);
    } finally {
      stringReleaseFfiHandle(_keyHandle);
      heresdkVenueMapviewBindingslistofSdkVenueDataVenuegeometryReleaseFfiHandle(_valueHandle);
    }
    _heresdkVenueMapviewBindingsmapofStringToHeresdkVenueMapviewBindingslistofSdkVenueDataVenuegeometryIteratorIncrement(_iteratorHandle);
  }
  _heresdkVenueMapviewBindingsmapofStringToHeresdkVenueMapviewBindingslistofSdkVenueDataVenuegeometryIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkVenueMapviewBindingsmapofStringToHeresdkVenueMapviewBindingslistofSdkVenueDataVenuegeometryReleaseFfiHandle(Pointer<Void> handle) => _heresdkVenueMapviewBindingsmapofStringToHeresdkVenueMapviewBindingslistofSdkVenueDataVenuegeometryReleaseHandle(handle);

final _heresdkVenueMapviewBindingsmapofStringToHeresdkVenueMapviewBindingslistofSdkVenueDataVenuegeometryCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsMapOf_String_to_heresdk_venue_mapview_bindingsListOf_sdk_venue_data_VenueGeometry_create_handle_nullable'));
final _heresdkVenueMapviewBindingsmapofStringToHeresdkVenueMapviewBindingslistofSdkVenueDataVenuegeometryReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsMapOf_String_to_heresdk_venue_mapview_bindingsListOf_sdk_venue_data_VenueGeometry_release_handle_nullable'));
final _heresdkVenueMapviewBindingsmapofStringToHeresdkVenueMapviewBindingslistofSdkVenueDataVenuegeometryGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsMapOf_String_to_heresdk_venue_mapview_bindingsListOf_sdk_venue_data_VenueGeometry_get_value_nullable'));

Pointer<Void> heresdkVenueMapviewBindingsmapofStringToHeresdkVenueMapviewBindingslistofSdkVenueDataVenuegeometryToFfiNullable(Map<String, List<VenueGeometry>>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkVenueMapviewBindingsmapofStringToHeresdkVenueMapviewBindingslistofSdkVenueDataVenuegeometryToFfi(value);
  final result = _heresdkVenueMapviewBindingsmapofStringToHeresdkVenueMapviewBindingslistofSdkVenueDataVenuegeometryCreateHandleNullable(_handle);
  heresdkVenueMapviewBindingsmapofStringToHeresdkVenueMapviewBindingslistofSdkVenueDataVenuegeometryReleaseFfiHandle(_handle);
  return result;
}

Map<String, List<VenueGeometry>>? heresdkVenueMapviewBindingsmapofStringToHeresdkVenueMapviewBindingslistofSdkVenueDataVenuegeometryFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkVenueMapviewBindingsmapofStringToHeresdkVenueMapviewBindingslistofSdkVenueDataVenuegeometryGetValueNullable(handle);
  final result = heresdkVenueMapviewBindingsmapofStringToHeresdkVenueMapviewBindingslistofSdkVenueDataVenuegeometryFromFfi(_handle);
  heresdkVenueMapviewBindingsmapofStringToHeresdkVenueMapviewBindingslistofSdkVenueDataVenuegeometryReleaseFfiHandle(_handle);
  return result;
}

void heresdkVenueMapviewBindingsmapofStringToHeresdkVenueMapviewBindingslistofSdkVenueDataVenuegeometryReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkVenueMapviewBindingsmapofStringToHeresdkVenueMapviewBindingslistofSdkVenueDataVenuegeometryReleaseHandleNullable(handle);

final _heresdkVenueMapviewBindingsmapofStringToSdkVenueDataPropertyCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_venue_mapview_bindingsMapOf_String_to_sdk_venue_data_Property_create_handle'));
final _heresdkVenueMapviewBindingsmapofStringToSdkVenueDataPropertyReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsMapOf_String_to_sdk_venue_data_Property_release_handle'));
final _heresdkVenueMapviewBindingsmapofStringToSdkVenueDataPropertyPut = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsMapOf_String_to_sdk_venue_data_Property_put'));
final _heresdkVenueMapviewBindingsmapofStringToSdkVenueDataPropertyIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsMapOf_String_to_sdk_venue_data_Property_iterator'));
final _heresdkVenueMapviewBindingsmapofStringToSdkVenueDataPropertyIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsMapOf_String_to_sdk_venue_data_Property_iterator_release_handle'));
final _heresdkVenueMapviewBindingsmapofStringToSdkVenueDataPropertyIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsMapOf_String_to_sdk_venue_data_Property_iterator_is_valid'));
final _heresdkVenueMapviewBindingsmapofStringToSdkVenueDataPropertyIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsMapOf_String_to_sdk_venue_data_Property_iterator_increment'));
final _heresdkVenueMapviewBindingsmapofStringToSdkVenueDataPropertyIteratorGetKey = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsMapOf_String_to_sdk_venue_data_Property_iterator_get_key'));
final _heresdkVenueMapviewBindingsmapofStringToSdkVenueDataPropertyIteratorGetValue = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsMapOf_String_to_sdk_venue_data_Property_iterator_get_value'));

Pointer<Void> heresdkVenueMapviewBindingsmapofStringToSdkVenueDataPropertyToFfi(Map<String, Property> value) {
  final _result = _heresdkVenueMapviewBindingsmapofStringToSdkVenueDataPropertyCreateHandle();
  for (final entry in value.entries) {
    final _keyHandle = stringToFfi(entry.key);
    final _valueHandle = sdkVenueDataPropertyToFfi(entry.value);
    _heresdkVenueMapviewBindingsmapofStringToSdkVenueDataPropertyPut(_result, _keyHandle, _valueHandle);
    stringReleaseFfiHandle(_keyHandle);
    sdkVenueDataPropertyReleaseFfiHandle(_valueHandle);
  }
  return _result;
}

Map<String, Property> heresdkVenueMapviewBindingsmapofStringToSdkVenueDataPropertyFromFfi(Pointer<Void> handle) {
  final result = Map<String, Property>();
  final _iteratorHandle = _heresdkVenueMapviewBindingsmapofStringToSdkVenueDataPropertyIterator(handle);
  while (_heresdkVenueMapviewBindingsmapofStringToSdkVenueDataPropertyIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _keyHandle = _heresdkVenueMapviewBindingsmapofStringToSdkVenueDataPropertyIteratorGetKey(_iteratorHandle);
    final _valueHandle = _heresdkVenueMapviewBindingsmapofStringToSdkVenueDataPropertyIteratorGetValue(_iteratorHandle);
    try {
      result[stringFromFfi(_keyHandle)] =
        sdkVenueDataPropertyFromFfi(_valueHandle);
    } finally {
      stringReleaseFfiHandle(_keyHandle);
      sdkVenueDataPropertyReleaseFfiHandle(_valueHandle);
    }
    _heresdkVenueMapviewBindingsmapofStringToSdkVenueDataPropertyIteratorIncrement(_iteratorHandle);
  }
  _heresdkVenueMapviewBindingsmapofStringToSdkVenueDataPropertyIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkVenueMapviewBindingsmapofStringToSdkVenueDataPropertyReleaseFfiHandle(Pointer<Void> handle) => _heresdkVenueMapviewBindingsmapofStringToSdkVenueDataPropertyReleaseHandle(handle);

final _heresdkVenueMapviewBindingsmapofStringToSdkVenueDataPropertyCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsMapOf_String_to_sdk_venue_data_Property_create_handle_nullable'));
final _heresdkVenueMapviewBindingsmapofStringToSdkVenueDataPropertyReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsMapOf_String_to_sdk_venue_data_Property_release_handle_nullable'));
final _heresdkVenueMapviewBindingsmapofStringToSdkVenueDataPropertyGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsMapOf_String_to_sdk_venue_data_Property_get_value_nullable'));

Pointer<Void> heresdkVenueMapviewBindingsmapofStringToSdkVenueDataPropertyToFfiNullable(Map<String, Property>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkVenueMapviewBindingsmapofStringToSdkVenueDataPropertyToFfi(value);
  final result = _heresdkVenueMapviewBindingsmapofStringToSdkVenueDataPropertyCreateHandleNullable(_handle);
  heresdkVenueMapviewBindingsmapofStringToSdkVenueDataPropertyReleaseFfiHandle(_handle);
  return result;
}

Map<String, Property>? heresdkVenueMapviewBindingsmapofStringToSdkVenueDataPropertyFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkVenueMapviewBindingsmapofStringToSdkVenueDataPropertyGetValueNullable(handle);
  final result = heresdkVenueMapviewBindingsmapofStringToSdkVenueDataPropertyFromFfi(_handle);
  heresdkVenueMapviewBindingsmapofStringToSdkVenueDataPropertyReleaseFfiHandle(_handle);
  return result;
}

void heresdkVenueMapviewBindingsmapofStringToSdkVenueDataPropertyReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkVenueMapviewBindingsmapofStringToSdkVenueDataPropertyReleaseHandleNullable(handle);

final _heresdkVenueMapviewBindingsmapofStringToSdkVenueStyleIconinfoCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_venue_mapview_bindingsMapOf_String_to_sdk_venue_style_IconInfo_create_handle'));
final _heresdkVenueMapviewBindingsmapofStringToSdkVenueStyleIconinfoReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsMapOf_String_to_sdk_venue_style_IconInfo_release_handle'));
final _heresdkVenueMapviewBindingsmapofStringToSdkVenueStyleIconinfoPut = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsMapOf_String_to_sdk_venue_style_IconInfo_put'));
final _heresdkVenueMapviewBindingsmapofStringToSdkVenueStyleIconinfoIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsMapOf_String_to_sdk_venue_style_IconInfo_iterator'));
final _heresdkVenueMapviewBindingsmapofStringToSdkVenueStyleIconinfoIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsMapOf_String_to_sdk_venue_style_IconInfo_iterator_release_handle'));
final _heresdkVenueMapviewBindingsmapofStringToSdkVenueStyleIconinfoIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsMapOf_String_to_sdk_venue_style_IconInfo_iterator_is_valid'));
final _heresdkVenueMapviewBindingsmapofStringToSdkVenueStyleIconinfoIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsMapOf_String_to_sdk_venue_style_IconInfo_iterator_increment'));
final _heresdkVenueMapviewBindingsmapofStringToSdkVenueStyleIconinfoIteratorGetKey = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsMapOf_String_to_sdk_venue_style_IconInfo_iterator_get_key'));
final _heresdkVenueMapviewBindingsmapofStringToSdkVenueStyleIconinfoIteratorGetValue = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsMapOf_String_to_sdk_venue_style_IconInfo_iterator_get_value'));

Pointer<Void> heresdkVenueMapviewBindingsmapofStringToSdkVenueStyleIconinfoToFfi(Map<String, IconInfo> value) {
  final _result = _heresdkVenueMapviewBindingsmapofStringToSdkVenueStyleIconinfoCreateHandle();
  for (final entry in value.entries) {
    final _keyHandle = stringToFfi(entry.key);
    final _valueHandle = sdkVenueStyleIconinfoToFfi(entry.value);
    _heresdkVenueMapviewBindingsmapofStringToSdkVenueStyleIconinfoPut(_result, _keyHandle, _valueHandle);
    stringReleaseFfiHandle(_keyHandle);
    sdkVenueStyleIconinfoReleaseFfiHandle(_valueHandle);
  }
  return _result;
}

Map<String, IconInfo> heresdkVenueMapviewBindingsmapofStringToSdkVenueStyleIconinfoFromFfi(Pointer<Void> handle) {
  final result = Map<String, IconInfo>();
  final _iteratorHandle = _heresdkVenueMapviewBindingsmapofStringToSdkVenueStyleIconinfoIterator(handle);
  while (_heresdkVenueMapviewBindingsmapofStringToSdkVenueStyleIconinfoIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _keyHandle = _heresdkVenueMapviewBindingsmapofStringToSdkVenueStyleIconinfoIteratorGetKey(_iteratorHandle);
    final _valueHandle = _heresdkVenueMapviewBindingsmapofStringToSdkVenueStyleIconinfoIteratorGetValue(_iteratorHandle);
    try {
      result[stringFromFfi(_keyHandle)] =
        sdkVenueStyleIconinfoFromFfi(_valueHandle);
    } finally {
      stringReleaseFfiHandle(_keyHandle);
      sdkVenueStyleIconinfoReleaseFfiHandle(_valueHandle);
    }
    _heresdkVenueMapviewBindingsmapofStringToSdkVenueStyleIconinfoIteratorIncrement(_iteratorHandle);
  }
  _heresdkVenueMapviewBindingsmapofStringToSdkVenueStyleIconinfoIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkVenueMapviewBindingsmapofStringToSdkVenueStyleIconinfoReleaseFfiHandle(Pointer<Void> handle) => _heresdkVenueMapviewBindingsmapofStringToSdkVenueStyleIconinfoReleaseHandle(handle);

final _heresdkVenueMapviewBindingsmapofStringToSdkVenueStyleIconinfoCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsMapOf_String_to_sdk_venue_style_IconInfo_create_handle_nullable'));
final _heresdkVenueMapviewBindingsmapofStringToSdkVenueStyleIconinfoReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsMapOf_String_to_sdk_venue_style_IconInfo_release_handle_nullable'));
final _heresdkVenueMapviewBindingsmapofStringToSdkVenueStyleIconinfoGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsMapOf_String_to_sdk_venue_style_IconInfo_get_value_nullable'));

Pointer<Void> heresdkVenueMapviewBindingsmapofStringToSdkVenueStyleIconinfoToFfiNullable(Map<String, IconInfo>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkVenueMapviewBindingsmapofStringToSdkVenueStyleIconinfoToFfi(value);
  final result = _heresdkVenueMapviewBindingsmapofStringToSdkVenueStyleIconinfoCreateHandleNullable(_handle);
  heresdkVenueMapviewBindingsmapofStringToSdkVenueStyleIconinfoReleaseFfiHandle(_handle);
  return result;
}

Map<String, IconInfo>? heresdkVenueMapviewBindingsmapofStringToSdkVenueStyleIconinfoFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkVenueMapviewBindingsmapofStringToSdkVenueStyleIconinfoGetValueNullable(handle);
  final result = heresdkVenueMapviewBindingsmapofStringToSdkVenueStyleIconinfoFromFfi(_handle);
  heresdkVenueMapviewBindingsmapofStringToSdkVenueStyleIconinfoReleaseFfiHandle(_handle);
  return result;
}

void heresdkVenueMapviewBindingsmapofStringToSdkVenueStyleIconinfoReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkVenueMapviewBindingsmapofStringToSdkVenueStyleIconinfoReleaseHandleNullable(handle);

final _heresdkVenueMapviewBindingsmapofStringToSdkVenueStyleVenuegeometrystyleCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_venue_mapview_bindingsMapOf_String_to_sdk_venue_style_VenueGeometryStyle_create_handle'));
final _heresdkVenueMapviewBindingsmapofStringToSdkVenueStyleVenuegeometrystyleReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsMapOf_String_to_sdk_venue_style_VenueGeometryStyle_release_handle'));
final _heresdkVenueMapviewBindingsmapofStringToSdkVenueStyleVenuegeometrystylePut = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsMapOf_String_to_sdk_venue_style_VenueGeometryStyle_put'));
final _heresdkVenueMapviewBindingsmapofStringToSdkVenueStyleVenuegeometrystyleIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsMapOf_String_to_sdk_venue_style_VenueGeometryStyle_iterator'));
final _heresdkVenueMapviewBindingsmapofStringToSdkVenueStyleVenuegeometrystyleIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsMapOf_String_to_sdk_venue_style_VenueGeometryStyle_iterator_release_handle'));
final _heresdkVenueMapviewBindingsmapofStringToSdkVenueStyleVenuegeometrystyleIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsMapOf_String_to_sdk_venue_style_VenueGeometryStyle_iterator_is_valid'));
final _heresdkVenueMapviewBindingsmapofStringToSdkVenueStyleVenuegeometrystyleIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsMapOf_String_to_sdk_venue_style_VenueGeometryStyle_iterator_increment'));
final _heresdkVenueMapviewBindingsmapofStringToSdkVenueStyleVenuegeometrystyleIteratorGetKey = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsMapOf_String_to_sdk_venue_style_VenueGeometryStyle_iterator_get_key'));
final _heresdkVenueMapviewBindingsmapofStringToSdkVenueStyleVenuegeometrystyleIteratorGetValue = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsMapOf_String_to_sdk_venue_style_VenueGeometryStyle_iterator_get_value'));

Pointer<Void> heresdkVenueMapviewBindingsmapofStringToSdkVenueStyleVenuegeometrystyleToFfi(Map<String, VenueGeometryStyle> value) {
  final _result = _heresdkVenueMapviewBindingsmapofStringToSdkVenueStyleVenuegeometrystyleCreateHandle();
  for (final entry in value.entries) {
    final _keyHandle = stringToFfi(entry.key);
    final _valueHandle = sdkVenueStyleVenuegeometrystyleToFfi(entry.value);
    _heresdkVenueMapviewBindingsmapofStringToSdkVenueStyleVenuegeometrystylePut(_result, _keyHandle, _valueHandle);
    stringReleaseFfiHandle(_keyHandle);
    sdkVenueStyleVenuegeometrystyleReleaseFfiHandle(_valueHandle);
  }
  return _result;
}

Map<String, VenueGeometryStyle> heresdkVenueMapviewBindingsmapofStringToSdkVenueStyleVenuegeometrystyleFromFfi(Pointer<Void> handle) {
  final result = Map<String, VenueGeometryStyle>();
  final _iteratorHandle = _heresdkVenueMapviewBindingsmapofStringToSdkVenueStyleVenuegeometrystyleIterator(handle);
  while (_heresdkVenueMapviewBindingsmapofStringToSdkVenueStyleVenuegeometrystyleIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _keyHandle = _heresdkVenueMapviewBindingsmapofStringToSdkVenueStyleVenuegeometrystyleIteratorGetKey(_iteratorHandle);
    final _valueHandle = _heresdkVenueMapviewBindingsmapofStringToSdkVenueStyleVenuegeometrystyleIteratorGetValue(_iteratorHandle);
    try {
      result[stringFromFfi(_keyHandle)] =
        sdkVenueStyleVenuegeometrystyleFromFfi(_valueHandle);
    } finally {
      stringReleaseFfiHandle(_keyHandle);
      sdkVenueStyleVenuegeometrystyleReleaseFfiHandle(_valueHandle);
    }
    _heresdkVenueMapviewBindingsmapofStringToSdkVenueStyleVenuegeometrystyleIteratorIncrement(_iteratorHandle);
  }
  _heresdkVenueMapviewBindingsmapofStringToSdkVenueStyleVenuegeometrystyleIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkVenueMapviewBindingsmapofStringToSdkVenueStyleVenuegeometrystyleReleaseFfiHandle(Pointer<Void> handle) => _heresdkVenueMapviewBindingsmapofStringToSdkVenueStyleVenuegeometrystyleReleaseHandle(handle);

final _heresdkVenueMapviewBindingsmapofStringToSdkVenueStyleVenuegeometrystyleCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsMapOf_String_to_sdk_venue_style_VenueGeometryStyle_create_handle_nullable'));
final _heresdkVenueMapviewBindingsmapofStringToSdkVenueStyleVenuegeometrystyleReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsMapOf_String_to_sdk_venue_style_VenueGeometryStyle_release_handle_nullable'));
final _heresdkVenueMapviewBindingsmapofStringToSdkVenueStyleVenuegeometrystyleGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsMapOf_String_to_sdk_venue_style_VenueGeometryStyle_get_value_nullable'));

Pointer<Void> heresdkVenueMapviewBindingsmapofStringToSdkVenueStyleVenuegeometrystyleToFfiNullable(Map<String, VenueGeometryStyle>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkVenueMapviewBindingsmapofStringToSdkVenueStyleVenuegeometrystyleToFfi(value);
  final result = _heresdkVenueMapviewBindingsmapofStringToSdkVenueStyleVenuegeometrystyleCreateHandleNullable(_handle);
  heresdkVenueMapviewBindingsmapofStringToSdkVenueStyleVenuegeometrystyleReleaseFfiHandle(_handle);
  return result;
}

Map<String, VenueGeometryStyle>? heresdkVenueMapviewBindingsmapofStringToSdkVenueStyleVenuegeometrystyleFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkVenueMapviewBindingsmapofStringToSdkVenueStyleVenuegeometrystyleGetValueNullable(handle);
  final result = heresdkVenueMapviewBindingsmapofStringToSdkVenueStyleVenuegeometrystyleFromFfi(_handle);
  heresdkVenueMapviewBindingsmapofStringToSdkVenueStyleVenuegeometrystyleReleaseFfiHandle(_handle);
  return result;
}

void heresdkVenueMapviewBindingsmapofStringToSdkVenueStyleVenuegeometrystyleReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkVenueMapviewBindingsmapofStringToSdkVenueStyleVenuegeometrystyleReleaseHandleNullable(handle);

final _heresdkVenueMapviewBindingsmapofStringToSdkVenueStyleVenuelabelstyleCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_venue_mapview_bindingsMapOf_String_to_sdk_venue_style_VenueLabelStyle_create_handle'));
final _heresdkVenueMapviewBindingsmapofStringToSdkVenueStyleVenuelabelstyleReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsMapOf_String_to_sdk_venue_style_VenueLabelStyle_release_handle'));
final _heresdkVenueMapviewBindingsmapofStringToSdkVenueStyleVenuelabelstylePut = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsMapOf_String_to_sdk_venue_style_VenueLabelStyle_put'));
final _heresdkVenueMapviewBindingsmapofStringToSdkVenueStyleVenuelabelstyleIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsMapOf_String_to_sdk_venue_style_VenueLabelStyle_iterator'));
final _heresdkVenueMapviewBindingsmapofStringToSdkVenueStyleVenuelabelstyleIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsMapOf_String_to_sdk_venue_style_VenueLabelStyle_iterator_release_handle'));
final _heresdkVenueMapviewBindingsmapofStringToSdkVenueStyleVenuelabelstyleIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsMapOf_String_to_sdk_venue_style_VenueLabelStyle_iterator_is_valid'));
final _heresdkVenueMapviewBindingsmapofStringToSdkVenueStyleVenuelabelstyleIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsMapOf_String_to_sdk_venue_style_VenueLabelStyle_iterator_increment'));
final _heresdkVenueMapviewBindingsmapofStringToSdkVenueStyleVenuelabelstyleIteratorGetKey = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsMapOf_String_to_sdk_venue_style_VenueLabelStyle_iterator_get_key'));
final _heresdkVenueMapviewBindingsmapofStringToSdkVenueStyleVenuelabelstyleIteratorGetValue = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsMapOf_String_to_sdk_venue_style_VenueLabelStyle_iterator_get_value'));

Pointer<Void> heresdkVenueMapviewBindingsmapofStringToSdkVenueStyleVenuelabelstyleToFfi(Map<String, VenueLabelStyle> value) {
  final _result = _heresdkVenueMapviewBindingsmapofStringToSdkVenueStyleVenuelabelstyleCreateHandle();
  for (final entry in value.entries) {
    final _keyHandle = stringToFfi(entry.key);
    final _valueHandle = sdkVenueStyleVenuelabelstyleToFfi(entry.value);
    _heresdkVenueMapviewBindingsmapofStringToSdkVenueStyleVenuelabelstylePut(_result, _keyHandle, _valueHandle);
    stringReleaseFfiHandle(_keyHandle);
    sdkVenueStyleVenuelabelstyleReleaseFfiHandle(_valueHandle);
  }
  return _result;
}

Map<String, VenueLabelStyle> heresdkVenueMapviewBindingsmapofStringToSdkVenueStyleVenuelabelstyleFromFfi(Pointer<Void> handle) {
  final result = Map<String, VenueLabelStyle>();
  final _iteratorHandle = _heresdkVenueMapviewBindingsmapofStringToSdkVenueStyleVenuelabelstyleIterator(handle);
  while (_heresdkVenueMapviewBindingsmapofStringToSdkVenueStyleVenuelabelstyleIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _keyHandle = _heresdkVenueMapviewBindingsmapofStringToSdkVenueStyleVenuelabelstyleIteratorGetKey(_iteratorHandle);
    final _valueHandle = _heresdkVenueMapviewBindingsmapofStringToSdkVenueStyleVenuelabelstyleIteratorGetValue(_iteratorHandle);
    try {
      result[stringFromFfi(_keyHandle)] =
        sdkVenueStyleVenuelabelstyleFromFfi(_valueHandle);
    } finally {
      stringReleaseFfiHandle(_keyHandle);
      sdkVenueStyleVenuelabelstyleReleaseFfiHandle(_valueHandle);
    }
    _heresdkVenueMapviewBindingsmapofStringToSdkVenueStyleVenuelabelstyleIteratorIncrement(_iteratorHandle);
  }
  _heresdkVenueMapviewBindingsmapofStringToSdkVenueStyleVenuelabelstyleIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkVenueMapviewBindingsmapofStringToSdkVenueStyleVenuelabelstyleReleaseFfiHandle(Pointer<Void> handle) => _heresdkVenueMapviewBindingsmapofStringToSdkVenueStyleVenuelabelstyleReleaseHandle(handle);

final _heresdkVenueMapviewBindingsmapofStringToSdkVenueStyleVenuelabelstyleCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsMapOf_String_to_sdk_venue_style_VenueLabelStyle_create_handle_nullable'));
final _heresdkVenueMapviewBindingsmapofStringToSdkVenueStyleVenuelabelstyleReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsMapOf_String_to_sdk_venue_style_VenueLabelStyle_release_handle_nullable'));
final _heresdkVenueMapviewBindingsmapofStringToSdkVenueStyleVenuelabelstyleGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsMapOf_String_to_sdk_venue_style_VenueLabelStyle_get_value_nullable'));

Pointer<Void> heresdkVenueMapviewBindingsmapofStringToSdkVenueStyleVenuelabelstyleToFfiNullable(Map<String, VenueLabelStyle>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkVenueMapviewBindingsmapofStringToSdkVenueStyleVenuelabelstyleToFfi(value);
  final result = _heresdkVenueMapviewBindingsmapofStringToSdkVenueStyleVenuelabelstyleCreateHandleNullable(_handle);
  heresdkVenueMapviewBindingsmapofStringToSdkVenueStyleVenuelabelstyleReleaseFfiHandle(_handle);
  return result;
}

Map<String, VenueLabelStyle>? heresdkVenueMapviewBindingsmapofStringToSdkVenueStyleVenuelabelstyleFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkVenueMapviewBindingsmapofStringToSdkVenueStyleVenuelabelstyleGetValueNullable(handle);
  final result = heresdkVenueMapviewBindingsmapofStringToSdkVenueStyleVenuelabelstyleFromFfi(_handle);
  heresdkVenueMapviewBindingsmapofStringToSdkVenueStyleVenuelabelstyleReleaseFfiHandle(_handle);
  return result;
}

void heresdkVenueMapviewBindingsmapofStringToSdkVenueStyleVenuelabelstyleReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkVenueMapviewBindingsmapofStringToSdkVenueStyleVenuelabelstyleReleaseHandleNullable(handle);

final _heresdkVenueMapviewBindingsmapofSdkCoreEngineEnginebaseurlToStringCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_venue_mapview_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_create_handle'));
final _heresdkVenueMapviewBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_release_handle'));
final _heresdkVenueMapviewBindingsmapofSdkCoreEngineEnginebaseurlToStringPut = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32, Pointer<Void>),
    void Function(Pointer<Void>, int, Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_put'));
final _heresdkVenueMapviewBindingsmapofSdkCoreEngineEnginebaseurlToStringIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_iterator'));
final _heresdkVenueMapviewBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_iterator_release_handle'));
final _heresdkVenueMapviewBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_iterator_is_valid'));
final _heresdkVenueMapviewBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_iterator_increment'));
final _heresdkVenueMapviewBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorGetKey = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_iterator_get_key'));
final _heresdkVenueMapviewBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorGetValue = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_iterator_get_value'));

Pointer<Void> heresdkVenueMapviewBindingsmapofSdkCoreEngineEnginebaseurlToStringToFfi(Map<EngineBaseURL, String> value) {
  final _result = _heresdkVenueMapviewBindingsmapofSdkCoreEngineEnginebaseurlToStringCreateHandle();
  for (final entry in value.entries) {
    final _keyHandle = sdkCoreEngineEnginebaseurlToFfi(entry.key);
    final _valueHandle = stringToFfi(entry.value);
    _heresdkVenueMapviewBindingsmapofSdkCoreEngineEnginebaseurlToStringPut(_result, _keyHandle, _valueHandle);
    sdkCoreEngineEnginebaseurlReleaseFfiHandle(_keyHandle);
    stringReleaseFfiHandle(_valueHandle);
  }
  return _result;
}

Map<EngineBaseURL, String> heresdkVenueMapviewBindingsmapofSdkCoreEngineEnginebaseurlToStringFromFfi(Pointer<Void> handle) {
  final result = Map<EngineBaseURL, String>();
  final _iteratorHandle = _heresdkVenueMapviewBindingsmapofSdkCoreEngineEnginebaseurlToStringIterator(handle);
  while (_heresdkVenueMapviewBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _keyHandle = _heresdkVenueMapviewBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorGetKey(_iteratorHandle);
    final _valueHandle = _heresdkVenueMapviewBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorGetValue(_iteratorHandle);
    try {
      result[sdkCoreEngineEnginebaseurlFromFfi(_keyHandle)] =
        stringFromFfi(_valueHandle);
    } finally {
      sdkCoreEngineEnginebaseurlReleaseFfiHandle(_keyHandle);
      stringReleaseFfiHandle(_valueHandle);
    }
    _heresdkVenueMapviewBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorIncrement(_iteratorHandle);
  }
  _heresdkVenueMapviewBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkVenueMapviewBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseFfiHandle(Pointer<Void> handle) => _heresdkVenueMapviewBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseHandle(handle);

final _heresdkVenueMapviewBindingsmapofSdkCoreEngineEnginebaseurlToStringCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_create_handle_nullable'));
final _heresdkVenueMapviewBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_release_handle_nullable'));
final _heresdkVenueMapviewBindingsmapofSdkCoreEngineEnginebaseurlToStringGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_get_value_nullable'));

Pointer<Void> heresdkVenueMapviewBindingsmapofSdkCoreEngineEnginebaseurlToStringToFfiNullable(Map<EngineBaseURL, String>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkVenueMapviewBindingsmapofSdkCoreEngineEnginebaseurlToStringToFfi(value);
  final result = _heresdkVenueMapviewBindingsmapofSdkCoreEngineEnginebaseurlToStringCreateHandleNullable(_handle);
  heresdkVenueMapviewBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseFfiHandle(_handle);
  return result;
}

Map<EngineBaseURL, String>? heresdkVenueMapviewBindingsmapofSdkCoreEngineEnginebaseurlToStringFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkVenueMapviewBindingsmapofSdkCoreEngineEnginebaseurlToStringGetValueNullable(handle);
  final result = heresdkVenueMapviewBindingsmapofSdkCoreEngineEnginebaseurlToStringFromFfi(_handle);
  heresdkVenueMapviewBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseFfiHandle(_handle);
  return result;
}

void heresdkVenueMapviewBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkVenueMapviewBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseHandleNullable(handle);

final _heresdkVenueMapviewBindingssetofIntCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_venue_mapview_bindingsSetOf_Int_create_handle'));
final _heresdkVenueMapviewBindingssetofIntReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsSetOf_Int_release_handle'));
final _heresdkVenueMapviewBindingssetofIntInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Int32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_venue_mapview_bindingsSetOf_Int_insert'));
final _heresdkVenueMapviewBindingssetofIntIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsSetOf_Int_iterator'));
final _heresdkVenueMapviewBindingssetofIntIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsSetOf_Int_iterator_release_handle'));
final _heresdkVenueMapviewBindingssetofIntIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsSetOf_Int_iterator_is_valid'));
final _heresdkVenueMapviewBindingssetofIntIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsSetOf_Int_iterator_increment'));
final _heresdkVenueMapviewBindingssetofIntIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_venue_mapview_bindingsSetOf_Int_iterator_get'));

Pointer<Void> heresdkVenueMapviewBindingssetofIntToFfi(Set<int> value) {
  final _result = _heresdkVenueMapviewBindingssetofIntCreateHandle();
  for (final element in value) {
    final _elementHandle = (element);
    _heresdkVenueMapviewBindingssetofIntInsert(_result, _elementHandle);
    
  }
  return _result;
}

Set<int> heresdkVenueMapviewBindingssetofIntFromFfi(Pointer<Void> handle) {
  final result = Set<int>();
  final _iteratorHandle = _heresdkVenueMapviewBindingssetofIntIterator(handle);
  while (_heresdkVenueMapviewBindingssetofIntIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkVenueMapviewBindingssetofIntIteratorGet(_iteratorHandle);
    try {
      result.add((_elementHandle));
    } finally {
      
    }
    _heresdkVenueMapviewBindingssetofIntIteratorIncrement(_iteratorHandle);
  }
  _heresdkVenueMapviewBindingssetofIntIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkVenueMapviewBindingssetofIntReleaseFfiHandle(Pointer<Void> handle) => _heresdkVenueMapviewBindingssetofIntReleaseHandle(handle);

final _heresdkVenueMapviewBindingssetofIntCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsSetOf_Int_create_handle_nullable'));
final _heresdkVenueMapviewBindingssetofIntReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsSetOf_Int_release_handle_nullable'));
final _heresdkVenueMapviewBindingssetofIntGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_venue_mapview_bindingsSetOf_Int_get_value_nullable'));

Pointer<Void> heresdkVenueMapviewBindingssetofIntToFfiNullable(Set<int>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkVenueMapviewBindingssetofIntToFfi(value);
  final result = _heresdkVenueMapviewBindingssetofIntCreateHandleNullable(_handle);
  heresdkVenueMapviewBindingssetofIntReleaseFfiHandle(_handle);
  return result;
}

Set<int>? heresdkVenueMapviewBindingssetofIntFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkVenueMapviewBindingssetofIntGetValueNullable(handle);
  final result = heresdkVenueMapviewBindingssetofIntFromFfi(_handle);
  heresdkVenueMapviewBindingssetofIntReleaseFfiHandle(_handle);
  return result;
}

void heresdkVenueMapviewBindingssetofIntReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkVenueMapviewBindingssetofIntReleaseHandleNullable(handle);


// Copyright (c) 2018-2022 HERE Global B.V. and its affiliate(s).
// All rights reserved.
//
// This software and other materials contain proprietary information
// controlled by HERE and are protected by applicable copyright legislation.
// Any use and utilization of this software and other materials and
// disclosure to any third parties is conditional upon having a separate
// agreement with HERE for the access, use, utilization or disclosure of this
// software. In the absence of such agreement, the use of the software is not
// allowed.
//

























































final _heresdkVisualNavigationBindingslistofIntCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_Int_create_handle'));
final _heresdkVisualNavigationBindingslistofIntReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_Int_release_handle'));
final _heresdkVisualNavigationBindingslistofIntInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Int32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_Int_insert'));
final _heresdkVisualNavigationBindingslistofIntIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_Int_iterator'));
final _heresdkVisualNavigationBindingslistofIntIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_Int_iterator_release_handle'));
final _heresdkVisualNavigationBindingslistofIntIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_Int_iterator_is_valid'));
final _heresdkVisualNavigationBindingslistofIntIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_Int_iterator_increment'));
final _heresdkVisualNavigationBindingslistofIntIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_Int_iterator_get'));

Pointer<Void> heresdkVisualNavigationBindingslistofIntToFfi(List<int> value) {
  final _result = _heresdkVisualNavigationBindingslistofIntCreateHandle();
  for (final element in value) {
    final _elementHandle = (element);
    _heresdkVisualNavigationBindingslistofIntInsert(_result, _elementHandle);
    
  }
  return _result;
}

List<int> heresdkVisualNavigationBindingslistofIntFromFfi(Pointer<Void> handle) {
  final result = List<int>.empty(growable: true);
  final _iteratorHandle = _heresdkVisualNavigationBindingslistofIntIterator(handle);
  while (_heresdkVisualNavigationBindingslistofIntIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkVisualNavigationBindingslistofIntIteratorGet(_iteratorHandle);
    try {
      result.add((_elementHandle));
    } finally {
      
    }
    _heresdkVisualNavigationBindingslistofIntIteratorIncrement(_iteratorHandle);
  }
  _heresdkVisualNavigationBindingslistofIntIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkVisualNavigationBindingslistofIntReleaseFfiHandle(Pointer<Void> handle) => _heresdkVisualNavigationBindingslistofIntReleaseHandle(handle);

final _heresdkVisualNavigationBindingslistofIntCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_Int_create_handle_nullable'));
final _heresdkVisualNavigationBindingslistofIntReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_Int_release_handle_nullable'));
final _heresdkVisualNavigationBindingslistofIntGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_Int_get_value_nullable'));

Pointer<Void> heresdkVisualNavigationBindingslistofIntToFfiNullable(List<int>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkVisualNavigationBindingslistofIntToFfi(value);
  final result = _heresdkVisualNavigationBindingslistofIntCreateHandleNullable(_handle);
  heresdkVisualNavigationBindingslistofIntReleaseFfiHandle(_handle);
  return result;
}

List<int>? heresdkVisualNavigationBindingslistofIntFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkVisualNavigationBindingslistofIntGetValueNullable(handle);
  final result = heresdkVisualNavigationBindingslistofIntFromFfi(_handle);
  heresdkVisualNavigationBindingslistofIntReleaseFfiHandle(_handle);
  return result;
}

void heresdkVisualNavigationBindingslistofIntReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkVisualNavigationBindingslistofIntReleaseHandleNullable(handle);

final _heresdkVisualNavigationBindingslistofLocaleCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_Locale_create_handle'));
final _heresdkVisualNavigationBindingslistofLocaleReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_Locale_release_handle'));
final _heresdkVisualNavigationBindingslistofLocaleInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_Locale_insert'));
final _heresdkVisualNavigationBindingslistofLocaleIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_Locale_iterator'));
final _heresdkVisualNavigationBindingslistofLocaleIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_Locale_iterator_release_handle'));
final _heresdkVisualNavigationBindingslistofLocaleIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_Locale_iterator_is_valid'));
final _heresdkVisualNavigationBindingslistofLocaleIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_Locale_iterator_increment'));
final _heresdkVisualNavigationBindingslistofLocaleIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_Locale_iterator_get'));

Pointer<Void> heresdkVisualNavigationBindingslistofLocaleToFfi(List<Locale> value) {
  final _result = _heresdkVisualNavigationBindingslistofLocaleCreateHandle();
  for (final element in value) {
    final _elementHandle = localeToFfi(element);
    _heresdkVisualNavigationBindingslistofLocaleInsert(_result, _elementHandle);
    localeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Locale> heresdkVisualNavigationBindingslistofLocaleFromFfi(Pointer<Void> handle) {
  final result = List<Locale>.empty(growable: true);
  final _iteratorHandle = _heresdkVisualNavigationBindingslistofLocaleIterator(handle);
  while (_heresdkVisualNavigationBindingslistofLocaleIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkVisualNavigationBindingslistofLocaleIteratorGet(_iteratorHandle);
    try {
      result.add(localeFromFfi(_elementHandle));
    } finally {
      localeReleaseFfiHandle(_elementHandle);
    }
    _heresdkVisualNavigationBindingslistofLocaleIteratorIncrement(_iteratorHandle);
  }
  _heresdkVisualNavigationBindingslistofLocaleIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkVisualNavigationBindingslistofLocaleReleaseFfiHandle(Pointer<Void> handle) => _heresdkVisualNavigationBindingslistofLocaleReleaseHandle(handle);

final _heresdkVisualNavigationBindingslistofLocaleCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_Locale_create_handle_nullable'));
final _heresdkVisualNavigationBindingslistofLocaleReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_Locale_release_handle_nullable'));
final _heresdkVisualNavigationBindingslistofLocaleGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_Locale_get_value_nullable'));

Pointer<Void> heresdkVisualNavigationBindingslistofLocaleToFfiNullable(List<Locale>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkVisualNavigationBindingslistofLocaleToFfi(value);
  final result = _heresdkVisualNavigationBindingslistofLocaleCreateHandleNullable(_handle);
  heresdkVisualNavigationBindingslistofLocaleReleaseFfiHandle(_handle);
  return result;
}

List<Locale>? heresdkVisualNavigationBindingslistofLocaleFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkVisualNavigationBindingslistofLocaleGetValueNullable(handle);
  final result = heresdkVisualNavigationBindingslistofLocaleFromFfi(_handle);
  heresdkVisualNavigationBindingslistofLocaleReleaseFfiHandle(_handle);
  return result;
}

void heresdkVisualNavigationBindingslistofLocaleReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkVisualNavigationBindingslistofLocaleReleaseHandleNullable(handle);

final _heresdkVisualNavigationBindingslistofStringCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_String_create_handle'));
final _heresdkVisualNavigationBindingslistofStringReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_String_release_handle'));
final _heresdkVisualNavigationBindingslistofStringInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_String_insert'));
final _heresdkVisualNavigationBindingslistofStringIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_String_iterator'));
final _heresdkVisualNavigationBindingslistofStringIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_String_iterator_release_handle'));
final _heresdkVisualNavigationBindingslistofStringIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_String_iterator_is_valid'));
final _heresdkVisualNavigationBindingslistofStringIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_String_iterator_increment'));
final _heresdkVisualNavigationBindingslistofStringIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_String_iterator_get'));

Pointer<Void> heresdkVisualNavigationBindingslistofStringToFfi(List<String> value) {
  final _result = _heresdkVisualNavigationBindingslistofStringCreateHandle();
  for (final element in value) {
    final _elementHandle = stringToFfi(element);
    _heresdkVisualNavigationBindingslistofStringInsert(_result, _elementHandle);
    stringReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<String> heresdkVisualNavigationBindingslistofStringFromFfi(Pointer<Void> handle) {
  final result = List<String>.empty(growable: true);
  final _iteratorHandle = _heresdkVisualNavigationBindingslistofStringIterator(handle);
  while (_heresdkVisualNavigationBindingslistofStringIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkVisualNavigationBindingslistofStringIteratorGet(_iteratorHandle);
    try {
      result.add(stringFromFfi(_elementHandle));
    } finally {
      stringReleaseFfiHandle(_elementHandle);
    }
    _heresdkVisualNavigationBindingslistofStringIteratorIncrement(_iteratorHandle);
  }
  _heresdkVisualNavigationBindingslistofStringIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkVisualNavigationBindingslistofStringReleaseFfiHandle(Pointer<Void> handle) => _heresdkVisualNavigationBindingslistofStringReleaseHandle(handle);

final _heresdkVisualNavigationBindingslistofStringCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_String_create_handle_nullable'));
final _heresdkVisualNavigationBindingslistofStringReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_String_release_handle_nullable'));
final _heresdkVisualNavigationBindingslistofStringGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_String_get_value_nullable'));

Pointer<Void> heresdkVisualNavigationBindingslistofStringToFfiNullable(List<String>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkVisualNavigationBindingslistofStringToFfi(value);
  final result = _heresdkVisualNavigationBindingslistofStringCreateHandleNullable(_handle);
  heresdkVisualNavigationBindingslistofStringReleaseFfiHandle(_handle);
  return result;
}

List<String>? heresdkVisualNavigationBindingslistofStringFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkVisualNavigationBindingslistofStringGetValueNullable(handle);
  final result = heresdkVisualNavigationBindingslistofStringFromFfi(_handle);
  heresdkVisualNavigationBindingslistofStringReleaseFfiHandle(_handle);
  return result;
}

void heresdkVisualNavigationBindingslistofStringReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkVisualNavigationBindingslistofStringReleaseHandleNullable(handle);

final _heresdkVisualNavigationBindingslistofSdkAnimationAnchor2dkeyframeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_animation_Anchor2DKeyframe_create_handle'));
final _heresdkVisualNavigationBindingslistofSdkAnimationAnchor2dkeyframeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_animation_Anchor2DKeyframe_release_handle'));
final _heresdkVisualNavigationBindingslistofSdkAnimationAnchor2dkeyframeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_animation_Anchor2DKeyframe_insert'));
final _heresdkVisualNavigationBindingslistofSdkAnimationAnchor2dkeyframeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_animation_Anchor2DKeyframe_iterator'));
final _heresdkVisualNavigationBindingslistofSdkAnimationAnchor2dkeyframeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_animation_Anchor2DKeyframe_iterator_release_handle'));
final _heresdkVisualNavigationBindingslistofSdkAnimationAnchor2dkeyframeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_animation_Anchor2DKeyframe_iterator_is_valid'));
final _heresdkVisualNavigationBindingslistofSdkAnimationAnchor2dkeyframeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_animation_Anchor2DKeyframe_iterator_increment'));
final _heresdkVisualNavigationBindingslistofSdkAnimationAnchor2dkeyframeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_animation_Anchor2DKeyframe_iterator_get'));

Pointer<Void> heresdkVisualNavigationBindingslistofSdkAnimationAnchor2dkeyframeToFfi(List<Anchor2DKeyframe> value) {
  final _result = _heresdkVisualNavigationBindingslistofSdkAnimationAnchor2dkeyframeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkAnimationAnchor2dkeyframeToFfi(element);
    _heresdkVisualNavigationBindingslistofSdkAnimationAnchor2dkeyframeInsert(_result, _elementHandle);
    sdkAnimationAnchor2dkeyframeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Anchor2DKeyframe> heresdkVisualNavigationBindingslistofSdkAnimationAnchor2dkeyframeFromFfi(Pointer<Void> handle) {
  final result = List<Anchor2DKeyframe>.empty(growable: true);
  final _iteratorHandle = _heresdkVisualNavigationBindingslistofSdkAnimationAnchor2dkeyframeIterator(handle);
  while (_heresdkVisualNavigationBindingslistofSdkAnimationAnchor2dkeyframeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkVisualNavigationBindingslistofSdkAnimationAnchor2dkeyframeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkAnimationAnchor2dkeyframeFromFfi(_elementHandle));
    } finally {
      sdkAnimationAnchor2dkeyframeReleaseFfiHandle(_elementHandle);
    }
    _heresdkVisualNavigationBindingslistofSdkAnimationAnchor2dkeyframeIteratorIncrement(_iteratorHandle);
  }
  _heresdkVisualNavigationBindingslistofSdkAnimationAnchor2dkeyframeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkVisualNavigationBindingslistofSdkAnimationAnchor2dkeyframeReleaseFfiHandle(Pointer<Void> handle) => _heresdkVisualNavigationBindingslistofSdkAnimationAnchor2dkeyframeReleaseHandle(handle);

final _heresdkVisualNavigationBindingslistofSdkAnimationAnchor2dkeyframeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_animation_Anchor2DKeyframe_create_handle_nullable'));
final _heresdkVisualNavigationBindingslistofSdkAnimationAnchor2dkeyframeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_animation_Anchor2DKeyframe_release_handle_nullable'));
final _heresdkVisualNavigationBindingslistofSdkAnimationAnchor2dkeyframeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_animation_Anchor2DKeyframe_get_value_nullable'));

Pointer<Void> heresdkVisualNavigationBindingslistofSdkAnimationAnchor2dkeyframeToFfiNullable(List<Anchor2DKeyframe>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkVisualNavigationBindingslistofSdkAnimationAnchor2dkeyframeToFfi(value);
  final result = _heresdkVisualNavigationBindingslistofSdkAnimationAnchor2dkeyframeCreateHandleNullable(_handle);
  heresdkVisualNavigationBindingslistofSdkAnimationAnchor2dkeyframeReleaseFfiHandle(_handle);
  return result;
}

List<Anchor2DKeyframe>? heresdkVisualNavigationBindingslistofSdkAnimationAnchor2dkeyframeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkVisualNavigationBindingslistofSdkAnimationAnchor2dkeyframeGetValueNullable(handle);
  final result = heresdkVisualNavigationBindingslistofSdkAnimationAnchor2dkeyframeFromFfi(_handle);
  heresdkVisualNavigationBindingslistofSdkAnimationAnchor2dkeyframeReleaseFfiHandle(_handle);
  return result;
}

void heresdkVisualNavigationBindingslistofSdkAnimationAnchor2dkeyframeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkVisualNavigationBindingslistofSdkAnimationAnchor2dkeyframeReleaseHandleNullable(handle);

final _heresdkVisualNavigationBindingslistofSdkAnimationGeocoordinateskeyframeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_create_handle'));
final _heresdkVisualNavigationBindingslistofSdkAnimationGeocoordinateskeyframeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_release_handle'));
final _heresdkVisualNavigationBindingslistofSdkAnimationGeocoordinateskeyframeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_insert'));
final _heresdkVisualNavigationBindingslistofSdkAnimationGeocoordinateskeyframeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_iterator'));
final _heresdkVisualNavigationBindingslistofSdkAnimationGeocoordinateskeyframeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_iterator_release_handle'));
final _heresdkVisualNavigationBindingslistofSdkAnimationGeocoordinateskeyframeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_iterator_is_valid'));
final _heresdkVisualNavigationBindingslistofSdkAnimationGeocoordinateskeyframeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_iterator_increment'));
final _heresdkVisualNavigationBindingslistofSdkAnimationGeocoordinateskeyframeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_iterator_get'));

Pointer<Void> heresdkVisualNavigationBindingslistofSdkAnimationGeocoordinateskeyframeToFfi(List<GeoCoordinatesKeyframe> value) {
  final _result = _heresdkVisualNavigationBindingslistofSdkAnimationGeocoordinateskeyframeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkAnimationGeocoordinateskeyframeToFfi(element);
    _heresdkVisualNavigationBindingslistofSdkAnimationGeocoordinateskeyframeInsert(_result, _elementHandle);
    sdkAnimationGeocoordinateskeyframeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoCoordinatesKeyframe> heresdkVisualNavigationBindingslistofSdkAnimationGeocoordinateskeyframeFromFfi(Pointer<Void> handle) {
  final result = List<GeoCoordinatesKeyframe>.empty(growable: true);
  final _iteratorHandle = _heresdkVisualNavigationBindingslistofSdkAnimationGeocoordinateskeyframeIterator(handle);
  while (_heresdkVisualNavigationBindingslistofSdkAnimationGeocoordinateskeyframeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkVisualNavigationBindingslistofSdkAnimationGeocoordinateskeyframeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkAnimationGeocoordinateskeyframeFromFfi(_elementHandle));
    } finally {
      sdkAnimationGeocoordinateskeyframeReleaseFfiHandle(_elementHandle);
    }
    _heresdkVisualNavigationBindingslistofSdkAnimationGeocoordinateskeyframeIteratorIncrement(_iteratorHandle);
  }
  _heresdkVisualNavigationBindingslistofSdkAnimationGeocoordinateskeyframeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkVisualNavigationBindingslistofSdkAnimationGeocoordinateskeyframeReleaseFfiHandle(Pointer<Void> handle) => _heresdkVisualNavigationBindingslistofSdkAnimationGeocoordinateskeyframeReleaseHandle(handle);

final _heresdkVisualNavigationBindingslistofSdkAnimationGeocoordinateskeyframeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_create_handle_nullable'));
final _heresdkVisualNavigationBindingslistofSdkAnimationGeocoordinateskeyframeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_release_handle_nullable'));
final _heresdkVisualNavigationBindingslistofSdkAnimationGeocoordinateskeyframeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_animation_GeoCoordinatesKeyframe_get_value_nullable'));

Pointer<Void> heresdkVisualNavigationBindingslistofSdkAnimationGeocoordinateskeyframeToFfiNullable(List<GeoCoordinatesKeyframe>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkVisualNavigationBindingslistofSdkAnimationGeocoordinateskeyframeToFfi(value);
  final result = _heresdkVisualNavigationBindingslistofSdkAnimationGeocoordinateskeyframeCreateHandleNullable(_handle);
  heresdkVisualNavigationBindingslistofSdkAnimationGeocoordinateskeyframeReleaseFfiHandle(_handle);
  return result;
}

List<GeoCoordinatesKeyframe>? heresdkVisualNavigationBindingslistofSdkAnimationGeocoordinateskeyframeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkVisualNavigationBindingslistofSdkAnimationGeocoordinateskeyframeGetValueNullable(handle);
  final result = heresdkVisualNavigationBindingslistofSdkAnimationGeocoordinateskeyframeFromFfi(_handle);
  heresdkVisualNavigationBindingslistofSdkAnimationGeocoordinateskeyframeReleaseFfiHandle(_handle);
  return result;
}

void heresdkVisualNavigationBindingslistofSdkAnimationGeocoordinateskeyframeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkVisualNavigationBindingslistofSdkAnimationGeocoordinateskeyframeReleaseHandleNullable(handle);

final _heresdkVisualNavigationBindingslistofSdkAnimationGeoorientationkeyframeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_animation_GeoOrientationKeyframe_create_handle'));
final _heresdkVisualNavigationBindingslistofSdkAnimationGeoorientationkeyframeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_animation_GeoOrientationKeyframe_release_handle'));
final _heresdkVisualNavigationBindingslistofSdkAnimationGeoorientationkeyframeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_animation_GeoOrientationKeyframe_insert'));
final _heresdkVisualNavigationBindingslistofSdkAnimationGeoorientationkeyframeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_animation_GeoOrientationKeyframe_iterator'));
final _heresdkVisualNavigationBindingslistofSdkAnimationGeoorientationkeyframeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_animation_GeoOrientationKeyframe_iterator_release_handle'));
final _heresdkVisualNavigationBindingslistofSdkAnimationGeoorientationkeyframeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_animation_GeoOrientationKeyframe_iterator_is_valid'));
final _heresdkVisualNavigationBindingslistofSdkAnimationGeoorientationkeyframeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_animation_GeoOrientationKeyframe_iterator_increment'));
final _heresdkVisualNavigationBindingslistofSdkAnimationGeoorientationkeyframeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_animation_GeoOrientationKeyframe_iterator_get'));

Pointer<Void> heresdkVisualNavigationBindingslistofSdkAnimationGeoorientationkeyframeToFfi(List<GeoOrientationKeyframe> value) {
  final _result = _heresdkVisualNavigationBindingslistofSdkAnimationGeoorientationkeyframeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkAnimationGeoorientationkeyframeToFfi(element);
    _heresdkVisualNavigationBindingslistofSdkAnimationGeoorientationkeyframeInsert(_result, _elementHandle);
    sdkAnimationGeoorientationkeyframeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoOrientationKeyframe> heresdkVisualNavigationBindingslistofSdkAnimationGeoorientationkeyframeFromFfi(Pointer<Void> handle) {
  final result = List<GeoOrientationKeyframe>.empty(growable: true);
  final _iteratorHandle = _heresdkVisualNavigationBindingslistofSdkAnimationGeoorientationkeyframeIterator(handle);
  while (_heresdkVisualNavigationBindingslistofSdkAnimationGeoorientationkeyframeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkVisualNavigationBindingslistofSdkAnimationGeoorientationkeyframeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkAnimationGeoorientationkeyframeFromFfi(_elementHandle));
    } finally {
      sdkAnimationGeoorientationkeyframeReleaseFfiHandle(_elementHandle);
    }
    _heresdkVisualNavigationBindingslistofSdkAnimationGeoorientationkeyframeIteratorIncrement(_iteratorHandle);
  }
  _heresdkVisualNavigationBindingslistofSdkAnimationGeoorientationkeyframeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkVisualNavigationBindingslistofSdkAnimationGeoorientationkeyframeReleaseFfiHandle(Pointer<Void> handle) => _heresdkVisualNavigationBindingslistofSdkAnimationGeoorientationkeyframeReleaseHandle(handle);

final _heresdkVisualNavigationBindingslistofSdkAnimationGeoorientationkeyframeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_animation_GeoOrientationKeyframe_create_handle_nullable'));
final _heresdkVisualNavigationBindingslistofSdkAnimationGeoorientationkeyframeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_animation_GeoOrientationKeyframe_release_handle_nullable'));
final _heresdkVisualNavigationBindingslistofSdkAnimationGeoorientationkeyframeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_animation_GeoOrientationKeyframe_get_value_nullable'));

Pointer<Void> heresdkVisualNavigationBindingslistofSdkAnimationGeoorientationkeyframeToFfiNullable(List<GeoOrientationKeyframe>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkVisualNavigationBindingslistofSdkAnimationGeoorientationkeyframeToFfi(value);
  final result = _heresdkVisualNavigationBindingslistofSdkAnimationGeoorientationkeyframeCreateHandleNullable(_handle);
  heresdkVisualNavigationBindingslistofSdkAnimationGeoorientationkeyframeReleaseFfiHandle(_handle);
  return result;
}

List<GeoOrientationKeyframe>? heresdkVisualNavigationBindingslistofSdkAnimationGeoorientationkeyframeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkVisualNavigationBindingslistofSdkAnimationGeoorientationkeyframeGetValueNullable(handle);
  final result = heresdkVisualNavigationBindingslistofSdkAnimationGeoorientationkeyframeFromFfi(_handle);
  heresdkVisualNavigationBindingslistofSdkAnimationGeoorientationkeyframeReleaseFfiHandle(_handle);
  return result;
}

void heresdkVisualNavigationBindingslistofSdkAnimationGeoorientationkeyframeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkVisualNavigationBindingslistofSdkAnimationGeoorientationkeyframeReleaseHandleNullable(handle);

final _heresdkVisualNavigationBindingslistofSdkAnimationPoint2dkeyframeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_animation_Point2DKeyframe_create_handle'));
final _heresdkVisualNavigationBindingslistofSdkAnimationPoint2dkeyframeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_animation_Point2DKeyframe_release_handle'));
final _heresdkVisualNavigationBindingslistofSdkAnimationPoint2dkeyframeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_animation_Point2DKeyframe_insert'));
final _heresdkVisualNavigationBindingslistofSdkAnimationPoint2dkeyframeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_animation_Point2DKeyframe_iterator'));
final _heresdkVisualNavigationBindingslistofSdkAnimationPoint2dkeyframeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_animation_Point2DKeyframe_iterator_release_handle'));
final _heresdkVisualNavigationBindingslistofSdkAnimationPoint2dkeyframeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_animation_Point2DKeyframe_iterator_is_valid'));
final _heresdkVisualNavigationBindingslistofSdkAnimationPoint2dkeyframeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_animation_Point2DKeyframe_iterator_increment'));
final _heresdkVisualNavigationBindingslistofSdkAnimationPoint2dkeyframeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_animation_Point2DKeyframe_iterator_get'));

Pointer<Void> heresdkVisualNavigationBindingslistofSdkAnimationPoint2dkeyframeToFfi(List<Point2DKeyframe> value) {
  final _result = _heresdkVisualNavigationBindingslistofSdkAnimationPoint2dkeyframeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkAnimationPoint2dkeyframeToFfi(element);
    _heresdkVisualNavigationBindingslistofSdkAnimationPoint2dkeyframeInsert(_result, _elementHandle);
    sdkAnimationPoint2dkeyframeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Point2DKeyframe> heresdkVisualNavigationBindingslistofSdkAnimationPoint2dkeyframeFromFfi(Pointer<Void> handle) {
  final result = List<Point2DKeyframe>.empty(growable: true);
  final _iteratorHandle = _heresdkVisualNavigationBindingslistofSdkAnimationPoint2dkeyframeIterator(handle);
  while (_heresdkVisualNavigationBindingslistofSdkAnimationPoint2dkeyframeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkVisualNavigationBindingslistofSdkAnimationPoint2dkeyframeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkAnimationPoint2dkeyframeFromFfi(_elementHandle));
    } finally {
      sdkAnimationPoint2dkeyframeReleaseFfiHandle(_elementHandle);
    }
    _heresdkVisualNavigationBindingslistofSdkAnimationPoint2dkeyframeIteratorIncrement(_iteratorHandle);
  }
  _heresdkVisualNavigationBindingslistofSdkAnimationPoint2dkeyframeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkVisualNavigationBindingslistofSdkAnimationPoint2dkeyframeReleaseFfiHandle(Pointer<Void> handle) => _heresdkVisualNavigationBindingslistofSdkAnimationPoint2dkeyframeReleaseHandle(handle);

final _heresdkVisualNavigationBindingslistofSdkAnimationPoint2dkeyframeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_animation_Point2DKeyframe_create_handle_nullable'));
final _heresdkVisualNavigationBindingslistofSdkAnimationPoint2dkeyframeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_animation_Point2DKeyframe_release_handle_nullable'));
final _heresdkVisualNavigationBindingslistofSdkAnimationPoint2dkeyframeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_animation_Point2DKeyframe_get_value_nullable'));

Pointer<Void> heresdkVisualNavigationBindingslistofSdkAnimationPoint2dkeyframeToFfiNullable(List<Point2DKeyframe>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkVisualNavigationBindingslistofSdkAnimationPoint2dkeyframeToFfi(value);
  final result = _heresdkVisualNavigationBindingslistofSdkAnimationPoint2dkeyframeCreateHandleNullable(_handle);
  heresdkVisualNavigationBindingslistofSdkAnimationPoint2dkeyframeReleaseFfiHandle(_handle);
  return result;
}

List<Point2DKeyframe>? heresdkVisualNavigationBindingslistofSdkAnimationPoint2dkeyframeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkVisualNavigationBindingslistofSdkAnimationPoint2dkeyframeGetValueNullable(handle);
  final result = heresdkVisualNavigationBindingslistofSdkAnimationPoint2dkeyframeFromFfi(_handle);
  heresdkVisualNavigationBindingslistofSdkAnimationPoint2dkeyframeReleaseFfiHandle(_handle);
  return result;
}

void heresdkVisualNavigationBindingslistofSdkAnimationPoint2dkeyframeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkVisualNavigationBindingslistofSdkAnimationPoint2dkeyframeReleaseHandleNullable(handle);

final _heresdkVisualNavigationBindingslistofSdkAnimationScalarkeyframeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_animation_ScalarKeyframe_create_handle'));
final _heresdkVisualNavigationBindingslistofSdkAnimationScalarkeyframeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_animation_ScalarKeyframe_release_handle'));
final _heresdkVisualNavigationBindingslistofSdkAnimationScalarkeyframeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_animation_ScalarKeyframe_insert'));
final _heresdkVisualNavigationBindingslistofSdkAnimationScalarkeyframeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_animation_ScalarKeyframe_iterator'));
final _heresdkVisualNavigationBindingslistofSdkAnimationScalarkeyframeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_animation_ScalarKeyframe_iterator_release_handle'));
final _heresdkVisualNavigationBindingslistofSdkAnimationScalarkeyframeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_animation_ScalarKeyframe_iterator_is_valid'));
final _heresdkVisualNavigationBindingslistofSdkAnimationScalarkeyframeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_animation_ScalarKeyframe_iterator_increment'));
final _heresdkVisualNavigationBindingslistofSdkAnimationScalarkeyframeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_animation_ScalarKeyframe_iterator_get'));

Pointer<Void> heresdkVisualNavigationBindingslistofSdkAnimationScalarkeyframeToFfi(List<ScalarKeyframe> value) {
  final _result = _heresdkVisualNavigationBindingslistofSdkAnimationScalarkeyframeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkAnimationScalarkeyframeToFfi(element);
    _heresdkVisualNavigationBindingslistofSdkAnimationScalarkeyframeInsert(_result, _elementHandle);
    sdkAnimationScalarkeyframeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<ScalarKeyframe> heresdkVisualNavigationBindingslistofSdkAnimationScalarkeyframeFromFfi(Pointer<Void> handle) {
  final result = List<ScalarKeyframe>.empty(growable: true);
  final _iteratorHandle = _heresdkVisualNavigationBindingslistofSdkAnimationScalarkeyframeIterator(handle);
  while (_heresdkVisualNavigationBindingslistofSdkAnimationScalarkeyframeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkVisualNavigationBindingslistofSdkAnimationScalarkeyframeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkAnimationScalarkeyframeFromFfi(_elementHandle));
    } finally {
      sdkAnimationScalarkeyframeReleaseFfiHandle(_elementHandle);
    }
    _heresdkVisualNavigationBindingslistofSdkAnimationScalarkeyframeIteratorIncrement(_iteratorHandle);
  }
  _heresdkVisualNavigationBindingslistofSdkAnimationScalarkeyframeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkVisualNavigationBindingslistofSdkAnimationScalarkeyframeReleaseFfiHandle(Pointer<Void> handle) => _heresdkVisualNavigationBindingslistofSdkAnimationScalarkeyframeReleaseHandle(handle);

final _heresdkVisualNavigationBindingslistofSdkAnimationScalarkeyframeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_animation_ScalarKeyframe_create_handle_nullable'));
final _heresdkVisualNavigationBindingslistofSdkAnimationScalarkeyframeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_animation_ScalarKeyframe_release_handle_nullable'));
final _heresdkVisualNavigationBindingslistofSdkAnimationScalarkeyframeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_animation_ScalarKeyframe_get_value_nullable'));

Pointer<Void> heresdkVisualNavigationBindingslistofSdkAnimationScalarkeyframeToFfiNullable(List<ScalarKeyframe>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkVisualNavigationBindingslistofSdkAnimationScalarkeyframeToFfi(value);
  final result = _heresdkVisualNavigationBindingslistofSdkAnimationScalarkeyframeCreateHandleNullable(_handle);
  heresdkVisualNavigationBindingslistofSdkAnimationScalarkeyframeReleaseFfiHandle(_handle);
  return result;
}

List<ScalarKeyframe>? heresdkVisualNavigationBindingslistofSdkAnimationScalarkeyframeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkVisualNavigationBindingslistofSdkAnimationScalarkeyframeGetValueNullable(handle);
  final result = heresdkVisualNavigationBindingslistofSdkAnimationScalarkeyframeFromFfi(_handle);
  heresdkVisualNavigationBindingslistofSdkAnimationScalarkeyframeReleaseFfiHandle(_handle);
  return result;
}

void heresdkVisualNavigationBindingslistofSdkAnimationScalarkeyframeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkVisualNavigationBindingslistofSdkAnimationScalarkeyframeReleaseHandleNullable(handle);

final _heresdkVisualNavigationBindingslistofSdkCoreCountrycodeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_core_CountryCode_create_handle'));
final _heresdkVisualNavigationBindingslistofSdkCoreCountrycodeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_core_CountryCode_release_handle'));
final _heresdkVisualNavigationBindingslistofSdkCoreCountrycodeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_core_CountryCode_insert'));
final _heresdkVisualNavigationBindingslistofSdkCoreCountrycodeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_core_CountryCode_iterator'));
final _heresdkVisualNavigationBindingslistofSdkCoreCountrycodeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_core_CountryCode_iterator_release_handle'));
final _heresdkVisualNavigationBindingslistofSdkCoreCountrycodeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_core_CountryCode_iterator_is_valid'));
final _heresdkVisualNavigationBindingslistofSdkCoreCountrycodeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_core_CountryCode_iterator_increment'));
final _heresdkVisualNavigationBindingslistofSdkCoreCountrycodeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_core_CountryCode_iterator_get'));

Pointer<Void> heresdkVisualNavigationBindingslistofSdkCoreCountrycodeToFfi(List<CountryCode> value) {
  final _result = _heresdkVisualNavigationBindingslistofSdkCoreCountrycodeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreCountrycodeToFfi(element);
    _heresdkVisualNavigationBindingslistofSdkCoreCountrycodeInsert(_result, _elementHandle);
    sdkCoreCountrycodeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<CountryCode> heresdkVisualNavigationBindingslistofSdkCoreCountrycodeFromFfi(Pointer<Void> handle) {
  final result = List<CountryCode>.empty(growable: true);
  final _iteratorHandle = _heresdkVisualNavigationBindingslistofSdkCoreCountrycodeIterator(handle);
  while (_heresdkVisualNavigationBindingslistofSdkCoreCountrycodeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkVisualNavigationBindingslistofSdkCoreCountrycodeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreCountrycodeFromFfi(_elementHandle));
    } finally {
      sdkCoreCountrycodeReleaseFfiHandle(_elementHandle);
    }
    _heresdkVisualNavigationBindingslistofSdkCoreCountrycodeIteratorIncrement(_iteratorHandle);
  }
  _heresdkVisualNavigationBindingslistofSdkCoreCountrycodeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkVisualNavigationBindingslistofSdkCoreCountrycodeReleaseFfiHandle(Pointer<Void> handle) => _heresdkVisualNavigationBindingslistofSdkCoreCountrycodeReleaseHandle(handle);

final _heresdkVisualNavigationBindingslistofSdkCoreCountrycodeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_core_CountryCode_create_handle_nullable'));
final _heresdkVisualNavigationBindingslistofSdkCoreCountrycodeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_core_CountryCode_release_handle_nullable'));
final _heresdkVisualNavigationBindingslistofSdkCoreCountrycodeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_core_CountryCode_get_value_nullable'));

Pointer<Void> heresdkVisualNavigationBindingslistofSdkCoreCountrycodeToFfiNullable(List<CountryCode>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkVisualNavigationBindingslistofSdkCoreCountrycodeToFfi(value);
  final result = _heresdkVisualNavigationBindingslistofSdkCoreCountrycodeCreateHandleNullable(_handle);
  heresdkVisualNavigationBindingslistofSdkCoreCountrycodeReleaseFfiHandle(_handle);
  return result;
}

List<CountryCode>? heresdkVisualNavigationBindingslistofSdkCoreCountrycodeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkVisualNavigationBindingslistofSdkCoreCountrycodeGetValueNullable(handle);
  final result = heresdkVisualNavigationBindingslistofSdkCoreCountrycodeFromFfi(_handle);
  heresdkVisualNavigationBindingslistofSdkCoreCountrycodeReleaseFfiHandle(_handle);
  return result;
}

void heresdkVisualNavigationBindingslistofSdkCoreCountrycodeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkVisualNavigationBindingslistofSdkCoreCountrycodeReleaseHandleNullable(handle);

final _heresdkVisualNavigationBindingslistofSdkCoreGeoboxCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_core_GeoBox_create_handle'));
final _heresdkVisualNavigationBindingslistofSdkCoreGeoboxReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_core_GeoBox_release_handle'));
final _heresdkVisualNavigationBindingslistofSdkCoreGeoboxInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_core_GeoBox_insert'));
final _heresdkVisualNavigationBindingslistofSdkCoreGeoboxIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_core_GeoBox_iterator'));
final _heresdkVisualNavigationBindingslistofSdkCoreGeoboxIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_core_GeoBox_iterator_release_handle'));
final _heresdkVisualNavigationBindingslistofSdkCoreGeoboxIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_core_GeoBox_iterator_is_valid'));
final _heresdkVisualNavigationBindingslistofSdkCoreGeoboxIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_core_GeoBox_iterator_increment'));
final _heresdkVisualNavigationBindingslistofSdkCoreGeoboxIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_core_GeoBox_iterator_get'));

Pointer<Void> heresdkVisualNavigationBindingslistofSdkCoreGeoboxToFfi(List<GeoBox> value) {
  final _result = _heresdkVisualNavigationBindingslistofSdkCoreGeoboxCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreGeoboxToFfi(element);
    _heresdkVisualNavigationBindingslistofSdkCoreGeoboxInsert(_result, _elementHandle);
    sdkCoreGeoboxReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoBox> heresdkVisualNavigationBindingslistofSdkCoreGeoboxFromFfi(Pointer<Void> handle) {
  final result = List<GeoBox>.empty(growable: true);
  final _iteratorHandle = _heresdkVisualNavigationBindingslistofSdkCoreGeoboxIterator(handle);
  while (_heresdkVisualNavigationBindingslistofSdkCoreGeoboxIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkVisualNavigationBindingslistofSdkCoreGeoboxIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreGeoboxFromFfi(_elementHandle));
    } finally {
      sdkCoreGeoboxReleaseFfiHandle(_elementHandle);
    }
    _heresdkVisualNavigationBindingslistofSdkCoreGeoboxIteratorIncrement(_iteratorHandle);
  }
  _heresdkVisualNavigationBindingslistofSdkCoreGeoboxIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkVisualNavigationBindingslistofSdkCoreGeoboxReleaseFfiHandle(Pointer<Void> handle) => _heresdkVisualNavigationBindingslistofSdkCoreGeoboxReleaseHandle(handle);

final _heresdkVisualNavigationBindingslistofSdkCoreGeoboxCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_core_GeoBox_create_handle_nullable'));
final _heresdkVisualNavigationBindingslistofSdkCoreGeoboxReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_core_GeoBox_release_handle_nullable'));
final _heresdkVisualNavigationBindingslistofSdkCoreGeoboxGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_core_GeoBox_get_value_nullable'));

Pointer<Void> heresdkVisualNavigationBindingslistofSdkCoreGeoboxToFfiNullable(List<GeoBox>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkVisualNavigationBindingslistofSdkCoreGeoboxToFfi(value);
  final result = _heresdkVisualNavigationBindingslistofSdkCoreGeoboxCreateHandleNullable(_handle);
  heresdkVisualNavigationBindingslistofSdkCoreGeoboxReleaseFfiHandle(_handle);
  return result;
}

List<GeoBox>? heresdkVisualNavigationBindingslistofSdkCoreGeoboxFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkVisualNavigationBindingslistofSdkCoreGeoboxGetValueNullable(handle);
  final result = heresdkVisualNavigationBindingslistofSdkCoreGeoboxFromFfi(_handle);
  heresdkVisualNavigationBindingslistofSdkCoreGeoboxReleaseFfiHandle(_handle);
  return result;
}

void heresdkVisualNavigationBindingslistofSdkCoreGeoboxReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkVisualNavigationBindingslistofSdkCoreGeoboxReleaseHandleNullable(handle);

final _heresdkVisualNavigationBindingslistofSdkCoreGeocoordinatesCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_core_GeoCoordinates_create_handle'));
final _heresdkVisualNavigationBindingslistofSdkCoreGeocoordinatesReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_core_GeoCoordinates_release_handle'));
final _heresdkVisualNavigationBindingslistofSdkCoreGeocoordinatesInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_core_GeoCoordinates_insert'));
final _heresdkVisualNavigationBindingslistofSdkCoreGeocoordinatesIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_core_GeoCoordinates_iterator'));
final _heresdkVisualNavigationBindingslistofSdkCoreGeocoordinatesIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_core_GeoCoordinates_iterator_release_handle'));
final _heresdkVisualNavigationBindingslistofSdkCoreGeocoordinatesIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_core_GeoCoordinates_iterator_is_valid'));
final _heresdkVisualNavigationBindingslistofSdkCoreGeocoordinatesIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_core_GeoCoordinates_iterator_increment'));
final _heresdkVisualNavigationBindingslistofSdkCoreGeocoordinatesIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_core_GeoCoordinates_iterator_get'));

Pointer<Void> heresdkVisualNavigationBindingslistofSdkCoreGeocoordinatesToFfi(List<GeoCoordinates> value) {
  final _result = _heresdkVisualNavigationBindingslistofSdkCoreGeocoordinatesCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreGeocoordinatesToFfi(element);
    _heresdkVisualNavigationBindingslistofSdkCoreGeocoordinatesInsert(_result, _elementHandle);
    sdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoCoordinates> heresdkVisualNavigationBindingslistofSdkCoreGeocoordinatesFromFfi(Pointer<Void> handle) {
  final result = List<GeoCoordinates>.empty(growable: true);
  final _iteratorHandle = _heresdkVisualNavigationBindingslistofSdkCoreGeocoordinatesIterator(handle);
  while (_heresdkVisualNavigationBindingslistofSdkCoreGeocoordinatesIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkVisualNavigationBindingslistofSdkCoreGeocoordinatesIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreGeocoordinatesFromFfi(_elementHandle));
    } finally {
      sdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
    }
    _heresdkVisualNavigationBindingslistofSdkCoreGeocoordinatesIteratorIncrement(_iteratorHandle);
  }
  _heresdkVisualNavigationBindingslistofSdkCoreGeocoordinatesIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkVisualNavigationBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(Pointer<Void> handle) => _heresdkVisualNavigationBindingslistofSdkCoreGeocoordinatesReleaseHandle(handle);

final _heresdkVisualNavigationBindingslistofSdkCoreGeocoordinatesCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_core_GeoCoordinates_create_handle_nullable'));
final _heresdkVisualNavigationBindingslistofSdkCoreGeocoordinatesReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_core_GeoCoordinates_release_handle_nullable'));
final _heresdkVisualNavigationBindingslistofSdkCoreGeocoordinatesGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_core_GeoCoordinates_get_value_nullable'));

Pointer<Void> heresdkVisualNavigationBindingslistofSdkCoreGeocoordinatesToFfiNullable(List<GeoCoordinates>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkVisualNavigationBindingslistofSdkCoreGeocoordinatesToFfi(value);
  final result = _heresdkVisualNavigationBindingslistofSdkCoreGeocoordinatesCreateHandleNullable(_handle);
  heresdkVisualNavigationBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

List<GeoCoordinates>? heresdkVisualNavigationBindingslistofSdkCoreGeocoordinatesFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkVisualNavigationBindingslistofSdkCoreGeocoordinatesGetValueNullable(handle);
  final result = heresdkVisualNavigationBindingslistofSdkCoreGeocoordinatesFromFfi(_handle);
  heresdkVisualNavigationBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

void heresdkVisualNavigationBindingslistofSdkCoreGeocoordinatesReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkVisualNavigationBindingslistofSdkCoreGeocoordinatesReleaseHandleNullable(handle);

final _heresdkVisualNavigationBindingslistofSdkCoreLanguagecodeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_core_LanguageCode_create_handle'));
final _heresdkVisualNavigationBindingslistofSdkCoreLanguagecodeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_core_LanguageCode_release_handle'));
final _heresdkVisualNavigationBindingslistofSdkCoreLanguagecodeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_core_LanguageCode_insert'));
final _heresdkVisualNavigationBindingslistofSdkCoreLanguagecodeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_core_LanguageCode_iterator'));
final _heresdkVisualNavigationBindingslistofSdkCoreLanguagecodeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_core_LanguageCode_iterator_release_handle'));
final _heresdkVisualNavigationBindingslistofSdkCoreLanguagecodeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_core_LanguageCode_iterator_is_valid'));
final _heresdkVisualNavigationBindingslistofSdkCoreLanguagecodeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_core_LanguageCode_iterator_increment'));
final _heresdkVisualNavigationBindingslistofSdkCoreLanguagecodeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_core_LanguageCode_iterator_get'));

Pointer<Void> heresdkVisualNavigationBindingslistofSdkCoreLanguagecodeToFfi(List<LanguageCode> value) {
  final _result = _heresdkVisualNavigationBindingslistofSdkCoreLanguagecodeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreLanguagecodeToFfi(element);
    _heresdkVisualNavigationBindingslistofSdkCoreLanguagecodeInsert(_result, _elementHandle);
    sdkCoreLanguagecodeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<LanguageCode> heresdkVisualNavigationBindingslistofSdkCoreLanguagecodeFromFfi(Pointer<Void> handle) {
  final result = List<LanguageCode>.empty(growable: true);
  final _iteratorHandle = _heresdkVisualNavigationBindingslistofSdkCoreLanguagecodeIterator(handle);
  while (_heresdkVisualNavigationBindingslistofSdkCoreLanguagecodeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkVisualNavigationBindingslistofSdkCoreLanguagecodeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreLanguagecodeFromFfi(_elementHandle));
    } finally {
      sdkCoreLanguagecodeReleaseFfiHandle(_elementHandle);
    }
    _heresdkVisualNavigationBindingslistofSdkCoreLanguagecodeIteratorIncrement(_iteratorHandle);
  }
  _heresdkVisualNavigationBindingslistofSdkCoreLanguagecodeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkVisualNavigationBindingslistofSdkCoreLanguagecodeReleaseFfiHandle(Pointer<Void> handle) => _heresdkVisualNavigationBindingslistofSdkCoreLanguagecodeReleaseHandle(handle);

final _heresdkVisualNavigationBindingslistofSdkCoreLanguagecodeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_core_LanguageCode_create_handle_nullable'));
final _heresdkVisualNavigationBindingslistofSdkCoreLanguagecodeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_core_LanguageCode_release_handle_nullable'));
final _heresdkVisualNavigationBindingslistofSdkCoreLanguagecodeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_core_LanguageCode_get_value_nullable'));

Pointer<Void> heresdkVisualNavigationBindingslistofSdkCoreLanguagecodeToFfiNullable(List<LanguageCode>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkVisualNavigationBindingslistofSdkCoreLanguagecodeToFfi(value);
  final result = _heresdkVisualNavigationBindingslistofSdkCoreLanguagecodeCreateHandleNullable(_handle);
  heresdkVisualNavigationBindingslistofSdkCoreLanguagecodeReleaseFfiHandle(_handle);
  return result;
}

List<LanguageCode>? heresdkVisualNavigationBindingslistofSdkCoreLanguagecodeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkVisualNavigationBindingslistofSdkCoreLanguagecodeGetValueNullable(handle);
  final result = heresdkVisualNavigationBindingslistofSdkCoreLanguagecodeFromFfi(_handle);
  heresdkVisualNavigationBindingslistofSdkCoreLanguagecodeReleaseFfiHandle(_handle);
  return result;
}

void heresdkVisualNavigationBindingslistofSdkCoreLanguagecodeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkVisualNavigationBindingslistofSdkCoreLanguagecodeReleaseHandleNullable(handle);

final _heresdkVisualNavigationBindingslistofSdkCoreLocalizedtextCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_core_LocalizedText_create_handle'));
final _heresdkVisualNavigationBindingslistofSdkCoreLocalizedtextReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_core_LocalizedText_release_handle'));
final _heresdkVisualNavigationBindingslistofSdkCoreLocalizedtextInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_core_LocalizedText_insert'));
final _heresdkVisualNavigationBindingslistofSdkCoreLocalizedtextIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_core_LocalizedText_iterator'));
final _heresdkVisualNavigationBindingslistofSdkCoreLocalizedtextIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_core_LocalizedText_iterator_release_handle'));
final _heresdkVisualNavigationBindingslistofSdkCoreLocalizedtextIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_core_LocalizedText_iterator_is_valid'));
final _heresdkVisualNavigationBindingslistofSdkCoreLocalizedtextIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_core_LocalizedText_iterator_increment'));
final _heresdkVisualNavigationBindingslistofSdkCoreLocalizedtextIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_core_LocalizedText_iterator_get'));

Pointer<Void> heresdkVisualNavigationBindingslistofSdkCoreLocalizedtextToFfi(List<LocalizedText> value) {
  final _result = _heresdkVisualNavigationBindingslistofSdkCoreLocalizedtextCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreLocalizedtextToFfi(element);
    _heresdkVisualNavigationBindingslistofSdkCoreLocalizedtextInsert(_result, _elementHandle);
    sdkCoreLocalizedtextReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<LocalizedText> heresdkVisualNavigationBindingslistofSdkCoreLocalizedtextFromFfi(Pointer<Void> handle) {
  final result = List<LocalizedText>.empty(growable: true);
  final _iteratorHandle = _heresdkVisualNavigationBindingslistofSdkCoreLocalizedtextIterator(handle);
  while (_heresdkVisualNavigationBindingslistofSdkCoreLocalizedtextIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkVisualNavigationBindingslistofSdkCoreLocalizedtextIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreLocalizedtextFromFfi(_elementHandle));
    } finally {
      sdkCoreLocalizedtextReleaseFfiHandle(_elementHandle);
    }
    _heresdkVisualNavigationBindingslistofSdkCoreLocalizedtextIteratorIncrement(_iteratorHandle);
  }
  _heresdkVisualNavigationBindingslistofSdkCoreLocalizedtextIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkVisualNavigationBindingslistofSdkCoreLocalizedtextReleaseFfiHandle(Pointer<Void> handle) => _heresdkVisualNavigationBindingslistofSdkCoreLocalizedtextReleaseHandle(handle);

final _heresdkVisualNavigationBindingslistofSdkCoreLocalizedtextCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_core_LocalizedText_create_handle_nullable'));
final _heresdkVisualNavigationBindingslistofSdkCoreLocalizedtextReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_core_LocalizedText_release_handle_nullable'));
final _heresdkVisualNavigationBindingslistofSdkCoreLocalizedtextGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_core_LocalizedText_get_value_nullable'));

Pointer<Void> heresdkVisualNavigationBindingslistofSdkCoreLocalizedtextToFfiNullable(List<LocalizedText>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkVisualNavigationBindingslistofSdkCoreLocalizedtextToFfi(value);
  final result = _heresdkVisualNavigationBindingslistofSdkCoreLocalizedtextCreateHandleNullable(_handle);
  heresdkVisualNavigationBindingslistofSdkCoreLocalizedtextReleaseFfiHandle(_handle);
  return result;
}

List<LocalizedText>? heresdkVisualNavigationBindingslistofSdkCoreLocalizedtextFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkVisualNavigationBindingslistofSdkCoreLocalizedtextGetValueNullable(handle);
  final result = heresdkVisualNavigationBindingslistofSdkCoreLocalizedtextFromFfi(_handle);
  heresdkVisualNavigationBindingslistofSdkCoreLocalizedtextReleaseFfiHandle(_handle);
  return result;
}

void heresdkVisualNavigationBindingslistofSdkCoreLocalizedtextReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkVisualNavigationBindingslistofSdkCoreLocalizedtextReleaseHandleNullable(handle);

final _heresdkVisualNavigationBindingslistofSdkCoreEngineLayerconfigurationFeatureCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_create_handle'));
final _heresdkVisualNavigationBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_release_handle'));
final _heresdkVisualNavigationBindingslistofSdkCoreEngineLayerconfigurationFeatureInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_insert'));
final _heresdkVisualNavigationBindingslistofSdkCoreEngineLayerconfigurationFeatureIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator'));
final _heresdkVisualNavigationBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator_release_handle'));
final _heresdkVisualNavigationBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator_is_valid'));
final _heresdkVisualNavigationBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator_increment'));
final _heresdkVisualNavigationBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_iterator_get'));

Pointer<Void> heresdkVisualNavigationBindingslistofSdkCoreEngineLayerconfigurationFeatureToFfi(List<LayerConfigurationFeature> value) {
  final _result = _heresdkVisualNavigationBindingslistofSdkCoreEngineLayerconfigurationFeatureCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreEngineLayerconfigurationFeatureToFfi(element);
    _heresdkVisualNavigationBindingslistofSdkCoreEngineLayerconfigurationFeatureInsert(_result, _elementHandle);
    sdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<LayerConfigurationFeature> heresdkVisualNavigationBindingslistofSdkCoreEngineLayerconfigurationFeatureFromFfi(Pointer<Void> handle) {
  final result = List<LayerConfigurationFeature>.empty(growable: true);
  final _iteratorHandle = _heresdkVisualNavigationBindingslistofSdkCoreEngineLayerconfigurationFeatureIterator(handle);
  while (_heresdkVisualNavigationBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkVisualNavigationBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreEngineLayerconfigurationFeatureFromFfi(_elementHandle));
    } finally {
      sdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(_elementHandle);
    }
    _heresdkVisualNavigationBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorIncrement(_iteratorHandle);
  }
  _heresdkVisualNavigationBindingslistofSdkCoreEngineLayerconfigurationFeatureIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkVisualNavigationBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(Pointer<Void> handle) => _heresdkVisualNavigationBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseHandle(handle);

final _heresdkVisualNavigationBindingslistofSdkCoreEngineLayerconfigurationFeatureCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_create_handle_nullable'));
final _heresdkVisualNavigationBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_release_handle_nullable'));
final _heresdkVisualNavigationBindingslistofSdkCoreEngineLayerconfigurationFeatureGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_core_engine_LayerConfiguration_Feature_get_value_nullable'));

Pointer<Void> heresdkVisualNavigationBindingslistofSdkCoreEngineLayerconfigurationFeatureToFfiNullable(List<LayerConfigurationFeature>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkVisualNavigationBindingslistofSdkCoreEngineLayerconfigurationFeatureToFfi(value);
  final result = _heresdkVisualNavigationBindingslistofSdkCoreEngineLayerconfigurationFeatureCreateHandleNullable(_handle);
  heresdkVisualNavigationBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(_handle);
  return result;
}

List<LayerConfigurationFeature>? heresdkVisualNavigationBindingslistofSdkCoreEngineLayerconfigurationFeatureFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkVisualNavigationBindingslistofSdkCoreEngineLayerconfigurationFeatureGetValueNullable(handle);
  final result = heresdkVisualNavigationBindingslistofSdkCoreEngineLayerconfigurationFeatureFromFfi(_handle);
  heresdkVisualNavigationBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseFfiHandle(_handle);
  return result;
}

void heresdkVisualNavigationBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkVisualNavigationBindingslistofSdkCoreEngineLayerconfigurationFeatureReleaseHandleNullable(handle);

final _heresdkVisualNavigationBindingslistofSdkMapviewMapcamerakeyframetrackCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_create_handle'));
final _heresdkVisualNavigationBindingslistofSdkMapviewMapcamerakeyframetrackReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_release_handle'));
final _heresdkVisualNavigationBindingslistofSdkMapviewMapcamerakeyframetrackInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_insert'));
final _heresdkVisualNavigationBindingslistofSdkMapviewMapcamerakeyframetrackIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_iterator'));
final _heresdkVisualNavigationBindingslistofSdkMapviewMapcamerakeyframetrackIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_iterator_release_handle'));
final _heresdkVisualNavigationBindingslistofSdkMapviewMapcamerakeyframetrackIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_iterator_is_valid'));
final _heresdkVisualNavigationBindingslistofSdkMapviewMapcamerakeyframetrackIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_iterator_increment'));
final _heresdkVisualNavigationBindingslistofSdkMapviewMapcamerakeyframetrackIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_iterator_get'));

Pointer<Void> heresdkVisualNavigationBindingslistofSdkMapviewMapcamerakeyframetrackToFfi(List<MapCameraKeyframeTrack> value) {
  final _result = _heresdkVisualNavigationBindingslistofSdkMapviewMapcamerakeyframetrackCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkMapviewMapcamerakeyframetrackToFfi(element);
    _heresdkVisualNavigationBindingslistofSdkMapviewMapcamerakeyframetrackInsert(_result, _elementHandle);
    sdkMapviewMapcamerakeyframetrackReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<MapCameraKeyframeTrack> heresdkVisualNavigationBindingslistofSdkMapviewMapcamerakeyframetrackFromFfi(Pointer<Void> handle) {
  final result = List<MapCameraKeyframeTrack>.empty(growable: true);
  final _iteratorHandle = _heresdkVisualNavigationBindingslistofSdkMapviewMapcamerakeyframetrackIterator(handle);
  while (_heresdkVisualNavigationBindingslistofSdkMapviewMapcamerakeyframetrackIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkVisualNavigationBindingslistofSdkMapviewMapcamerakeyframetrackIteratorGet(_iteratorHandle);
    try {
      result.add(sdkMapviewMapcamerakeyframetrackFromFfi(_elementHandle));
    } finally {
      sdkMapviewMapcamerakeyframetrackReleaseFfiHandle(_elementHandle);
    }
    _heresdkVisualNavigationBindingslistofSdkMapviewMapcamerakeyframetrackIteratorIncrement(_iteratorHandle);
  }
  _heresdkVisualNavigationBindingslistofSdkMapviewMapcamerakeyframetrackIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkVisualNavigationBindingslistofSdkMapviewMapcamerakeyframetrackReleaseFfiHandle(Pointer<Void> handle) => _heresdkVisualNavigationBindingslistofSdkMapviewMapcamerakeyframetrackReleaseHandle(handle);

final _heresdkVisualNavigationBindingslistofSdkMapviewMapcamerakeyframetrackCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_create_handle_nullable'));
final _heresdkVisualNavigationBindingslistofSdkMapviewMapcamerakeyframetrackReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_release_handle_nullable'));
final _heresdkVisualNavigationBindingslistofSdkMapviewMapcamerakeyframetrackGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_mapview_MapCameraKeyframeTrack_get_value_nullable'));

Pointer<Void> heresdkVisualNavigationBindingslistofSdkMapviewMapcamerakeyframetrackToFfiNullable(List<MapCameraKeyframeTrack>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkVisualNavigationBindingslistofSdkMapviewMapcamerakeyframetrackToFfi(value);
  final result = _heresdkVisualNavigationBindingslistofSdkMapviewMapcamerakeyframetrackCreateHandleNullable(_handle);
  heresdkVisualNavigationBindingslistofSdkMapviewMapcamerakeyframetrackReleaseFfiHandle(_handle);
  return result;
}

List<MapCameraKeyframeTrack>? heresdkVisualNavigationBindingslistofSdkMapviewMapcamerakeyframetrackFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkVisualNavigationBindingslistofSdkMapviewMapcamerakeyframetrackGetValueNullable(handle);
  final result = heresdkVisualNavigationBindingslistofSdkMapviewMapcamerakeyframetrackFromFfi(_handle);
  heresdkVisualNavigationBindingslistofSdkMapviewMapcamerakeyframetrackReleaseFfiHandle(_handle);
  return result;
}

void heresdkVisualNavigationBindingslistofSdkMapviewMapcamerakeyframetrackReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkVisualNavigationBindingslistofSdkMapviewMapcamerakeyframetrackReleaseHandleNullable(handle);

final _heresdkVisualNavigationBindingslistofSdkMapviewMapmarkerCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_mapview_MapMarker_create_handle'));
final _heresdkVisualNavigationBindingslistofSdkMapviewMapmarkerReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_mapview_MapMarker_release_handle'));
final _heresdkVisualNavigationBindingslistofSdkMapviewMapmarkerInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_mapview_MapMarker_insert'));
final _heresdkVisualNavigationBindingslistofSdkMapviewMapmarkerIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_mapview_MapMarker_iterator'));
final _heresdkVisualNavigationBindingslistofSdkMapviewMapmarkerIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_mapview_MapMarker_iterator_release_handle'));
final _heresdkVisualNavigationBindingslistofSdkMapviewMapmarkerIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_mapview_MapMarker_iterator_is_valid'));
final _heresdkVisualNavigationBindingslistofSdkMapviewMapmarkerIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_mapview_MapMarker_iterator_increment'));
final _heresdkVisualNavigationBindingslistofSdkMapviewMapmarkerIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_mapview_MapMarker_iterator_get'));

Pointer<Void> heresdkVisualNavigationBindingslistofSdkMapviewMapmarkerToFfi(List<MapMarker> value) {
  final _result = _heresdkVisualNavigationBindingslistofSdkMapviewMapmarkerCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkMapviewMapmarkerToFfi(element);
    _heresdkVisualNavigationBindingslistofSdkMapviewMapmarkerInsert(_result, _elementHandle);
    sdkMapviewMapmarkerReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<MapMarker> heresdkVisualNavigationBindingslistofSdkMapviewMapmarkerFromFfi(Pointer<Void> handle) {
  final result = List<MapMarker>.empty(growable: true);
  final _iteratorHandle = _heresdkVisualNavigationBindingslistofSdkMapviewMapmarkerIterator(handle);
  while (_heresdkVisualNavigationBindingslistofSdkMapviewMapmarkerIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkVisualNavigationBindingslistofSdkMapviewMapmarkerIteratorGet(_iteratorHandle);
    try {
      result.add(sdkMapviewMapmarkerFromFfi(_elementHandle));
    } finally {
      sdkMapviewMapmarkerReleaseFfiHandle(_elementHandle);
    }
    _heresdkVisualNavigationBindingslistofSdkMapviewMapmarkerIteratorIncrement(_iteratorHandle);
  }
  _heresdkVisualNavigationBindingslistofSdkMapviewMapmarkerIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkVisualNavigationBindingslistofSdkMapviewMapmarkerReleaseFfiHandle(Pointer<Void> handle) => _heresdkVisualNavigationBindingslistofSdkMapviewMapmarkerReleaseHandle(handle);

final _heresdkVisualNavigationBindingslistofSdkMapviewMapmarkerCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_mapview_MapMarker_create_handle_nullable'));
final _heresdkVisualNavigationBindingslistofSdkMapviewMapmarkerReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_mapview_MapMarker_release_handle_nullable'));
final _heresdkVisualNavigationBindingslistofSdkMapviewMapmarkerGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_mapview_MapMarker_get_value_nullable'));

Pointer<Void> heresdkVisualNavigationBindingslistofSdkMapviewMapmarkerToFfiNullable(List<MapMarker>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkVisualNavigationBindingslistofSdkMapviewMapmarkerToFfi(value);
  final result = _heresdkVisualNavigationBindingslistofSdkMapviewMapmarkerCreateHandleNullable(_handle);
  heresdkVisualNavigationBindingslistofSdkMapviewMapmarkerReleaseFfiHandle(_handle);
  return result;
}

List<MapMarker>? heresdkVisualNavigationBindingslistofSdkMapviewMapmarkerFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkVisualNavigationBindingslistofSdkMapviewMapmarkerGetValueNullable(handle);
  final result = heresdkVisualNavigationBindingslistofSdkMapviewMapmarkerFromFfi(_handle);
  heresdkVisualNavigationBindingslistofSdkMapviewMapmarkerReleaseFfiHandle(_handle);
  return result;
}

void heresdkVisualNavigationBindingslistofSdkMapviewMapmarkerReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkVisualNavigationBindingslistofSdkMapviewMapmarkerReleaseHandleNullable(handle);

final _heresdkVisualNavigationBindingslistofSdkMapviewMapmarkerclusterGroupingCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_mapview_MapMarkerCluster_Grouping_create_handle'));
final _heresdkVisualNavigationBindingslistofSdkMapviewMapmarkerclusterGroupingReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_mapview_MapMarkerCluster_Grouping_release_handle'));
final _heresdkVisualNavigationBindingslistofSdkMapviewMapmarkerclusterGroupingInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_mapview_MapMarkerCluster_Grouping_insert'));
final _heresdkVisualNavigationBindingslistofSdkMapviewMapmarkerclusterGroupingIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_mapview_MapMarkerCluster_Grouping_iterator'));
final _heresdkVisualNavigationBindingslistofSdkMapviewMapmarkerclusterGroupingIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_mapview_MapMarkerCluster_Grouping_iterator_release_handle'));
final _heresdkVisualNavigationBindingslistofSdkMapviewMapmarkerclusterGroupingIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_mapview_MapMarkerCluster_Grouping_iterator_is_valid'));
final _heresdkVisualNavigationBindingslistofSdkMapviewMapmarkerclusterGroupingIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_mapview_MapMarkerCluster_Grouping_iterator_increment'));
final _heresdkVisualNavigationBindingslistofSdkMapviewMapmarkerclusterGroupingIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_mapview_MapMarkerCluster_Grouping_iterator_get'));

Pointer<Void> heresdkVisualNavigationBindingslistofSdkMapviewMapmarkerclusterGroupingToFfi(List<MapMarkerClusterGrouping> value) {
  final _result = _heresdkVisualNavigationBindingslistofSdkMapviewMapmarkerclusterGroupingCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkMapviewMapmarkerclusterGroupingToFfi(element);
    _heresdkVisualNavigationBindingslistofSdkMapviewMapmarkerclusterGroupingInsert(_result, _elementHandle);
    sdkMapviewMapmarkerclusterGroupingReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<MapMarkerClusterGrouping> heresdkVisualNavigationBindingslistofSdkMapviewMapmarkerclusterGroupingFromFfi(Pointer<Void> handle) {
  final result = List<MapMarkerClusterGrouping>.empty(growable: true);
  final _iteratorHandle = _heresdkVisualNavigationBindingslistofSdkMapviewMapmarkerclusterGroupingIterator(handle);
  while (_heresdkVisualNavigationBindingslistofSdkMapviewMapmarkerclusterGroupingIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkVisualNavigationBindingslistofSdkMapviewMapmarkerclusterGroupingIteratorGet(_iteratorHandle);
    try {
      result.add(sdkMapviewMapmarkerclusterGroupingFromFfi(_elementHandle));
    } finally {
      sdkMapviewMapmarkerclusterGroupingReleaseFfiHandle(_elementHandle);
    }
    _heresdkVisualNavigationBindingslistofSdkMapviewMapmarkerclusterGroupingIteratorIncrement(_iteratorHandle);
  }
  _heresdkVisualNavigationBindingslistofSdkMapviewMapmarkerclusterGroupingIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkVisualNavigationBindingslistofSdkMapviewMapmarkerclusterGroupingReleaseFfiHandle(Pointer<Void> handle) => _heresdkVisualNavigationBindingslistofSdkMapviewMapmarkerclusterGroupingReleaseHandle(handle);

final _heresdkVisualNavigationBindingslistofSdkMapviewMapmarkerclusterGroupingCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_mapview_MapMarkerCluster_Grouping_create_handle_nullable'));
final _heresdkVisualNavigationBindingslistofSdkMapviewMapmarkerclusterGroupingReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_mapview_MapMarkerCluster_Grouping_release_handle_nullable'));
final _heresdkVisualNavigationBindingslistofSdkMapviewMapmarkerclusterGroupingGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_mapview_MapMarkerCluster_Grouping_get_value_nullable'));

Pointer<Void> heresdkVisualNavigationBindingslistofSdkMapviewMapmarkerclusterGroupingToFfiNullable(List<MapMarkerClusterGrouping>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkVisualNavigationBindingslistofSdkMapviewMapmarkerclusterGroupingToFfi(value);
  final result = _heresdkVisualNavigationBindingslistofSdkMapviewMapmarkerclusterGroupingCreateHandleNullable(_handle);
  heresdkVisualNavigationBindingslistofSdkMapviewMapmarkerclusterGroupingReleaseFfiHandle(_handle);
  return result;
}

List<MapMarkerClusterGrouping>? heresdkVisualNavigationBindingslistofSdkMapviewMapmarkerclusterGroupingFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkVisualNavigationBindingslistofSdkMapviewMapmarkerclusterGroupingGetValueNullable(handle);
  final result = heresdkVisualNavigationBindingslistofSdkMapviewMapmarkerclusterGroupingFromFfi(_handle);
  heresdkVisualNavigationBindingslistofSdkMapviewMapmarkerclusterGroupingReleaseFfiHandle(_handle);
  return result;
}

void heresdkVisualNavigationBindingslistofSdkMapviewMapmarkerclusterGroupingReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkVisualNavigationBindingslistofSdkMapviewMapmarkerclusterGroupingReleaseHandleNullable(handle);

final _heresdkVisualNavigationBindingslistofSdkMapviewMappolygonCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_mapview_MapPolygon_create_handle'));
final _heresdkVisualNavigationBindingslistofSdkMapviewMappolygonReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_mapview_MapPolygon_release_handle'));
final _heresdkVisualNavigationBindingslistofSdkMapviewMappolygonInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_mapview_MapPolygon_insert'));
final _heresdkVisualNavigationBindingslistofSdkMapviewMappolygonIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_mapview_MapPolygon_iterator'));
final _heresdkVisualNavigationBindingslistofSdkMapviewMappolygonIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_mapview_MapPolygon_iterator_release_handle'));
final _heresdkVisualNavigationBindingslistofSdkMapviewMappolygonIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_mapview_MapPolygon_iterator_is_valid'));
final _heresdkVisualNavigationBindingslistofSdkMapviewMappolygonIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_mapview_MapPolygon_iterator_increment'));
final _heresdkVisualNavigationBindingslistofSdkMapviewMappolygonIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_mapview_MapPolygon_iterator_get'));

Pointer<Void> heresdkVisualNavigationBindingslistofSdkMapviewMappolygonToFfi(List<MapPolygon> value) {
  final _result = _heresdkVisualNavigationBindingslistofSdkMapviewMappolygonCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkMapviewMappolygonToFfi(element);
    _heresdkVisualNavigationBindingslistofSdkMapviewMappolygonInsert(_result, _elementHandle);
    sdkMapviewMappolygonReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<MapPolygon> heresdkVisualNavigationBindingslistofSdkMapviewMappolygonFromFfi(Pointer<Void> handle) {
  final result = List<MapPolygon>.empty(growable: true);
  final _iteratorHandle = _heresdkVisualNavigationBindingslistofSdkMapviewMappolygonIterator(handle);
  while (_heresdkVisualNavigationBindingslistofSdkMapviewMappolygonIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkVisualNavigationBindingslistofSdkMapviewMappolygonIteratorGet(_iteratorHandle);
    try {
      result.add(sdkMapviewMappolygonFromFfi(_elementHandle));
    } finally {
      sdkMapviewMappolygonReleaseFfiHandle(_elementHandle);
    }
    _heresdkVisualNavigationBindingslistofSdkMapviewMappolygonIteratorIncrement(_iteratorHandle);
  }
  _heresdkVisualNavigationBindingslistofSdkMapviewMappolygonIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkVisualNavigationBindingslistofSdkMapviewMappolygonReleaseFfiHandle(Pointer<Void> handle) => _heresdkVisualNavigationBindingslistofSdkMapviewMappolygonReleaseHandle(handle);

final _heresdkVisualNavigationBindingslistofSdkMapviewMappolygonCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_mapview_MapPolygon_create_handle_nullable'));
final _heresdkVisualNavigationBindingslistofSdkMapviewMappolygonReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_mapview_MapPolygon_release_handle_nullable'));
final _heresdkVisualNavigationBindingslistofSdkMapviewMappolygonGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_mapview_MapPolygon_get_value_nullable'));

Pointer<Void> heresdkVisualNavigationBindingslistofSdkMapviewMappolygonToFfiNullable(List<MapPolygon>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkVisualNavigationBindingslistofSdkMapviewMappolygonToFfi(value);
  final result = _heresdkVisualNavigationBindingslistofSdkMapviewMappolygonCreateHandleNullable(_handle);
  heresdkVisualNavigationBindingslistofSdkMapviewMappolygonReleaseFfiHandle(_handle);
  return result;
}

List<MapPolygon>? heresdkVisualNavigationBindingslistofSdkMapviewMappolygonFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkVisualNavigationBindingslistofSdkMapviewMappolygonGetValueNullable(handle);
  final result = heresdkVisualNavigationBindingslistofSdkMapviewMappolygonFromFfi(_handle);
  heresdkVisualNavigationBindingslistofSdkMapviewMappolygonReleaseFfiHandle(_handle);
  return result;
}

void heresdkVisualNavigationBindingslistofSdkMapviewMappolygonReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkVisualNavigationBindingslistofSdkMapviewMappolygonReleaseHandleNullable(handle);

final _heresdkVisualNavigationBindingslistofSdkMapviewMappolylineCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_mapview_MapPolyline_create_handle'));
final _heresdkVisualNavigationBindingslistofSdkMapviewMappolylineReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_mapview_MapPolyline_release_handle'));
final _heresdkVisualNavigationBindingslistofSdkMapviewMappolylineInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_mapview_MapPolyline_insert'));
final _heresdkVisualNavigationBindingslistofSdkMapviewMappolylineIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_mapview_MapPolyline_iterator'));
final _heresdkVisualNavigationBindingslistofSdkMapviewMappolylineIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_mapview_MapPolyline_iterator_release_handle'));
final _heresdkVisualNavigationBindingslistofSdkMapviewMappolylineIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_mapview_MapPolyline_iterator_is_valid'));
final _heresdkVisualNavigationBindingslistofSdkMapviewMappolylineIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_mapview_MapPolyline_iterator_increment'));
final _heresdkVisualNavigationBindingslistofSdkMapviewMappolylineIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_mapview_MapPolyline_iterator_get'));

Pointer<Void> heresdkVisualNavigationBindingslistofSdkMapviewMappolylineToFfi(List<MapPolyline> value) {
  final _result = _heresdkVisualNavigationBindingslistofSdkMapviewMappolylineCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkMapviewMappolylineToFfi(element);
    _heresdkVisualNavigationBindingslistofSdkMapviewMappolylineInsert(_result, _elementHandle);
    sdkMapviewMappolylineReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<MapPolyline> heresdkVisualNavigationBindingslistofSdkMapviewMappolylineFromFfi(Pointer<Void> handle) {
  final result = List<MapPolyline>.empty(growable: true);
  final _iteratorHandle = _heresdkVisualNavigationBindingslistofSdkMapviewMappolylineIterator(handle);
  while (_heresdkVisualNavigationBindingslistofSdkMapviewMappolylineIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkVisualNavigationBindingslistofSdkMapviewMappolylineIteratorGet(_iteratorHandle);
    try {
      result.add(sdkMapviewMappolylineFromFfi(_elementHandle));
    } finally {
      sdkMapviewMappolylineReleaseFfiHandle(_elementHandle);
    }
    _heresdkVisualNavigationBindingslistofSdkMapviewMappolylineIteratorIncrement(_iteratorHandle);
  }
  _heresdkVisualNavigationBindingslistofSdkMapviewMappolylineIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkVisualNavigationBindingslistofSdkMapviewMappolylineReleaseFfiHandle(Pointer<Void> handle) => _heresdkVisualNavigationBindingslistofSdkMapviewMappolylineReleaseHandle(handle);

final _heresdkVisualNavigationBindingslistofSdkMapviewMappolylineCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_mapview_MapPolyline_create_handle_nullable'));
final _heresdkVisualNavigationBindingslistofSdkMapviewMappolylineReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_mapview_MapPolyline_release_handle_nullable'));
final _heresdkVisualNavigationBindingslistofSdkMapviewMappolylineGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_mapview_MapPolyline_get_value_nullable'));

Pointer<Void> heresdkVisualNavigationBindingslistofSdkMapviewMappolylineToFfiNullable(List<MapPolyline>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkVisualNavigationBindingslistofSdkMapviewMappolylineToFfi(value);
  final result = _heresdkVisualNavigationBindingslistofSdkMapviewMappolylineCreateHandleNullable(_handle);
  heresdkVisualNavigationBindingslistofSdkMapviewMappolylineReleaseFfiHandle(_handle);
  return result;
}

List<MapPolyline>? heresdkVisualNavigationBindingslistofSdkMapviewMappolylineFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkVisualNavigationBindingslistofSdkMapviewMappolylineGetValueNullable(handle);
  final result = heresdkVisualNavigationBindingslistofSdkMapviewMappolylineFromFfi(_handle);
  heresdkVisualNavigationBindingslistofSdkMapviewMappolylineReleaseFfiHandle(_handle);
  return result;
}

void heresdkVisualNavigationBindingslistofSdkMapviewMappolylineReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkVisualNavigationBindingslistofSdkMapviewMappolylineReleaseHandleNullable(handle);

final _heresdkVisualNavigationBindingslistofSdkMapviewPickmapcontentresultforflutterTrafficincidentresultCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_mapview_PickMapContentResultForFlutter_TrafficIncidentResult_create_handle'));
final _heresdkVisualNavigationBindingslistofSdkMapviewPickmapcontentresultforflutterTrafficincidentresultReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_mapview_PickMapContentResultForFlutter_TrafficIncidentResult_release_handle'));
final _heresdkVisualNavigationBindingslistofSdkMapviewPickmapcontentresultforflutterTrafficincidentresultInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_mapview_PickMapContentResultForFlutter_TrafficIncidentResult_insert'));
final _heresdkVisualNavigationBindingslistofSdkMapviewPickmapcontentresultforflutterTrafficincidentresultIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_mapview_PickMapContentResultForFlutter_TrafficIncidentResult_iterator'));
final _heresdkVisualNavigationBindingslistofSdkMapviewPickmapcontentresultforflutterTrafficincidentresultIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_mapview_PickMapContentResultForFlutter_TrafficIncidentResult_iterator_release_handle'));
final _heresdkVisualNavigationBindingslistofSdkMapviewPickmapcontentresultforflutterTrafficincidentresultIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_mapview_PickMapContentResultForFlutter_TrafficIncidentResult_iterator_is_valid'));
final _heresdkVisualNavigationBindingslistofSdkMapviewPickmapcontentresultforflutterTrafficincidentresultIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_mapview_PickMapContentResultForFlutter_TrafficIncidentResult_iterator_increment'));
final _heresdkVisualNavigationBindingslistofSdkMapviewPickmapcontentresultforflutterTrafficincidentresultIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_mapview_PickMapContentResultForFlutter_TrafficIncidentResult_iterator_get'));

Pointer<Void> heresdkVisualNavigationBindingslistofSdkMapviewPickmapcontentresultforflutterTrafficincidentresultToFfi(List<PickTrafficIncidentResult> value) {
  final _result = _heresdkVisualNavigationBindingslistofSdkMapviewPickmapcontentresultforflutterTrafficincidentresultCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkMapviewPickmapcontentresultforflutterTrafficincidentresultToFfi(element);
    _heresdkVisualNavigationBindingslistofSdkMapviewPickmapcontentresultforflutterTrafficincidentresultInsert(_result, _elementHandle);
    sdkMapviewPickmapcontentresultforflutterTrafficincidentresultReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<PickTrafficIncidentResult> heresdkVisualNavigationBindingslistofSdkMapviewPickmapcontentresultforflutterTrafficincidentresultFromFfi(Pointer<Void> handle) {
  final result = List<PickTrafficIncidentResult>.empty(growable: true);
  final _iteratorHandle = _heresdkVisualNavigationBindingslistofSdkMapviewPickmapcontentresultforflutterTrafficincidentresultIterator(handle);
  while (_heresdkVisualNavigationBindingslistofSdkMapviewPickmapcontentresultforflutterTrafficincidentresultIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkVisualNavigationBindingslistofSdkMapviewPickmapcontentresultforflutterTrafficincidentresultIteratorGet(_iteratorHandle);
    try {
      result.add(sdkMapviewPickmapcontentresultforflutterTrafficincidentresultFromFfi(_elementHandle));
    } finally {
      sdkMapviewPickmapcontentresultforflutterTrafficincidentresultReleaseFfiHandle(_elementHandle);
    }
    _heresdkVisualNavigationBindingslistofSdkMapviewPickmapcontentresultforflutterTrafficincidentresultIteratorIncrement(_iteratorHandle);
  }
  _heresdkVisualNavigationBindingslistofSdkMapviewPickmapcontentresultforflutterTrafficincidentresultIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkVisualNavigationBindingslistofSdkMapviewPickmapcontentresultforflutterTrafficincidentresultReleaseFfiHandle(Pointer<Void> handle) => _heresdkVisualNavigationBindingslistofSdkMapviewPickmapcontentresultforflutterTrafficincidentresultReleaseHandle(handle);

final _heresdkVisualNavigationBindingslistofSdkMapviewPickmapcontentresultforflutterTrafficincidentresultCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_mapview_PickMapContentResultForFlutter_TrafficIncidentResult_create_handle_nullable'));
final _heresdkVisualNavigationBindingslistofSdkMapviewPickmapcontentresultforflutterTrafficincidentresultReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_mapview_PickMapContentResultForFlutter_TrafficIncidentResult_release_handle_nullable'));
final _heresdkVisualNavigationBindingslistofSdkMapviewPickmapcontentresultforflutterTrafficincidentresultGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_mapview_PickMapContentResultForFlutter_TrafficIncidentResult_get_value_nullable'));

Pointer<Void> heresdkVisualNavigationBindingslistofSdkMapviewPickmapcontentresultforflutterTrafficincidentresultToFfiNullable(List<PickTrafficIncidentResult>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkVisualNavigationBindingslistofSdkMapviewPickmapcontentresultforflutterTrafficincidentresultToFfi(value);
  final result = _heresdkVisualNavigationBindingslistofSdkMapviewPickmapcontentresultforflutterTrafficincidentresultCreateHandleNullable(_handle);
  heresdkVisualNavigationBindingslistofSdkMapviewPickmapcontentresultforflutterTrafficincidentresultReleaseFfiHandle(_handle);
  return result;
}

List<PickTrafficIncidentResult>? heresdkVisualNavigationBindingslistofSdkMapviewPickmapcontentresultforflutterTrafficincidentresultFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkVisualNavigationBindingslistofSdkMapviewPickmapcontentresultforflutterTrafficincidentresultGetValueNullable(handle);
  final result = heresdkVisualNavigationBindingslistofSdkMapviewPickmapcontentresultforflutterTrafficincidentresultFromFfi(_handle);
  heresdkVisualNavigationBindingslistofSdkMapviewPickmapcontentresultforflutterTrafficincidentresultReleaseFfiHandle(_handle);
  return result;
}

void heresdkVisualNavigationBindingslistofSdkMapviewPickmapcontentresultforflutterTrafficincidentresultReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkVisualNavigationBindingslistofSdkMapviewPickmapcontentresultforflutterTrafficincidentresultReleaseHandleNullable(handle);

final _heresdkVisualNavigationBindingslistofSdkMapviewPickmapfeaturesresultPoiresultCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_mapview_PickMapFeaturesResult_PoiResult_create_handle'));
final _heresdkVisualNavigationBindingslistofSdkMapviewPickmapfeaturesresultPoiresultReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_mapview_PickMapFeaturesResult_PoiResult_release_handle'));
final _heresdkVisualNavigationBindingslistofSdkMapviewPickmapfeaturesresultPoiresultInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_mapview_PickMapFeaturesResult_PoiResult_insert'));
final _heresdkVisualNavigationBindingslistofSdkMapviewPickmapfeaturesresultPoiresultIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_mapview_PickMapFeaturesResult_PoiResult_iterator'));
final _heresdkVisualNavigationBindingslistofSdkMapviewPickmapfeaturesresultPoiresultIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_mapview_PickMapFeaturesResult_PoiResult_iterator_release_handle'));
final _heresdkVisualNavigationBindingslistofSdkMapviewPickmapfeaturesresultPoiresultIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_mapview_PickMapFeaturesResult_PoiResult_iterator_is_valid'));
final _heresdkVisualNavigationBindingslistofSdkMapviewPickmapfeaturesresultPoiresultIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_mapview_PickMapFeaturesResult_PoiResult_iterator_increment'));
final _heresdkVisualNavigationBindingslistofSdkMapviewPickmapfeaturesresultPoiresultIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_mapview_PickMapFeaturesResult_PoiResult_iterator_get'));

Pointer<Void> heresdkVisualNavigationBindingslistofSdkMapviewPickmapfeaturesresultPoiresultToFfi(List<PickPoiResult> value) {
  final _result = _heresdkVisualNavigationBindingslistofSdkMapviewPickmapfeaturesresultPoiresultCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkMapviewPickmapfeaturesresultPoiresultToFfi(element);
    _heresdkVisualNavigationBindingslistofSdkMapviewPickmapfeaturesresultPoiresultInsert(_result, _elementHandle);
    sdkMapviewPickmapfeaturesresultPoiresultReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<PickPoiResult> heresdkVisualNavigationBindingslistofSdkMapviewPickmapfeaturesresultPoiresultFromFfi(Pointer<Void> handle) {
  final result = List<PickPoiResult>.empty(growable: true);
  final _iteratorHandle = _heresdkVisualNavigationBindingslistofSdkMapviewPickmapfeaturesresultPoiresultIterator(handle);
  while (_heresdkVisualNavigationBindingslistofSdkMapviewPickmapfeaturesresultPoiresultIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkVisualNavigationBindingslistofSdkMapviewPickmapfeaturesresultPoiresultIteratorGet(_iteratorHandle);
    try {
      result.add(sdkMapviewPickmapfeaturesresultPoiresultFromFfi(_elementHandle));
    } finally {
      sdkMapviewPickmapfeaturesresultPoiresultReleaseFfiHandle(_elementHandle);
    }
    _heresdkVisualNavigationBindingslistofSdkMapviewPickmapfeaturesresultPoiresultIteratorIncrement(_iteratorHandle);
  }
  _heresdkVisualNavigationBindingslistofSdkMapviewPickmapfeaturesresultPoiresultIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkVisualNavigationBindingslistofSdkMapviewPickmapfeaturesresultPoiresultReleaseFfiHandle(Pointer<Void> handle) => _heresdkVisualNavigationBindingslistofSdkMapviewPickmapfeaturesresultPoiresultReleaseHandle(handle);

final _heresdkVisualNavigationBindingslistofSdkMapviewPickmapfeaturesresultPoiresultCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_mapview_PickMapFeaturesResult_PoiResult_create_handle_nullable'));
final _heresdkVisualNavigationBindingslistofSdkMapviewPickmapfeaturesresultPoiresultReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_mapview_PickMapFeaturesResult_PoiResult_release_handle_nullable'));
final _heresdkVisualNavigationBindingslistofSdkMapviewPickmapfeaturesresultPoiresultGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_mapview_PickMapFeaturesResult_PoiResult_get_value_nullable'));

Pointer<Void> heresdkVisualNavigationBindingslistofSdkMapviewPickmapfeaturesresultPoiresultToFfiNullable(List<PickPoiResult>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkVisualNavigationBindingslistofSdkMapviewPickmapfeaturesresultPoiresultToFfi(value);
  final result = _heresdkVisualNavigationBindingslistofSdkMapviewPickmapfeaturesresultPoiresultCreateHandleNullable(_handle);
  heresdkVisualNavigationBindingslistofSdkMapviewPickmapfeaturesresultPoiresultReleaseFfiHandle(_handle);
  return result;
}

List<PickPoiResult>? heresdkVisualNavigationBindingslistofSdkMapviewPickmapfeaturesresultPoiresultFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkVisualNavigationBindingslistofSdkMapviewPickmapfeaturesresultPoiresultGetValueNullable(handle);
  final result = heresdkVisualNavigationBindingslistofSdkMapviewPickmapfeaturesresultPoiresultFromFfi(_handle);
  heresdkVisualNavigationBindingslistofSdkMapviewPickmapfeaturesresultPoiresultReleaseFfiHandle(_handle);
  return result;
}

void heresdkVisualNavigationBindingslistofSdkMapviewPickmapfeaturesresultPoiresultReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkVisualNavigationBindingslistofSdkMapviewPickmapfeaturesresultPoiresultReleaseHandleNullable(handle);

final _heresdkVisualNavigationBindingslistofSdkNavigationGpxtrackCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_navigation_GPXTrack_create_handle'));
final _heresdkVisualNavigationBindingslistofSdkNavigationGpxtrackReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_navigation_GPXTrack_release_handle'));
final _heresdkVisualNavigationBindingslistofSdkNavigationGpxtrackInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_navigation_GPXTrack_insert'));
final _heresdkVisualNavigationBindingslistofSdkNavigationGpxtrackIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_navigation_GPXTrack_iterator'));
final _heresdkVisualNavigationBindingslistofSdkNavigationGpxtrackIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_navigation_GPXTrack_iterator_release_handle'));
final _heresdkVisualNavigationBindingslistofSdkNavigationGpxtrackIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_navigation_GPXTrack_iterator_is_valid'));
final _heresdkVisualNavigationBindingslistofSdkNavigationGpxtrackIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_navigation_GPXTrack_iterator_increment'));
final _heresdkVisualNavigationBindingslistofSdkNavigationGpxtrackIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_navigation_GPXTrack_iterator_get'));

Pointer<Void> heresdkVisualNavigationBindingslistofSdkNavigationGpxtrackToFfi(List<GPXTrack> value) {
  final _result = _heresdkVisualNavigationBindingslistofSdkNavigationGpxtrackCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkNavigationGpxtrackToFfi(element);
    _heresdkVisualNavigationBindingslistofSdkNavigationGpxtrackInsert(_result, _elementHandle);
    sdkNavigationGpxtrackReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GPXTrack> heresdkVisualNavigationBindingslistofSdkNavigationGpxtrackFromFfi(Pointer<Void> handle) {
  final result = List<GPXTrack>.empty(growable: true);
  final _iteratorHandle = _heresdkVisualNavigationBindingslistofSdkNavigationGpxtrackIterator(handle);
  while (_heresdkVisualNavigationBindingslistofSdkNavigationGpxtrackIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkVisualNavigationBindingslistofSdkNavigationGpxtrackIteratorGet(_iteratorHandle);
    try {
      result.add(sdkNavigationGpxtrackFromFfi(_elementHandle));
    } finally {
      sdkNavigationGpxtrackReleaseFfiHandle(_elementHandle);
    }
    _heresdkVisualNavigationBindingslistofSdkNavigationGpxtrackIteratorIncrement(_iteratorHandle);
  }
  _heresdkVisualNavigationBindingslistofSdkNavigationGpxtrackIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkVisualNavigationBindingslistofSdkNavigationGpxtrackReleaseFfiHandle(Pointer<Void> handle) => _heresdkVisualNavigationBindingslistofSdkNavigationGpxtrackReleaseHandle(handle);

final _heresdkVisualNavigationBindingslistofSdkNavigationGpxtrackCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_navigation_GPXTrack_create_handle_nullable'));
final _heresdkVisualNavigationBindingslistofSdkNavigationGpxtrackReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_navigation_GPXTrack_release_handle_nullable'));
final _heresdkVisualNavigationBindingslistofSdkNavigationGpxtrackGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_navigation_GPXTrack_get_value_nullable'));

Pointer<Void> heresdkVisualNavigationBindingslistofSdkNavigationGpxtrackToFfiNullable(List<GPXTrack>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkVisualNavigationBindingslistofSdkNavigationGpxtrackToFfi(value);
  final result = _heresdkVisualNavigationBindingslistofSdkNavigationGpxtrackCreateHandleNullable(_handle);
  heresdkVisualNavigationBindingslistofSdkNavigationGpxtrackReleaseFfiHandle(_handle);
  return result;
}

List<GPXTrack>? heresdkVisualNavigationBindingslistofSdkNavigationGpxtrackFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkVisualNavigationBindingslistofSdkNavigationGpxtrackGetValueNullable(handle);
  final result = heresdkVisualNavigationBindingslistofSdkNavigationGpxtrackFromFfi(_handle);
  heresdkVisualNavigationBindingslistofSdkNavigationGpxtrackReleaseFfiHandle(_handle);
  return result;
}

void heresdkVisualNavigationBindingslistofSdkNavigationGpxtrackReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkVisualNavigationBindingslistofSdkNavigationGpxtrackReleaseHandleNullable(handle);

final _heresdkVisualNavigationBindingslistofSdkNavigationLaneCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_navigation_Lane_create_handle'));
final _heresdkVisualNavigationBindingslistofSdkNavigationLaneReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_navigation_Lane_release_handle'));
final _heresdkVisualNavigationBindingslistofSdkNavigationLaneInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_navigation_Lane_insert'));
final _heresdkVisualNavigationBindingslistofSdkNavigationLaneIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_navigation_Lane_iterator'));
final _heresdkVisualNavigationBindingslistofSdkNavigationLaneIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_navigation_Lane_iterator_release_handle'));
final _heresdkVisualNavigationBindingslistofSdkNavigationLaneIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_navigation_Lane_iterator_is_valid'));
final _heresdkVisualNavigationBindingslistofSdkNavigationLaneIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_navigation_Lane_iterator_increment'));
final _heresdkVisualNavigationBindingslistofSdkNavigationLaneIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_navigation_Lane_iterator_get'));

Pointer<Void> heresdkVisualNavigationBindingslistofSdkNavigationLaneToFfi(List<Lane> value) {
  final _result = _heresdkVisualNavigationBindingslistofSdkNavigationLaneCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkNavigationLaneToFfi(element);
    _heresdkVisualNavigationBindingslistofSdkNavigationLaneInsert(_result, _elementHandle);
    sdkNavigationLaneReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Lane> heresdkVisualNavigationBindingslistofSdkNavigationLaneFromFfi(Pointer<Void> handle) {
  final result = List<Lane>.empty(growable: true);
  final _iteratorHandle = _heresdkVisualNavigationBindingslistofSdkNavigationLaneIterator(handle);
  while (_heresdkVisualNavigationBindingslistofSdkNavigationLaneIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkVisualNavigationBindingslistofSdkNavigationLaneIteratorGet(_iteratorHandle);
    try {
      result.add(sdkNavigationLaneFromFfi(_elementHandle));
    } finally {
      sdkNavigationLaneReleaseFfiHandle(_elementHandle);
    }
    _heresdkVisualNavigationBindingslistofSdkNavigationLaneIteratorIncrement(_iteratorHandle);
  }
  _heresdkVisualNavigationBindingslistofSdkNavigationLaneIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkVisualNavigationBindingslistofSdkNavigationLaneReleaseFfiHandle(Pointer<Void> handle) => _heresdkVisualNavigationBindingslistofSdkNavigationLaneReleaseHandle(handle);

final _heresdkVisualNavigationBindingslistofSdkNavigationLaneCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_navigation_Lane_create_handle_nullable'));
final _heresdkVisualNavigationBindingslistofSdkNavigationLaneReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_navigation_Lane_release_handle_nullable'));
final _heresdkVisualNavigationBindingslistofSdkNavigationLaneGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_navigation_Lane_get_value_nullable'));

Pointer<Void> heresdkVisualNavigationBindingslistofSdkNavigationLaneToFfiNullable(List<Lane>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkVisualNavigationBindingslistofSdkNavigationLaneToFfi(value);
  final result = _heresdkVisualNavigationBindingslistofSdkNavigationLaneCreateHandleNullable(_handle);
  heresdkVisualNavigationBindingslistofSdkNavigationLaneReleaseFfiHandle(_handle);
  return result;
}

List<Lane>? heresdkVisualNavigationBindingslistofSdkNavigationLaneFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkVisualNavigationBindingslistofSdkNavigationLaneGetValueNullable(handle);
  final result = heresdkVisualNavigationBindingslistofSdkNavigationLaneFromFfi(_handle);
  heresdkVisualNavigationBindingslistofSdkNavigationLaneReleaseFfiHandle(_handle);
  return result;
}

void heresdkVisualNavigationBindingslistofSdkNavigationLaneReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkVisualNavigationBindingslistofSdkNavigationLaneReleaseHandleNullable(handle);

final _heresdkVisualNavigationBindingslistofSdkNavigationManeuvernotificationtypeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_navigation_ManeuverNotificationType_create_handle'));
final _heresdkVisualNavigationBindingslistofSdkNavigationManeuvernotificationtypeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_navigation_ManeuverNotificationType_release_handle'));
final _heresdkVisualNavigationBindingslistofSdkNavigationManeuvernotificationtypeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_navigation_ManeuverNotificationType_insert'));
final _heresdkVisualNavigationBindingslistofSdkNavigationManeuvernotificationtypeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_navigation_ManeuverNotificationType_iterator'));
final _heresdkVisualNavigationBindingslistofSdkNavigationManeuvernotificationtypeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_navigation_ManeuverNotificationType_iterator_release_handle'));
final _heresdkVisualNavigationBindingslistofSdkNavigationManeuvernotificationtypeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_navigation_ManeuverNotificationType_iterator_is_valid'));
final _heresdkVisualNavigationBindingslistofSdkNavigationManeuvernotificationtypeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_navigation_ManeuverNotificationType_iterator_increment'));
final _heresdkVisualNavigationBindingslistofSdkNavigationManeuvernotificationtypeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_navigation_ManeuverNotificationType_iterator_get'));

Pointer<Void> heresdkVisualNavigationBindingslistofSdkNavigationManeuvernotificationtypeToFfi(List<ManeuverNotificationType> value) {
  final _result = _heresdkVisualNavigationBindingslistofSdkNavigationManeuvernotificationtypeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkNavigationManeuvernotificationtypeToFfi(element);
    _heresdkVisualNavigationBindingslistofSdkNavigationManeuvernotificationtypeInsert(_result, _elementHandle);
    sdkNavigationManeuvernotificationtypeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<ManeuverNotificationType> heresdkVisualNavigationBindingslistofSdkNavigationManeuvernotificationtypeFromFfi(Pointer<Void> handle) {
  final result = List<ManeuverNotificationType>.empty(growable: true);
  final _iteratorHandle = _heresdkVisualNavigationBindingslistofSdkNavigationManeuvernotificationtypeIterator(handle);
  while (_heresdkVisualNavigationBindingslistofSdkNavigationManeuvernotificationtypeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkVisualNavigationBindingslistofSdkNavigationManeuvernotificationtypeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkNavigationManeuvernotificationtypeFromFfi(_elementHandle));
    } finally {
      sdkNavigationManeuvernotificationtypeReleaseFfiHandle(_elementHandle);
    }
    _heresdkVisualNavigationBindingslistofSdkNavigationManeuvernotificationtypeIteratorIncrement(_iteratorHandle);
  }
  _heresdkVisualNavigationBindingslistofSdkNavigationManeuvernotificationtypeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkVisualNavigationBindingslistofSdkNavigationManeuvernotificationtypeReleaseFfiHandle(Pointer<Void> handle) => _heresdkVisualNavigationBindingslistofSdkNavigationManeuvernotificationtypeReleaseHandle(handle);

final _heresdkVisualNavigationBindingslistofSdkNavigationManeuvernotificationtypeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_navigation_ManeuverNotificationType_create_handle_nullable'));
final _heresdkVisualNavigationBindingslistofSdkNavigationManeuvernotificationtypeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_navigation_ManeuverNotificationType_release_handle_nullable'));
final _heresdkVisualNavigationBindingslistofSdkNavigationManeuvernotificationtypeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_navigation_ManeuverNotificationType_get_value_nullable'));

Pointer<Void> heresdkVisualNavigationBindingslistofSdkNavigationManeuvernotificationtypeToFfiNullable(List<ManeuverNotificationType>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkVisualNavigationBindingslistofSdkNavigationManeuvernotificationtypeToFfi(value);
  final result = _heresdkVisualNavigationBindingslistofSdkNavigationManeuvernotificationtypeCreateHandleNullable(_handle);
  heresdkVisualNavigationBindingslistofSdkNavigationManeuvernotificationtypeReleaseFfiHandle(_handle);
  return result;
}

List<ManeuverNotificationType>? heresdkVisualNavigationBindingslistofSdkNavigationManeuvernotificationtypeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkVisualNavigationBindingslistofSdkNavigationManeuvernotificationtypeGetValueNullable(handle);
  final result = heresdkVisualNavigationBindingslistofSdkNavigationManeuvernotificationtypeFromFfi(_handle);
  heresdkVisualNavigationBindingslistofSdkNavigationManeuvernotificationtypeReleaseFfiHandle(_handle);
  return result;
}

void heresdkVisualNavigationBindingslistofSdkNavigationManeuvernotificationtypeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkVisualNavigationBindingslistofSdkNavigationManeuvernotificationtypeReleaseHandleNullable(handle);

final _heresdkVisualNavigationBindingslistofSdkNavigationManeuverprogressCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_navigation_ManeuverProgress_create_handle'));
final _heresdkVisualNavigationBindingslistofSdkNavigationManeuverprogressReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_navigation_ManeuverProgress_release_handle'));
final _heresdkVisualNavigationBindingslistofSdkNavigationManeuverprogressInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_navigation_ManeuverProgress_insert'));
final _heresdkVisualNavigationBindingslistofSdkNavigationManeuverprogressIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_navigation_ManeuverProgress_iterator'));
final _heresdkVisualNavigationBindingslistofSdkNavigationManeuverprogressIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_navigation_ManeuverProgress_iterator_release_handle'));
final _heresdkVisualNavigationBindingslistofSdkNavigationManeuverprogressIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_navigation_ManeuverProgress_iterator_is_valid'));
final _heresdkVisualNavigationBindingslistofSdkNavigationManeuverprogressIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_navigation_ManeuverProgress_iterator_increment'));
final _heresdkVisualNavigationBindingslistofSdkNavigationManeuverprogressIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_navigation_ManeuverProgress_iterator_get'));

Pointer<Void> heresdkVisualNavigationBindingslistofSdkNavigationManeuverprogressToFfi(List<ManeuverProgress> value) {
  final _result = _heresdkVisualNavigationBindingslistofSdkNavigationManeuverprogressCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkNavigationManeuverprogressToFfi(element);
    _heresdkVisualNavigationBindingslistofSdkNavigationManeuverprogressInsert(_result, _elementHandle);
    sdkNavigationManeuverprogressReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<ManeuverProgress> heresdkVisualNavigationBindingslistofSdkNavigationManeuverprogressFromFfi(Pointer<Void> handle) {
  final result = List<ManeuverProgress>.empty(growable: true);
  final _iteratorHandle = _heresdkVisualNavigationBindingslistofSdkNavigationManeuverprogressIterator(handle);
  while (_heresdkVisualNavigationBindingslistofSdkNavigationManeuverprogressIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkVisualNavigationBindingslistofSdkNavigationManeuverprogressIteratorGet(_iteratorHandle);
    try {
      result.add(sdkNavigationManeuverprogressFromFfi(_elementHandle));
    } finally {
      sdkNavigationManeuverprogressReleaseFfiHandle(_elementHandle);
    }
    _heresdkVisualNavigationBindingslistofSdkNavigationManeuverprogressIteratorIncrement(_iteratorHandle);
  }
  _heresdkVisualNavigationBindingslistofSdkNavigationManeuverprogressIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkVisualNavigationBindingslistofSdkNavigationManeuverprogressReleaseFfiHandle(Pointer<Void> handle) => _heresdkVisualNavigationBindingslistofSdkNavigationManeuverprogressReleaseHandle(handle);

final _heresdkVisualNavigationBindingslistofSdkNavigationManeuverprogressCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_navigation_ManeuverProgress_create_handle_nullable'));
final _heresdkVisualNavigationBindingslistofSdkNavigationManeuverprogressReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_navigation_ManeuverProgress_release_handle_nullable'));
final _heresdkVisualNavigationBindingslistofSdkNavigationManeuverprogressGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_navigation_ManeuverProgress_get_value_nullable'));

Pointer<Void> heresdkVisualNavigationBindingslistofSdkNavigationManeuverprogressToFfiNullable(List<ManeuverProgress>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkVisualNavigationBindingslistofSdkNavigationManeuverprogressToFfi(value);
  final result = _heresdkVisualNavigationBindingslistofSdkNavigationManeuverprogressCreateHandleNullable(_handle);
  heresdkVisualNavigationBindingslistofSdkNavigationManeuverprogressReleaseFfiHandle(_handle);
  return result;
}

List<ManeuverProgress>? heresdkVisualNavigationBindingslistofSdkNavigationManeuverprogressFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkVisualNavigationBindingslistofSdkNavigationManeuverprogressGetValueNullable(handle);
  final result = heresdkVisualNavigationBindingslistofSdkNavigationManeuverprogressFromFfi(_handle);
  heresdkVisualNavigationBindingslistofSdkNavigationManeuverprogressReleaseFfiHandle(_handle);
  return result;
}

void heresdkVisualNavigationBindingslistofSdkNavigationManeuverprogressReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkVisualNavigationBindingslistofSdkNavigationManeuverprogressReleaseHandleNullable(handle);

final _heresdkVisualNavigationBindingslistofSdkNavigationSectionprogressCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_navigation_SectionProgress_create_handle'));
final _heresdkVisualNavigationBindingslistofSdkNavigationSectionprogressReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_navigation_SectionProgress_release_handle'));
final _heresdkVisualNavigationBindingslistofSdkNavigationSectionprogressInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_navigation_SectionProgress_insert'));
final _heresdkVisualNavigationBindingslistofSdkNavigationSectionprogressIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_navigation_SectionProgress_iterator'));
final _heresdkVisualNavigationBindingslistofSdkNavigationSectionprogressIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_navigation_SectionProgress_iterator_release_handle'));
final _heresdkVisualNavigationBindingslistofSdkNavigationSectionprogressIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_navigation_SectionProgress_iterator_is_valid'));
final _heresdkVisualNavigationBindingslistofSdkNavigationSectionprogressIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_navigation_SectionProgress_iterator_increment'));
final _heresdkVisualNavigationBindingslistofSdkNavigationSectionprogressIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_navigation_SectionProgress_iterator_get'));

Pointer<Void> heresdkVisualNavigationBindingslistofSdkNavigationSectionprogressToFfi(List<SectionProgress> value) {
  final _result = _heresdkVisualNavigationBindingslistofSdkNavigationSectionprogressCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkNavigationSectionprogressToFfi(element);
    _heresdkVisualNavigationBindingslistofSdkNavigationSectionprogressInsert(_result, _elementHandle);
    sdkNavigationSectionprogressReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<SectionProgress> heresdkVisualNavigationBindingslistofSdkNavigationSectionprogressFromFfi(Pointer<Void> handle) {
  final result = List<SectionProgress>.empty(growable: true);
  final _iteratorHandle = _heresdkVisualNavigationBindingslistofSdkNavigationSectionprogressIterator(handle);
  while (_heresdkVisualNavigationBindingslistofSdkNavigationSectionprogressIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkVisualNavigationBindingslistofSdkNavigationSectionprogressIteratorGet(_iteratorHandle);
    try {
      result.add(sdkNavigationSectionprogressFromFfi(_elementHandle));
    } finally {
      sdkNavigationSectionprogressReleaseFfiHandle(_elementHandle);
    }
    _heresdkVisualNavigationBindingslistofSdkNavigationSectionprogressIteratorIncrement(_iteratorHandle);
  }
  _heresdkVisualNavigationBindingslistofSdkNavigationSectionprogressIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkVisualNavigationBindingslistofSdkNavigationSectionprogressReleaseFfiHandle(Pointer<Void> handle) => _heresdkVisualNavigationBindingslistofSdkNavigationSectionprogressReleaseHandle(handle);

final _heresdkVisualNavigationBindingslistofSdkNavigationSectionprogressCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_navigation_SectionProgress_create_handle_nullable'));
final _heresdkVisualNavigationBindingslistofSdkNavigationSectionprogressReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_navigation_SectionProgress_release_handle_nullable'));
final _heresdkVisualNavigationBindingslistofSdkNavigationSectionprogressGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_navigation_SectionProgress_get_value_nullable'));

Pointer<Void> heresdkVisualNavigationBindingslistofSdkNavigationSectionprogressToFfiNullable(List<SectionProgress>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkVisualNavigationBindingslistofSdkNavigationSectionprogressToFfi(value);
  final result = _heresdkVisualNavigationBindingslistofSdkNavigationSectionprogressCreateHandleNullable(_handle);
  heresdkVisualNavigationBindingslistofSdkNavigationSectionprogressReleaseFfiHandle(_handle);
  return result;
}

List<SectionProgress>? heresdkVisualNavigationBindingslistofSdkNavigationSectionprogressFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkVisualNavigationBindingslistofSdkNavigationSectionprogressGetValueNullable(handle);
  final result = heresdkVisualNavigationBindingslistofSdkNavigationSectionprogressFromFfi(_handle);
  heresdkVisualNavigationBindingslistofSdkNavigationSectionprogressReleaseFfiHandle(_handle);
  return result;
}

void heresdkVisualNavigationBindingslistofSdkNavigationSectionprogressReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkVisualNavigationBindingslistofSdkNavigationSectionprogressReleaseHandleNullable(handle);

final _heresdkVisualNavigationBindingslistofSdkNavigationTruckrestrictionwarningCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_navigation_TruckRestrictionWarning_create_handle'));
final _heresdkVisualNavigationBindingslistofSdkNavigationTruckrestrictionwarningReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_navigation_TruckRestrictionWarning_release_handle'));
final _heresdkVisualNavigationBindingslistofSdkNavigationTruckrestrictionwarningInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_navigation_TruckRestrictionWarning_insert'));
final _heresdkVisualNavigationBindingslistofSdkNavigationTruckrestrictionwarningIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_navigation_TruckRestrictionWarning_iterator'));
final _heresdkVisualNavigationBindingslistofSdkNavigationTruckrestrictionwarningIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_navigation_TruckRestrictionWarning_iterator_release_handle'));
final _heresdkVisualNavigationBindingslistofSdkNavigationTruckrestrictionwarningIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_navigation_TruckRestrictionWarning_iterator_is_valid'));
final _heresdkVisualNavigationBindingslistofSdkNavigationTruckrestrictionwarningIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_navigation_TruckRestrictionWarning_iterator_increment'));
final _heresdkVisualNavigationBindingslistofSdkNavigationTruckrestrictionwarningIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_navigation_TruckRestrictionWarning_iterator_get'));

Pointer<Void> heresdkVisualNavigationBindingslistofSdkNavigationTruckrestrictionwarningToFfi(List<TruckRestrictionWarning> value) {
  final _result = _heresdkVisualNavigationBindingslistofSdkNavigationTruckrestrictionwarningCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkNavigationTruckrestrictionwarningToFfi(element);
    _heresdkVisualNavigationBindingslistofSdkNavigationTruckrestrictionwarningInsert(_result, _elementHandle);
    sdkNavigationTruckrestrictionwarningReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<TruckRestrictionWarning> heresdkVisualNavigationBindingslistofSdkNavigationTruckrestrictionwarningFromFfi(Pointer<Void> handle) {
  final result = List<TruckRestrictionWarning>.empty(growable: true);
  final _iteratorHandle = _heresdkVisualNavigationBindingslistofSdkNavigationTruckrestrictionwarningIterator(handle);
  while (_heresdkVisualNavigationBindingslistofSdkNavigationTruckrestrictionwarningIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkVisualNavigationBindingslistofSdkNavigationTruckrestrictionwarningIteratorGet(_iteratorHandle);
    try {
      result.add(sdkNavigationTruckrestrictionwarningFromFfi(_elementHandle));
    } finally {
      sdkNavigationTruckrestrictionwarningReleaseFfiHandle(_elementHandle);
    }
    _heresdkVisualNavigationBindingslistofSdkNavigationTruckrestrictionwarningIteratorIncrement(_iteratorHandle);
  }
  _heresdkVisualNavigationBindingslistofSdkNavigationTruckrestrictionwarningIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkVisualNavigationBindingslistofSdkNavigationTruckrestrictionwarningReleaseFfiHandle(Pointer<Void> handle) => _heresdkVisualNavigationBindingslistofSdkNavigationTruckrestrictionwarningReleaseHandle(handle);

final _heresdkVisualNavigationBindingslistofSdkNavigationTruckrestrictionwarningCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_navigation_TruckRestrictionWarning_create_handle_nullable'));
final _heresdkVisualNavigationBindingslistofSdkNavigationTruckrestrictionwarningReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_navigation_TruckRestrictionWarning_release_handle_nullable'));
final _heresdkVisualNavigationBindingslistofSdkNavigationTruckrestrictionwarningGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_navigation_TruckRestrictionWarning_get_value_nullable'));

Pointer<Void> heresdkVisualNavigationBindingslistofSdkNavigationTruckrestrictionwarningToFfiNullable(List<TruckRestrictionWarning>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkVisualNavigationBindingslistofSdkNavigationTruckrestrictionwarningToFfi(value);
  final result = _heresdkVisualNavigationBindingslistofSdkNavigationTruckrestrictionwarningCreateHandleNullable(_handle);
  heresdkVisualNavigationBindingslistofSdkNavigationTruckrestrictionwarningReleaseFfiHandle(_handle);
  return result;
}

List<TruckRestrictionWarning>? heresdkVisualNavigationBindingslistofSdkNavigationTruckrestrictionwarningFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkVisualNavigationBindingslistofSdkNavigationTruckrestrictionwarningGetValueNullable(handle);
  final result = heresdkVisualNavigationBindingslistofSdkNavigationTruckrestrictionwarningFromFfi(_handle);
  heresdkVisualNavigationBindingslistofSdkNavigationTruckrestrictionwarningReleaseFfiHandle(_handle);
  return result;
}

void heresdkVisualNavigationBindingslistofSdkNavigationTruckrestrictionwarningReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkVisualNavigationBindingslistofSdkNavigationTruckrestrictionwarningReleaseHandleNullable(handle);

final _heresdkVisualNavigationBindingslistofSdkRoutingAttributionCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_Attribution_create_handle'));
final _heresdkVisualNavigationBindingslistofSdkRoutingAttributionReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_Attribution_release_handle'));
final _heresdkVisualNavigationBindingslistofSdkRoutingAttributionInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_Attribution_insert'));
final _heresdkVisualNavigationBindingslistofSdkRoutingAttributionIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_Attribution_iterator'));
final _heresdkVisualNavigationBindingslistofSdkRoutingAttributionIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_Attribution_iterator_release_handle'));
final _heresdkVisualNavigationBindingslistofSdkRoutingAttributionIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_Attribution_iterator_is_valid'));
final _heresdkVisualNavigationBindingslistofSdkRoutingAttributionIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_Attribution_iterator_increment'));
final _heresdkVisualNavigationBindingslistofSdkRoutingAttributionIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_Attribution_iterator_get'));

Pointer<Void> heresdkVisualNavigationBindingslistofSdkRoutingAttributionToFfi(List<Attribution> value) {
  final _result = _heresdkVisualNavigationBindingslistofSdkRoutingAttributionCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingAttributionToFfi(element);
    _heresdkVisualNavigationBindingslistofSdkRoutingAttributionInsert(_result, _elementHandle);
    sdkRoutingAttributionReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Attribution> heresdkVisualNavigationBindingslistofSdkRoutingAttributionFromFfi(Pointer<Void> handle) {
  final result = List<Attribution>.empty(growable: true);
  final _iteratorHandle = _heresdkVisualNavigationBindingslistofSdkRoutingAttributionIterator(handle);
  while (_heresdkVisualNavigationBindingslistofSdkRoutingAttributionIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkVisualNavigationBindingslistofSdkRoutingAttributionIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingAttributionFromFfi(_elementHandle));
    } finally {
      sdkRoutingAttributionReleaseFfiHandle(_elementHandle);
    }
    _heresdkVisualNavigationBindingslistofSdkRoutingAttributionIteratorIncrement(_iteratorHandle);
  }
  _heresdkVisualNavigationBindingslistofSdkRoutingAttributionIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkVisualNavigationBindingslistofSdkRoutingAttributionReleaseFfiHandle(Pointer<Void> handle) => _heresdkVisualNavigationBindingslistofSdkRoutingAttributionReleaseHandle(handle);

final _heresdkVisualNavigationBindingslistofSdkRoutingAttributionCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_Attribution_create_handle_nullable'));
final _heresdkVisualNavigationBindingslistofSdkRoutingAttributionReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_Attribution_release_handle_nullable'));
final _heresdkVisualNavigationBindingslistofSdkRoutingAttributionGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_Attribution_get_value_nullable'));

Pointer<Void> heresdkVisualNavigationBindingslistofSdkRoutingAttributionToFfiNullable(List<Attribution>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkVisualNavigationBindingslistofSdkRoutingAttributionToFfi(value);
  final result = _heresdkVisualNavigationBindingslistofSdkRoutingAttributionCreateHandleNullable(_handle);
  heresdkVisualNavigationBindingslistofSdkRoutingAttributionReleaseFfiHandle(_handle);
  return result;
}

List<Attribution>? heresdkVisualNavigationBindingslistofSdkRoutingAttributionFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkVisualNavigationBindingslistofSdkRoutingAttributionGetValueNullable(handle);
  final result = heresdkVisualNavigationBindingslistofSdkRoutingAttributionFromFfi(_handle);
  heresdkVisualNavigationBindingslistofSdkRoutingAttributionReleaseFfiHandle(_handle);
  return result;
}

void heresdkVisualNavigationBindingslistofSdkRoutingAttributionReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkVisualNavigationBindingslistofSdkRoutingAttributionReleaseHandleNullable(handle);

final _heresdkVisualNavigationBindingslistofSdkRoutingChargingconnectortypeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_ChargingConnectorType_create_handle'));
final _heresdkVisualNavigationBindingslistofSdkRoutingChargingconnectortypeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_ChargingConnectorType_release_handle'));
final _heresdkVisualNavigationBindingslistofSdkRoutingChargingconnectortypeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_ChargingConnectorType_insert'));
final _heresdkVisualNavigationBindingslistofSdkRoutingChargingconnectortypeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_ChargingConnectorType_iterator'));
final _heresdkVisualNavigationBindingslistofSdkRoutingChargingconnectortypeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_ChargingConnectorType_iterator_release_handle'));
final _heresdkVisualNavigationBindingslistofSdkRoutingChargingconnectortypeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_ChargingConnectorType_iterator_is_valid'));
final _heresdkVisualNavigationBindingslistofSdkRoutingChargingconnectortypeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_ChargingConnectorType_iterator_increment'));
final _heresdkVisualNavigationBindingslistofSdkRoutingChargingconnectortypeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_ChargingConnectorType_iterator_get'));

Pointer<Void> heresdkVisualNavigationBindingslistofSdkRoutingChargingconnectortypeToFfi(List<ChargingConnectorType> value) {
  final _result = _heresdkVisualNavigationBindingslistofSdkRoutingChargingconnectortypeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingChargingconnectortypeToFfi(element);
    _heresdkVisualNavigationBindingslistofSdkRoutingChargingconnectortypeInsert(_result, _elementHandle);
    sdkRoutingChargingconnectortypeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<ChargingConnectorType> heresdkVisualNavigationBindingslistofSdkRoutingChargingconnectortypeFromFfi(Pointer<Void> handle) {
  final result = List<ChargingConnectorType>.empty(growable: true);
  final _iteratorHandle = _heresdkVisualNavigationBindingslistofSdkRoutingChargingconnectortypeIterator(handle);
  while (_heresdkVisualNavigationBindingslistofSdkRoutingChargingconnectortypeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkVisualNavigationBindingslistofSdkRoutingChargingconnectortypeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingChargingconnectortypeFromFfi(_elementHandle));
    } finally {
      sdkRoutingChargingconnectortypeReleaseFfiHandle(_elementHandle);
    }
    _heresdkVisualNavigationBindingslistofSdkRoutingChargingconnectortypeIteratorIncrement(_iteratorHandle);
  }
  _heresdkVisualNavigationBindingslistofSdkRoutingChargingconnectortypeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkVisualNavigationBindingslistofSdkRoutingChargingconnectortypeReleaseFfiHandle(Pointer<Void> handle) => _heresdkVisualNavigationBindingslistofSdkRoutingChargingconnectortypeReleaseHandle(handle);

final _heresdkVisualNavigationBindingslistofSdkRoutingChargingconnectortypeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_ChargingConnectorType_create_handle_nullable'));
final _heresdkVisualNavigationBindingslistofSdkRoutingChargingconnectortypeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_ChargingConnectorType_release_handle_nullable'));
final _heresdkVisualNavigationBindingslistofSdkRoutingChargingconnectortypeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_ChargingConnectorType_get_value_nullable'));

Pointer<Void> heresdkVisualNavigationBindingslistofSdkRoutingChargingconnectortypeToFfiNullable(List<ChargingConnectorType>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkVisualNavigationBindingslistofSdkRoutingChargingconnectortypeToFfi(value);
  final result = _heresdkVisualNavigationBindingslistofSdkRoutingChargingconnectortypeCreateHandleNullable(_handle);
  heresdkVisualNavigationBindingslistofSdkRoutingChargingconnectortypeReleaseFfiHandle(_handle);
  return result;
}

List<ChargingConnectorType>? heresdkVisualNavigationBindingslistofSdkRoutingChargingconnectortypeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkVisualNavigationBindingslistofSdkRoutingChargingconnectortypeGetValueNullable(handle);
  final result = heresdkVisualNavigationBindingslistofSdkRoutingChargingconnectortypeFromFfi(_handle);
  heresdkVisualNavigationBindingslistofSdkRoutingChargingconnectortypeReleaseFfiHandle(_handle);
  return result;
}

void heresdkVisualNavigationBindingslistofSdkRoutingChargingconnectortypeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkVisualNavigationBindingslistofSdkRoutingChargingconnectortypeReleaseHandleNullable(handle);

final _heresdkVisualNavigationBindingslistofSdkRoutingFareCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_Fare_create_handle'));
final _heresdkVisualNavigationBindingslistofSdkRoutingFareReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_Fare_release_handle'));
final _heresdkVisualNavigationBindingslistofSdkRoutingFareInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_Fare_insert'));
final _heresdkVisualNavigationBindingslistofSdkRoutingFareIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_Fare_iterator'));
final _heresdkVisualNavigationBindingslistofSdkRoutingFareIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_Fare_iterator_release_handle'));
final _heresdkVisualNavigationBindingslistofSdkRoutingFareIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_Fare_iterator_is_valid'));
final _heresdkVisualNavigationBindingslistofSdkRoutingFareIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_Fare_iterator_increment'));
final _heresdkVisualNavigationBindingslistofSdkRoutingFareIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_Fare_iterator_get'));

Pointer<Void> heresdkVisualNavigationBindingslistofSdkRoutingFareToFfi(List<Fare> value) {
  final _result = _heresdkVisualNavigationBindingslistofSdkRoutingFareCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingFareToFfi(element);
    _heresdkVisualNavigationBindingslistofSdkRoutingFareInsert(_result, _elementHandle);
    sdkRoutingFareReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Fare> heresdkVisualNavigationBindingslistofSdkRoutingFareFromFfi(Pointer<Void> handle) {
  final result = List<Fare>.empty(growable: true);
  final _iteratorHandle = _heresdkVisualNavigationBindingslistofSdkRoutingFareIterator(handle);
  while (_heresdkVisualNavigationBindingslistofSdkRoutingFareIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkVisualNavigationBindingslistofSdkRoutingFareIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingFareFromFfi(_elementHandle));
    } finally {
      sdkRoutingFareReleaseFfiHandle(_elementHandle);
    }
    _heresdkVisualNavigationBindingslistofSdkRoutingFareIteratorIncrement(_iteratorHandle);
  }
  _heresdkVisualNavigationBindingslistofSdkRoutingFareIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkVisualNavigationBindingslistofSdkRoutingFareReleaseFfiHandle(Pointer<Void> handle) => _heresdkVisualNavigationBindingslistofSdkRoutingFareReleaseHandle(handle);

final _heresdkVisualNavigationBindingslistofSdkRoutingFareCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_Fare_create_handle_nullable'));
final _heresdkVisualNavigationBindingslistofSdkRoutingFareReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_Fare_release_handle_nullable'));
final _heresdkVisualNavigationBindingslistofSdkRoutingFareGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_Fare_get_value_nullable'));

Pointer<Void> heresdkVisualNavigationBindingslistofSdkRoutingFareToFfiNullable(List<Fare>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkVisualNavigationBindingslistofSdkRoutingFareToFfi(value);
  final result = _heresdkVisualNavigationBindingslistofSdkRoutingFareCreateHandleNullable(_handle);
  heresdkVisualNavigationBindingslistofSdkRoutingFareReleaseFfiHandle(_handle);
  return result;
}

List<Fare>? heresdkVisualNavigationBindingslistofSdkRoutingFareFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkVisualNavigationBindingslistofSdkRoutingFareGetValueNullable(handle);
  final result = heresdkVisualNavigationBindingslistofSdkRoutingFareFromFfi(_handle);
  heresdkVisualNavigationBindingslistofSdkRoutingFareReleaseFfiHandle(_handle);
  return result;
}

void heresdkVisualNavigationBindingslistofSdkRoutingFareReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkVisualNavigationBindingslistofSdkRoutingFareReleaseHandleNullable(handle);

final _heresdkVisualNavigationBindingslistofSdkRoutingHazardousgoodCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_HazardousGood_create_handle'));
final _heresdkVisualNavigationBindingslistofSdkRoutingHazardousgoodReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_HazardousGood_release_handle'));
final _heresdkVisualNavigationBindingslistofSdkRoutingHazardousgoodInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_HazardousGood_insert'));
final _heresdkVisualNavigationBindingslistofSdkRoutingHazardousgoodIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_HazardousGood_iterator'));
final _heresdkVisualNavigationBindingslistofSdkRoutingHazardousgoodIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_HazardousGood_iterator_release_handle'));
final _heresdkVisualNavigationBindingslistofSdkRoutingHazardousgoodIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_HazardousGood_iterator_is_valid'));
final _heresdkVisualNavigationBindingslistofSdkRoutingHazardousgoodIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_HazardousGood_iterator_increment'));
final _heresdkVisualNavigationBindingslistofSdkRoutingHazardousgoodIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_HazardousGood_iterator_get'));

Pointer<Void> heresdkVisualNavigationBindingslistofSdkRoutingHazardousgoodToFfi(List<HazardousGood> value) {
  final _result = _heresdkVisualNavigationBindingslistofSdkRoutingHazardousgoodCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingHazardousgoodToFfi(element);
    _heresdkVisualNavigationBindingslistofSdkRoutingHazardousgoodInsert(_result, _elementHandle);
    sdkRoutingHazardousgoodReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<HazardousGood> heresdkVisualNavigationBindingslistofSdkRoutingHazardousgoodFromFfi(Pointer<Void> handle) {
  final result = List<HazardousGood>.empty(growable: true);
  final _iteratorHandle = _heresdkVisualNavigationBindingslistofSdkRoutingHazardousgoodIterator(handle);
  while (_heresdkVisualNavigationBindingslistofSdkRoutingHazardousgoodIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkVisualNavigationBindingslistofSdkRoutingHazardousgoodIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingHazardousgoodFromFfi(_elementHandle));
    } finally {
      sdkRoutingHazardousgoodReleaseFfiHandle(_elementHandle);
    }
    _heresdkVisualNavigationBindingslistofSdkRoutingHazardousgoodIteratorIncrement(_iteratorHandle);
  }
  _heresdkVisualNavigationBindingslistofSdkRoutingHazardousgoodIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkVisualNavigationBindingslistofSdkRoutingHazardousgoodReleaseFfiHandle(Pointer<Void> handle) => _heresdkVisualNavigationBindingslistofSdkRoutingHazardousgoodReleaseHandle(handle);

final _heresdkVisualNavigationBindingslistofSdkRoutingHazardousgoodCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_HazardousGood_create_handle_nullable'));
final _heresdkVisualNavigationBindingslistofSdkRoutingHazardousgoodReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_HazardousGood_release_handle_nullable'));
final _heresdkVisualNavigationBindingslistofSdkRoutingHazardousgoodGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_HazardousGood_get_value_nullable'));

Pointer<Void> heresdkVisualNavigationBindingslistofSdkRoutingHazardousgoodToFfiNullable(List<HazardousGood>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkVisualNavigationBindingslistofSdkRoutingHazardousgoodToFfi(value);
  final result = _heresdkVisualNavigationBindingslistofSdkRoutingHazardousgoodCreateHandleNullable(_handle);
  heresdkVisualNavigationBindingslistofSdkRoutingHazardousgoodReleaseFfiHandle(_handle);
  return result;
}

List<HazardousGood>? heresdkVisualNavigationBindingslistofSdkRoutingHazardousgoodFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkVisualNavigationBindingslistofSdkRoutingHazardousgoodGetValueNullable(handle);
  final result = heresdkVisualNavigationBindingslistofSdkRoutingHazardousgoodFromFfi(_handle);
  heresdkVisualNavigationBindingslistofSdkRoutingHazardousgoodReleaseFfiHandle(_handle);
  return result;
}

void heresdkVisualNavigationBindingslistofSdkRoutingHazardousgoodReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkVisualNavigationBindingslistofSdkRoutingHazardousgoodReleaseHandleNullable(handle);

final _heresdkVisualNavigationBindingslistofSdkRoutingManeuverCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_Maneuver_create_handle'));
final _heresdkVisualNavigationBindingslistofSdkRoutingManeuverReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_Maneuver_release_handle'));
final _heresdkVisualNavigationBindingslistofSdkRoutingManeuverInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_Maneuver_insert'));
final _heresdkVisualNavigationBindingslistofSdkRoutingManeuverIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_Maneuver_iterator'));
final _heresdkVisualNavigationBindingslistofSdkRoutingManeuverIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_Maneuver_iterator_release_handle'));
final _heresdkVisualNavigationBindingslistofSdkRoutingManeuverIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_Maneuver_iterator_is_valid'));
final _heresdkVisualNavigationBindingslistofSdkRoutingManeuverIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_Maneuver_iterator_increment'));
final _heresdkVisualNavigationBindingslistofSdkRoutingManeuverIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_Maneuver_iterator_get'));

Pointer<Void> heresdkVisualNavigationBindingslistofSdkRoutingManeuverToFfi(List<Maneuver> value) {
  final _result = _heresdkVisualNavigationBindingslistofSdkRoutingManeuverCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingManeuverToFfi(element);
    _heresdkVisualNavigationBindingslistofSdkRoutingManeuverInsert(_result, _elementHandle);
    sdkRoutingManeuverReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Maneuver> heresdkVisualNavigationBindingslistofSdkRoutingManeuverFromFfi(Pointer<Void> handle) {
  final result = List<Maneuver>.empty(growable: true);
  final _iteratorHandle = _heresdkVisualNavigationBindingslistofSdkRoutingManeuverIterator(handle);
  while (_heresdkVisualNavigationBindingslistofSdkRoutingManeuverIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkVisualNavigationBindingslistofSdkRoutingManeuverIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingManeuverFromFfi(_elementHandle));
    } finally {
      sdkRoutingManeuverReleaseFfiHandle(_elementHandle);
    }
    _heresdkVisualNavigationBindingslistofSdkRoutingManeuverIteratorIncrement(_iteratorHandle);
  }
  _heresdkVisualNavigationBindingslistofSdkRoutingManeuverIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkVisualNavigationBindingslistofSdkRoutingManeuverReleaseFfiHandle(Pointer<Void> handle) => _heresdkVisualNavigationBindingslistofSdkRoutingManeuverReleaseHandle(handle);

final _heresdkVisualNavigationBindingslistofSdkRoutingManeuverCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_Maneuver_create_handle_nullable'));
final _heresdkVisualNavigationBindingslistofSdkRoutingManeuverReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_Maneuver_release_handle_nullable'));
final _heresdkVisualNavigationBindingslistofSdkRoutingManeuverGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_Maneuver_get_value_nullable'));

Pointer<Void> heresdkVisualNavigationBindingslistofSdkRoutingManeuverToFfiNullable(List<Maneuver>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkVisualNavigationBindingslistofSdkRoutingManeuverToFfi(value);
  final result = _heresdkVisualNavigationBindingslistofSdkRoutingManeuverCreateHandleNullable(_handle);
  heresdkVisualNavigationBindingslistofSdkRoutingManeuverReleaseFfiHandle(_handle);
  return result;
}

List<Maneuver>? heresdkVisualNavigationBindingslistofSdkRoutingManeuverFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkVisualNavigationBindingslistofSdkRoutingManeuverGetValueNullable(handle);
  final result = heresdkVisualNavigationBindingslistofSdkRoutingManeuverFromFfi(_handle);
  heresdkVisualNavigationBindingslistofSdkRoutingManeuverReleaseFfiHandle(_handle);
  return result;
}

void heresdkVisualNavigationBindingslistofSdkRoutingManeuverReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkVisualNavigationBindingslistofSdkRoutingManeuverReleaseHandleNullable(handle);

final _heresdkVisualNavigationBindingslistofSdkRoutingPaymentmethodCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_PaymentMethod_create_handle'));
final _heresdkVisualNavigationBindingslistofSdkRoutingPaymentmethodReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_PaymentMethod_release_handle'));
final _heresdkVisualNavigationBindingslistofSdkRoutingPaymentmethodInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_PaymentMethod_insert'));
final _heresdkVisualNavigationBindingslistofSdkRoutingPaymentmethodIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_PaymentMethod_iterator'));
final _heresdkVisualNavigationBindingslistofSdkRoutingPaymentmethodIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_PaymentMethod_iterator_release_handle'));
final _heresdkVisualNavigationBindingslistofSdkRoutingPaymentmethodIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_PaymentMethod_iterator_is_valid'));
final _heresdkVisualNavigationBindingslistofSdkRoutingPaymentmethodIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_PaymentMethod_iterator_increment'));
final _heresdkVisualNavigationBindingslistofSdkRoutingPaymentmethodIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_PaymentMethod_iterator_get'));

Pointer<Void> heresdkVisualNavigationBindingslistofSdkRoutingPaymentmethodToFfi(List<PaymentMethod> value) {
  final _result = _heresdkVisualNavigationBindingslistofSdkRoutingPaymentmethodCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingPaymentmethodToFfi(element);
    _heresdkVisualNavigationBindingslistofSdkRoutingPaymentmethodInsert(_result, _elementHandle);
    sdkRoutingPaymentmethodReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<PaymentMethod> heresdkVisualNavigationBindingslistofSdkRoutingPaymentmethodFromFfi(Pointer<Void> handle) {
  final result = List<PaymentMethod>.empty(growable: true);
  final _iteratorHandle = _heresdkVisualNavigationBindingslistofSdkRoutingPaymentmethodIterator(handle);
  while (_heresdkVisualNavigationBindingslistofSdkRoutingPaymentmethodIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkVisualNavigationBindingslistofSdkRoutingPaymentmethodIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingPaymentmethodFromFfi(_elementHandle));
    } finally {
      sdkRoutingPaymentmethodReleaseFfiHandle(_elementHandle);
    }
    _heresdkVisualNavigationBindingslistofSdkRoutingPaymentmethodIteratorIncrement(_iteratorHandle);
  }
  _heresdkVisualNavigationBindingslistofSdkRoutingPaymentmethodIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkVisualNavigationBindingslistofSdkRoutingPaymentmethodReleaseFfiHandle(Pointer<Void> handle) => _heresdkVisualNavigationBindingslistofSdkRoutingPaymentmethodReleaseHandle(handle);

final _heresdkVisualNavigationBindingslistofSdkRoutingPaymentmethodCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_PaymentMethod_create_handle_nullable'));
final _heresdkVisualNavigationBindingslistofSdkRoutingPaymentmethodReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_PaymentMethod_release_handle_nullable'));
final _heresdkVisualNavigationBindingslistofSdkRoutingPaymentmethodGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_PaymentMethod_get_value_nullable'));

Pointer<Void> heresdkVisualNavigationBindingslistofSdkRoutingPaymentmethodToFfiNullable(List<PaymentMethod>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkVisualNavigationBindingslistofSdkRoutingPaymentmethodToFfi(value);
  final result = _heresdkVisualNavigationBindingslistofSdkRoutingPaymentmethodCreateHandleNullable(_handle);
  heresdkVisualNavigationBindingslistofSdkRoutingPaymentmethodReleaseFfiHandle(_handle);
  return result;
}

List<PaymentMethod>? heresdkVisualNavigationBindingslistofSdkRoutingPaymentmethodFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkVisualNavigationBindingslistofSdkRoutingPaymentmethodGetValueNullable(handle);
  final result = heresdkVisualNavigationBindingslistofSdkRoutingPaymentmethodFromFfi(_handle);
  heresdkVisualNavigationBindingslistofSdkRoutingPaymentmethodReleaseFfiHandle(_handle);
  return result;
}

void heresdkVisualNavigationBindingslistofSdkRoutingPaymentmethodReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkVisualNavigationBindingslistofSdkRoutingPaymentmethodReleaseHandleNullable(handle);

final _heresdkVisualNavigationBindingslistofSdkRoutingPostactionCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_PostAction_create_handle'));
final _heresdkVisualNavigationBindingslistofSdkRoutingPostactionReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_PostAction_release_handle'));
final _heresdkVisualNavigationBindingslistofSdkRoutingPostactionInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_PostAction_insert'));
final _heresdkVisualNavigationBindingslistofSdkRoutingPostactionIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_PostAction_iterator'));
final _heresdkVisualNavigationBindingslistofSdkRoutingPostactionIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_PostAction_iterator_release_handle'));
final _heresdkVisualNavigationBindingslistofSdkRoutingPostactionIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_PostAction_iterator_is_valid'));
final _heresdkVisualNavigationBindingslistofSdkRoutingPostactionIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_PostAction_iterator_increment'));
final _heresdkVisualNavigationBindingslistofSdkRoutingPostactionIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_PostAction_iterator_get'));

Pointer<Void> heresdkVisualNavigationBindingslistofSdkRoutingPostactionToFfi(List<PostAction> value) {
  final _result = _heresdkVisualNavigationBindingslistofSdkRoutingPostactionCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingPostactionToFfi(element);
    _heresdkVisualNavigationBindingslistofSdkRoutingPostactionInsert(_result, _elementHandle);
    sdkRoutingPostactionReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<PostAction> heresdkVisualNavigationBindingslistofSdkRoutingPostactionFromFfi(Pointer<Void> handle) {
  final result = List<PostAction>.empty(growable: true);
  final _iteratorHandle = _heresdkVisualNavigationBindingslistofSdkRoutingPostactionIterator(handle);
  while (_heresdkVisualNavigationBindingslistofSdkRoutingPostactionIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkVisualNavigationBindingslistofSdkRoutingPostactionIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingPostactionFromFfi(_elementHandle));
    } finally {
      sdkRoutingPostactionReleaseFfiHandle(_elementHandle);
    }
    _heresdkVisualNavigationBindingslistofSdkRoutingPostactionIteratorIncrement(_iteratorHandle);
  }
  _heresdkVisualNavigationBindingslistofSdkRoutingPostactionIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkVisualNavigationBindingslistofSdkRoutingPostactionReleaseFfiHandle(Pointer<Void> handle) => _heresdkVisualNavigationBindingslistofSdkRoutingPostactionReleaseHandle(handle);

final _heresdkVisualNavigationBindingslistofSdkRoutingPostactionCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_PostAction_create_handle_nullable'));
final _heresdkVisualNavigationBindingslistofSdkRoutingPostactionReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_PostAction_release_handle_nullable'));
final _heresdkVisualNavigationBindingslistofSdkRoutingPostactionGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_PostAction_get_value_nullable'));

Pointer<Void> heresdkVisualNavigationBindingslistofSdkRoutingPostactionToFfiNullable(List<PostAction>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkVisualNavigationBindingslistofSdkRoutingPostactionToFfi(value);
  final result = _heresdkVisualNavigationBindingslistofSdkRoutingPostactionCreateHandleNullable(_handle);
  heresdkVisualNavigationBindingslistofSdkRoutingPostactionReleaseFfiHandle(_handle);
  return result;
}

List<PostAction>? heresdkVisualNavigationBindingslistofSdkRoutingPostactionFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkVisualNavigationBindingslistofSdkRoutingPostactionGetValueNullable(handle);
  final result = heresdkVisualNavigationBindingslistofSdkRoutingPostactionFromFfi(_handle);
  heresdkVisualNavigationBindingslistofSdkRoutingPostactionReleaseFfiHandle(_handle);
  return result;
}

void heresdkVisualNavigationBindingslistofSdkRoutingPostactionReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkVisualNavigationBindingslistofSdkRoutingPostactionReleaseHandleNullable(handle);

final _heresdkVisualNavigationBindingslistofSdkRoutingPreactionCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_PreAction_create_handle'));
final _heresdkVisualNavigationBindingslistofSdkRoutingPreactionReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_PreAction_release_handle'));
final _heresdkVisualNavigationBindingslistofSdkRoutingPreactionInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_PreAction_insert'));
final _heresdkVisualNavigationBindingslistofSdkRoutingPreactionIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_PreAction_iterator'));
final _heresdkVisualNavigationBindingslistofSdkRoutingPreactionIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_PreAction_iterator_release_handle'));
final _heresdkVisualNavigationBindingslistofSdkRoutingPreactionIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_PreAction_iterator_is_valid'));
final _heresdkVisualNavigationBindingslistofSdkRoutingPreactionIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_PreAction_iterator_increment'));
final _heresdkVisualNavigationBindingslistofSdkRoutingPreactionIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_PreAction_iterator_get'));

Pointer<Void> heresdkVisualNavigationBindingslistofSdkRoutingPreactionToFfi(List<PreAction> value) {
  final _result = _heresdkVisualNavigationBindingslistofSdkRoutingPreactionCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingPreactionToFfi(element);
    _heresdkVisualNavigationBindingslistofSdkRoutingPreactionInsert(_result, _elementHandle);
    sdkRoutingPreactionReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<PreAction> heresdkVisualNavigationBindingslistofSdkRoutingPreactionFromFfi(Pointer<Void> handle) {
  final result = List<PreAction>.empty(growable: true);
  final _iteratorHandle = _heresdkVisualNavigationBindingslistofSdkRoutingPreactionIterator(handle);
  while (_heresdkVisualNavigationBindingslistofSdkRoutingPreactionIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkVisualNavigationBindingslistofSdkRoutingPreactionIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingPreactionFromFfi(_elementHandle));
    } finally {
      sdkRoutingPreactionReleaseFfiHandle(_elementHandle);
    }
    _heresdkVisualNavigationBindingslistofSdkRoutingPreactionIteratorIncrement(_iteratorHandle);
  }
  _heresdkVisualNavigationBindingslistofSdkRoutingPreactionIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkVisualNavigationBindingslistofSdkRoutingPreactionReleaseFfiHandle(Pointer<Void> handle) => _heresdkVisualNavigationBindingslistofSdkRoutingPreactionReleaseHandle(handle);

final _heresdkVisualNavigationBindingslistofSdkRoutingPreactionCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_PreAction_create_handle_nullable'));
final _heresdkVisualNavigationBindingslistofSdkRoutingPreactionReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_PreAction_release_handle_nullable'));
final _heresdkVisualNavigationBindingslistofSdkRoutingPreactionGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_PreAction_get_value_nullable'));

Pointer<Void> heresdkVisualNavigationBindingslistofSdkRoutingPreactionToFfiNullable(List<PreAction>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkVisualNavigationBindingslistofSdkRoutingPreactionToFfi(value);
  final result = _heresdkVisualNavigationBindingslistofSdkRoutingPreactionCreateHandleNullable(_handle);
  heresdkVisualNavigationBindingslistofSdkRoutingPreactionReleaseFfiHandle(_handle);
  return result;
}

List<PreAction>? heresdkVisualNavigationBindingslistofSdkRoutingPreactionFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkVisualNavigationBindingslistofSdkRoutingPreactionGetValueNullable(handle);
  final result = heresdkVisualNavigationBindingslistofSdkRoutingPreactionFromFfi(_handle);
  heresdkVisualNavigationBindingslistofSdkRoutingPreactionReleaseFfiHandle(_handle);
  return result;
}

void heresdkVisualNavigationBindingslistofSdkRoutingPreactionReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkVisualNavigationBindingslistofSdkRoutingPreactionReleaseHandleNullable(handle);

final _heresdkVisualNavigationBindingslistofSdkRoutingRoadfeaturesCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_RoadFeatures_create_handle'));
final _heresdkVisualNavigationBindingslistofSdkRoutingRoadfeaturesReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_RoadFeatures_release_handle'));
final _heresdkVisualNavigationBindingslistofSdkRoutingRoadfeaturesInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_RoadFeatures_insert'));
final _heresdkVisualNavigationBindingslistofSdkRoutingRoadfeaturesIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_RoadFeatures_iterator'));
final _heresdkVisualNavigationBindingslistofSdkRoutingRoadfeaturesIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_RoadFeatures_iterator_release_handle'));
final _heresdkVisualNavigationBindingslistofSdkRoutingRoadfeaturesIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_RoadFeatures_iterator_is_valid'));
final _heresdkVisualNavigationBindingslistofSdkRoutingRoadfeaturesIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_RoadFeatures_iterator_increment'));
final _heresdkVisualNavigationBindingslistofSdkRoutingRoadfeaturesIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_RoadFeatures_iterator_get'));

Pointer<Void> heresdkVisualNavigationBindingslistofSdkRoutingRoadfeaturesToFfi(List<RoadFeatures> value) {
  final _result = _heresdkVisualNavigationBindingslistofSdkRoutingRoadfeaturesCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingRoadfeaturesToFfi(element);
    _heresdkVisualNavigationBindingslistofSdkRoutingRoadfeaturesInsert(_result, _elementHandle);
    sdkRoutingRoadfeaturesReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<RoadFeatures> heresdkVisualNavigationBindingslistofSdkRoutingRoadfeaturesFromFfi(Pointer<Void> handle) {
  final result = List<RoadFeatures>.empty(growable: true);
  final _iteratorHandle = _heresdkVisualNavigationBindingslistofSdkRoutingRoadfeaturesIterator(handle);
  while (_heresdkVisualNavigationBindingslistofSdkRoutingRoadfeaturesIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkVisualNavigationBindingslistofSdkRoutingRoadfeaturesIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingRoadfeaturesFromFfi(_elementHandle));
    } finally {
      sdkRoutingRoadfeaturesReleaseFfiHandle(_elementHandle);
    }
    _heresdkVisualNavigationBindingslistofSdkRoutingRoadfeaturesIteratorIncrement(_iteratorHandle);
  }
  _heresdkVisualNavigationBindingslistofSdkRoutingRoadfeaturesIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkVisualNavigationBindingslistofSdkRoutingRoadfeaturesReleaseFfiHandle(Pointer<Void> handle) => _heresdkVisualNavigationBindingslistofSdkRoutingRoadfeaturesReleaseHandle(handle);

final _heresdkVisualNavigationBindingslistofSdkRoutingRoadfeaturesCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_RoadFeatures_create_handle_nullable'));
final _heresdkVisualNavigationBindingslistofSdkRoutingRoadfeaturesReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_RoadFeatures_release_handle_nullable'));
final _heresdkVisualNavigationBindingslistofSdkRoutingRoadfeaturesGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_RoadFeatures_get_value_nullable'));

Pointer<Void> heresdkVisualNavigationBindingslistofSdkRoutingRoadfeaturesToFfiNullable(List<RoadFeatures>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkVisualNavigationBindingslistofSdkRoutingRoadfeaturesToFfi(value);
  final result = _heresdkVisualNavigationBindingslistofSdkRoutingRoadfeaturesCreateHandleNullable(_handle);
  heresdkVisualNavigationBindingslistofSdkRoutingRoadfeaturesReleaseFfiHandle(_handle);
  return result;
}

List<RoadFeatures>? heresdkVisualNavigationBindingslistofSdkRoutingRoadfeaturesFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkVisualNavigationBindingslistofSdkRoutingRoadfeaturesGetValueNullable(handle);
  final result = heresdkVisualNavigationBindingslistofSdkRoutingRoadfeaturesFromFfi(_handle);
  heresdkVisualNavigationBindingslistofSdkRoutingRoadfeaturesReleaseFfiHandle(_handle);
  return result;
}

void heresdkVisualNavigationBindingslistofSdkRoutingRoadfeaturesReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkVisualNavigationBindingslistofSdkRoutingRoadfeaturesReleaseHandleNullable(handle);

final _heresdkVisualNavigationBindingslistofSdkRoutingRouteCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_Route_create_handle'));
final _heresdkVisualNavigationBindingslistofSdkRoutingRouteReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_Route_release_handle'));
final _heresdkVisualNavigationBindingslistofSdkRoutingRouteInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_Route_insert'));
final _heresdkVisualNavigationBindingslistofSdkRoutingRouteIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_Route_iterator'));
final _heresdkVisualNavigationBindingslistofSdkRoutingRouteIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_Route_iterator_release_handle'));
final _heresdkVisualNavigationBindingslistofSdkRoutingRouteIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_Route_iterator_is_valid'));
final _heresdkVisualNavigationBindingslistofSdkRoutingRouteIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_Route_iterator_increment'));
final _heresdkVisualNavigationBindingslistofSdkRoutingRouteIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_Route_iterator_get'));

Pointer<Void> heresdkVisualNavigationBindingslistofSdkRoutingRouteToFfi(List<Route> value) {
  final _result = _heresdkVisualNavigationBindingslistofSdkRoutingRouteCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingRouteToFfi(element);
    _heresdkVisualNavigationBindingslistofSdkRoutingRouteInsert(_result, _elementHandle);
    sdkRoutingRouteReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Route> heresdkVisualNavigationBindingslistofSdkRoutingRouteFromFfi(Pointer<Void> handle) {
  final result = List<Route>.empty(growable: true);
  final _iteratorHandle = _heresdkVisualNavigationBindingslistofSdkRoutingRouteIterator(handle);
  while (_heresdkVisualNavigationBindingslistofSdkRoutingRouteIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkVisualNavigationBindingslistofSdkRoutingRouteIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingRouteFromFfi(_elementHandle));
    } finally {
      sdkRoutingRouteReleaseFfiHandle(_elementHandle);
    }
    _heresdkVisualNavigationBindingslistofSdkRoutingRouteIteratorIncrement(_iteratorHandle);
  }
  _heresdkVisualNavigationBindingslistofSdkRoutingRouteIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkVisualNavigationBindingslistofSdkRoutingRouteReleaseFfiHandle(Pointer<Void> handle) => _heresdkVisualNavigationBindingslistofSdkRoutingRouteReleaseHandle(handle);

final _heresdkVisualNavigationBindingslistofSdkRoutingRouteCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_Route_create_handle_nullable'));
final _heresdkVisualNavigationBindingslistofSdkRoutingRouteReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_Route_release_handle_nullable'));
final _heresdkVisualNavigationBindingslistofSdkRoutingRouteGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_Route_get_value_nullable'));

Pointer<Void> heresdkVisualNavigationBindingslistofSdkRoutingRouteToFfiNullable(List<Route>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkVisualNavigationBindingslistofSdkRoutingRouteToFfi(value);
  final result = _heresdkVisualNavigationBindingslistofSdkRoutingRouteCreateHandleNullable(_handle);
  heresdkVisualNavigationBindingslistofSdkRoutingRouteReleaseFfiHandle(_handle);
  return result;
}

List<Route>? heresdkVisualNavigationBindingslistofSdkRoutingRouteFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkVisualNavigationBindingslistofSdkRoutingRouteGetValueNullable(handle);
  final result = heresdkVisualNavigationBindingslistofSdkRoutingRouteFromFfi(_handle);
  heresdkVisualNavigationBindingslistofSdkRoutingRouteReleaseFfiHandle(_handle);
  return result;
}

void heresdkVisualNavigationBindingslistofSdkRoutingRouteReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkVisualNavigationBindingslistofSdkRoutingRouteReleaseHandleNullable(handle);

final _heresdkVisualNavigationBindingslistofSdkRoutingSectionCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_Section_create_handle'));
final _heresdkVisualNavigationBindingslistofSdkRoutingSectionReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_Section_release_handle'));
final _heresdkVisualNavigationBindingslistofSdkRoutingSectionInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_Section_insert'));
final _heresdkVisualNavigationBindingslistofSdkRoutingSectionIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_Section_iterator'));
final _heresdkVisualNavigationBindingslistofSdkRoutingSectionIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_Section_iterator_release_handle'));
final _heresdkVisualNavigationBindingslistofSdkRoutingSectionIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_Section_iterator_is_valid'));
final _heresdkVisualNavigationBindingslistofSdkRoutingSectionIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_Section_iterator_increment'));
final _heresdkVisualNavigationBindingslistofSdkRoutingSectionIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_Section_iterator_get'));

Pointer<Void> heresdkVisualNavigationBindingslistofSdkRoutingSectionToFfi(List<Section> value) {
  final _result = _heresdkVisualNavigationBindingslistofSdkRoutingSectionCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingSectionToFfi(element);
    _heresdkVisualNavigationBindingslistofSdkRoutingSectionInsert(_result, _elementHandle);
    sdkRoutingSectionReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Section> heresdkVisualNavigationBindingslistofSdkRoutingSectionFromFfi(Pointer<Void> handle) {
  final result = List<Section>.empty(growable: true);
  final _iteratorHandle = _heresdkVisualNavigationBindingslistofSdkRoutingSectionIterator(handle);
  while (_heresdkVisualNavigationBindingslistofSdkRoutingSectionIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkVisualNavigationBindingslistofSdkRoutingSectionIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingSectionFromFfi(_elementHandle));
    } finally {
      sdkRoutingSectionReleaseFfiHandle(_elementHandle);
    }
    _heresdkVisualNavigationBindingslistofSdkRoutingSectionIteratorIncrement(_iteratorHandle);
  }
  _heresdkVisualNavigationBindingslistofSdkRoutingSectionIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkVisualNavigationBindingslistofSdkRoutingSectionReleaseFfiHandle(Pointer<Void> handle) => _heresdkVisualNavigationBindingslistofSdkRoutingSectionReleaseHandle(handle);

final _heresdkVisualNavigationBindingslistofSdkRoutingSectionCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_Section_create_handle_nullable'));
final _heresdkVisualNavigationBindingslistofSdkRoutingSectionReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_Section_release_handle_nullable'));
final _heresdkVisualNavigationBindingslistofSdkRoutingSectionGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_Section_get_value_nullable'));

Pointer<Void> heresdkVisualNavigationBindingslistofSdkRoutingSectionToFfiNullable(List<Section>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkVisualNavigationBindingslistofSdkRoutingSectionToFfi(value);
  final result = _heresdkVisualNavigationBindingslistofSdkRoutingSectionCreateHandleNullable(_handle);
  heresdkVisualNavigationBindingslistofSdkRoutingSectionReleaseFfiHandle(_handle);
  return result;
}

List<Section>? heresdkVisualNavigationBindingslistofSdkRoutingSectionFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkVisualNavigationBindingslistofSdkRoutingSectionGetValueNullable(handle);
  final result = heresdkVisualNavigationBindingslistofSdkRoutingSectionFromFfi(_handle);
  heresdkVisualNavigationBindingslistofSdkRoutingSectionReleaseFfiHandle(_handle);
  return result;
}

void heresdkVisualNavigationBindingslistofSdkRoutingSectionReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkVisualNavigationBindingslistofSdkRoutingSectionReleaseHandleNullable(handle);

final _heresdkVisualNavigationBindingslistofSdkRoutingSectionnoticeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_SectionNotice_create_handle'));
final _heresdkVisualNavigationBindingslistofSdkRoutingSectionnoticeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_SectionNotice_release_handle'));
final _heresdkVisualNavigationBindingslistofSdkRoutingSectionnoticeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_SectionNotice_insert'));
final _heresdkVisualNavigationBindingslistofSdkRoutingSectionnoticeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_SectionNotice_iterator'));
final _heresdkVisualNavigationBindingslistofSdkRoutingSectionnoticeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_SectionNotice_iterator_release_handle'));
final _heresdkVisualNavigationBindingslistofSdkRoutingSectionnoticeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_SectionNotice_iterator_is_valid'));
final _heresdkVisualNavigationBindingslistofSdkRoutingSectionnoticeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_SectionNotice_iterator_increment'));
final _heresdkVisualNavigationBindingslistofSdkRoutingSectionnoticeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_SectionNotice_iterator_get'));

Pointer<Void> heresdkVisualNavigationBindingslistofSdkRoutingSectionnoticeToFfi(List<SectionNotice> value) {
  final _result = _heresdkVisualNavigationBindingslistofSdkRoutingSectionnoticeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingSectionnoticeToFfi(element);
    _heresdkVisualNavigationBindingslistofSdkRoutingSectionnoticeInsert(_result, _elementHandle);
    sdkRoutingSectionnoticeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<SectionNotice> heresdkVisualNavigationBindingslistofSdkRoutingSectionnoticeFromFfi(Pointer<Void> handle) {
  final result = List<SectionNotice>.empty(growable: true);
  final _iteratorHandle = _heresdkVisualNavigationBindingslistofSdkRoutingSectionnoticeIterator(handle);
  while (_heresdkVisualNavigationBindingslistofSdkRoutingSectionnoticeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkVisualNavigationBindingslistofSdkRoutingSectionnoticeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingSectionnoticeFromFfi(_elementHandle));
    } finally {
      sdkRoutingSectionnoticeReleaseFfiHandle(_elementHandle);
    }
    _heresdkVisualNavigationBindingslistofSdkRoutingSectionnoticeIteratorIncrement(_iteratorHandle);
  }
  _heresdkVisualNavigationBindingslistofSdkRoutingSectionnoticeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkVisualNavigationBindingslistofSdkRoutingSectionnoticeReleaseFfiHandle(Pointer<Void> handle) => _heresdkVisualNavigationBindingslistofSdkRoutingSectionnoticeReleaseHandle(handle);

final _heresdkVisualNavigationBindingslistofSdkRoutingSectionnoticeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_SectionNotice_create_handle_nullable'));
final _heresdkVisualNavigationBindingslistofSdkRoutingSectionnoticeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_SectionNotice_release_handle_nullable'));
final _heresdkVisualNavigationBindingslistofSdkRoutingSectionnoticeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_SectionNotice_get_value_nullable'));

Pointer<Void> heresdkVisualNavigationBindingslistofSdkRoutingSectionnoticeToFfiNullable(List<SectionNotice>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkVisualNavigationBindingslistofSdkRoutingSectionnoticeToFfi(value);
  final result = _heresdkVisualNavigationBindingslistofSdkRoutingSectionnoticeCreateHandleNullable(_handle);
  heresdkVisualNavigationBindingslistofSdkRoutingSectionnoticeReleaseFfiHandle(_handle);
  return result;
}

List<SectionNotice>? heresdkVisualNavigationBindingslistofSdkRoutingSectionnoticeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkVisualNavigationBindingslistofSdkRoutingSectionnoticeGetValueNullable(handle);
  final result = heresdkVisualNavigationBindingslistofSdkRoutingSectionnoticeFromFfi(_handle);
  heresdkVisualNavigationBindingslistofSdkRoutingSectionnoticeReleaseFfiHandle(_handle);
  return result;
}

void heresdkVisualNavigationBindingslistofSdkRoutingSectionnoticeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkVisualNavigationBindingslistofSdkRoutingSectionnoticeReleaseHandleNullable(handle);

final _heresdkVisualNavigationBindingslistofSdkRoutingSegmentreferenceCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_SegmentReference_create_handle'));
final _heresdkVisualNavigationBindingslistofSdkRoutingSegmentreferenceReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_SegmentReference_release_handle'));
final _heresdkVisualNavigationBindingslistofSdkRoutingSegmentreferenceInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_SegmentReference_insert'));
final _heresdkVisualNavigationBindingslistofSdkRoutingSegmentreferenceIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_SegmentReference_iterator'));
final _heresdkVisualNavigationBindingslistofSdkRoutingSegmentreferenceIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_SegmentReference_iterator_release_handle'));
final _heresdkVisualNavigationBindingslistofSdkRoutingSegmentreferenceIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_SegmentReference_iterator_is_valid'));
final _heresdkVisualNavigationBindingslistofSdkRoutingSegmentreferenceIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_SegmentReference_iterator_increment'));
final _heresdkVisualNavigationBindingslistofSdkRoutingSegmentreferenceIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_SegmentReference_iterator_get'));

Pointer<Void> heresdkVisualNavigationBindingslistofSdkRoutingSegmentreferenceToFfi(List<SegmentReference> value) {
  final _result = _heresdkVisualNavigationBindingslistofSdkRoutingSegmentreferenceCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingSegmentreferenceToFfi(element);
    _heresdkVisualNavigationBindingslistofSdkRoutingSegmentreferenceInsert(_result, _elementHandle);
    sdkRoutingSegmentreferenceReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<SegmentReference> heresdkVisualNavigationBindingslistofSdkRoutingSegmentreferenceFromFfi(Pointer<Void> handle) {
  final result = List<SegmentReference>.empty(growable: true);
  final _iteratorHandle = _heresdkVisualNavigationBindingslistofSdkRoutingSegmentreferenceIterator(handle);
  while (_heresdkVisualNavigationBindingslistofSdkRoutingSegmentreferenceIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkVisualNavigationBindingslistofSdkRoutingSegmentreferenceIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingSegmentreferenceFromFfi(_elementHandle));
    } finally {
      sdkRoutingSegmentreferenceReleaseFfiHandle(_elementHandle);
    }
    _heresdkVisualNavigationBindingslistofSdkRoutingSegmentreferenceIteratorIncrement(_iteratorHandle);
  }
  _heresdkVisualNavigationBindingslistofSdkRoutingSegmentreferenceIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkVisualNavigationBindingslistofSdkRoutingSegmentreferenceReleaseFfiHandle(Pointer<Void> handle) => _heresdkVisualNavigationBindingslistofSdkRoutingSegmentreferenceReleaseHandle(handle);

final _heresdkVisualNavigationBindingslistofSdkRoutingSegmentreferenceCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_SegmentReference_create_handle_nullable'));
final _heresdkVisualNavigationBindingslistofSdkRoutingSegmentreferenceReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_SegmentReference_release_handle_nullable'));
final _heresdkVisualNavigationBindingslistofSdkRoutingSegmentreferenceGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_SegmentReference_get_value_nullable'));

Pointer<Void> heresdkVisualNavigationBindingslistofSdkRoutingSegmentreferenceToFfiNullable(List<SegmentReference>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkVisualNavigationBindingslistofSdkRoutingSegmentreferenceToFfi(value);
  final result = _heresdkVisualNavigationBindingslistofSdkRoutingSegmentreferenceCreateHandleNullable(_handle);
  heresdkVisualNavigationBindingslistofSdkRoutingSegmentreferenceReleaseFfiHandle(_handle);
  return result;
}

List<SegmentReference>? heresdkVisualNavigationBindingslistofSdkRoutingSegmentreferenceFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkVisualNavigationBindingslistofSdkRoutingSegmentreferenceGetValueNullable(handle);
  final result = heresdkVisualNavigationBindingslistofSdkRoutingSegmentreferenceFromFfi(_handle);
  heresdkVisualNavigationBindingslistofSdkRoutingSegmentreferenceReleaseFfiHandle(_handle);
  return result;
}

void heresdkVisualNavigationBindingslistofSdkRoutingSegmentreferenceReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkVisualNavigationBindingslistofSdkRoutingSegmentreferenceReleaseHandleNullable(handle);

final _heresdkVisualNavigationBindingslistofSdkRoutingSpanCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_Span_create_handle'));
final _heresdkVisualNavigationBindingslistofSdkRoutingSpanReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_Span_release_handle'));
final _heresdkVisualNavigationBindingslistofSdkRoutingSpanInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_Span_insert'));
final _heresdkVisualNavigationBindingslistofSdkRoutingSpanIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_Span_iterator'));
final _heresdkVisualNavigationBindingslistofSdkRoutingSpanIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_Span_iterator_release_handle'));
final _heresdkVisualNavigationBindingslistofSdkRoutingSpanIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_Span_iterator_is_valid'));
final _heresdkVisualNavigationBindingslistofSdkRoutingSpanIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_Span_iterator_increment'));
final _heresdkVisualNavigationBindingslistofSdkRoutingSpanIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_Span_iterator_get'));

Pointer<Void> heresdkVisualNavigationBindingslistofSdkRoutingSpanToFfi(List<Span> value) {
  final _result = _heresdkVisualNavigationBindingslistofSdkRoutingSpanCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingSpanToFfi(element);
    _heresdkVisualNavigationBindingslistofSdkRoutingSpanInsert(_result, _elementHandle);
    sdkRoutingSpanReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Span> heresdkVisualNavigationBindingslistofSdkRoutingSpanFromFfi(Pointer<Void> handle) {
  final result = List<Span>.empty(growable: true);
  final _iteratorHandle = _heresdkVisualNavigationBindingslistofSdkRoutingSpanIterator(handle);
  while (_heresdkVisualNavigationBindingslistofSdkRoutingSpanIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkVisualNavigationBindingslistofSdkRoutingSpanIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingSpanFromFfi(_elementHandle));
    } finally {
      sdkRoutingSpanReleaseFfiHandle(_elementHandle);
    }
    _heresdkVisualNavigationBindingslistofSdkRoutingSpanIteratorIncrement(_iteratorHandle);
  }
  _heresdkVisualNavigationBindingslistofSdkRoutingSpanIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkVisualNavigationBindingslistofSdkRoutingSpanReleaseFfiHandle(Pointer<Void> handle) => _heresdkVisualNavigationBindingslistofSdkRoutingSpanReleaseHandle(handle);

final _heresdkVisualNavigationBindingslistofSdkRoutingSpanCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_Span_create_handle_nullable'));
final _heresdkVisualNavigationBindingslistofSdkRoutingSpanReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_Span_release_handle_nullable'));
final _heresdkVisualNavigationBindingslistofSdkRoutingSpanGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_Span_get_value_nullable'));

Pointer<Void> heresdkVisualNavigationBindingslistofSdkRoutingSpanToFfiNullable(List<Span>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkVisualNavigationBindingslistofSdkRoutingSpanToFfi(value);
  final result = _heresdkVisualNavigationBindingslistofSdkRoutingSpanCreateHandleNullable(_handle);
  heresdkVisualNavigationBindingslistofSdkRoutingSpanReleaseFfiHandle(_handle);
  return result;
}

List<Span>? heresdkVisualNavigationBindingslistofSdkRoutingSpanFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkVisualNavigationBindingslistofSdkRoutingSpanGetValueNullable(handle);
  final result = heresdkVisualNavigationBindingslistofSdkRoutingSpanFromFfi(_handle);
  heresdkVisualNavigationBindingslistofSdkRoutingSpanReleaseFfiHandle(_handle);
  return result;
}

void heresdkVisualNavigationBindingslistofSdkRoutingSpanReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkVisualNavigationBindingslistofSdkRoutingSpanReleaseHandleNullable(handle);

final _heresdkVisualNavigationBindingslistofSdkRoutingTollCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_Toll_create_handle'));
final _heresdkVisualNavigationBindingslistofSdkRoutingTollReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_Toll_release_handle'));
final _heresdkVisualNavigationBindingslistofSdkRoutingTollInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_Toll_insert'));
final _heresdkVisualNavigationBindingslistofSdkRoutingTollIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_Toll_iterator'));
final _heresdkVisualNavigationBindingslistofSdkRoutingTollIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_Toll_iterator_release_handle'));
final _heresdkVisualNavigationBindingslistofSdkRoutingTollIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_Toll_iterator_is_valid'));
final _heresdkVisualNavigationBindingslistofSdkRoutingTollIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_Toll_iterator_increment'));
final _heresdkVisualNavigationBindingslistofSdkRoutingTollIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_Toll_iterator_get'));

Pointer<Void> heresdkVisualNavigationBindingslistofSdkRoutingTollToFfi(List<Toll> value) {
  final _result = _heresdkVisualNavigationBindingslistofSdkRoutingTollCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingTollToFfi(element);
    _heresdkVisualNavigationBindingslistofSdkRoutingTollInsert(_result, _elementHandle);
    sdkRoutingTollReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Toll> heresdkVisualNavigationBindingslistofSdkRoutingTollFromFfi(Pointer<Void> handle) {
  final result = List<Toll>.empty(growable: true);
  final _iteratorHandle = _heresdkVisualNavigationBindingslistofSdkRoutingTollIterator(handle);
  while (_heresdkVisualNavigationBindingslistofSdkRoutingTollIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkVisualNavigationBindingslistofSdkRoutingTollIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingTollFromFfi(_elementHandle));
    } finally {
      sdkRoutingTollReleaseFfiHandle(_elementHandle);
    }
    _heresdkVisualNavigationBindingslistofSdkRoutingTollIteratorIncrement(_iteratorHandle);
  }
  _heresdkVisualNavigationBindingslistofSdkRoutingTollIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkVisualNavigationBindingslistofSdkRoutingTollReleaseFfiHandle(Pointer<Void> handle) => _heresdkVisualNavigationBindingslistofSdkRoutingTollReleaseHandle(handle);

final _heresdkVisualNavigationBindingslistofSdkRoutingTollCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_Toll_create_handle_nullable'));
final _heresdkVisualNavigationBindingslistofSdkRoutingTollReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_Toll_release_handle_nullable'));
final _heresdkVisualNavigationBindingslistofSdkRoutingTollGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_Toll_get_value_nullable'));

Pointer<Void> heresdkVisualNavigationBindingslistofSdkRoutingTollToFfiNullable(List<Toll>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkVisualNavigationBindingslistofSdkRoutingTollToFfi(value);
  final result = _heresdkVisualNavigationBindingslistofSdkRoutingTollCreateHandleNullable(_handle);
  heresdkVisualNavigationBindingslistofSdkRoutingTollReleaseFfiHandle(_handle);
  return result;
}

List<Toll>? heresdkVisualNavigationBindingslistofSdkRoutingTollFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkVisualNavigationBindingslistofSdkRoutingTollGetValueNullable(handle);
  final result = heresdkVisualNavigationBindingslistofSdkRoutingTollFromFfi(_handle);
  heresdkVisualNavigationBindingslistofSdkRoutingTollReleaseFfiHandle(_handle);
  return result;
}

void heresdkVisualNavigationBindingslistofSdkRoutingTollReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkVisualNavigationBindingslistofSdkRoutingTollReleaseHandleNullable(handle);

final _heresdkVisualNavigationBindingslistofSdkRoutingTollfareCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_TollFare_create_handle'));
final _heresdkVisualNavigationBindingslistofSdkRoutingTollfareReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_TollFare_release_handle'));
final _heresdkVisualNavigationBindingslistofSdkRoutingTollfareInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_TollFare_insert'));
final _heresdkVisualNavigationBindingslistofSdkRoutingTollfareIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_TollFare_iterator'));
final _heresdkVisualNavigationBindingslistofSdkRoutingTollfareIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_TollFare_iterator_release_handle'));
final _heresdkVisualNavigationBindingslistofSdkRoutingTollfareIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_TollFare_iterator_is_valid'));
final _heresdkVisualNavigationBindingslistofSdkRoutingTollfareIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_TollFare_iterator_increment'));
final _heresdkVisualNavigationBindingslistofSdkRoutingTollfareIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_TollFare_iterator_get'));

Pointer<Void> heresdkVisualNavigationBindingslistofSdkRoutingTollfareToFfi(List<TollFare> value) {
  final _result = _heresdkVisualNavigationBindingslistofSdkRoutingTollfareCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingTollfareToFfi(element);
    _heresdkVisualNavigationBindingslistofSdkRoutingTollfareInsert(_result, _elementHandle);
    sdkRoutingTollfareReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<TollFare> heresdkVisualNavigationBindingslistofSdkRoutingTollfareFromFfi(Pointer<Void> handle) {
  final result = List<TollFare>.empty(growable: true);
  final _iteratorHandle = _heresdkVisualNavigationBindingslistofSdkRoutingTollfareIterator(handle);
  while (_heresdkVisualNavigationBindingslistofSdkRoutingTollfareIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkVisualNavigationBindingslistofSdkRoutingTollfareIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingTollfareFromFfi(_elementHandle));
    } finally {
      sdkRoutingTollfareReleaseFfiHandle(_elementHandle);
    }
    _heresdkVisualNavigationBindingslistofSdkRoutingTollfareIteratorIncrement(_iteratorHandle);
  }
  _heresdkVisualNavigationBindingslistofSdkRoutingTollfareIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkVisualNavigationBindingslistofSdkRoutingTollfareReleaseFfiHandle(Pointer<Void> handle) => _heresdkVisualNavigationBindingslistofSdkRoutingTollfareReleaseHandle(handle);

final _heresdkVisualNavigationBindingslistofSdkRoutingTollfareCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_TollFare_create_handle_nullable'));
final _heresdkVisualNavigationBindingslistofSdkRoutingTollfareReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_TollFare_release_handle_nullable'));
final _heresdkVisualNavigationBindingslistofSdkRoutingTollfareGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_TollFare_get_value_nullable'));

Pointer<Void> heresdkVisualNavigationBindingslistofSdkRoutingTollfareToFfiNullable(List<TollFare>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkVisualNavigationBindingslistofSdkRoutingTollfareToFfi(value);
  final result = _heresdkVisualNavigationBindingslistofSdkRoutingTollfareCreateHandleNullable(_handle);
  heresdkVisualNavigationBindingslistofSdkRoutingTollfareReleaseFfiHandle(_handle);
  return result;
}

List<TollFare>? heresdkVisualNavigationBindingslistofSdkRoutingTollfareFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkVisualNavigationBindingslistofSdkRoutingTollfareGetValueNullable(handle);
  final result = heresdkVisualNavigationBindingslistofSdkRoutingTollfareFromFfi(_handle);
  heresdkVisualNavigationBindingslistofSdkRoutingTollfareReleaseFfiHandle(_handle);
  return result;
}

void heresdkVisualNavigationBindingslistofSdkRoutingTollfareReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkVisualNavigationBindingslistofSdkRoutingTollfareReleaseHandleNullable(handle);

final _heresdkVisualNavigationBindingslistofSdkRoutingTrafficincidentonrouteCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_TrafficIncidentOnRoute_create_handle'));
final _heresdkVisualNavigationBindingslistofSdkRoutingTrafficincidentonrouteReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_TrafficIncidentOnRoute_release_handle'));
final _heresdkVisualNavigationBindingslistofSdkRoutingTrafficincidentonrouteInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_TrafficIncidentOnRoute_insert'));
final _heresdkVisualNavigationBindingslistofSdkRoutingTrafficincidentonrouteIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_TrafficIncidentOnRoute_iterator'));
final _heresdkVisualNavigationBindingslistofSdkRoutingTrafficincidentonrouteIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_TrafficIncidentOnRoute_iterator_release_handle'));
final _heresdkVisualNavigationBindingslistofSdkRoutingTrafficincidentonrouteIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_TrafficIncidentOnRoute_iterator_is_valid'));
final _heresdkVisualNavigationBindingslistofSdkRoutingTrafficincidentonrouteIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_TrafficIncidentOnRoute_iterator_increment'));
final _heresdkVisualNavigationBindingslistofSdkRoutingTrafficincidentonrouteIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_TrafficIncidentOnRoute_iterator_get'));

Pointer<Void> heresdkVisualNavigationBindingslistofSdkRoutingTrafficincidentonrouteToFfi(List<TrafficIncidentOnRoute> value) {
  final _result = _heresdkVisualNavigationBindingslistofSdkRoutingTrafficincidentonrouteCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingTrafficincidentonrouteToFfi(element);
    _heresdkVisualNavigationBindingslistofSdkRoutingTrafficincidentonrouteInsert(_result, _elementHandle);
    sdkRoutingTrafficincidentonrouteReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<TrafficIncidentOnRoute> heresdkVisualNavigationBindingslistofSdkRoutingTrafficincidentonrouteFromFfi(Pointer<Void> handle) {
  final result = List<TrafficIncidentOnRoute>.empty(growable: true);
  final _iteratorHandle = _heresdkVisualNavigationBindingslistofSdkRoutingTrafficincidentonrouteIterator(handle);
  while (_heresdkVisualNavigationBindingslistofSdkRoutingTrafficincidentonrouteIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkVisualNavigationBindingslistofSdkRoutingTrafficincidentonrouteIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingTrafficincidentonrouteFromFfi(_elementHandle));
    } finally {
      sdkRoutingTrafficincidentonrouteReleaseFfiHandle(_elementHandle);
    }
    _heresdkVisualNavigationBindingslistofSdkRoutingTrafficincidentonrouteIteratorIncrement(_iteratorHandle);
  }
  _heresdkVisualNavigationBindingslistofSdkRoutingTrafficincidentonrouteIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkVisualNavigationBindingslistofSdkRoutingTrafficincidentonrouteReleaseFfiHandle(Pointer<Void> handle) => _heresdkVisualNavigationBindingslistofSdkRoutingTrafficincidentonrouteReleaseHandle(handle);

final _heresdkVisualNavigationBindingslistofSdkRoutingTrafficincidentonrouteCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_TrafficIncidentOnRoute_create_handle_nullable'));
final _heresdkVisualNavigationBindingslistofSdkRoutingTrafficincidentonrouteReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_TrafficIncidentOnRoute_release_handle_nullable'));
final _heresdkVisualNavigationBindingslistofSdkRoutingTrafficincidentonrouteGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_TrafficIncidentOnRoute_get_value_nullable'));

Pointer<Void> heresdkVisualNavigationBindingslistofSdkRoutingTrafficincidentonrouteToFfiNullable(List<TrafficIncidentOnRoute>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkVisualNavigationBindingslistofSdkRoutingTrafficincidentonrouteToFfi(value);
  final result = _heresdkVisualNavigationBindingslistofSdkRoutingTrafficincidentonrouteCreateHandleNullable(_handle);
  heresdkVisualNavigationBindingslistofSdkRoutingTrafficincidentonrouteReleaseFfiHandle(_handle);
  return result;
}

List<TrafficIncidentOnRoute>? heresdkVisualNavigationBindingslistofSdkRoutingTrafficincidentonrouteFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkVisualNavigationBindingslistofSdkRoutingTrafficincidentonrouteGetValueNullable(handle);
  final result = heresdkVisualNavigationBindingslistofSdkRoutingTrafficincidentonrouteFromFfi(_handle);
  heresdkVisualNavigationBindingslistofSdkRoutingTrafficincidentonrouteReleaseFfiHandle(_handle);
  return result;
}

void heresdkVisualNavigationBindingslistofSdkRoutingTrafficincidentonrouteReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkVisualNavigationBindingslistofSdkRoutingTrafficincidentonrouteReleaseHandleNullable(handle);

final _heresdkVisualNavigationBindingslistofSdkRoutingTrafficspeedCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_TrafficSpeed_create_handle'));
final _heresdkVisualNavigationBindingslistofSdkRoutingTrafficspeedReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_TrafficSpeed_release_handle'));
final _heresdkVisualNavigationBindingslistofSdkRoutingTrafficspeedInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_TrafficSpeed_insert'));
final _heresdkVisualNavigationBindingslistofSdkRoutingTrafficspeedIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_TrafficSpeed_iterator'));
final _heresdkVisualNavigationBindingslistofSdkRoutingTrafficspeedIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_TrafficSpeed_iterator_release_handle'));
final _heresdkVisualNavigationBindingslistofSdkRoutingTrafficspeedIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_TrafficSpeed_iterator_is_valid'));
final _heresdkVisualNavigationBindingslistofSdkRoutingTrafficspeedIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_TrafficSpeed_iterator_increment'));
final _heresdkVisualNavigationBindingslistofSdkRoutingTrafficspeedIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_TrafficSpeed_iterator_get'));

Pointer<Void> heresdkVisualNavigationBindingslistofSdkRoutingTrafficspeedToFfi(List<TrafficSpeed> value) {
  final _result = _heresdkVisualNavigationBindingslistofSdkRoutingTrafficspeedCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingTrafficspeedToFfi(element);
    _heresdkVisualNavigationBindingslistofSdkRoutingTrafficspeedInsert(_result, _elementHandle);
    sdkRoutingTrafficspeedReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<TrafficSpeed> heresdkVisualNavigationBindingslistofSdkRoutingTrafficspeedFromFfi(Pointer<Void> handle) {
  final result = List<TrafficSpeed>.empty(growable: true);
  final _iteratorHandle = _heresdkVisualNavigationBindingslistofSdkRoutingTrafficspeedIterator(handle);
  while (_heresdkVisualNavigationBindingslistofSdkRoutingTrafficspeedIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkVisualNavigationBindingslistofSdkRoutingTrafficspeedIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingTrafficspeedFromFfi(_elementHandle));
    } finally {
      sdkRoutingTrafficspeedReleaseFfiHandle(_elementHandle);
    }
    _heresdkVisualNavigationBindingslistofSdkRoutingTrafficspeedIteratorIncrement(_iteratorHandle);
  }
  _heresdkVisualNavigationBindingslistofSdkRoutingTrafficspeedIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkVisualNavigationBindingslistofSdkRoutingTrafficspeedReleaseFfiHandle(Pointer<Void> handle) => _heresdkVisualNavigationBindingslistofSdkRoutingTrafficspeedReleaseHandle(handle);

final _heresdkVisualNavigationBindingslistofSdkRoutingTrafficspeedCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_TrafficSpeed_create_handle_nullable'));
final _heresdkVisualNavigationBindingslistofSdkRoutingTrafficspeedReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_TrafficSpeed_release_handle_nullable'));
final _heresdkVisualNavigationBindingslistofSdkRoutingTrafficspeedGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_TrafficSpeed_get_value_nullable'));

Pointer<Void> heresdkVisualNavigationBindingslistofSdkRoutingTrafficspeedToFfiNullable(List<TrafficSpeed>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkVisualNavigationBindingslistofSdkRoutingTrafficspeedToFfi(value);
  final result = _heresdkVisualNavigationBindingslistofSdkRoutingTrafficspeedCreateHandleNullable(_handle);
  heresdkVisualNavigationBindingslistofSdkRoutingTrafficspeedReleaseFfiHandle(_handle);
  return result;
}

List<TrafficSpeed>? heresdkVisualNavigationBindingslistofSdkRoutingTrafficspeedFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkVisualNavigationBindingslistofSdkRoutingTrafficspeedGetValueNullable(handle);
  final result = heresdkVisualNavigationBindingslistofSdkRoutingTrafficspeedFromFfi(_handle);
  heresdkVisualNavigationBindingslistofSdkRoutingTrafficspeedReleaseFfiHandle(_handle);
  return result;
}

void heresdkVisualNavigationBindingslistofSdkRoutingTrafficspeedReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkVisualNavigationBindingslistofSdkRoutingTrafficspeedReleaseHandleNullable(handle);

final _heresdkVisualNavigationBindingslistofSdkRoutingTransitincidentCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_TransitIncident_create_handle'));
final _heresdkVisualNavigationBindingslistofSdkRoutingTransitincidentReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_TransitIncident_release_handle'));
final _heresdkVisualNavigationBindingslistofSdkRoutingTransitincidentInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_TransitIncident_insert'));
final _heresdkVisualNavigationBindingslistofSdkRoutingTransitincidentIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_TransitIncident_iterator'));
final _heresdkVisualNavigationBindingslistofSdkRoutingTransitincidentIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_TransitIncident_iterator_release_handle'));
final _heresdkVisualNavigationBindingslistofSdkRoutingTransitincidentIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_TransitIncident_iterator_is_valid'));
final _heresdkVisualNavigationBindingslistofSdkRoutingTransitincidentIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_TransitIncident_iterator_increment'));
final _heresdkVisualNavigationBindingslistofSdkRoutingTransitincidentIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_TransitIncident_iterator_get'));

Pointer<Void> heresdkVisualNavigationBindingslistofSdkRoutingTransitincidentToFfi(List<TransitIncident> value) {
  final _result = _heresdkVisualNavigationBindingslistofSdkRoutingTransitincidentCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingTransitincidentToFfi(element);
    _heresdkVisualNavigationBindingslistofSdkRoutingTransitincidentInsert(_result, _elementHandle);
    sdkRoutingTransitincidentReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<TransitIncident> heresdkVisualNavigationBindingslistofSdkRoutingTransitincidentFromFfi(Pointer<Void> handle) {
  final result = List<TransitIncident>.empty(growable: true);
  final _iteratorHandle = _heresdkVisualNavigationBindingslistofSdkRoutingTransitincidentIterator(handle);
  while (_heresdkVisualNavigationBindingslistofSdkRoutingTransitincidentIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkVisualNavigationBindingslistofSdkRoutingTransitincidentIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingTransitincidentFromFfi(_elementHandle));
    } finally {
      sdkRoutingTransitincidentReleaseFfiHandle(_elementHandle);
    }
    _heresdkVisualNavigationBindingslistofSdkRoutingTransitincidentIteratorIncrement(_iteratorHandle);
  }
  _heresdkVisualNavigationBindingslistofSdkRoutingTransitincidentIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkVisualNavigationBindingslistofSdkRoutingTransitincidentReleaseFfiHandle(Pointer<Void> handle) => _heresdkVisualNavigationBindingslistofSdkRoutingTransitincidentReleaseHandle(handle);

final _heresdkVisualNavigationBindingslistofSdkRoutingTransitincidentCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_TransitIncident_create_handle_nullable'));
final _heresdkVisualNavigationBindingslistofSdkRoutingTransitincidentReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_TransitIncident_release_handle_nullable'));
final _heresdkVisualNavigationBindingslistofSdkRoutingTransitincidentGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_TransitIncident_get_value_nullable'));

Pointer<Void> heresdkVisualNavigationBindingslistofSdkRoutingTransitincidentToFfiNullable(List<TransitIncident>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkVisualNavigationBindingslistofSdkRoutingTransitincidentToFfi(value);
  final result = _heresdkVisualNavigationBindingslistofSdkRoutingTransitincidentCreateHandleNullable(_handle);
  heresdkVisualNavigationBindingslistofSdkRoutingTransitincidentReleaseFfiHandle(_handle);
  return result;
}

List<TransitIncident>? heresdkVisualNavigationBindingslistofSdkRoutingTransitincidentFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkVisualNavigationBindingslistofSdkRoutingTransitincidentGetValueNullable(handle);
  final result = heresdkVisualNavigationBindingslistofSdkRoutingTransitincidentFromFfi(_handle);
  heresdkVisualNavigationBindingslistofSdkRoutingTransitincidentReleaseFfiHandle(_handle);
  return result;
}

void heresdkVisualNavigationBindingslistofSdkRoutingTransitincidentReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkVisualNavigationBindingslistofSdkRoutingTransitincidentReleaseHandleNullable(handle);

final _heresdkVisualNavigationBindingslistofSdkRoutingTransitmodeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_TransitMode_create_handle'));
final _heresdkVisualNavigationBindingslistofSdkRoutingTransitmodeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_TransitMode_release_handle'));
final _heresdkVisualNavigationBindingslistofSdkRoutingTransitmodeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_TransitMode_insert'));
final _heresdkVisualNavigationBindingslistofSdkRoutingTransitmodeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_TransitMode_iterator'));
final _heresdkVisualNavigationBindingslistofSdkRoutingTransitmodeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_TransitMode_iterator_release_handle'));
final _heresdkVisualNavigationBindingslistofSdkRoutingTransitmodeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_TransitMode_iterator_is_valid'));
final _heresdkVisualNavigationBindingslistofSdkRoutingTransitmodeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_TransitMode_iterator_increment'));
final _heresdkVisualNavigationBindingslistofSdkRoutingTransitmodeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_TransitMode_iterator_get'));

Pointer<Void> heresdkVisualNavigationBindingslistofSdkRoutingTransitmodeToFfi(List<TransitMode> value) {
  final _result = _heresdkVisualNavigationBindingslistofSdkRoutingTransitmodeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingTransitmodeToFfi(element);
    _heresdkVisualNavigationBindingslistofSdkRoutingTransitmodeInsert(_result, _elementHandle);
    sdkRoutingTransitmodeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<TransitMode> heresdkVisualNavigationBindingslistofSdkRoutingTransitmodeFromFfi(Pointer<Void> handle) {
  final result = List<TransitMode>.empty(growable: true);
  final _iteratorHandle = _heresdkVisualNavigationBindingslistofSdkRoutingTransitmodeIterator(handle);
  while (_heresdkVisualNavigationBindingslistofSdkRoutingTransitmodeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkVisualNavigationBindingslistofSdkRoutingTransitmodeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingTransitmodeFromFfi(_elementHandle));
    } finally {
      sdkRoutingTransitmodeReleaseFfiHandle(_elementHandle);
    }
    _heresdkVisualNavigationBindingslistofSdkRoutingTransitmodeIteratorIncrement(_iteratorHandle);
  }
  _heresdkVisualNavigationBindingslistofSdkRoutingTransitmodeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkVisualNavigationBindingslistofSdkRoutingTransitmodeReleaseFfiHandle(Pointer<Void> handle) => _heresdkVisualNavigationBindingslistofSdkRoutingTransitmodeReleaseHandle(handle);

final _heresdkVisualNavigationBindingslistofSdkRoutingTransitmodeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_TransitMode_create_handle_nullable'));
final _heresdkVisualNavigationBindingslistofSdkRoutingTransitmodeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_TransitMode_release_handle_nullable'));
final _heresdkVisualNavigationBindingslistofSdkRoutingTransitmodeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_TransitMode_get_value_nullable'));

Pointer<Void> heresdkVisualNavigationBindingslistofSdkRoutingTransitmodeToFfiNullable(List<TransitMode>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkVisualNavigationBindingslistofSdkRoutingTransitmodeToFfi(value);
  final result = _heresdkVisualNavigationBindingslistofSdkRoutingTransitmodeCreateHandleNullable(_handle);
  heresdkVisualNavigationBindingslistofSdkRoutingTransitmodeReleaseFfiHandle(_handle);
  return result;
}

List<TransitMode>? heresdkVisualNavigationBindingslistofSdkRoutingTransitmodeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkVisualNavigationBindingslistofSdkRoutingTransitmodeGetValueNullable(handle);
  final result = heresdkVisualNavigationBindingslistofSdkRoutingTransitmodeFromFfi(_handle);
  heresdkVisualNavigationBindingslistofSdkRoutingTransitmodeReleaseFfiHandle(_handle);
  return result;
}

void heresdkVisualNavigationBindingslistofSdkRoutingTransitmodeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkVisualNavigationBindingslistofSdkRoutingTransitmodeReleaseHandleNullable(handle);

final _heresdkVisualNavigationBindingslistofSdkRoutingTransitstopCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_TransitStop_create_handle'));
final _heresdkVisualNavigationBindingslistofSdkRoutingTransitstopReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_TransitStop_release_handle'));
final _heresdkVisualNavigationBindingslistofSdkRoutingTransitstopInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_TransitStop_insert'));
final _heresdkVisualNavigationBindingslistofSdkRoutingTransitstopIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_TransitStop_iterator'));
final _heresdkVisualNavigationBindingslistofSdkRoutingTransitstopIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_TransitStop_iterator_release_handle'));
final _heresdkVisualNavigationBindingslistofSdkRoutingTransitstopIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_TransitStop_iterator_is_valid'));
final _heresdkVisualNavigationBindingslistofSdkRoutingTransitstopIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_TransitStop_iterator_increment'));
final _heresdkVisualNavigationBindingslistofSdkRoutingTransitstopIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_TransitStop_iterator_get'));

Pointer<Void> heresdkVisualNavigationBindingslistofSdkRoutingTransitstopToFfi(List<TransitStop> value) {
  final _result = _heresdkVisualNavigationBindingslistofSdkRoutingTransitstopCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingTransitstopToFfi(element);
    _heresdkVisualNavigationBindingslistofSdkRoutingTransitstopInsert(_result, _elementHandle);
    sdkRoutingTransitstopReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<TransitStop> heresdkVisualNavigationBindingslistofSdkRoutingTransitstopFromFfi(Pointer<Void> handle) {
  final result = List<TransitStop>.empty(growable: true);
  final _iteratorHandle = _heresdkVisualNavigationBindingslistofSdkRoutingTransitstopIterator(handle);
  while (_heresdkVisualNavigationBindingslistofSdkRoutingTransitstopIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkVisualNavigationBindingslistofSdkRoutingTransitstopIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingTransitstopFromFfi(_elementHandle));
    } finally {
      sdkRoutingTransitstopReleaseFfiHandle(_elementHandle);
    }
    _heresdkVisualNavigationBindingslistofSdkRoutingTransitstopIteratorIncrement(_iteratorHandle);
  }
  _heresdkVisualNavigationBindingslistofSdkRoutingTransitstopIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkVisualNavigationBindingslistofSdkRoutingTransitstopReleaseFfiHandle(Pointer<Void> handle) => _heresdkVisualNavigationBindingslistofSdkRoutingTransitstopReleaseHandle(handle);

final _heresdkVisualNavigationBindingslistofSdkRoutingTransitstopCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_TransitStop_create_handle_nullable'));
final _heresdkVisualNavigationBindingslistofSdkRoutingTransitstopReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_TransitStop_release_handle_nullable'));
final _heresdkVisualNavigationBindingslistofSdkRoutingTransitstopGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_TransitStop_get_value_nullable'));

Pointer<Void> heresdkVisualNavigationBindingslistofSdkRoutingTransitstopToFfiNullable(List<TransitStop>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkVisualNavigationBindingslistofSdkRoutingTransitstopToFfi(value);
  final result = _heresdkVisualNavigationBindingslistofSdkRoutingTransitstopCreateHandleNullable(_handle);
  heresdkVisualNavigationBindingslistofSdkRoutingTransitstopReleaseFfiHandle(_handle);
  return result;
}

List<TransitStop>? heresdkVisualNavigationBindingslistofSdkRoutingTransitstopFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkVisualNavigationBindingslistofSdkRoutingTransitstopGetValueNullable(handle);
  final result = heresdkVisualNavigationBindingslistofSdkRoutingTransitstopFromFfi(_handle);
  heresdkVisualNavigationBindingslistofSdkRoutingTransitstopReleaseFfiHandle(_handle);
  return result;
}

void heresdkVisualNavigationBindingslistofSdkRoutingTransitstopReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkVisualNavigationBindingslistofSdkRoutingTransitstopReleaseHandleNullable(handle);

final _heresdkVisualNavigationBindingslistofSdkRoutingWaypointCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_Waypoint_create_handle'));
final _heresdkVisualNavigationBindingslistofSdkRoutingWaypointReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_Waypoint_release_handle'));
final _heresdkVisualNavigationBindingslistofSdkRoutingWaypointInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_Waypoint_insert'));
final _heresdkVisualNavigationBindingslistofSdkRoutingWaypointIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_Waypoint_iterator'));
final _heresdkVisualNavigationBindingslistofSdkRoutingWaypointIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_Waypoint_iterator_release_handle'));
final _heresdkVisualNavigationBindingslistofSdkRoutingWaypointIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_Waypoint_iterator_is_valid'));
final _heresdkVisualNavigationBindingslistofSdkRoutingWaypointIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_Waypoint_iterator_increment'));
final _heresdkVisualNavigationBindingslistofSdkRoutingWaypointIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_Waypoint_iterator_get'));

Pointer<Void> heresdkVisualNavigationBindingslistofSdkRoutingWaypointToFfi(List<Waypoint> value) {
  final _result = _heresdkVisualNavigationBindingslistofSdkRoutingWaypointCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingWaypointToFfi(element);
    _heresdkVisualNavigationBindingslistofSdkRoutingWaypointInsert(_result, _elementHandle);
    sdkRoutingWaypointReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Waypoint> heresdkVisualNavigationBindingslistofSdkRoutingWaypointFromFfi(Pointer<Void> handle) {
  final result = List<Waypoint>.empty(growable: true);
  final _iteratorHandle = _heresdkVisualNavigationBindingslistofSdkRoutingWaypointIterator(handle);
  while (_heresdkVisualNavigationBindingslistofSdkRoutingWaypointIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkVisualNavigationBindingslistofSdkRoutingWaypointIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingWaypointFromFfi(_elementHandle));
    } finally {
      sdkRoutingWaypointReleaseFfiHandle(_elementHandle);
    }
    _heresdkVisualNavigationBindingslistofSdkRoutingWaypointIteratorIncrement(_iteratorHandle);
  }
  _heresdkVisualNavigationBindingslistofSdkRoutingWaypointIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkVisualNavigationBindingslistofSdkRoutingWaypointReleaseFfiHandle(Pointer<Void> handle) => _heresdkVisualNavigationBindingslistofSdkRoutingWaypointReleaseHandle(handle);

final _heresdkVisualNavigationBindingslistofSdkRoutingWaypointCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_Waypoint_create_handle_nullable'));
final _heresdkVisualNavigationBindingslistofSdkRoutingWaypointReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_Waypoint_release_handle_nullable'));
final _heresdkVisualNavigationBindingslistofSdkRoutingWaypointGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_Waypoint_get_value_nullable'));

Pointer<Void> heresdkVisualNavigationBindingslistofSdkRoutingWaypointToFfiNullable(List<Waypoint>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkVisualNavigationBindingslistofSdkRoutingWaypointToFfi(value);
  final result = _heresdkVisualNavigationBindingslistofSdkRoutingWaypointCreateHandleNullable(_handle);
  heresdkVisualNavigationBindingslistofSdkRoutingWaypointReleaseFfiHandle(_handle);
  return result;
}

List<Waypoint>? heresdkVisualNavigationBindingslistofSdkRoutingWaypointFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkVisualNavigationBindingslistofSdkRoutingWaypointGetValueNullable(handle);
  final result = heresdkVisualNavigationBindingslistofSdkRoutingWaypointFromFfi(_handle);
  heresdkVisualNavigationBindingslistofSdkRoutingWaypointReleaseFfiHandle(_handle);
  return result;
}

void heresdkVisualNavigationBindingslistofSdkRoutingWaypointReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkVisualNavigationBindingslistofSdkRoutingWaypointReleaseHandleNullable(handle);

final _heresdkVisualNavigationBindingslistofSdkRoutingZonecategoryCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_ZoneCategory_create_handle'));
final _heresdkVisualNavigationBindingslistofSdkRoutingZonecategoryReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_ZoneCategory_release_handle'));
final _heresdkVisualNavigationBindingslistofSdkRoutingZonecategoryInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_ZoneCategory_insert'));
final _heresdkVisualNavigationBindingslistofSdkRoutingZonecategoryIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_ZoneCategory_iterator'));
final _heresdkVisualNavigationBindingslistofSdkRoutingZonecategoryIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_ZoneCategory_iterator_release_handle'));
final _heresdkVisualNavigationBindingslistofSdkRoutingZonecategoryIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_ZoneCategory_iterator_is_valid'));
final _heresdkVisualNavigationBindingslistofSdkRoutingZonecategoryIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_ZoneCategory_iterator_increment'));
final _heresdkVisualNavigationBindingslistofSdkRoutingZonecategoryIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_ZoneCategory_iterator_get'));

Pointer<Void> heresdkVisualNavigationBindingslistofSdkRoutingZonecategoryToFfi(List<ZoneCategory> value) {
  final _result = _heresdkVisualNavigationBindingslistofSdkRoutingZonecategoryCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingZonecategoryToFfi(element);
    _heresdkVisualNavigationBindingslistofSdkRoutingZonecategoryInsert(_result, _elementHandle);
    sdkRoutingZonecategoryReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<ZoneCategory> heresdkVisualNavigationBindingslistofSdkRoutingZonecategoryFromFfi(Pointer<Void> handle) {
  final result = List<ZoneCategory>.empty(growable: true);
  final _iteratorHandle = _heresdkVisualNavigationBindingslistofSdkRoutingZonecategoryIterator(handle);
  while (_heresdkVisualNavigationBindingslistofSdkRoutingZonecategoryIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkVisualNavigationBindingslistofSdkRoutingZonecategoryIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingZonecategoryFromFfi(_elementHandle));
    } finally {
      sdkRoutingZonecategoryReleaseFfiHandle(_elementHandle);
    }
    _heresdkVisualNavigationBindingslistofSdkRoutingZonecategoryIteratorIncrement(_iteratorHandle);
  }
  _heresdkVisualNavigationBindingslistofSdkRoutingZonecategoryIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkVisualNavigationBindingslistofSdkRoutingZonecategoryReleaseFfiHandle(Pointer<Void> handle) => _heresdkVisualNavigationBindingslistofSdkRoutingZonecategoryReleaseHandle(handle);

final _heresdkVisualNavigationBindingslistofSdkRoutingZonecategoryCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_ZoneCategory_create_handle_nullable'));
final _heresdkVisualNavigationBindingslistofSdkRoutingZonecategoryReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_ZoneCategory_release_handle_nullable'));
final _heresdkVisualNavigationBindingslistofSdkRoutingZonecategoryGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_routing_ZoneCategory_get_value_nullable'));

Pointer<Void> heresdkVisualNavigationBindingslistofSdkRoutingZonecategoryToFfiNullable(List<ZoneCategory>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkVisualNavigationBindingslistofSdkRoutingZonecategoryToFfi(value);
  final result = _heresdkVisualNavigationBindingslistofSdkRoutingZonecategoryCreateHandleNullable(_handle);
  heresdkVisualNavigationBindingslistofSdkRoutingZonecategoryReleaseFfiHandle(_handle);
  return result;
}

List<ZoneCategory>? heresdkVisualNavigationBindingslistofSdkRoutingZonecategoryFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkVisualNavigationBindingslistofSdkRoutingZonecategoryGetValueNullable(handle);
  final result = heresdkVisualNavigationBindingslistofSdkRoutingZonecategoryFromFfi(_handle);
  heresdkVisualNavigationBindingslistofSdkRoutingZonecategoryReleaseFfiHandle(_handle);
  return result;
}

void heresdkVisualNavigationBindingslistofSdkRoutingZonecategoryReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkVisualNavigationBindingslistofSdkRoutingZonecategoryReleaseHandleNullable(handle);

final _heresdkVisualNavigationBindingslistofSdkTransportHazardousmaterialCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_transport_HazardousMaterial_create_handle'));
final _heresdkVisualNavigationBindingslistofSdkTransportHazardousmaterialReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_transport_HazardousMaterial_release_handle'));
final _heresdkVisualNavigationBindingslistofSdkTransportHazardousmaterialInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_transport_HazardousMaterial_insert'));
final _heresdkVisualNavigationBindingslistofSdkTransportHazardousmaterialIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_transport_HazardousMaterial_iterator'));
final _heresdkVisualNavigationBindingslistofSdkTransportHazardousmaterialIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_transport_HazardousMaterial_iterator_release_handle'));
final _heresdkVisualNavigationBindingslistofSdkTransportHazardousmaterialIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_transport_HazardousMaterial_iterator_is_valid'));
final _heresdkVisualNavigationBindingslistofSdkTransportHazardousmaterialIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_transport_HazardousMaterial_iterator_increment'));
final _heresdkVisualNavigationBindingslistofSdkTransportHazardousmaterialIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_transport_HazardousMaterial_iterator_get'));

Pointer<Void> heresdkVisualNavigationBindingslistofSdkTransportHazardousmaterialToFfi(List<HazardousMaterial> value) {
  final _result = _heresdkVisualNavigationBindingslistofSdkTransportHazardousmaterialCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkTransportHazardousmaterialToFfi(element);
    _heresdkVisualNavigationBindingslistofSdkTransportHazardousmaterialInsert(_result, _elementHandle);
    sdkTransportHazardousmaterialReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<HazardousMaterial> heresdkVisualNavigationBindingslistofSdkTransportHazardousmaterialFromFfi(Pointer<Void> handle) {
  final result = List<HazardousMaterial>.empty(growable: true);
  final _iteratorHandle = _heresdkVisualNavigationBindingslistofSdkTransportHazardousmaterialIterator(handle);
  while (_heresdkVisualNavigationBindingslistofSdkTransportHazardousmaterialIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkVisualNavigationBindingslistofSdkTransportHazardousmaterialIteratorGet(_iteratorHandle);
    try {
      result.add(sdkTransportHazardousmaterialFromFfi(_elementHandle));
    } finally {
      sdkTransportHazardousmaterialReleaseFfiHandle(_elementHandle);
    }
    _heresdkVisualNavigationBindingslistofSdkTransportHazardousmaterialIteratorIncrement(_iteratorHandle);
  }
  _heresdkVisualNavigationBindingslistofSdkTransportHazardousmaterialIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkVisualNavigationBindingslistofSdkTransportHazardousmaterialReleaseFfiHandle(Pointer<Void> handle) => _heresdkVisualNavigationBindingslistofSdkTransportHazardousmaterialReleaseHandle(handle);

final _heresdkVisualNavigationBindingslistofSdkTransportHazardousmaterialCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_transport_HazardousMaterial_create_handle_nullable'));
final _heresdkVisualNavigationBindingslistofSdkTransportHazardousmaterialReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_transport_HazardousMaterial_release_handle_nullable'));
final _heresdkVisualNavigationBindingslistofSdkTransportHazardousmaterialGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsListOf_sdk_transport_HazardousMaterial_get_value_nullable'));

Pointer<Void> heresdkVisualNavigationBindingslistofSdkTransportHazardousmaterialToFfiNullable(List<HazardousMaterial>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkVisualNavigationBindingslistofSdkTransportHazardousmaterialToFfi(value);
  final result = _heresdkVisualNavigationBindingslistofSdkTransportHazardousmaterialCreateHandleNullable(_handle);
  heresdkVisualNavigationBindingslistofSdkTransportHazardousmaterialReleaseFfiHandle(_handle);
  return result;
}

List<HazardousMaterial>? heresdkVisualNavigationBindingslistofSdkTransportHazardousmaterialFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkVisualNavigationBindingslistofSdkTransportHazardousmaterialGetValueNullable(handle);
  final result = heresdkVisualNavigationBindingslistofSdkTransportHazardousmaterialFromFfi(_handle);
  heresdkVisualNavigationBindingslistofSdkTransportHazardousmaterialReleaseFfiHandle(_handle);
  return result;
}

void heresdkVisualNavigationBindingslistofSdkTransportHazardousmaterialReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkVisualNavigationBindingslistofSdkTransportHazardousmaterialReleaseHandleNullable(handle);

final _heresdkVisualNavigationBindingsmapofDoubleToDoubleCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_visual_navigation_bindingsMapOf_Double_to_Double_create_handle'));
final _heresdkVisualNavigationBindingsmapofDoubleToDoubleReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsMapOf_Double_to_Double_release_handle'));
final _heresdkVisualNavigationBindingsmapofDoubleToDoublePut = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Double, Double),
    void Function(Pointer<Void>, double, double)
  >('here_sdk_heresdk_visual_navigation_bindingsMapOf_Double_to_Double_put'));
final _heresdkVisualNavigationBindingsmapofDoubleToDoubleIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsMapOf_Double_to_Double_iterator'));
final _heresdkVisualNavigationBindingsmapofDoubleToDoubleIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsMapOf_Double_to_Double_iterator_release_handle'));
final _heresdkVisualNavigationBindingsmapofDoubleToDoubleIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsMapOf_Double_to_Double_iterator_is_valid'));
final _heresdkVisualNavigationBindingsmapofDoubleToDoubleIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsMapOf_Double_to_Double_iterator_increment'));
final _heresdkVisualNavigationBindingsmapofDoubleToDoubleIteratorGetKey = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Double Function(Pointer<Void>),
    double Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsMapOf_Double_to_Double_iterator_get_key'));
final _heresdkVisualNavigationBindingsmapofDoubleToDoubleIteratorGetValue = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Double Function(Pointer<Void>),
    double Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsMapOf_Double_to_Double_iterator_get_value'));

Pointer<Void> heresdkVisualNavigationBindingsmapofDoubleToDoubleToFfi(Map<double, double> value) {
  final _result = _heresdkVisualNavigationBindingsmapofDoubleToDoubleCreateHandle();
  for (final entry in value.entries) {
    final _keyHandle = (entry.key);
    final _valueHandle = (entry.value);
    _heresdkVisualNavigationBindingsmapofDoubleToDoublePut(_result, _keyHandle, _valueHandle);
    
    
  }
  return _result;
}

Map<double, double> heresdkVisualNavigationBindingsmapofDoubleToDoubleFromFfi(Pointer<Void> handle) {
  final result = Map<double, double>();
  final _iteratorHandle = _heresdkVisualNavigationBindingsmapofDoubleToDoubleIterator(handle);
  while (_heresdkVisualNavigationBindingsmapofDoubleToDoubleIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _keyHandle = _heresdkVisualNavigationBindingsmapofDoubleToDoubleIteratorGetKey(_iteratorHandle);
    final _valueHandle = _heresdkVisualNavigationBindingsmapofDoubleToDoubleIteratorGetValue(_iteratorHandle);
    try {
      result[(_keyHandle)] =
        (_valueHandle);
    } finally {
      
      
    }
    _heresdkVisualNavigationBindingsmapofDoubleToDoubleIteratorIncrement(_iteratorHandle);
  }
  _heresdkVisualNavigationBindingsmapofDoubleToDoubleIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkVisualNavigationBindingsmapofDoubleToDoubleReleaseFfiHandle(Pointer<Void> handle) => _heresdkVisualNavigationBindingsmapofDoubleToDoubleReleaseHandle(handle);

final _heresdkVisualNavigationBindingsmapofDoubleToDoubleCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsMapOf_Double_to_Double_create_handle_nullable'));
final _heresdkVisualNavigationBindingsmapofDoubleToDoubleReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsMapOf_Double_to_Double_release_handle_nullable'));
final _heresdkVisualNavigationBindingsmapofDoubleToDoubleGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsMapOf_Double_to_Double_get_value_nullable'));

Pointer<Void> heresdkVisualNavigationBindingsmapofDoubleToDoubleToFfiNullable(Map<double, double>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkVisualNavigationBindingsmapofDoubleToDoubleToFfi(value);
  final result = _heresdkVisualNavigationBindingsmapofDoubleToDoubleCreateHandleNullable(_handle);
  heresdkVisualNavigationBindingsmapofDoubleToDoubleReleaseFfiHandle(_handle);
  return result;
}

Map<double, double>? heresdkVisualNavigationBindingsmapofDoubleToDoubleFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkVisualNavigationBindingsmapofDoubleToDoubleGetValueNullable(handle);
  final result = heresdkVisualNavigationBindingsmapofDoubleToDoubleFromFfi(_handle);
  heresdkVisualNavigationBindingsmapofDoubleToDoubleReleaseFfiHandle(_handle);
  return result;
}

void heresdkVisualNavigationBindingsmapofDoubleToDoubleReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkVisualNavigationBindingsmapofDoubleToDoubleReleaseHandleNullable(handle);

final _heresdkVisualNavigationBindingsmapofIntToDoubleCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_visual_navigation_bindingsMapOf_Int_to_Double_create_handle'));
final _heresdkVisualNavigationBindingsmapofIntToDoubleReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsMapOf_Int_to_Double_release_handle'));
final _heresdkVisualNavigationBindingsmapofIntToDoublePut = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Int32, Double),
    void Function(Pointer<Void>, int, double)
  >('here_sdk_heresdk_visual_navigation_bindingsMapOf_Int_to_Double_put'));
final _heresdkVisualNavigationBindingsmapofIntToDoubleIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsMapOf_Int_to_Double_iterator'));
final _heresdkVisualNavigationBindingsmapofIntToDoubleIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsMapOf_Int_to_Double_iterator_release_handle'));
final _heresdkVisualNavigationBindingsmapofIntToDoubleIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsMapOf_Int_to_Double_iterator_is_valid'));
final _heresdkVisualNavigationBindingsmapofIntToDoubleIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsMapOf_Int_to_Double_iterator_increment'));
final _heresdkVisualNavigationBindingsmapofIntToDoubleIteratorGetKey = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsMapOf_Int_to_Double_iterator_get_key'));
final _heresdkVisualNavigationBindingsmapofIntToDoubleIteratorGetValue = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Double Function(Pointer<Void>),
    double Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsMapOf_Int_to_Double_iterator_get_value'));

Pointer<Void> heresdkVisualNavigationBindingsmapofIntToDoubleToFfi(Map<int, double> value) {
  final _result = _heresdkVisualNavigationBindingsmapofIntToDoubleCreateHandle();
  for (final entry in value.entries) {
    final _keyHandle = (entry.key);
    final _valueHandle = (entry.value);
    _heresdkVisualNavigationBindingsmapofIntToDoublePut(_result, _keyHandle, _valueHandle);
    
    
  }
  return _result;
}

Map<int, double> heresdkVisualNavigationBindingsmapofIntToDoubleFromFfi(Pointer<Void> handle) {
  final result = Map<int, double>();
  final _iteratorHandle = _heresdkVisualNavigationBindingsmapofIntToDoubleIterator(handle);
  while (_heresdkVisualNavigationBindingsmapofIntToDoubleIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _keyHandle = _heresdkVisualNavigationBindingsmapofIntToDoubleIteratorGetKey(_iteratorHandle);
    final _valueHandle = _heresdkVisualNavigationBindingsmapofIntToDoubleIteratorGetValue(_iteratorHandle);
    try {
      result[(_keyHandle)] =
        (_valueHandle);
    } finally {
      
      
    }
    _heresdkVisualNavigationBindingsmapofIntToDoubleIteratorIncrement(_iteratorHandle);
  }
  _heresdkVisualNavigationBindingsmapofIntToDoubleIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkVisualNavigationBindingsmapofIntToDoubleReleaseFfiHandle(Pointer<Void> handle) => _heresdkVisualNavigationBindingsmapofIntToDoubleReleaseHandle(handle);

final _heresdkVisualNavigationBindingsmapofIntToDoubleCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsMapOf_Int_to_Double_create_handle_nullable'));
final _heresdkVisualNavigationBindingsmapofIntToDoubleReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsMapOf_Int_to_Double_release_handle_nullable'));
final _heresdkVisualNavigationBindingsmapofIntToDoubleGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsMapOf_Int_to_Double_get_value_nullable'));

Pointer<Void> heresdkVisualNavigationBindingsmapofIntToDoubleToFfiNullable(Map<int, double>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkVisualNavigationBindingsmapofIntToDoubleToFfi(value);
  final result = _heresdkVisualNavigationBindingsmapofIntToDoubleCreateHandleNullable(_handle);
  heresdkVisualNavigationBindingsmapofIntToDoubleReleaseFfiHandle(_handle);
  return result;
}

Map<int, double>? heresdkVisualNavigationBindingsmapofIntToDoubleFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkVisualNavigationBindingsmapofIntToDoubleGetValueNullable(handle);
  final result = heresdkVisualNavigationBindingsmapofIntToDoubleFromFfi(_handle);
  heresdkVisualNavigationBindingsmapofIntToDoubleReleaseFfiHandle(_handle);
  return result;
}

void heresdkVisualNavigationBindingsmapofIntToDoubleReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkVisualNavigationBindingsmapofIntToDoubleReleaseHandleNullable(handle);

final _heresdkVisualNavigationBindingsmapofSdkCoreEngineEnginebaseurlToStringCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_visual_navigation_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_create_handle'));
final _heresdkVisualNavigationBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_release_handle'));
final _heresdkVisualNavigationBindingsmapofSdkCoreEngineEnginebaseurlToStringPut = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32, Pointer<Void>),
    void Function(Pointer<Void>, int, Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_put'));
final _heresdkVisualNavigationBindingsmapofSdkCoreEngineEnginebaseurlToStringIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_iterator'));
final _heresdkVisualNavigationBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_iterator_release_handle'));
final _heresdkVisualNavigationBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_iterator_is_valid'));
final _heresdkVisualNavigationBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_iterator_increment'));
final _heresdkVisualNavigationBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorGetKey = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_iterator_get_key'));
final _heresdkVisualNavigationBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorGetValue = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_visual_navigation_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_iterator_get_value'));

Pointer<Void> heresdkVisualNavigationBindingsmapofSdkCoreEngineEnginebaseurlToStringToFfi(Map<EngineBaseURL, String> value) {
  final _result = _heresdkVisualNavigationBindingsmapofSdkCoreEngineEnginebaseurlToStringCreateHandle();
  for (final entry in value.entries) {
    final _keyHandle = sdkCoreEngineEnginebaseurlToFfi(entry.key);
    final _valueHandle = stringToFfi(entry.value);
    _heresdkVisualNavigationBindingsmapofSdkCoreEngineEnginebaseurlToStringPut(_result, _keyHandle, _valueHandle);
    sdkCoreEngineEnginebaseurlReleaseFfiHandle(_keyHandle);
    stringReleaseFfiHandle(_valueHandle);
  }
  return _result;
}

Map<EngineBaseURL, String> heresdkVisualNavigationBindingsmapofSdkCoreEngineEnginebaseurlToStringFromFfi(Pointer<Void> handle) {
  final result = Map<EngineBaseURL, String>();
  final _iteratorHandle = _heresdkVisualNavigationBindingsmapofSdkCoreEngineEnginebaseurlToStringIterator(handle);
  while (_heresdkVisualNavigationBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _keyHandle = _heresdkVisualNavigationBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorGetKey(_iteratorHandle);
    final _valueHandle = _heresdkVisualNavigationBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorGetValue(_iteratorHandle);
    try {
      result[sdkCoreEngineEnginebaseurlFromFfi(_keyHandle)] =
        stringFromFfi(_valueHandle);
    } finally {
      sdkCoreEngineEnginebaseurlReleaseFfiHandle(_keyHandle);
      stringReleaseFfiHandle(_valueHandle);
    }
    _heresdkVisualNavigationBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorIncrement(_iteratorHandle);
  }
  _heresdkVisualNavigationBindingsmapofSdkCoreEngineEnginebaseurlToStringIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkVisualNavigationBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseFfiHandle(Pointer<Void> handle) => _heresdkVisualNavigationBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseHandle(handle);

final _heresdkVisualNavigationBindingsmapofSdkCoreEngineEnginebaseurlToStringCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_create_handle_nullable'));
final _heresdkVisualNavigationBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_release_handle_nullable'));
final _heresdkVisualNavigationBindingsmapofSdkCoreEngineEnginebaseurlToStringGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_visual_navigation_bindingsMapOf_sdk_core_engine_EngineBaseURL_to_String_get_value_nullable'));

Pointer<Void> heresdkVisualNavigationBindingsmapofSdkCoreEngineEnginebaseurlToStringToFfiNullable(Map<EngineBaseURL, String>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkVisualNavigationBindingsmapofSdkCoreEngineEnginebaseurlToStringToFfi(value);
  final result = _heresdkVisualNavigationBindingsmapofSdkCoreEngineEnginebaseurlToStringCreateHandleNullable(_handle);
  heresdkVisualNavigationBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseFfiHandle(_handle);
  return result;
}

Map<EngineBaseURL, String>? heresdkVisualNavigationBindingsmapofSdkCoreEngineEnginebaseurlToStringFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _heresdkVisualNavigationBindingsmapofSdkCoreEngineEnginebaseurlToStringGetValueNullable(handle);
  final result = heresdkVisualNavigationBindingsmapofSdkCoreEngineEnginebaseurlToStringFromFfi(_handle);
  heresdkVisualNavigationBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseFfiHandle(_handle);
  return result;
}

void heresdkVisualNavigationBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkVisualNavigationBindingsmapofSdkCoreEngineEnginebaseurlToStringReleaseHandleNullable(handle);


// Copyright (c) 2018-2022 HERE Global B.V. and its affiliate(s).
// All rights reserved.
//
// This software and other materials contain proprietary information
// controlled by HERE and are protected by applicable copyright legislation.
// Any use and utilization of this software and other materials and
// disclosure to any third parties is conditional upon having a separate
// agreement with HERE for the access, use, utilization or disclosure of this
// software. In the absence of such agreement, the use of the software is not
// allowed.
//



















final _venuecoreBindingslistofDoubleCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_venuecore_bindingsListOf_Double_create_handle'));
final _venuecoreBindingslistofDoubleReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_venuecore_bindingsListOf_Double_release_handle'));
final _venuecoreBindingslistofDoubleInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Double),
    void Function(Pointer<Void>, double)
  >('here_sdk_venuecore_bindingsListOf_Double_insert'));
final _venuecoreBindingslistofDoubleIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_venuecore_bindingsListOf_Double_iterator'));
final _venuecoreBindingslistofDoubleIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_venuecore_bindingsListOf_Double_iterator_release_handle'));
final _venuecoreBindingslistofDoubleIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_venuecore_bindingsListOf_Double_iterator_is_valid'));
final _venuecoreBindingslistofDoubleIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_venuecore_bindingsListOf_Double_iterator_increment'));
final _venuecoreBindingslistofDoubleIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Double Function(Pointer<Void>),
    double Function(Pointer<Void>)
>('here_sdk_venuecore_bindingsListOf_Double_iterator_get'));

Pointer<Void> venuecoreBindingslistofDoubleToFfi(List<double> value) {
  final _result = _venuecoreBindingslistofDoubleCreateHandle();
  for (final element in value) {
    final _elementHandle = (element);
    _venuecoreBindingslistofDoubleInsert(_result, _elementHandle);
    
  }
  return _result;
}

List<double> venuecoreBindingslistofDoubleFromFfi(Pointer<Void> handle) {
  final result = List<double>.empty(growable: true);
  final _iteratorHandle = _venuecoreBindingslistofDoubleIterator(handle);
  while (_venuecoreBindingslistofDoubleIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _venuecoreBindingslistofDoubleIteratorGet(_iteratorHandle);
    try {
      result.add((_elementHandle));
    } finally {
      
    }
    _venuecoreBindingslistofDoubleIteratorIncrement(_iteratorHandle);
  }
  _venuecoreBindingslistofDoubleIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void venuecoreBindingslistofDoubleReleaseFfiHandle(Pointer<Void> handle) => _venuecoreBindingslistofDoubleReleaseHandle(handle);

final _venuecoreBindingslistofDoubleCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_venuecore_bindingsListOf_Double_create_handle_nullable'));
final _venuecoreBindingslistofDoubleReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_venuecore_bindingsListOf_Double_release_handle_nullable'));
final _venuecoreBindingslistofDoubleGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_venuecore_bindingsListOf_Double_get_value_nullable'));

Pointer<Void> venuecoreBindingslistofDoubleToFfiNullable(List<double>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = venuecoreBindingslistofDoubleToFfi(value);
  final result = _venuecoreBindingslistofDoubleCreateHandleNullable(_handle);
  venuecoreBindingslistofDoubleReleaseFfiHandle(_handle);
  return result;
}

List<double>? venuecoreBindingslistofDoubleFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _venuecoreBindingslistofDoubleGetValueNullable(handle);
  final result = venuecoreBindingslistofDoubleFromFfi(_handle);
  venuecoreBindingslistofDoubleReleaseFfiHandle(_handle);
  return result;
}

void venuecoreBindingslistofDoubleReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _venuecoreBindingslistofDoubleReleaseHandleNullable(handle);

final _venuecoreBindingslistofIntCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_venuecore_bindingsListOf_Int_create_handle'));
final _venuecoreBindingslistofIntReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_venuecore_bindingsListOf_Int_release_handle'));
final _venuecoreBindingslistofIntInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Int32),
    void Function(Pointer<Void>, int)
  >('here_sdk_venuecore_bindingsListOf_Int_insert'));
final _venuecoreBindingslistofIntIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_venuecore_bindingsListOf_Int_iterator'));
final _venuecoreBindingslistofIntIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_venuecore_bindingsListOf_Int_iterator_release_handle'));
final _venuecoreBindingslistofIntIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_venuecore_bindingsListOf_Int_iterator_is_valid'));
final _venuecoreBindingslistofIntIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_venuecore_bindingsListOf_Int_iterator_increment'));
final _venuecoreBindingslistofIntIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_venuecore_bindingsListOf_Int_iterator_get'));

Pointer<Void> venuecoreBindingslistofIntToFfi(List<int> value) {
  final _result = _venuecoreBindingslistofIntCreateHandle();
  for (final element in value) {
    final _elementHandle = (element);
    _venuecoreBindingslistofIntInsert(_result, _elementHandle);
    
  }
  return _result;
}

List<int> venuecoreBindingslistofIntFromFfi(Pointer<Void> handle) {
  final result = List<int>.empty(growable: true);
  final _iteratorHandle = _venuecoreBindingslistofIntIterator(handle);
  while (_venuecoreBindingslistofIntIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _venuecoreBindingslistofIntIteratorGet(_iteratorHandle);
    try {
      result.add((_elementHandle));
    } finally {
      
    }
    _venuecoreBindingslistofIntIteratorIncrement(_iteratorHandle);
  }
  _venuecoreBindingslistofIntIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void venuecoreBindingslistofIntReleaseFfiHandle(Pointer<Void> handle) => _venuecoreBindingslistofIntReleaseHandle(handle);

final _venuecoreBindingslistofIntCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_venuecore_bindingsListOf_Int_create_handle_nullable'));
final _venuecoreBindingslistofIntReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_venuecore_bindingsListOf_Int_release_handle_nullable'));
final _venuecoreBindingslistofIntGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_venuecore_bindingsListOf_Int_get_value_nullable'));

Pointer<Void> venuecoreBindingslistofIntToFfiNullable(List<int>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = venuecoreBindingslistofIntToFfi(value);
  final result = _venuecoreBindingslistofIntCreateHandleNullable(_handle);
  venuecoreBindingslistofIntReleaseFfiHandle(_handle);
  return result;
}

List<int>? venuecoreBindingslistofIntFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _venuecoreBindingslistofIntGetValueNullable(handle);
  final result = venuecoreBindingslistofIntFromFfi(_handle);
  venuecoreBindingslistofIntReleaseFfiHandle(_handle);
  return result;
}

void venuecoreBindingslistofIntReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _venuecoreBindingslistofIntReleaseHandleNullable(handle);

final _venuecoreBindingslistofStringCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_venuecore_bindingsListOf_String_create_handle'));
final _venuecoreBindingslistofStringReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_venuecore_bindingsListOf_String_release_handle'));
final _venuecoreBindingslistofStringInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_venuecore_bindingsListOf_String_insert'));
final _venuecoreBindingslistofStringIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_venuecore_bindingsListOf_String_iterator'));
final _venuecoreBindingslistofStringIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_venuecore_bindingsListOf_String_iterator_release_handle'));
final _venuecoreBindingslistofStringIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_venuecore_bindingsListOf_String_iterator_is_valid'));
final _venuecoreBindingslistofStringIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_venuecore_bindingsListOf_String_iterator_increment'));
final _venuecoreBindingslistofStringIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_venuecore_bindingsListOf_String_iterator_get'));

Pointer<Void> venuecoreBindingslistofStringToFfi(List<String> value) {
  final _result = _venuecoreBindingslistofStringCreateHandle();
  for (final element in value) {
    final _elementHandle = stringToFfi(element);
    _venuecoreBindingslistofStringInsert(_result, _elementHandle);
    stringReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<String> venuecoreBindingslistofStringFromFfi(Pointer<Void> handle) {
  final result = List<String>.empty(growable: true);
  final _iteratorHandle = _venuecoreBindingslistofStringIterator(handle);
  while (_venuecoreBindingslistofStringIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _venuecoreBindingslistofStringIteratorGet(_iteratorHandle);
    try {
      result.add(stringFromFfi(_elementHandle));
    } finally {
      stringReleaseFfiHandle(_elementHandle);
    }
    _venuecoreBindingslistofStringIteratorIncrement(_iteratorHandle);
  }
  _venuecoreBindingslistofStringIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void venuecoreBindingslistofStringReleaseFfiHandle(Pointer<Void> handle) => _venuecoreBindingslistofStringReleaseHandle(handle);

final _venuecoreBindingslistofStringCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_venuecore_bindingsListOf_String_create_handle_nullable'));
final _venuecoreBindingslistofStringReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_venuecore_bindingsListOf_String_release_handle_nullable'));
final _venuecoreBindingslistofStringGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_venuecore_bindingsListOf_String_get_value_nullable'));

Pointer<Void> venuecoreBindingslistofStringToFfiNullable(List<String>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = venuecoreBindingslistofStringToFfi(value);
  final result = _venuecoreBindingslistofStringCreateHandleNullable(_handle);
  venuecoreBindingslistofStringReleaseFfiHandle(_handle);
  return result;
}

List<String>? venuecoreBindingslistofStringFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _venuecoreBindingslistofStringGetValueNullable(handle);
  final result = venuecoreBindingslistofStringFromFfi(_handle);
  venuecoreBindingslistofStringReleaseFfiHandle(_handle);
  return result;
}

void venuecoreBindingslistofStringReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _venuecoreBindingslistofStringReleaseHandleNullable(handle);

final _venuecoreBindingslistofSdkCoreGeocoordinatesCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_venuecore_bindingsListOf_sdk_core_GeoCoordinates_create_handle'));
final _venuecoreBindingslistofSdkCoreGeocoordinatesReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_venuecore_bindingsListOf_sdk_core_GeoCoordinates_release_handle'));
final _venuecoreBindingslistofSdkCoreGeocoordinatesInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_venuecore_bindingsListOf_sdk_core_GeoCoordinates_insert'));
final _venuecoreBindingslistofSdkCoreGeocoordinatesIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_venuecore_bindingsListOf_sdk_core_GeoCoordinates_iterator'));
final _venuecoreBindingslistofSdkCoreGeocoordinatesIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_venuecore_bindingsListOf_sdk_core_GeoCoordinates_iterator_release_handle'));
final _venuecoreBindingslistofSdkCoreGeocoordinatesIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_venuecore_bindingsListOf_sdk_core_GeoCoordinates_iterator_is_valid'));
final _venuecoreBindingslistofSdkCoreGeocoordinatesIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_venuecore_bindingsListOf_sdk_core_GeoCoordinates_iterator_increment'));
final _venuecoreBindingslistofSdkCoreGeocoordinatesIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_venuecore_bindingsListOf_sdk_core_GeoCoordinates_iterator_get'));

Pointer<Void> venuecoreBindingslistofSdkCoreGeocoordinatesToFfi(List<GeoCoordinates> value) {
  final _result = _venuecoreBindingslistofSdkCoreGeocoordinatesCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreGeocoordinatesToFfi(element);
    _venuecoreBindingslistofSdkCoreGeocoordinatesInsert(_result, _elementHandle);
    sdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoCoordinates> venuecoreBindingslistofSdkCoreGeocoordinatesFromFfi(Pointer<Void> handle) {
  final result = List<GeoCoordinates>.empty(growable: true);
  final _iteratorHandle = _venuecoreBindingslistofSdkCoreGeocoordinatesIterator(handle);
  while (_venuecoreBindingslistofSdkCoreGeocoordinatesIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _venuecoreBindingslistofSdkCoreGeocoordinatesIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreGeocoordinatesFromFfi(_elementHandle));
    } finally {
      sdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
    }
    _venuecoreBindingslistofSdkCoreGeocoordinatesIteratorIncrement(_iteratorHandle);
  }
  _venuecoreBindingslistofSdkCoreGeocoordinatesIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void venuecoreBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(Pointer<Void> handle) => _venuecoreBindingslistofSdkCoreGeocoordinatesReleaseHandle(handle);

final _venuecoreBindingslistofSdkCoreGeocoordinatesCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_venuecore_bindingsListOf_sdk_core_GeoCoordinates_create_handle_nullable'));
final _venuecoreBindingslistofSdkCoreGeocoordinatesReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_venuecore_bindingsListOf_sdk_core_GeoCoordinates_release_handle_nullable'));
final _venuecoreBindingslistofSdkCoreGeocoordinatesGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_venuecore_bindingsListOf_sdk_core_GeoCoordinates_get_value_nullable'));

Pointer<Void> venuecoreBindingslistofSdkCoreGeocoordinatesToFfiNullable(List<GeoCoordinates>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = venuecoreBindingslistofSdkCoreGeocoordinatesToFfi(value);
  final result = _venuecoreBindingslistofSdkCoreGeocoordinatesCreateHandleNullable(_handle);
  venuecoreBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

List<GeoCoordinates>? venuecoreBindingslistofSdkCoreGeocoordinatesFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _venuecoreBindingslistofSdkCoreGeocoordinatesGetValueNullable(handle);
  final result = venuecoreBindingslistofSdkCoreGeocoordinatesFromFfi(_handle);
  venuecoreBindingslistofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

void venuecoreBindingslistofSdkCoreGeocoordinatesReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _venuecoreBindingslistofSdkCoreGeocoordinatesReleaseHandleNullable(handle);

final _venuecoreBindingslistofSdkVenueDataEntityinfoCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_venuecore_bindingsListOf_sdk_venue_data_EntityInfo_create_handle'));
final _venuecoreBindingslistofSdkVenueDataEntityinfoReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_venuecore_bindingsListOf_sdk_venue_data_EntityInfo_release_handle'));
final _venuecoreBindingslistofSdkVenueDataEntityinfoInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_venuecore_bindingsListOf_sdk_venue_data_EntityInfo_insert'));
final _venuecoreBindingslistofSdkVenueDataEntityinfoIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_venuecore_bindingsListOf_sdk_venue_data_EntityInfo_iterator'));
final _venuecoreBindingslistofSdkVenueDataEntityinfoIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_venuecore_bindingsListOf_sdk_venue_data_EntityInfo_iterator_release_handle'));
final _venuecoreBindingslistofSdkVenueDataEntityinfoIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_venuecore_bindingsListOf_sdk_venue_data_EntityInfo_iterator_is_valid'));
final _venuecoreBindingslistofSdkVenueDataEntityinfoIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_venuecore_bindingsListOf_sdk_venue_data_EntityInfo_iterator_increment'));
final _venuecoreBindingslistofSdkVenueDataEntityinfoIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_venuecore_bindingsListOf_sdk_venue_data_EntityInfo_iterator_get'));

Pointer<Void> venuecoreBindingslistofSdkVenueDataEntityinfoToFfi(List<EntityInfo> value) {
  final _result = _venuecoreBindingslistofSdkVenueDataEntityinfoCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkVenueDataEntityinfoToFfi(element);
    _venuecoreBindingslistofSdkVenueDataEntityinfoInsert(_result, _elementHandle);
    sdkVenueDataEntityinfoReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<EntityInfo> venuecoreBindingslistofSdkVenueDataEntityinfoFromFfi(Pointer<Void> handle) {
  final result = List<EntityInfo>.empty(growable: true);
  final _iteratorHandle = _venuecoreBindingslistofSdkVenueDataEntityinfoIterator(handle);
  while (_venuecoreBindingslistofSdkVenueDataEntityinfoIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _venuecoreBindingslistofSdkVenueDataEntityinfoIteratorGet(_iteratorHandle);
    try {
      result.add(sdkVenueDataEntityinfoFromFfi(_elementHandle));
    } finally {
      sdkVenueDataEntityinfoReleaseFfiHandle(_elementHandle);
    }
    _venuecoreBindingslistofSdkVenueDataEntityinfoIteratorIncrement(_iteratorHandle);
  }
  _venuecoreBindingslistofSdkVenueDataEntityinfoIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void venuecoreBindingslistofSdkVenueDataEntityinfoReleaseFfiHandle(Pointer<Void> handle) => _venuecoreBindingslistofSdkVenueDataEntityinfoReleaseHandle(handle);

final _venuecoreBindingslistofSdkVenueDataEntityinfoCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_venuecore_bindingsListOf_sdk_venue_data_EntityInfo_create_handle_nullable'));
final _venuecoreBindingslistofSdkVenueDataEntityinfoReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_venuecore_bindingsListOf_sdk_venue_data_EntityInfo_release_handle_nullable'));
final _venuecoreBindingslistofSdkVenueDataEntityinfoGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_venuecore_bindingsListOf_sdk_venue_data_EntityInfo_get_value_nullable'));

Pointer<Void> venuecoreBindingslistofSdkVenueDataEntityinfoToFfiNullable(List<EntityInfo>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = venuecoreBindingslistofSdkVenueDataEntityinfoToFfi(value);
  final result = _venuecoreBindingslistofSdkVenueDataEntityinfoCreateHandleNullable(_handle);
  venuecoreBindingslistofSdkVenueDataEntityinfoReleaseFfiHandle(_handle);
  return result;
}

List<EntityInfo>? venuecoreBindingslistofSdkVenueDataEntityinfoFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _venuecoreBindingslistofSdkVenueDataEntityinfoGetValueNullable(handle);
  final result = venuecoreBindingslistofSdkVenueDataEntityinfoFromFfi(_handle);
  venuecoreBindingslistofSdkVenueDataEntityinfoReleaseFfiHandle(_handle);
  return result;
}

void venuecoreBindingslistofSdkVenueDataEntityinfoReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _venuecoreBindingslistofSdkVenueDataEntityinfoReleaseHandleNullable(handle);

final _venuecoreBindingslistofSdkVenueDataGeoshapeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_venuecore_bindingsListOf_sdk_venue_data_GeoShape_create_handle'));
final _venuecoreBindingslistofSdkVenueDataGeoshapeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_venuecore_bindingsListOf_sdk_venue_data_GeoShape_release_handle'));
final _venuecoreBindingslistofSdkVenueDataGeoshapeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_venuecore_bindingsListOf_sdk_venue_data_GeoShape_insert'));
final _venuecoreBindingslistofSdkVenueDataGeoshapeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_venuecore_bindingsListOf_sdk_venue_data_GeoShape_iterator'));
final _venuecoreBindingslistofSdkVenueDataGeoshapeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_venuecore_bindingsListOf_sdk_venue_data_GeoShape_iterator_release_handle'));
final _venuecoreBindingslistofSdkVenueDataGeoshapeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_venuecore_bindingsListOf_sdk_venue_data_GeoShape_iterator_is_valid'));
final _venuecoreBindingslistofSdkVenueDataGeoshapeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_venuecore_bindingsListOf_sdk_venue_data_GeoShape_iterator_increment'));
final _venuecoreBindingslistofSdkVenueDataGeoshapeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_venuecore_bindingsListOf_sdk_venue_data_GeoShape_iterator_get'));

Pointer<Void> venuecoreBindingslistofSdkVenueDataGeoshapeToFfi(List<GeoShape> value) {
  final _result = _venuecoreBindingslistofSdkVenueDataGeoshapeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkVenueDataGeoshapeToFfi(element);
    _venuecoreBindingslistofSdkVenueDataGeoshapeInsert(_result, _elementHandle);
    sdkVenueDataGeoshapeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoShape> venuecoreBindingslistofSdkVenueDataGeoshapeFromFfi(Pointer<Void> handle) {
  final result = List<GeoShape>.empty(growable: true);
  final _iteratorHandle = _venuecoreBindingslistofSdkVenueDataGeoshapeIterator(handle);
  while (_venuecoreBindingslistofSdkVenueDataGeoshapeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _venuecoreBindingslistofSdkVenueDataGeoshapeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkVenueDataGeoshapeFromFfi(_elementHandle));
    } finally {
      sdkVenueDataGeoshapeReleaseFfiHandle(_elementHandle);
    }
    _venuecoreBindingslistofSdkVenueDataGeoshapeIteratorIncrement(_iteratorHandle);
  }
  _venuecoreBindingslistofSdkVenueDataGeoshapeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void venuecoreBindingslistofSdkVenueDataGeoshapeReleaseFfiHandle(Pointer<Void> handle) => _venuecoreBindingslistofSdkVenueDataGeoshapeReleaseHandle(handle);

final _venuecoreBindingslistofSdkVenueDataGeoshapeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_venuecore_bindingsListOf_sdk_venue_data_GeoShape_create_handle_nullable'));
final _venuecoreBindingslistofSdkVenueDataGeoshapeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_venuecore_bindingsListOf_sdk_venue_data_GeoShape_release_handle_nullable'));
final _venuecoreBindingslistofSdkVenueDataGeoshapeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_venuecore_bindingsListOf_sdk_venue_data_GeoShape_get_value_nullable'));

Pointer<Void> venuecoreBindingslistofSdkVenueDataGeoshapeToFfiNullable(List<GeoShape>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = venuecoreBindingslistofSdkVenueDataGeoshapeToFfi(value);
  final result = _venuecoreBindingslistofSdkVenueDataGeoshapeCreateHandleNullable(_handle);
  venuecoreBindingslistofSdkVenueDataGeoshapeReleaseFfiHandle(_handle);
  return result;
}

List<GeoShape>? venuecoreBindingslistofSdkVenueDataGeoshapeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _venuecoreBindingslistofSdkVenueDataGeoshapeGetValueNullable(handle);
  final result = venuecoreBindingslistofSdkVenueDataGeoshapeFromFfi(_handle);
  venuecoreBindingslistofSdkVenueDataGeoshapeReleaseFfiHandle(_handle);
  return result;
}

void venuecoreBindingslistofSdkVenueDataGeoshapeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _venuecoreBindingslistofSdkVenueDataGeoshapeReleaseHandleNullable(handle);

final _venuecoreBindingslistofSdkVenueDataVenuedrawingCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_venuecore_bindingsListOf_sdk_venue_data_VenueDrawing_create_handle'));
final _venuecoreBindingslistofSdkVenueDataVenuedrawingReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_venuecore_bindingsListOf_sdk_venue_data_VenueDrawing_release_handle'));
final _venuecoreBindingslistofSdkVenueDataVenuedrawingInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_venuecore_bindingsListOf_sdk_venue_data_VenueDrawing_insert'));
final _venuecoreBindingslistofSdkVenueDataVenuedrawingIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_venuecore_bindingsListOf_sdk_venue_data_VenueDrawing_iterator'));
final _venuecoreBindingslistofSdkVenueDataVenuedrawingIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_venuecore_bindingsListOf_sdk_venue_data_VenueDrawing_iterator_release_handle'));
final _venuecoreBindingslistofSdkVenueDataVenuedrawingIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_venuecore_bindingsListOf_sdk_venue_data_VenueDrawing_iterator_is_valid'));
final _venuecoreBindingslistofSdkVenueDataVenuedrawingIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_venuecore_bindingsListOf_sdk_venue_data_VenueDrawing_iterator_increment'));
final _venuecoreBindingslistofSdkVenueDataVenuedrawingIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_venuecore_bindingsListOf_sdk_venue_data_VenueDrawing_iterator_get'));

Pointer<Void> venuecoreBindingslistofSdkVenueDataVenuedrawingToFfi(List<VenueDrawing> value) {
  final _result = _venuecoreBindingslistofSdkVenueDataVenuedrawingCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkVenueDataVenuedrawingToFfi(element);
    _venuecoreBindingslistofSdkVenueDataVenuedrawingInsert(_result, _elementHandle);
    sdkVenueDataVenuedrawingReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<VenueDrawing> venuecoreBindingslistofSdkVenueDataVenuedrawingFromFfi(Pointer<Void> handle) {
  final result = List<VenueDrawing>.empty(growable: true);
  final _iteratorHandle = _venuecoreBindingslistofSdkVenueDataVenuedrawingIterator(handle);
  while (_venuecoreBindingslistofSdkVenueDataVenuedrawingIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _venuecoreBindingslistofSdkVenueDataVenuedrawingIteratorGet(_iteratorHandle);
    try {
      result.add(sdkVenueDataVenuedrawingFromFfi(_elementHandle));
    } finally {
      sdkVenueDataVenuedrawingReleaseFfiHandle(_elementHandle);
    }
    _venuecoreBindingslistofSdkVenueDataVenuedrawingIteratorIncrement(_iteratorHandle);
  }
  _venuecoreBindingslistofSdkVenueDataVenuedrawingIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void venuecoreBindingslistofSdkVenueDataVenuedrawingReleaseFfiHandle(Pointer<Void> handle) => _venuecoreBindingslistofSdkVenueDataVenuedrawingReleaseHandle(handle);

final _venuecoreBindingslistofSdkVenueDataVenuedrawingCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_venuecore_bindingsListOf_sdk_venue_data_VenueDrawing_create_handle_nullable'));
final _venuecoreBindingslistofSdkVenueDataVenuedrawingReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_venuecore_bindingsListOf_sdk_venue_data_VenueDrawing_release_handle_nullable'));
final _venuecoreBindingslistofSdkVenueDataVenuedrawingGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_venuecore_bindingsListOf_sdk_venue_data_VenueDrawing_get_value_nullable'));

Pointer<Void> venuecoreBindingslistofSdkVenueDataVenuedrawingToFfiNullable(List<VenueDrawing>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = venuecoreBindingslistofSdkVenueDataVenuedrawingToFfi(value);
  final result = _venuecoreBindingslistofSdkVenueDataVenuedrawingCreateHandleNullable(_handle);
  venuecoreBindingslistofSdkVenueDataVenuedrawingReleaseFfiHandle(_handle);
  return result;
}

List<VenueDrawing>? venuecoreBindingslistofSdkVenueDataVenuedrawingFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _venuecoreBindingslistofSdkVenueDataVenuedrawingGetValueNullable(handle);
  final result = venuecoreBindingslistofSdkVenueDataVenuedrawingFromFfi(_handle);
  venuecoreBindingslistofSdkVenueDataVenuedrawingReleaseFfiHandle(_handle);
  return result;
}

void venuecoreBindingslistofSdkVenueDataVenuedrawingReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _venuecoreBindingslistofSdkVenueDataVenuedrawingReleaseHandleNullable(handle);

final _venuecoreBindingslistofSdkVenueDataVenuegeometryCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_venuecore_bindingsListOf_sdk_venue_data_VenueGeometry_create_handle'));
final _venuecoreBindingslistofSdkVenueDataVenuegeometryReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_venuecore_bindingsListOf_sdk_venue_data_VenueGeometry_release_handle'));
final _venuecoreBindingslistofSdkVenueDataVenuegeometryInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_venuecore_bindingsListOf_sdk_venue_data_VenueGeometry_insert'));
final _venuecoreBindingslistofSdkVenueDataVenuegeometryIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_venuecore_bindingsListOf_sdk_venue_data_VenueGeometry_iterator'));
final _venuecoreBindingslistofSdkVenueDataVenuegeometryIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_venuecore_bindingsListOf_sdk_venue_data_VenueGeometry_iterator_release_handle'));
final _venuecoreBindingslistofSdkVenueDataVenuegeometryIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_venuecore_bindingsListOf_sdk_venue_data_VenueGeometry_iterator_is_valid'));
final _venuecoreBindingslistofSdkVenueDataVenuegeometryIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_venuecore_bindingsListOf_sdk_venue_data_VenueGeometry_iterator_increment'));
final _venuecoreBindingslistofSdkVenueDataVenuegeometryIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_venuecore_bindingsListOf_sdk_venue_data_VenueGeometry_iterator_get'));

Pointer<Void> venuecoreBindingslistofSdkVenueDataVenuegeometryToFfi(List<VenueGeometry> value) {
  final _result = _venuecoreBindingslistofSdkVenueDataVenuegeometryCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkVenueDataVenuegeometryToFfi(element);
    _venuecoreBindingslistofSdkVenueDataVenuegeometryInsert(_result, _elementHandle);
    sdkVenueDataVenuegeometryReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<VenueGeometry> venuecoreBindingslistofSdkVenueDataVenuegeometryFromFfi(Pointer<Void> handle) {
  final result = List<VenueGeometry>.empty(growable: true);
  final _iteratorHandle = _venuecoreBindingslistofSdkVenueDataVenuegeometryIterator(handle);
  while (_venuecoreBindingslistofSdkVenueDataVenuegeometryIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _venuecoreBindingslistofSdkVenueDataVenuegeometryIteratorGet(_iteratorHandle);
    try {
      result.add(sdkVenueDataVenuegeometryFromFfi(_elementHandle));
    } finally {
      sdkVenueDataVenuegeometryReleaseFfiHandle(_elementHandle);
    }
    _venuecoreBindingslistofSdkVenueDataVenuegeometryIteratorIncrement(_iteratorHandle);
  }
  _venuecoreBindingslistofSdkVenueDataVenuegeometryIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void venuecoreBindingslistofSdkVenueDataVenuegeometryReleaseFfiHandle(Pointer<Void> handle) => _venuecoreBindingslistofSdkVenueDataVenuegeometryReleaseHandle(handle);

final _venuecoreBindingslistofSdkVenueDataVenuegeometryCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_venuecore_bindingsListOf_sdk_venue_data_VenueGeometry_create_handle_nullable'));
final _venuecoreBindingslistofSdkVenueDataVenuegeometryReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_venuecore_bindingsListOf_sdk_venue_data_VenueGeometry_release_handle_nullable'));
final _venuecoreBindingslistofSdkVenueDataVenuegeometryGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_venuecore_bindingsListOf_sdk_venue_data_VenueGeometry_get_value_nullable'));

Pointer<Void> venuecoreBindingslistofSdkVenueDataVenuegeometryToFfiNullable(List<VenueGeometry>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = venuecoreBindingslistofSdkVenueDataVenuegeometryToFfi(value);
  final result = _venuecoreBindingslistofSdkVenueDataVenuegeometryCreateHandleNullable(_handle);
  venuecoreBindingslistofSdkVenueDataVenuegeometryReleaseFfiHandle(_handle);
  return result;
}

List<VenueGeometry>? venuecoreBindingslistofSdkVenueDataVenuegeometryFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _venuecoreBindingslistofSdkVenueDataVenuegeometryGetValueNullable(handle);
  final result = venuecoreBindingslistofSdkVenueDataVenuegeometryFromFfi(_handle);
  venuecoreBindingslistofSdkVenueDataVenuegeometryReleaseFfiHandle(_handle);
  return result;
}

void venuecoreBindingslistofSdkVenueDataVenuegeometryReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _venuecoreBindingslistofSdkVenueDataVenuegeometryReleaseHandleNullable(handle);

final _venuecoreBindingslistofSdkVenueDataVenuelevelCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_venuecore_bindingsListOf_sdk_venue_data_VenueLevel_create_handle'));
final _venuecoreBindingslistofSdkVenueDataVenuelevelReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_venuecore_bindingsListOf_sdk_venue_data_VenueLevel_release_handle'));
final _venuecoreBindingslistofSdkVenueDataVenuelevelInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_venuecore_bindingsListOf_sdk_venue_data_VenueLevel_insert'));
final _venuecoreBindingslistofSdkVenueDataVenuelevelIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_venuecore_bindingsListOf_sdk_venue_data_VenueLevel_iterator'));
final _venuecoreBindingslistofSdkVenueDataVenuelevelIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_venuecore_bindingsListOf_sdk_venue_data_VenueLevel_iterator_release_handle'));
final _venuecoreBindingslistofSdkVenueDataVenuelevelIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_venuecore_bindingsListOf_sdk_venue_data_VenueLevel_iterator_is_valid'));
final _venuecoreBindingslistofSdkVenueDataVenuelevelIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_venuecore_bindingsListOf_sdk_venue_data_VenueLevel_iterator_increment'));
final _venuecoreBindingslistofSdkVenueDataVenuelevelIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_venuecore_bindingsListOf_sdk_venue_data_VenueLevel_iterator_get'));

Pointer<Void> venuecoreBindingslistofSdkVenueDataVenuelevelToFfi(List<VenueLevel> value) {
  final _result = _venuecoreBindingslistofSdkVenueDataVenuelevelCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkVenueDataVenuelevelToFfi(element);
    _venuecoreBindingslistofSdkVenueDataVenuelevelInsert(_result, _elementHandle);
    sdkVenueDataVenuelevelReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<VenueLevel> venuecoreBindingslistofSdkVenueDataVenuelevelFromFfi(Pointer<Void> handle) {
  final result = List<VenueLevel>.empty(growable: true);
  final _iteratorHandle = _venuecoreBindingslistofSdkVenueDataVenuelevelIterator(handle);
  while (_venuecoreBindingslistofSdkVenueDataVenuelevelIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _venuecoreBindingslistofSdkVenueDataVenuelevelIteratorGet(_iteratorHandle);
    try {
      result.add(sdkVenueDataVenuelevelFromFfi(_elementHandle));
    } finally {
      sdkVenueDataVenuelevelReleaseFfiHandle(_elementHandle);
    }
    _venuecoreBindingslistofSdkVenueDataVenuelevelIteratorIncrement(_iteratorHandle);
  }
  _venuecoreBindingslistofSdkVenueDataVenuelevelIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void venuecoreBindingslistofSdkVenueDataVenuelevelReleaseFfiHandle(Pointer<Void> handle) => _venuecoreBindingslistofSdkVenueDataVenuelevelReleaseHandle(handle);

final _venuecoreBindingslistofSdkVenueDataVenuelevelCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_venuecore_bindingsListOf_sdk_venue_data_VenueLevel_create_handle_nullable'));
final _venuecoreBindingslistofSdkVenueDataVenuelevelReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_venuecore_bindingsListOf_sdk_venue_data_VenueLevel_release_handle_nullable'));
final _venuecoreBindingslistofSdkVenueDataVenuelevelGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_venuecore_bindingsListOf_sdk_venue_data_VenueLevel_get_value_nullable'));

Pointer<Void> venuecoreBindingslistofSdkVenueDataVenuelevelToFfiNullable(List<VenueLevel>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = venuecoreBindingslistofSdkVenueDataVenuelevelToFfi(value);
  final result = _venuecoreBindingslistofSdkVenueDataVenuelevelCreateHandleNullable(_handle);
  venuecoreBindingslistofSdkVenueDataVenuelevelReleaseFfiHandle(_handle);
  return result;
}

List<VenueLevel>? venuecoreBindingslistofSdkVenueDataVenuelevelFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _venuecoreBindingslistofSdkVenueDataVenuelevelGetValueNullable(handle);
  final result = venuecoreBindingslistofSdkVenueDataVenuelevelFromFfi(_handle);
  venuecoreBindingslistofSdkVenueDataVenuelevelReleaseFfiHandle(_handle);
  return result;
}

void venuecoreBindingslistofSdkVenueDataVenuelevelReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _venuecoreBindingslistofSdkVenueDataVenuelevelReleaseHandleNullable(handle);

final _venuecoreBindingslistofSdkVenueStyleIcongeometryCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_venuecore_bindingsListOf_sdk_venue_style_IconGeometry_create_handle'));
final _venuecoreBindingslistofSdkVenueStyleIcongeometryReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_venuecore_bindingsListOf_sdk_venue_style_IconGeometry_release_handle'));
final _venuecoreBindingslistofSdkVenueStyleIcongeometryInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_venuecore_bindingsListOf_sdk_venue_style_IconGeometry_insert'));
final _venuecoreBindingslistofSdkVenueStyleIcongeometryIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_venuecore_bindingsListOf_sdk_venue_style_IconGeometry_iterator'));
final _venuecoreBindingslistofSdkVenueStyleIcongeometryIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_venuecore_bindingsListOf_sdk_venue_style_IconGeometry_iterator_release_handle'));
final _venuecoreBindingslistofSdkVenueStyleIcongeometryIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_venuecore_bindingsListOf_sdk_venue_style_IconGeometry_iterator_is_valid'));
final _venuecoreBindingslistofSdkVenueStyleIcongeometryIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_venuecore_bindingsListOf_sdk_venue_style_IconGeometry_iterator_increment'));
final _venuecoreBindingslistofSdkVenueStyleIcongeometryIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_venuecore_bindingsListOf_sdk_venue_style_IconGeometry_iterator_get'));

Pointer<Void> venuecoreBindingslistofSdkVenueStyleIcongeometryToFfi(List<IconGeometry> value) {
  final _result = _venuecoreBindingslistofSdkVenueStyleIcongeometryCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkVenueStyleIcongeometryToFfi(element);
    _venuecoreBindingslistofSdkVenueStyleIcongeometryInsert(_result, _elementHandle);
    sdkVenueStyleIcongeometryReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<IconGeometry> venuecoreBindingslistofSdkVenueStyleIcongeometryFromFfi(Pointer<Void> handle) {
  final result = List<IconGeometry>.empty(growable: true);
  final _iteratorHandle = _venuecoreBindingslistofSdkVenueStyleIcongeometryIterator(handle);
  while (_venuecoreBindingslistofSdkVenueStyleIcongeometryIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _venuecoreBindingslistofSdkVenueStyleIcongeometryIteratorGet(_iteratorHandle);
    try {
      result.add(sdkVenueStyleIcongeometryFromFfi(_elementHandle));
    } finally {
      sdkVenueStyleIcongeometryReleaseFfiHandle(_elementHandle);
    }
    _venuecoreBindingslistofSdkVenueStyleIcongeometryIteratorIncrement(_iteratorHandle);
  }
  _venuecoreBindingslistofSdkVenueStyleIcongeometryIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void venuecoreBindingslistofSdkVenueStyleIcongeometryReleaseFfiHandle(Pointer<Void> handle) => _venuecoreBindingslistofSdkVenueStyleIcongeometryReleaseHandle(handle);

final _venuecoreBindingslistofSdkVenueStyleIcongeometryCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_venuecore_bindingsListOf_sdk_venue_style_IconGeometry_create_handle_nullable'));
final _venuecoreBindingslistofSdkVenueStyleIcongeometryReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_venuecore_bindingsListOf_sdk_venue_style_IconGeometry_release_handle_nullable'));
final _venuecoreBindingslistofSdkVenueStyleIcongeometryGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_venuecore_bindingsListOf_sdk_venue_style_IconGeometry_get_value_nullable'));

Pointer<Void> venuecoreBindingslistofSdkVenueStyleIcongeometryToFfiNullable(List<IconGeometry>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = venuecoreBindingslistofSdkVenueStyleIcongeometryToFfi(value);
  final result = _venuecoreBindingslistofSdkVenueStyleIcongeometryCreateHandleNullable(_handle);
  venuecoreBindingslistofSdkVenueStyleIcongeometryReleaseFfiHandle(_handle);
  return result;
}

List<IconGeometry>? venuecoreBindingslistofSdkVenueStyleIcongeometryFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _venuecoreBindingslistofSdkVenueStyleIcongeometryGetValueNullable(handle);
  final result = venuecoreBindingslistofSdkVenueStyleIcongeometryFromFfi(_handle);
  venuecoreBindingslistofSdkVenueStyleIcongeometryReleaseFfiHandle(_handle);
  return result;
}

void venuecoreBindingslistofSdkVenueStyleIcongeometryReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _venuecoreBindingslistofSdkVenueStyleIcongeometryReleaseHandleNullable(handle);

final _venuecoreBindingsmapofIntToSdkVenueControlVenueCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_venuecore_bindingsMapOf_Int_to_sdk_venue_control_Venue_create_handle'));
final _venuecoreBindingsmapofIntToSdkVenueControlVenueReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_venuecore_bindingsMapOf_Int_to_sdk_venue_control_Venue_release_handle'));
final _venuecoreBindingsmapofIntToSdkVenueControlVenuePut = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Int32, Pointer<Void>),
    void Function(Pointer<Void>, int, Pointer<Void>)
  >('here_sdk_venuecore_bindingsMapOf_Int_to_sdk_venue_control_Venue_put'));
final _venuecoreBindingsmapofIntToSdkVenueControlVenueIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_venuecore_bindingsMapOf_Int_to_sdk_venue_control_Venue_iterator'));
final _venuecoreBindingsmapofIntToSdkVenueControlVenueIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_venuecore_bindingsMapOf_Int_to_sdk_venue_control_Venue_iterator_release_handle'));
final _venuecoreBindingsmapofIntToSdkVenueControlVenueIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_venuecore_bindingsMapOf_Int_to_sdk_venue_control_Venue_iterator_is_valid'));
final _venuecoreBindingsmapofIntToSdkVenueControlVenueIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_venuecore_bindingsMapOf_Int_to_sdk_venue_control_Venue_iterator_increment'));
final _venuecoreBindingsmapofIntToSdkVenueControlVenueIteratorGetKey = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_venuecore_bindingsMapOf_Int_to_sdk_venue_control_Venue_iterator_get_key'));
final _venuecoreBindingsmapofIntToSdkVenueControlVenueIteratorGetValue = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_venuecore_bindingsMapOf_Int_to_sdk_venue_control_Venue_iterator_get_value'));

Pointer<Void> venuecoreBindingsmapofIntToSdkVenueControlVenueToFfi(Map<int, Venue> value) {
  final _result = _venuecoreBindingsmapofIntToSdkVenueControlVenueCreateHandle();
  for (final entry in value.entries) {
    final _keyHandle = (entry.key);
    final _valueHandle = sdkVenueControlVenueToFfi(entry.value);
    _venuecoreBindingsmapofIntToSdkVenueControlVenuePut(_result, _keyHandle, _valueHandle);
    
    sdkVenueControlVenueReleaseFfiHandle(_valueHandle);
  }
  return _result;
}

Map<int, Venue> venuecoreBindingsmapofIntToSdkVenueControlVenueFromFfi(Pointer<Void> handle) {
  final result = Map<int, Venue>();
  final _iteratorHandle = _venuecoreBindingsmapofIntToSdkVenueControlVenueIterator(handle);
  while (_venuecoreBindingsmapofIntToSdkVenueControlVenueIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _keyHandle = _venuecoreBindingsmapofIntToSdkVenueControlVenueIteratorGetKey(_iteratorHandle);
    final _valueHandle = _venuecoreBindingsmapofIntToSdkVenueControlVenueIteratorGetValue(_iteratorHandle);
    try {
      result[(_keyHandle)] =
        sdkVenueControlVenueFromFfi(_valueHandle);
    } finally {
      
      sdkVenueControlVenueReleaseFfiHandle(_valueHandle);
    }
    _venuecoreBindingsmapofIntToSdkVenueControlVenueIteratorIncrement(_iteratorHandle);
  }
  _venuecoreBindingsmapofIntToSdkVenueControlVenueIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void venuecoreBindingsmapofIntToSdkVenueControlVenueReleaseFfiHandle(Pointer<Void> handle) => _venuecoreBindingsmapofIntToSdkVenueControlVenueReleaseHandle(handle);

final _venuecoreBindingsmapofIntToSdkVenueControlVenueCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_venuecore_bindingsMapOf_Int_to_sdk_venue_control_Venue_create_handle_nullable'));
final _venuecoreBindingsmapofIntToSdkVenueControlVenueReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_venuecore_bindingsMapOf_Int_to_sdk_venue_control_Venue_release_handle_nullable'));
final _venuecoreBindingsmapofIntToSdkVenueControlVenueGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_venuecore_bindingsMapOf_Int_to_sdk_venue_control_Venue_get_value_nullable'));

Pointer<Void> venuecoreBindingsmapofIntToSdkVenueControlVenueToFfiNullable(Map<int, Venue>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = venuecoreBindingsmapofIntToSdkVenueControlVenueToFfi(value);
  final result = _venuecoreBindingsmapofIntToSdkVenueControlVenueCreateHandleNullable(_handle);
  venuecoreBindingsmapofIntToSdkVenueControlVenueReleaseFfiHandle(_handle);
  return result;
}

Map<int, Venue>? venuecoreBindingsmapofIntToSdkVenueControlVenueFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _venuecoreBindingsmapofIntToSdkVenueControlVenueGetValueNullable(handle);
  final result = venuecoreBindingsmapofIntToSdkVenueControlVenueFromFfi(_handle);
  venuecoreBindingsmapofIntToSdkVenueControlVenueReleaseFfiHandle(_handle);
  return result;
}

void venuecoreBindingsmapofIntToSdkVenueControlVenueReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _venuecoreBindingsmapofIntToSdkVenueControlVenueReleaseHandleNullable(handle);

final _venuecoreBindingsmapofStringToSdkVenueDataPropertyCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_venuecore_bindingsMapOf_String_to_sdk_venue_data_Property_create_handle'));
final _venuecoreBindingsmapofStringToSdkVenueDataPropertyReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_venuecore_bindingsMapOf_String_to_sdk_venue_data_Property_release_handle'));
final _venuecoreBindingsmapofStringToSdkVenueDataPropertyPut = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>, Pointer<Void>)
  >('here_sdk_venuecore_bindingsMapOf_String_to_sdk_venue_data_Property_put'));
final _venuecoreBindingsmapofStringToSdkVenueDataPropertyIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_venuecore_bindingsMapOf_String_to_sdk_venue_data_Property_iterator'));
final _venuecoreBindingsmapofStringToSdkVenueDataPropertyIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_venuecore_bindingsMapOf_String_to_sdk_venue_data_Property_iterator_release_handle'));
final _venuecoreBindingsmapofStringToSdkVenueDataPropertyIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_venuecore_bindingsMapOf_String_to_sdk_venue_data_Property_iterator_is_valid'));
final _venuecoreBindingsmapofStringToSdkVenueDataPropertyIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_venuecore_bindingsMapOf_String_to_sdk_venue_data_Property_iterator_increment'));
final _venuecoreBindingsmapofStringToSdkVenueDataPropertyIteratorGetKey = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_venuecore_bindingsMapOf_String_to_sdk_venue_data_Property_iterator_get_key'));
final _venuecoreBindingsmapofStringToSdkVenueDataPropertyIteratorGetValue = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_venuecore_bindingsMapOf_String_to_sdk_venue_data_Property_iterator_get_value'));

Pointer<Void> venuecoreBindingsmapofStringToSdkVenueDataPropertyToFfi(Map<String, Property> value) {
  final _result = _venuecoreBindingsmapofStringToSdkVenueDataPropertyCreateHandle();
  for (final entry in value.entries) {
    final _keyHandle = stringToFfi(entry.key);
    final _valueHandle = sdkVenueDataPropertyToFfi(entry.value);
    _venuecoreBindingsmapofStringToSdkVenueDataPropertyPut(_result, _keyHandle, _valueHandle);
    stringReleaseFfiHandle(_keyHandle);
    sdkVenueDataPropertyReleaseFfiHandle(_valueHandle);
  }
  return _result;
}

Map<String, Property> venuecoreBindingsmapofStringToSdkVenueDataPropertyFromFfi(Pointer<Void> handle) {
  final result = Map<String, Property>();
  final _iteratorHandle = _venuecoreBindingsmapofStringToSdkVenueDataPropertyIterator(handle);
  while (_venuecoreBindingsmapofStringToSdkVenueDataPropertyIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _keyHandle = _venuecoreBindingsmapofStringToSdkVenueDataPropertyIteratorGetKey(_iteratorHandle);
    final _valueHandle = _venuecoreBindingsmapofStringToSdkVenueDataPropertyIteratorGetValue(_iteratorHandle);
    try {
      result[stringFromFfi(_keyHandle)] =
        sdkVenueDataPropertyFromFfi(_valueHandle);
    } finally {
      stringReleaseFfiHandle(_keyHandle);
      sdkVenueDataPropertyReleaseFfiHandle(_valueHandle);
    }
    _venuecoreBindingsmapofStringToSdkVenueDataPropertyIteratorIncrement(_iteratorHandle);
  }
  _venuecoreBindingsmapofStringToSdkVenueDataPropertyIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void venuecoreBindingsmapofStringToSdkVenueDataPropertyReleaseFfiHandle(Pointer<Void> handle) => _venuecoreBindingsmapofStringToSdkVenueDataPropertyReleaseHandle(handle);

final _venuecoreBindingsmapofStringToSdkVenueDataPropertyCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_venuecore_bindingsMapOf_String_to_sdk_venue_data_Property_create_handle_nullable'));
final _venuecoreBindingsmapofStringToSdkVenueDataPropertyReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_venuecore_bindingsMapOf_String_to_sdk_venue_data_Property_release_handle_nullable'));
final _venuecoreBindingsmapofStringToSdkVenueDataPropertyGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_venuecore_bindingsMapOf_String_to_sdk_venue_data_Property_get_value_nullable'));

Pointer<Void> venuecoreBindingsmapofStringToSdkVenueDataPropertyToFfiNullable(Map<String, Property>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = venuecoreBindingsmapofStringToSdkVenueDataPropertyToFfi(value);
  final result = _venuecoreBindingsmapofStringToSdkVenueDataPropertyCreateHandleNullable(_handle);
  venuecoreBindingsmapofStringToSdkVenueDataPropertyReleaseFfiHandle(_handle);
  return result;
}

Map<String, Property>? venuecoreBindingsmapofStringToSdkVenueDataPropertyFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _venuecoreBindingsmapofStringToSdkVenueDataPropertyGetValueNullable(handle);
  final result = venuecoreBindingsmapofStringToSdkVenueDataPropertyFromFfi(_handle);
  venuecoreBindingsmapofStringToSdkVenueDataPropertyReleaseFfiHandle(_handle);
  return result;
}

void venuecoreBindingsmapofStringToSdkVenueDataPropertyReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _venuecoreBindingsmapofStringToSdkVenueDataPropertyReleaseHandleNullable(handle);

final _venuecoreBindingsmapofStringToSdkVenueStyleIconinfoCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_venuecore_bindingsMapOf_String_to_sdk_venue_style_IconInfo_create_handle'));
final _venuecoreBindingsmapofStringToSdkVenueStyleIconinfoReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_venuecore_bindingsMapOf_String_to_sdk_venue_style_IconInfo_release_handle'));
final _venuecoreBindingsmapofStringToSdkVenueStyleIconinfoPut = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>, Pointer<Void>)
  >('here_sdk_venuecore_bindingsMapOf_String_to_sdk_venue_style_IconInfo_put'));
final _venuecoreBindingsmapofStringToSdkVenueStyleIconinfoIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_venuecore_bindingsMapOf_String_to_sdk_venue_style_IconInfo_iterator'));
final _venuecoreBindingsmapofStringToSdkVenueStyleIconinfoIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_venuecore_bindingsMapOf_String_to_sdk_venue_style_IconInfo_iterator_release_handle'));
final _venuecoreBindingsmapofStringToSdkVenueStyleIconinfoIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_venuecore_bindingsMapOf_String_to_sdk_venue_style_IconInfo_iterator_is_valid'));
final _venuecoreBindingsmapofStringToSdkVenueStyleIconinfoIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_venuecore_bindingsMapOf_String_to_sdk_venue_style_IconInfo_iterator_increment'));
final _venuecoreBindingsmapofStringToSdkVenueStyleIconinfoIteratorGetKey = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_venuecore_bindingsMapOf_String_to_sdk_venue_style_IconInfo_iterator_get_key'));
final _venuecoreBindingsmapofStringToSdkVenueStyleIconinfoIteratorGetValue = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_venuecore_bindingsMapOf_String_to_sdk_venue_style_IconInfo_iterator_get_value'));

Pointer<Void> venuecoreBindingsmapofStringToSdkVenueStyleIconinfoToFfi(Map<String, IconInfo> value) {
  final _result = _venuecoreBindingsmapofStringToSdkVenueStyleIconinfoCreateHandle();
  for (final entry in value.entries) {
    final _keyHandle = stringToFfi(entry.key);
    final _valueHandle = sdkVenueStyleIconinfoToFfi(entry.value);
    _venuecoreBindingsmapofStringToSdkVenueStyleIconinfoPut(_result, _keyHandle, _valueHandle);
    stringReleaseFfiHandle(_keyHandle);
    sdkVenueStyleIconinfoReleaseFfiHandle(_valueHandle);
  }
  return _result;
}

Map<String, IconInfo> venuecoreBindingsmapofStringToSdkVenueStyleIconinfoFromFfi(Pointer<Void> handle) {
  final result = Map<String, IconInfo>();
  final _iteratorHandle = _venuecoreBindingsmapofStringToSdkVenueStyleIconinfoIterator(handle);
  while (_venuecoreBindingsmapofStringToSdkVenueStyleIconinfoIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _keyHandle = _venuecoreBindingsmapofStringToSdkVenueStyleIconinfoIteratorGetKey(_iteratorHandle);
    final _valueHandle = _venuecoreBindingsmapofStringToSdkVenueStyleIconinfoIteratorGetValue(_iteratorHandle);
    try {
      result[stringFromFfi(_keyHandle)] =
        sdkVenueStyleIconinfoFromFfi(_valueHandle);
    } finally {
      stringReleaseFfiHandle(_keyHandle);
      sdkVenueStyleIconinfoReleaseFfiHandle(_valueHandle);
    }
    _venuecoreBindingsmapofStringToSdkVenueStyleIconinfoIteratorIncrement(_iteratorHandle);
  }
  _venuecoreBindingsmapofStringToSdkVenueStyleIconinfoIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void venuecoreBindingsmapofStringToSdkVenueStyleIconinfoReleaseFfiHandle(Pointer<Void> handle) => _venuecoreBindingsmapofStringToSdkVenueStyleIconinfoReleaseHandle(handle);

final _venuecoreBindingsmapofStringToSdkVenueStyleIconinfoCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_venuecore_bindingsMapOf_String_to_sdk_venue_style_IconInfo_create_handle_nullable'));
final _venuecoreBindingsmapofStringToSdkVenueStyleIconinfoReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_venuecore_bindingsMapOf_String_to_sdk_venue_style_IconInfo_release_handle_nullable'));
final _venuecoreBindingsmapofStringToSdkVenueStyleIconinfoGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_venuecore_bindingsMapOf_String_to_sdk_venue_style_IconInfo_get_value_nullable'));

Pointer<Void> venuecoreBindingsmapofStringToSdkVenueStyleIconinfoToFfiNullable(Map<String, IconInfo>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = venuecoreBindingsmapofStringToSdkVenueStyleIconinfoToFfi(value);
  final result = _venuecoreBindingsmapofStringToSdkVenueStyleIconinfoCreateHandleNullable(_handle);
  venuecoreBindingsmapofStringToSdkVenueStyleIconinfoReleaseFfiHandle(_handle);
  return result;
}

Map<String, IconInfo>? venuecoreBindingsmapofStringToSdkVenueStyleIconinfoFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _venuecoreBindingsmapofStringToSdkVenueStyleIconinfoGetValueNullable(handle);
  final result = venuecoreBindingsmapofStringToSdkVenueStyleIconinfoFromFfi(_handle);
  venuecoreBindingsmapofStringToSdkVenueStyleIconinfoReleaseFfiHandle(_handle);
  return result;
}

void venuecoreBindingsmapofStringToSdkVenueStyleIconinfoReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _venuecoreBindingsmapofStringToSdkVenueStyleIconinfoReleaseHandleNullable(handle);

final _venuecoreBindingsmapofStringToSdkVenueStyleVenuegeometrystyleCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_venuecore_bindingsMapOf_String_to_sdk_venue_style_VenueGeometryStyle_create_handle'));
final _venuecoreBindingsmapofStringToSdkVenueStyleVenuegeometrystyleReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_venuecore_bindingsMapOf_String_to_sdk_venue_style_VenueGeometryStyle_release_handle'));
final _venuecoreBindingsmapofStringToSdkVenueStyleVenuegeometrystylePut = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>, Pointer<Void>)
  >('here_sdk_venuecore_bindingsMapOf_String_to_sdk_venue_style_VenueGeometryStyle_put'));
final _venuecoreBindingsmapofStringToSdkVenueStyleVenuegeometrystyleIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_venuecore_bindingsMapOf_String_to_sdk_venue_style_VenueGeometryStyle_iterator'));
final _venuecoreBindingsmapofStringToSdkVenueStyleVenuegeometrystyleIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_venuecore_bindingsMapOf_String_to_sdk_venue_style_VenueGeometryStyle_iterator_release_handle'));
final _venuecoreBindingsmapofStringToSdkVenueStyleVenuegeometrystyleIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_venuecore_bindingsMapOf_String_to_sdk_venue_style_VenueGeometryStyle_iterator_is_valid'));
final _venuecoreBindingsmapofStringToSdkVenueStyleVenuegeometrystyleIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_venuecore_bindingsMapOf_String_to_sdk_venue_style_VenueGeometryStyle_iterator_increment'));
final _venuecoreBindingsmapofStringToSdkVenueStyleVenuegeometrystyleIteratorGetKey = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_venuecore_bindingsMapOf_String_to_sdk_venue_style_VenueGeometryStyle_iterator_get_key'));
final _venuecoreBindingsmapofStringToSdkVenueStyleVenuegeometrystyleIteratorGetValue = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_venuecore_bindingsMapOf_String_to_sdk_venue_style_VenueGeometryStyle_iterator_get_value'));

Pointer<Void> venuecoreBindingsmapofStringToSdkVenueStyleVenuegeometrystyleToFfi(Map<String, VenueGeometryStyle> value) {
  final _result = _venuecoreBindingsmapofStringToSdkVenueStyleVenuegeometrystyleCreateHandle();
  for (final entry in value.entries) {
    final _keyHandle = stringToFfi(entry.key);
    final _valueHandle = sdkVenueStyleVenuegeometrystyleToFfi(entry.value);
    _venuecoreBindingsmapofStringToSdkVenueStyleVenuegeometrystylePut(_result, _keyHandle, _valueHandle);
    stringReleaseFfiHandle(_keyHandle);
    sdkVenueStyleVenuegeometrystyleReleaseFfiHandle(_valueHandle);
  }
  return _result;
}

Map<String, VenueGeometryStyle> venuecoreBindingsmapofStringToSdkVenueStyleVenuegeometrystyleFromFfi(Pointer<Void> handle) {
  final result = Map<String, VenueGeometryStyle>();
  final _iteratorHandle = _venuecoreBindingsmapofStringToSdkVenueStyleVenuegeometrystyleIterator(handle);
  while (_venuecoreBindingsmapofStringToSdkVenueStyleVenuegeometrystyleIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _keyHandle = _venuecoreBindingsmapofStringToSdkVenueStyleVenuegeometrystyleIteratorGetKey(_iteratorHandle);
    final _valueHandle = _venuecoreBindingsmapofStringToSdkVenueStyleVenuegeometrystyleIteratorGetValue(_iteratorHandle);
    try {
      result[stringFromFfi(_keyHandle)] =
        sdkVenueStyleVenuegeometrystyleFromFfi(_valueHandle);
    } finally {
      stringReleaseFfiHandle(_keyHandle);
      sdkVenueStyleVenuegeometrystyleReleaseFfiHandle(_valueHandle);
    }
    _venuecoreBindingsmapofStringToSdkVenueStyleVenuegeometrystyleIteratorIncrement(_iteratorHandle);
  }
  _venuecoreBindingsmapofStringToSdkVenueStyleVenuegeometrystyleIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void venuecoreBindingsmapofStringToSdkVenueStyleVenuegeometrystyleReleaseFfiHandle(Pointer<Void> handle) => _venuecoreBindingsmapofStringToSdkVenueStyleVenuegeometrystyleReleaseHandle(handle);

final _venuecoreBindingsmapofStringToSdkVenueStyleVenuegeometrystyleCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_venuecore_bindingsMapOf_String_to_sdk_venue_style_VenueGeometryStyle_create_handle_nullable'));
final _venuecoreBindingsmapofStringToSdkVenueStyleVenuegeometrystyleReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_venuecore_bindingsMapOf_String_to_sdk_venue_style_VenueGeometryStyle_release_handle_nullable'));
final _venuecoreBindingsmapofStringToSdkVenueStyleVenuegeometrystyleGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_venuecore_bindingsMapOf_String_to_sdk_venue_style_VenueGeometryStyle_get_value_nullable'));

Pointer<Void> venuecoreBindingsmapofStringToSdkVenueStyleVenuegeometrystyleToFfiNullable(Map<String, VenueGeometryStyle>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = venuecoreBindingsmapofStringToSdkVenueStyleVenuegeometrystyleToFfi(value);
  final result = _venuecoreBindingsmapofStringToSdkVenueStyleVenuegeometrystyleCreateHandleNullable(_handle);
  venuecoreBindingsmapofStringToSdkVenueStyleVenuegeometrystyleReleaseFfiHandle(_handle);
  return result;
}

Map<String, VenueGeometryStyle>? venuecoreBindingsmapofStringToSdkVenueStyleVenuegeometrystyleFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _venuecoreBindingsmapofStringToSdkVenueStyleVenuegeometrystyleGetValueNullable(handle);
  final result = venuecoreBindingsmapofStringToSdkVenueStyleVenuegeometrystyleFromFfi(_handle);
  venuecoreBindingsmapofStringToSdkVenueStyleVenuegeometrystyleReleaseFfiHandle(_handle);
  return result;
}

void venuecoreBindingsmapofStringToSdkVenueStyleVenuegeometrystyleReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _venuecoreBindingsmapofStringToSdkVenueStyleVenuegeometrystyleReleaseHandleNullable(handle);

final _venuecoreBindingsmapofStringToSdkVenueStyleVenuelabelstyleCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_venuecore_bindingsMapOf_String_to_sdk_venue_style_VenueLabelStyle_create_handle'));
final _venuecoreBindingsmapofStringToSdkVenueStyleVenuelabelstyleReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_venuecore_bindingsMapOf_String_to_sdk_venue_style_VenueLabelStyle_release_handle'));
final _venuecoreBindingsmapofStringToSdkVenueStyleVenuelabelstylePut = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>, Pointer<Void>)
  >('here_sdk_venuecore_bindingsMapOf_String_to_sdk_venue_style_VenueLabelStyle_put'));
final _venuecoreBindingsmapofStringToSdkVenueStyleVenuelabelstyleIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_venuecore_bindingsMapOf_String_to_sdk_venue_style_VenueLabelStyle_iterator'));
final _venuecoreBindingsmapofStringToSdkVenueStyleVenuelabelstyleIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_venuecore_bindingsMapOf_String_to_sdk_venue_style_VenueLabelStyle_iterator_release_handle'));
final _venuecoreBindingsmapofStringToSdkVenueStyleVenuelabelstyleIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_venuecore_bindingsMapOf_String_to_sdk_venue_style_VenueLabelStyle_iterator_is_valid'));
final _venuecoreBindingsmapofStringToSdkVenueStyleVenuelabelstyleIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_venuecore_bindingsMapOf_String_to_sdk_venue_style_VenueLabelStyle_iterator_increment'));
final _venuecoreBindingsmapofStringToSdkVenueStyleVenuelabelstyleIteratorGetKey = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_venuecore_bindingsMapOf_String_to_sdk_venue_style_VenueLabelStyle_iterator_get_key'));
final _venuecoreBindingsmapofStringToSdkVenueStyleVenuelabelstyleIteratorGetValue = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_venuecore_bindingsMapOf_String_to_sdk_venue_style_VenueLabelStyle_iterator_get_value'));

Pointer<Void> venuecoreBindingsmapofStringToSdkVenueStyleVenuelabelstyleToFfi(Map<String, VenueLabelStyle> value) {
  final _result = _venuecoreBindingsmapofStringToSdkVenueStyleVenuelabelstyleCreateHandle();
  for (final entry in value.entries) {
    final _keyHandle = stringToFfi(entry.key);
    final _valueHandle = sdkVenueStyleVenuelabelstyleToFfi(entry.value);
    _venuecoreBindingsmapofStringToSdkVenueStyleVenuelabelstylePut(_result, _keyHandle, _valueHandle);
    stringReleaseFfiHandle(_keyHandle);
    sdkVenueStyleVenuelabelstyleReleaseFfiHandle(_valueHandle);
  }
  return _result;
}

Map<String, VenueLabelStyle> venuecoreBindingsmapofStringToSdkVenueStyleVenuelabelstyleFromFfi(Pointer<Void> handle) {
  final result = Map<String, VenueLabelStyle>();
  final _iteratorHandle = _venuecoreBindingsmapofStringToSdkVenueStyleVenuelabelstyleIterator(handle);
  while (_venuecoreBindingsmapofStringToSdkVenueStyleVenuelabelstyleIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _keyHandle = _venuecoreBindingsmapofStringToSdkVenueStyleVenuelabelstyleIteratorGetKey(_iteratorHandle);
    final _valueHandle = _venuecoreBindingsmapofStringToSdkVenueStyleVenuelabelstyleIteratorGetValue(_iteratorHandle);
    try {
      result[stringFromFfi(_keyHandle)] =
        sdkVenueStyleVenuelabelstyleFromFfi(_valueHandle);
    } finally {
      stringReleaseFfiHandle(_keyHandle);
      sdkVenueStyleVenuelabelstyleReleaseFfiHandle(_valueHandle);
    }
    _venuecoreBindingsmapofStringToSdkVenueStyleVenuelabelstyleIteratorIncrement(_iteratorHandle);
  }
  _venuecoreBindingsmapofStringToSdkVenueStyleVenuelabelstyleIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void venuecoreBindingsmapofStringToSdkVenueStyleVenuelabelstyleReleaseFfiHandle(Pointer<Void> handle) => _venuecoreBindingsmapofStringToSdkVenueStyleVenuelabelstyleReleaseHandle(handle);

final _venuecoreBindingsmapofStringToSdkVenueStyleVenuelabelstyleCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_venuecore_bindingsMapOf_String_to_sdk_venue_style_VenueLabelStyle_create_handle_nullable'));
final _venuecoreBindingsmapofStringToSdkVenueStyleVenuelabelstyleReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_venuecore_bindingsMapOf_String_to_sdk_venue_style_VenueLabelStyle_release_handle_nullable'));
final _venuecoreBindingsmapofStringToSdkVenueStyleVenuelabelstyleGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_venuecore_bindingsMapOf_String_to_sdk_venue_style_VenueLabelStyle_get_value_nullable'));

Pointer<Void> venuecoreBindingsmapofStringToSdkVenueStyleVenuelabelstyleToFfiNullable(Map<String, VenueLabelStyle>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = venuecoreBindingsmapofStringToSdkVenueStyleVenuelabelstyleToFfi(value);
  final result = _venuecoreBindingsmapofStringToSdkVenueStyleVenuelabelstyleCreateHandleNullable(_handle);
  venuecoreBindingsmapofStringToSdkVenueStyleVenuelabelstyleReleaseFfiHandle(_handle);
  return result;
}

Map<String, VenueLabelStyle>? venuecoreBindingsmapofStringToSdkVenueStyleVenuelabelstyleFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _venuecoreBindingsmapofStringToSdkVenueStyleVenuelabelstyleGetValueNullable(handle);
  final result = venuecoreBindingsmapofStringToSdkVenueStyleVenuelabelstyleFromFfi(_handle);
  venuecoreBindingsmapofStringToSdkVenueStyleVenuelabelstyleReleaseFfiHandle(_handle);
  return result;
}

void venuecoreBindingsmapofStringToSdkVenueStyleVenuelabelstyleReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _venuecoreBindingsmapofStringToSdkVenueStyleVenuelabelstyleReleaseHandleNullable(handle);

final _venuecoreBindingsmapofStringToVenuecoreBindingslistofStringCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_venuecore_bindingsMapOf_String_to_venuecore_bindingsListOf_String_create_handle'));
final _venuecoreBindingsmapofStringToVenuecoreBindingslistofStringReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_venuecore_bindingsMapOf_String_to_venuecore_bindingsListOf_String_release_handle'));
final _venuecoreBindingsmapofStringToVenuecoreBindingslistofStringPut = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>, Pointer<Void>)
  >('here_sdk_venuecore_bindingsMapOf_String_to_venuecore_bindingsListOf_String_put'));
final _venuecoreBindingsmapofStringToVenuecoreBindingslistofStringIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_venuecore_bindingsMapOf_String_to_venuecore_bindingsListOf_String_iterator'));
final _venuecoreBindingsmapofStringToVenuecoreBindingslistofStringIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_venuecore_bindingsMapOf_String_to_venuecore_bindingsListOf_String_iterator_release_handle'));
final _venuecoreBindingsmapofStringToVenuecoreBindingslistofStringIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_venuecore_bindingsMapOf_String_to_venuecore_bindingsListOf_String_iterator_is_valid'));
final _venuecoreBindingsmapofStringToVenuecoreBindingslistofStringIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_venuecore_bindingsMapOf_String_to_venuecore_bindingsListOf_String_iterator_increment'));
final _venuecoreBindingsmapofStringToVenuecoreBindingslistofStringIteratorGetKey = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_venuecore_bindingsMapOf_String_to_venuecore_bindingsListOf_String_iterator_get_key'));
final _venuecoreBindingsmapofStringToVenuecoreBindingslistofStringIteratorGetValue = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_venuecore_bindingsMapOf_String_to_venuecore_bindingsListOf_String_iterator_get_value'));

Pointer<Void> venuecoreBindingsmapofStringToVenuecoreBindingslistofStringToFfi(Map<String, List<String>> value) {
  final _result = _venuecoreBindingsmapofStringToVenuecoreBindingslistofStringCreateHandle();
  for (final entry in value.entries) {
    final _keyHandle = stringToFfi(entry.key);
    final _valueHandle = venuecoreBindingslistofStringToFfi(entry.value);
    _venuecoreBindingsmapofStringToVenuecoreBindingslistofStringPut(_result, _keyHandle, _valueHandle);
    stringReleaseFfiHandle(_keyHandle);
    venuecoreBindingslistofStringReleaseFfiHandle(_valueHandle);
  }
  return _result;
}

Map<String, List<String>> venuecoreBindingsmapofStringToVenuecoreBindingslistofStringFromFfi(Pointer<Void> handle) {
  final result = Map<String, List<String>>();
  final _iteratorHandle = _venuecoreBindingsmapofStringToVenuecoreBindingslistofStringIterator(handle);
  while (_venuecoreBindingsmapofStringToVenuecoreBindingslistofStringIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _keyHandle = _venuecoreBindingsmapofStringToVenuecoreBindingslistofStringIteratorGetKey(_iteratorHandle);
    final _valueHandle = _venuecoreBindingsmapofStringToVenuecoreBindingslistofStringIteratorGetValue(_iteratorHandle);
    try {
      result[stringFromFfi(_keyHandle)] =
        venuecoreBindingslistofStringFromFfi(_valueHandle);
    } finally {
      stringReleaseFfiHandle(_keyHandle);
      venuecoreBindingslistofStringReleaseFfiHandle(_valueHandle);
    }
    _venuecoreBindingsmapofStringToVenuecoreBindingslistofStringIteratorIncrement(_iteratorHandle);
  }
  _venuecoreBindingsmapofStringToVenuecoreBindingslistofStringIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void venuecoreBindingsmapofStringToVenuecoreBindingslistofStringReleaseFfiHandle(Pointer<Void> handle) => _venuecoreBindingsmapofStringToVenuecoreBindingslistofStringReleaseHandle(handle);

final _venuecoreBindingsmapofStringToVenuecoreBindingslistofStringCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_venuecore_bindingsMapOf_String_to_venuecore_bindingsListOf_String_create_handle_nullable'));
final _venuecoreBindingsmapofStringToVenuecoreBindingslistofStringReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_venuecore_bindingsMapOf_String_to_venuecore_bindingsListOf_String_release_handle_nullable'));
final _venuecoreBindingsmapofStringToVenuecoreBindingslistofStringGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_venuecore_bindingsMapOf_String_to_venuecore_bindingsListOf_String_get_value_nullable'));

Pointer<Void> venuecoreBindingsmapofStringToVenuecoreBindingslistofStringToFfiNullable(Map<String, List<String>>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = venuecoreBindingsmapofStringToVenuecoreBindingslistofStringToFfi(value);
  final result = _venuecoreBindingsmapofStringToVenuecoreBindingslistofStringCreateHandleNullable(_handle);
  venuecoreBindingsmapofStringToVenuecoreBindingslistofStringReleaseFfiHandle(_handle);
  return result;
}

Map<String, List<String>>? venuecoreBindingsmapofStringToVenuecoreBindingslistofStringFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _venuecoreBindingsmapofStringToVenuecoreBindingslistofStringGetValueNullable(handle);
  final result = venuecoreBindingsmapofStringToVenuecoreBindingslistofStringFromFfi(_handle);
  venuecoreBindingsmapofStringToVenuecoreBindingslistofStringReleaseFfiHandle(_handle);
  return result;
}

void venuecoreBindingsmapofStringToVenuecoreBindingslistofStringReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _venuecoreBindingsmapofStringToVenuecoreBindingslistofStringReleaseHandleNullable(handle);

final _venuecoreBindingsmapofStringToVenuecoreBindingslistofSdkVenueDataVenuegeometryCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_venuecore_bindingsMapOf_String_to_venuecore_bindingsListOf_sdk_venue_data_VenueGeometry_create_handle'));
final _venuecoreBindingsmapofStringToVenuecoreBindingslistofSdkVenueDataVenuegeometryReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_venuecore_bindingsMapOf_String_to_venuecore_bindingsListOf_sdk_venue_data_VenueGeometry_release_handle'));
final _venuecoreBindingsmapofStringToVenuecoreBindingslistofSdkVenueDataVenuegeometryPut = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>, Pointer<Void>)
  >('here_sdk_venuecore_bindingsMapOf_String_to_venuecore_bindingsListOf_sdk_venue_data_VenueGeometry_put'));
final _venuecoreBindingsmapofStringToVenuecoreBindingslistofSdkVenueDataVenuegeometryIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_venuecore_bindingsMapOf_String_to_venuecore_bindingsListOf_sdk_venue_data_VenueGeometry_iterator'));
final _venuecoreBindingsmapofStringToVenuecoreBindingslistofSdkVenueDataVenuegeometryIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_venuecore_bindingsMapOf_String_to_venuecore_bindingsListOf_sdk_venue_data_VenueGeometry_iterator_release_handle'));
final _venuecoreBindingsmapofStringToVenuecoreBindingslistofSdkVenueDataVenuegeometryIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_venuecore_bindingsMapOf_String_to_venuecore_bindingsListOf_sdk_venue_data_VenueGeometry_iterator_is_valid'));
final _venuecoreBindingsmapofStringToVenuecoreBindingslistofSdkVenueDataVenuegeometryIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_venuecore_bindingsMapOf_String_to_venuecore_bindingsListOf_sdk_venue_data_VenueGeometry_iterator_increment'));
final _venuecoreBindingsmapofStringToVenuecoreBindingslistofSdkVenueDataVenuegeometryIteratorGetKey = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_venuecore_bindingsMapOf_String_to_venuecore_bindingsListOf_sdk_venue_data_VenueGeometry_iterator_get_key'));
final _venuecoreBindingsmapofStringToVenuecoreBindingslistofSdkVenueDataVenuegeometryIteratorGetValue = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_venuecore_bindingsMapOf_String_to_venuecore_bindingsListOf_sdk_venue_data_VenueGeometry_iterator_get_value'));

Pointer<Void> venuecoreBindingsmapofStringToVenuecoreBindingslistofSdkVenueDataVenuegeometryToFfi(Map<String, List<VenueGeometry>> value) {
  final _result = _venuecoreBindingsmapofStringToVenuecoreBindingslistofSdkVenueDataVenuegeometryCreateHandle();
  for (final entry in value.entries) {
    final _keyHandle = stringToFfi(entry.key);
    final _valueHandle = venuecoreBindingslistofSdkVenueDataVenuegeometryToFfi(entry.value);
    _venuecoreBindingsmapofStringToVenuecoreBindingslistofSdkVenueDataVenuegeometryPut(_result, _keyHandle, _valueHandle);
    stringReleaseFfiHandle(_keyHandle);
    venuecoreBindingslistofSdkVenueDataVenuegeometryReleaseFfiHandle(_valueHandle);
  }
  return _result;
}

Map<String, List<VenueGeometry>> venuecoreBindingsmapofStringToVenuecoreBindingslistofSdkVenueDataVenuegeometryFromFfi(Pointer<Void> handle) {
  final result = Map<String, List<VenueGeometry>>();
  final _iteratorHandle = _venuecoreBindingsmapofStringToVenuecoreBindingslistofSdkVenueDataVenuegeometryIterator(handle);
  while (_venuecoreBindingsmapofStringToVenuecoreBindingslistofSdkVenueDataVenuegeometryIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _keyHandle = _venuecoreBindingsmapofStringToVenuecoreBindingslistofSdkVenueDataVenuegeometryIteratorGetKey(_iteratorHandle);
    final _valueHandle = _venuecoreBindingsmapofStringToVenuecoreBindingslistofSdkVenueDataVenuegeometryIteratorGetValue(_iteratorHandle);
    try {
      result[stringFromFfi(_keyHandle)] =
        venuecoreBindingslistofSdkVenueDataVenuegeometryFromFfi(_valueHandle);
    } finally {
      stringReleaseFfiHandle(_keyHandle);
      venuecoreBindingslistofSdkVenueDataVenuegeometryReleaseFfiHandle(_valueHandle);
    }
    _venuecoreBindingsmapofStringToVenuecoreBindingslistofSdkVenueDataVenuegeometryIteratorIncrement(_iteratorHandle);
  }
  _venuecoreBindingsmapofStringToVenuecoreBindingslistofSdkVenueDataVenuegeometryIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void venuecoreBindingsmapofStringToVenuecoreBindingslistofSdkVenueDataVenuegeometryReleaseFfiHandle(Pointer<Void> handle) => _venuecoreBindingsmapofStringToVenuecoreBindingslistofSdkVenueDataVenuegeometryReleaseHandle(handle);

final _venuecoreBindingsmapofStringToVenuecoreBindingslistofSdkVenueDataVenuegeometryCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_venuecore_bindingsMapOf_String_to_venuecore_bindingsListOf_sdk_venue_data_VenueGeometry_create_handle_nullable'));
final _venuecoreBindingsmapofStringToVenuecoreBindingslistofSdkVenueDataVenuegeometryReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_venuecore_bindingsMapOf_String_to_venuecore_bindingsListOf_sdk_venue_data_VenueGeometry_release_handle_nullable'));
final _venuecoreBindingsmapofStringToVenuecoreBindingslistofSdkVenueDataVenuegeometryGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_venuecore_bindingsMapOf_String_to_venuecore_bindingsListOf_sdk_venue_data_VenueGeometry_get_value_nullable'));

Pointer<Void> venuecoreBindingsmapofStringToVenuecoreBindingslistofSdkVenueDataVenuegeometryToFfiNullable(Map<String, List<VenueGeometry>>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = venuecoreBindingsmapofStringToVenuecoreBindingslistofSdkVenueDataVenuegeometryToFfi(value);
  final result = _venuecoreBindingsmapofStringToVenuecoreBindingslistofSdkVenueDataVenuegeometryCreateHandleNullable(_handle);
  venuecoreBindingsmapofStringToVenuecoreBindingslistofSdkVenueDataVenuegeometryReleaseFfiHandle(_handle);
  return result;
}

Map<String, List<VenueGeometry>>? venuecoreBindingsmapofStringToVenuecoreBindingslistofSdkVenueDataVenuegeometryFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _venuecoreBindingsmapofStringToVenuecoreBindingslistofSdkVenueDataVenuegeometryGetValueNullable(handle);
  final result = venuecoreBindingsmapofStringToVenuecoreBindingslistofSdkVenueDataVenuegeometryFromFfi(_handle);
  venuecoreBindingsmapofStringToVenuecoreBindingslistofSdkVenueDataVenuegeometryReleaseFfiHandle(_handle);
  return result;
}

void venuecoreBindingsmapofStringToVenuecoreBindingslistofSdkVenueDataVenuegeometryReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _venuecoreBindingsmapofStringToVenuecoreBindingslistofSdkVenueDataVenuegeometryReleaseHandleNullable(handle);

final _venuecoreBindingssetofIntCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_venuecore_bindingsSetOf_Int_create_handle'));
final _venuecoreBindingssetofIntReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_venuecore_bindingsSetOf_Int_release_handle'));
final _venuecoreBindingssetofIntInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Int32),
    void Function(Pointer<Void>, int)
  >('here_sdk_venuecore_bindingsSetOf_Int_insert'));
final _venuecoreBindingssetofIntIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_venuecore_bindingsSetOf_Int_iterator'));
final _venuecoreBindingssetofIntIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_venuecore_bindingsSetOf_Int_iterator_release_handle'));
final _venuecoreBindingssetofIntIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_venuecore_bindingsSetOf_Int_iterator_is_valid'));
final _venuecoreBindingssetofIntIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_venuecore_bindingsSetOf_Int_iterator_increment'));
final _venuecoreBindingssetofIntIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_venuecore_bindingsSetOf_Int_iterator_get'));

Pointer<Void> venuecoreBindingssetofIntToFfi(Set<int> value) {
  final _result = _venuecoreBindingssetofIntCreateHandle();
  for (final element in value) {
    final _elementHandle = (element);
    _venuecoreBindingssetofIntInsert(_result, _elementHandle);
    
  }
  return _result;
}

Set<int> venuecoreBindingssetofIntFromFfi(Pointer<Void> handle) {
  final result = Set<int>();
  final _iteratorHandle = _venuecoreBindingssetofIntIterator(handle);
  while (_venuecoreBindingssetofIntIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _venuecoreBindingssetofIntIteratorGet(_iteratorHandle);
    try {
      result.add((_elementHandle));
    } finally {
      
    }
    _venuecoreBindingssetofIntIteratorIncrement(_iteratorHandle);
  }
  _venuecoreBindingssetofIntIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void venuecoreBindingssetofIntReleaseFfiHandle(Pointer<Void> handle) => _venuecoreBindingssetofIntReleaseHandle(handle);

final _venuecoreBindingssetofIntCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_venuecore_bindingsSetOf_Int_create_handle_nullable'));
final _venuecoreBindingssetofIntReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_venuecore_bindingsSetOf_Int_release_handle_nullable'));
final _venuecoreBindingssetofIntGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_venuecore_bindingsSetOf_Int_get_value_nullable'));

Pointer<Void> venuecoreBindingssetofIntToFfiNullable(Set<int>? value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = venuecoreBindingssetofIntToFfi(value);
  final result = _venuecoreBindingssetofIntCreateHandleNullable(_handle);
  venuecoreBindingssetofIntReleaseFfiHandle(_handle);
  return result;
}

Set<int>? venuecoreBindingssetofIntFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return null;
  final _handle = _venuecoreBindingssetofIntGetValueNullable(handle);
  final result = venuecoreBindingssetofIntFromFfi(_handle);
  venuecoreBindingssetofIntReleaseFfiHandle(_handle);
  return result;
}

void venuecoreBindingssetofIntReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _venuecoreBindingssetofIntReleaseHandleNullable(handle);


